/*
 howler.js v2.2.4 | (c) 2013-2020, James Simpson of GoldFire Studios | MIT License | howlerjs.com  Spatial Plugin  @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */
var $jscomp = $jscomp || {};
$jscomp.scope = {};
$jscomp.arrayIteratorImpl = function(r) {
    var k = 0;
    return function() {
        return k < r.length ? {
            done: !1,
            value: r[k++]
        } : {
            done: !0
        }
    }
}
;
$jscomp.arrayIterator = function(r) {
    return {
        next: $jscomp.arrayIteratorImpl(r)
    }
}
;
$jscomp.makeIterator = function(r) {
    var k = "undefined" != typeof Symbol && Symbol.iterator && r[Symbol.iterator];
    return k ? k.call(r) : $jscomp.arrayIterator(r)
}
;
$jscomp.getGlobal = function(r) {
    r = ["object" == typeof window && window, "object" == typeof self && self, "object" == typeof global && global, r];
    for (var k = 0; k < r.length; ++k) {
        var w = r[k];
        if (w && w.Math == Math)
            return w
    }
    throw Error("Cannot find global object");
}
;
$jscomp.global = $jscomp.getGlobal(this);
$jscomp.ASSUME_ES5 = !1;
$jscomp.ASSUME_NO_NATIVE_MAP = !1;
$jscomp.ASSUME_NO_NATIVE_SET = !1;
$jscomp.SIMPLE_FROUND_POLYFILL = !1;
$jscomp.defineProperty = $jscomp.ASSUME_ES5 || "function" == typeof Object.defineProperties ? Object.defineProperty : function(r, k, w) {
    r != Array.prototype && r != Object.prototype && (r[k] = w.value)
}
;
$jscomp.polyfill = function(r, k, w, G) {
    if (k) {
        w = $jscomp.global;
        r = r.split(".");
        for (G = 0; G < r.length - 1; G++) {
            var n = r[G];
            n in w || (w[n] = {});
            w = w[n]
        }
        r = r[r.length - 1];
        G = w[r];
        k = k(G);
        k != G && null != k && $jscomp.defineProperty(w, r, {
            configurable: !0,
            writable: !0,
            value: k
        })
    }
}
;
$jscomp.FORCE_POLYFILL_PROMISE = !1;
$jscomp.polyfill("Promise", function(r) {
    function k() {
        this.batch_ = null
    }
    function w(k) {
        return k instanceof n ? k : new n(function(M, r) {
            M(k)
        }
        )
    }
    if (r && !$jscomp.FORCE_POLYFILL_PROMISE)
        return r;
    k.prototype.asyncExecute = function(k) {
        if (null == this.batch_) {
            this.batch_ = [];
            var M = this;
            this.asyncExecuteFunction(function() {
                M.executeBatch_()
            })
        }
        this.batch_.push(k)
    }
    ;
    var G = $jscomp.global.setTimeout;
    k.prototype.asyncExecuteFunction = function(k) {
        G(k, 0)
    }
    ;
    k.prototype.executeBatch_ = function() {
        for (; this.batch_ && this.batch_.length; ) {
            var k = this.batch_;
            this.batch_ = [];
            for (var r = 0; r < k.length; ++r) {
                var w = k[r];
                k[r] = null;
                try {
                    w()
                } catch (t) {
                    this.asyncThrow_(t)
                }
            }
        }
        this.batch_ = null
    }
    ;
    k.prototype.asyncThrow_ = function(k) {
        this.asyncExecuteFunction(function() {
            throw k;
        })
    }
    ;
    var n = function(k) {
        this.state_ = 0;
        this.result_ = void 0;
        this.onSettledCallbacks_ = [];
        var r = this.createResolveAndReject_();
        try {
            k(r.resolve, r.reject)
        } catch (V) {
            r.reject(V)
        }
    };
    n.prototype.createResolveAndReject_ = function() {
        function k(k) {
            return function(g) {
                w || (w = !0,
                k.call(r, g))
            }
        }
        var r = this
          , w = !1;
        return {
            resolve: k(this.resolveTo_),
            reject: k(this.reject_)
        }
    }
    ;
    n.prototype.resolveTo_ = function(k) {
        if (k === this)
            this.reject_(new TypeError("A Promise cannot resolve to itself"));
        else if (k instanceof n)
            this.settleSameAsPromise_(k);
        else {
            a: switch (typeof k) {
            case "object":
                var r = null != k;
                break a;
            case "function":
                r = !0;
                break a;
            default:
                r = !1
            }
            r ? this.resolveToNonPromiseObj_(k) : this.fulfill_(k)
        }
    }
    ;
    n.prototype.resolveToNonPromiseObj_ = function(k) {
        var r = void 0;
        try {
            r = k.then
        } catch (V) {
            this.reject_(V);
            return
        }
        "function" == typeof r ? this.settleSameAsThenable_(r, k) : this.fulfill_(k)
    }
    ;
    n.prototype.reject_ = function(k) {
        this.settle_(2, k)
    }
    ;
    n.prototype.fulfill_ = function(k) {
        this.settle_(1, k)
    }
    ;
    n.prototype.settle_ = function(k, r) {
        if (0 != this.state_)
            throw Error("Cannot settle(" + k + ", " + r + "): Promise already settled in state" + this.state_);
        this.state_ = k;
        this.result_ = r;
        this.executeOnSettledCallbacks_()
    }
    ;
    n.prototype.executeOnSettledCallbacks_ = function() {
        if (null != this.onSettledCallbacks_) {
            for (var k = 0; k < this.onSettledCallbacks_.length; ++k)
                D.asyncExecute(this.onSettledCallbacks_[k]);
            this.onSettledCallbacks_ = null
        }
    }
    ;
    var D = new k;
    n.prototype.settleSameAsPromise_ = function(k) {
        var r = this.createResolveAndReject_();
        k.callWhenSettled_(r.resolve, r.reject)
    }
    ;
    n.prototype.settleSameAsThenable_ = function(k, r) {
        var w = this.createResolveAndReject_();
        try {
            k.call(r, w.resolve, w.reject)
        } catch (t) {
            w.reject(t)
        }
    }
    ;
    n.prototype.then = function(k, r) {
        function w(m, k) {
            return "function" == typeof m ? function(k) {
                try {
                    t(m(k))
                } catch (ma) {
                    g(ma)
                }
            }
            : k
        }
        var t, g, m = new n(function(m, k) {
            t = m;
            g = k
        }
        );
        this.callWhenSettled_(w(k, t), w(r, g));
        return m
    }
    ;
    n.prototype.catch = function(k) {
        return this.then(void 0, k)
    }
    ;
    n.prototype.callWhenSettled_ = function(k, r) {
        function w() {
            switch (t.state_) {
            case 1:
                k(t.result_);
                break;
            case 2:
                r(t.result_);
                break;
            default:
                throw Error("Unexpected state: " + t.state_);
            }
        }
        var t = this;
        null == this.onSettledCallbacks_ ? D.asyncExecute(w) : this.onSettledCallbacks_.push(w)
    }
    ;
    n.resolve = w;
    n.reject = function(k) {
        return new n(function(r, w) {
            w(k)
        }
        )
    }
    ;
    n.race = function(k) {
        return new n(function(r, n) {
            for (var t = $jscomp.makeIterator(k), g = t.next(); !g.done; g = t.next())
                w(g.value).callWhenSettled_(r, n)
        }
        )
    }
    ;
    n.all = function(k) {
        var r = $jscomp.makeIterator(k)
          , M = r.next();
        return M.done ? w([]) : new n(function(k, g) {
            function m(g) {
                return function(m) {
                    z[g] = m;
                    t--;
                    0 == t && k(z)
                }
            }
            var z = []
              , t = 0;
            do
                z.push(void 0),
                t++,
                w(M.value).callWhenSettled_(m(z.length - 1), g),
                M = r.next();
            while (!M.done)
        }
        )
    }
    ;
    return n
}, "es6", "es3");
$jscomp.SYMBOL_PREFIX = "jscomp_symbol_";
$jscomp.initSymbol = function() {
    $jscomp.initSymbol = function() {}
    ;
    $jscomp.global.Symbol || ($jscomp.global.Symbol = $jscomp.Symbol)
}
;
$jscomp.SymbolClass = function(r, k) {
    this.$jscomp$symbol$id_ = r;
    $jscomp.defineProperty(this, "description", {
        configurable: !0,
        writable: !0,
        value: k
    })
}
;
$jscomp.SymbolClass.prototype.toString = function() {
    return this.$jscomp$symbol$id_
}
;
$jscomp.Symbol = function() {
    function r(w) {
        if (this instanceof r)
            throw new TypeError("Symbol is not a constructor");
        return new $jscomp.SymbolClass($jscomp.SYMBOL_PREFIX + (w || "") + "_" + k++,w)
    }
    var k = 0;
    return r
}();
$jscomp.initSymbolIterator = function() {
    $jscomp.initSymbol();
    var r = $jscomp.global.Symbol.iterator;
    r || (r = $jscomp.global.Symbol.iterator = $jscomp.global.Symbol("Symbol.iterator"));
    "function" != typeof Array.prototype[r] && $jscomp.defineProperty(Array.prototype, r, {
        configurable: !0,
        writable: !0,
        value: function() {
            return $jscomp.iteratorPrototype($jscomp.arrayIteratorImpl(this))
        }
    });
    $jscomp.initSymbolIterator = function() {}
}
;
$jscomp.initSymbolAsyncIterator = function() {
    $jscomp.initSymbol();
    var r = $jscomp.global.Symbol.asyncIterator;
    r || (r = $jscomp.global.Symbol.asyncIterator = $jscomp.global.Symbol("Symbol.asyncIterator"));
    $jscomp.initSymbolAsyncIterator = function() {}
}
;
$jscomp.iteratorPrototype = function(r) {
    $jscomp.initSymbolIterator();
    r = {
        next: r
    };
    r[$jscomp.global.Symbol.iterator] = function() {
        return this
    }
    ;
    return r
}
;
$jscomp.underscoreProtoCanBeSet = function() {
    var r = {
        a: !0
    }
      , k = {};
    try {
        return k.__proto__ = r,
        k.a
    } catch (w) {}
    return !1
}
;
$jscomp.setPrototypeOf = "function" == typeof Object.setPrototypeOf ? Object.setPrototypeOf : $jscomp.underscoreProtoCanBeSet() ? function(r, k) {
    r.__proto__ = k;
    if (r.__proto__ !== k)
        throw new TypeError(r + " is not extensible");
    return r
}
: null;
$jscomp.generator = {};
$jscomp.generator.ensureIteratorResultIsObject_ = function(r) {
    if (!(r instanceof Object))
        throw new TypeError("Iterator result " + r + " is not an object");
}
;
$jscomp.generator.Context = function() {
    this.isRunning_ = !1;
    this.yieldAllIterator_ = null;
    this.yieldResult = void 0;
    this.nextAddress = 1;
    this.finallyAddress_ = this.catchAddress_ = 0;
    this.finallyContexts_ = this.abruptCompletion_ = null
}
;
$jscomp.generator.Context.prototype.start_ = function() {
    if (this.isRunning_)
        throw new TypeError("Generator is already running");
    this.isRunning_ = !0
}
;
$jscomp.generator.Context.prototype.stop_ = function() {
    this.isRunning_ = !1
}
;
$jscomp.generator.Context.prototype.jumpToErrorHandler_ = function() {
    this.nextAddress = this.catchAddress_ || this.finallyAddress_
}
;
$jscomp.generator.Context.prototype.next_ = function(r) {
    this.yieldResult = r
}
;
$jscomp.generator.Context.prototype.throw_ = function(r) {
    this.abruptCompletion_ = {
        exception: r,
        isException: !0
    };
    this.jumpToErrorHandler_()
}
;
$jscomp.generator.Context.prototype.return = function(r) {
    this.abruptCompletion_ = {
        return: r
    };
    this.nextAddress = this.finallyAddress_
}
;
$jscomp.generator.Context.prototype.jumpThroughFinallyBlocks = function(r) {
    this.abruptCompletion_ = {
        jumpTo: r
    };
    this.nextAddress = this.finallyAddress_
}
;
$jscomp.generator.Context.prototype.yield = function(r, k) {
    this.nextAddress = k;
    return {
        value: r
    }
}
;
$jscomp.generator.Context.prototype.yieldAll = function(r, k) {
    r = $jscomp.makeIterator(r);
    var w = r.next();
    $jscomp.generator.ensureIteratorResultIsObject_(w);
    if (w.done)
        this.yieldResult = w.value,
        this.nextAddress = k;
    else
        return this.yieldAllIterator_ = r,
        this.yield(w.value, k)
}
;
$jscomp.generator.Context.prototype.jumpTo = function(r) {
    this.nextAddress = r
}
;
$jscomp.generator.Context.prototype.jumpToEnd = function() {
    this.nextAddress = 0
}
;
$jscomp.generator.Context.prototype.setCatchFinallyBlocks = function(r, k) {
    this.catchAddress_ = r;
    void 0 != k && (this.finallyAddress_ = k)
}
;
$jscomp.generator.Context.prototype.setFinallyBlock = function(r) {
    this.catchAddress_ = 0;
    this.finallyAddress_ = r || 0
}
;
$jscomp.generator.Context.prototype.leaveTryBlock = function(r, k) {
    this.nextAddress = r;
    this.catchAddress_ = k || 0
}
;
$jscomp.generator.Context.prototype.enterCatchBlock = function(r) {
    this.catchAddress_ = r || 0;
    r = this.abruptCompletion_.exception;
    this.abruptCompletion_ = null;
    return r
}
;
$jscomp.generator.Context.prototype.enterFinallyBlock = function(r, k, w) {
    w ? this.finallyContexts_[w] = this.abruptCompletion_ : this.finallyContexts_ = [this.abruptCompletion_];
    this.catchAddress_ = r || 0;
    this.finallyAddress_ = k || 0
}
;
$jscomp.generator.Context.prototype.leaveFinallyBlock = function(r, k) {
    k = this.finallyContexts_.splice(k || 0)[0];
    if (k = this.abruptCompletion_ = this.abruptCompletion_ || k) {
        if (k.isException)
            return this.jumpToErrorHandler_();
        void 0 != k.jumpTo && this.finallyAddress_ < k.jumpTo ? (this.nextAddress = k.jumpTo,
        this.abruptCompletion_ = null) : this.nextAddress = this.finallyAddress_
    } else
        this.nextAddress = r
}
;
$jscomp.generator.Context.prototype.forIn = function(r) {
    return new $jscomp.generator.Context.PropertyIterator(r)
}
;
$jscomp.generator.Context.PropertyIterator = function(r) {
    this.object_ = r;
    this.properties_ = [];
    for (var k in r)
        this.properties_.push(k);
    this.properties_.reverse()
}
;
$jscomp.generator.Context.PropertyIterator.prototype.getNext = function() {
    for (; 0 < this.properties_.length; ) {
        var r = this.properties_.pop();
        if (r in this.object_)
            return r
    }
    return null
}
;
$jscomp.generator.Engine_ = function(r) {
    this.context_ = new $jscomp.generator.Context;
    this.program_ = r
}
;
$jscomp.generator.Engine_.prototype.next_ = function(r) {
    this.context_.start_();
    if (this.context_.yieldAllIterator_)
        return this.yieldAllStep_(this.context_.yieldAllIterator_.next, r, this.context_.next_);
    this.context_.next_(r);
    return this.nextStep_()
}
;
$jscomp.generator.Engine_.prototype.return_ = function(r) {
    this.context_.start_();
    var k = this.context_.yieldAllIterator_;
    if (k)
        return this.yieldAllStep_("return"in k ? k["return"] : function(k) {
            return {
                value: k,
                done: !0
            }
        }
        , r, this.context_.return);
    this.context_.return(r);
    return this.nextStep_()
}
;
$jscomp.generator.Engine_.prototype.throw_ = function(r) {
    this.context_.start_();
    if (this.context_.yieldAllIterator_)
        return this.yieldAllStep_(this.context_.yieldAllIterator_["throw"], r, this.context_.next_);
    this.context_.throw_(r);
    return this.nextStep_()
}
;
$jscomp.generator.Engine_.prototype.yieldAllStep_ = function(r, k, w) {
    try {
        var G = r.call(this.context_.yieldAllIterator_, k);
        $jscomp.generator.ensureIteratorResultIsObject_(G);
        if (!G.done)
            return this.context_.stop_(),
            G;
        var n = G.value
    } catch (D) {
        return this.context_.yieldAllIterator_ = null,
        this.context_.throw_(D),
        this.nextStep_()
    }
    this.context_.yieldAllIterator_ = null;
    w.call(this.context_, n);
    return this.nextStep_()
}
;
$jscomp.generator.Engine_.prototype.nextStep_ = function() {
    for (; this.context_.nextAddress; )
        try {
            var r = this.program_(this.context_);
            if (r)
                return this.context_.stop_(),
                {
                    value: r.value,
                    done: !1
                }
        } catch (k) {
            this.context_.yieldResult = void 0,
            this.context_.throw_(k)
        }
    this.context_.stop_();
    if (this.context_.abruptCompletion_) {
        r = this.context_.abruptCompletion_;
        this.context_.abruptCompletion_ = null;
        if (r.isException)
            throw r.exception;
        return {
            value: r.return,
            done: !0
        }
    }
    return {
        value: void 0,
        done: !0
    }
}
;
$jscomp.generator.Generator_ = function(r) {
    this.next = function(k) {
        return r.next_(k)
    }
    ;
    this.throw = function(k) {
        return r.throw_(k)
    }
    ;
    this.return = function(k) {
        return r.return_(k)
    }
    ;
    $jscomp.initSymbolIterator();
    this[Symbol.iterator] = function() {
        return this
    }
}
;
$jscomp.generator.createGenerator = function(r, k) {
    k = new $jscomp.generator.Generator_(new $jscomp.generator.Engine_(k));
    $jscomp.setPrototypeOf && $jscomp.setPrototypeOf(k, r.prototype);
    return k
}
;
$jscomp.asyncExecutePromiseGenerator = function(r) {
    function k(k) {
        return r.next(k)
    }
    function w(k) {
        return r.throw(k)
    }
    return new Promise(function(G, n) {
        function D(r) {
            r.done ? G(r.value) : Promise.resolve(r.value).then(k, w).then(D, n)
        }
        D(r.next())
    }
    )
}
;
$jscomp.asyncExecutePromiseGeneratorFunction = function(r) {
    return $jscomp.asyncExecutePromiseGenerator(r())
}
;
$jscomp.asyncExecutePromiseGeneratorProgram = function(r) {
    return $jscomp.asyncExecutePromiseGenerator(new $jscomp.generator.Generator_(new $jscomp.generator.Engine_(r)))
}
;
$jscomp.iteratorFromArray = function(r, k) {
    $jscomp.initSymbolIterator();
    r instanceof String && (r += "");
    var w = 0
      , G = {
        next: function() {
            if (w < r.length) {
                var n = w++;
                return {
                    value: k(n, r[n]),
                    done: !1
                }
            }
            G.next = function() {
                return {
                    done: !0,
                    value: void 0
                }
            }
            ;
            return G.next()
        }
    };
    G[Symbol.iterator] = function() {
        return G
    }
    ;
    return G
}
;
$jscomp.polyfill("Array.prototype.keys", function(r) {
    return r ? r : function() {
        return $jscomp.iteratorFromArray(this, function(k) {
            return k
        })
    }
}, "es6", "es3");
$jscomp.checkStringArgs = function(r, k, w) {
    if (null == r)
        throw new TypeError("The 'this' value for String.prototype." + w + " must not be null or undefined");
    if (k instanceof RegExp)
        throw new TypeError("First argument to String.prototype." + w + " must not be a regular expression");
    return r + ""
}
;
$jscomp.polyfill("String.prototype.endsWith", function(r) {
    return r ? r : function(k, r) {
        var w = $jscomp.checkStringArgs(this, k, "endsWith");
        k += "";
        void 0 === r && (r = w.length);
        r = Math.max(0, Math.min(r | 0, w.length));
        for (var n = k.length; 0 < n && 0 < r; )
            if (w[--r] != k[--n])
                return !1;
        return 0 >= n
    }
}, "es6", "es3");
$jscomp.polyfill("String.fromCodePoint", function(r) {
    return r ? r : function(k) {
        for (var r = "", G = 0; G < arguments.length; G++) {
            var n = Number(arguments[G]);
            if (0 > n || 1114111 < n || n !== Math.floor(n))
                throw new RangeError("invalid_code_point " + n);
            65535 >= n ? r += String.fromCharCode(n) : (n -= 65536,
            r += String.fromCharCode(n >>> 10 & 1023 | 55296),
            r += String.fromCharCode(n & 1023 | 56320))
        }
        return r
    }
}, "es6", "es3");
$jscomp.polyfill("Array.prototype.values", function(r) {
    return r ? r : function() {
        return $jscomp.iteratorFromArray(this, function(k, r) {
            return r
        })
    }
}, "es8", "es3");
$jscomp.polyfill("Number.MAX_SAFE_INTEGER", function() {
    return 9007199254740991
}, "es6", "es3");
$jscomp.polyfill("String.prototype.startsWith", function(r) {
    return r ? r : function(k, r) {
        var w = $jscomp.checkStringArgs(this, k, "startsWith");
        k += "";
        var n = w.length
          , D = k.length;
        r = Math.max(0, Math.min(r | 0, w.length));
        for (var M = 0; M < D && r < n; )
            if (w[r++] != k[M++])
                return !1;
        return M >= D
    }
}, "es6", "es3");
$jscomp.owns = function(r, k) {
    return Object.prototype.hasOwnProperty.call(r, k)
}
;
$jscomp.polyfill("Object.values", function(r) {
    return r ? r : function(k) {
        var r = [], G;
        for (G in k)
            $jscomp.owns(k, G) && r.push(k[G]);
        return r
    }
}, "es8", "es3");
$jscomp.polyfill("Object.setPrototypeOf", function(r) {
    return r || $jscomp.setPrototypeOf
}, "es6", "es5");
$jscomp.polyfill("Object.is", function(r) {
    return r ? r : function(k, r) {
        return k === r ? 0 !== k || 1 / k === 1 / r : k !== k && r !== r
    }
}, "es6", "es3");
$jscomp.polyfill("Array.prototype.includes", function(r) {
    return r ? r : function(k, r) {
        var w = this;
        w instanceof String && (w = String(w));
        var n = w.length;
        r = r || 0;
        for (0 > r && (r = Math.max(r + n, 0)); r < n; r++) {
            var D = w[r];
            if (D === k || Object.is(D, k))
                return !0
        }
        return !1
    }
}, "es7", "es3");
$jscomp.polyfill("String.prototype.includes", function(r) {
    return r ? r : function(k, r) {
        return -1 !== $jscomp.checkStringArgs(this, k, "includes").indexOf(k, r || 0)
    }
}, "es6", "es3");
var $lime_init = function(r, k) {
    var w = function(k, r) {
        (function(k, r) {
            function n(a, b) {
                a = Object.create(a);
                for (var c in b)
                    a[c] = b[c];
                b.toString !== Object.prototype.toString && (a.toString = b.toString);
                return a
            }
            function w(a) {
                return a instanceof Array ? new sc(a) : a.iterator()
            }
            function t(a, b) {
                if (null == b)
                    return null;
                null == b.__id__ && (b.__id__ = r.$haxeUID++);
                var c;
                null == a.hx__closures__ ? a.hx__closures__ = {} : c = a.hx__closures__[b.__id__];
                null == c && (c = b.bind(a),
                a.hx__closures__[b.__id__] = c);
                return c
            }
            k.zanzlanz = k.zanzlanz || {};
            k.lime = k.lime || {};
            var g = {}, m = function() {
                return ja.__string_rec(this, "")
            }, z = z || {}, B, wa = function() {};
            g["lime.app.IModule"] = wa;
            wa.__name__ = "lime.app.IModule";
            wa.__isInterface__ = !0;
            var ma = function() {
                this.onExit = new Cc
            };
            g["lime.app.Module"] = ma;
            ma.__name__ = "lime.app.Module";
            ma.__interfaces__ = [wa];
            ma.prototype = {
                __class__: ma
            };
            var M = function(a) {
                this.gameDeviceCache = new ra;
                this.parent = a;
                this.nextUpdate = this.lastUpdate = this.currentUpdate = 0;
                this.framePeriod = -1;
                Ic.init();
                this.accelerometer = tc.registerSensor(ie.ACCELEROMETER, 0)
            };
            g["lime._internal.backend.html5.HTML5Application"] = M;
            M.__name__ = "lime._internal.backend.html5.HTML5Application";
            M.prototype = {
                convertKeyCode: function(a) {
                    if (65 <= a && 90 >= a)
                        return a + 32;
                    switch (a) {
                    case 12:
                        return 1073741980;
                    case 16:
                        return 1073742049;
                    case 17:
                        return 1073742048;
                    case 18:
                        return 1073742050;
                    case 19:
                        return 1073741896;
                    case 20:
                        return 1073741881;
                    case 33:
                        return 1073741899;
                    case 34:
                        return 1073741902;
                    case 35:
                        return 1073741901;
                    case 36:
                        return 1073741898;
                    case 37:
                        return 1073741904;
                    case 38:
                        return 1073741906;
                    case 39:
                        return 1073741903;
                    case 40:
                        return 1073741905;
                    case 41:
                        return 1073741943;
                    case 43:
                        return 1073741940;
                    case 44:
                        return 1073741894;
                    case 45:
                        return 1073741897;
                    case 46:
                        return 127;
                    case 91:
                        return 1073742051;
                    case 92:
                        return 1073742055;
                    case 93:
                        return 1073742055;
                    case 95:
                        return 1073742106;
                    case 96:
                        return 1073741922;
                    case 97:
                        return 1073741913;
                    case 98:
                        return 1073741914;
                    case 99:
                        return 1073741915;
                    case 100:
                        return 1073741916;
                    case 101:
                        return 1073741917;
                    case 102:
                        return 1073741918;
                    case 103:
                        return 1073741919;
                    case 104:
                        return 1073741920;
                    case 105:
                        return 1073741921;
                    case 106:
                        return 1073741909;
                    case 107:
                        return 1073741911;
                    case 108:
                        return 1073741923;
                    case 109:
                        return 1073741910;
                    case 110:
                        return 1073741923;
                    case 111:
                        return 1073741908;
                    case 112:
                        return 1073741882;
                    case 113:
                        return 1073741883;
                    case 114:
                        return 1073741884;
                    case 115:
                        return 1073741885;
                    case 116:
                        return 1073741886;
                    case 117:
                        return 1073741887;
                    case 118:
                        return 1073741888;
                    case 119:
                        return 1073741889;
                    case 120:
                        return 1073741890;
                    case 121:
                        return 1073741891;
                    case 122:
                        return 1073741892;
                    case 123:
                        return 1073741893;
                    case 124:
                        return 1073741928;
                    case 125:
                        return 1073741929;
                    case 126:
                        return 1073741930;
                    case 127:
                        return 1073741931;
                    case 128:
                        return 1073741932;
                    case 129:
                        return 1073741933;
                    case 130:
                        return 1073741934;
                    case 131:
                        return 1073741935;
                    case 132:
                        return 1073741936;
                    case 133:
                        return 1073741937;
                    case 134:
                        return 1073741938;
                    case 135:
                        return 1073741939;
                    case 144:
                        return 1073741907;
                    case 145:
                        return 1073741895;
                    case 160:
                        return 94;
                    case 161:
                        return 33;
                    case 163:
                        return 35;
                    case 164:
                        return 36;
                    case 166:
                        return 1073742094;
                    case 167:
                        return 1073742095;
                    case 168:
                        return 1073742097;
                    case 169:
                        return 41;
                    case 170:
                        return 42;
                    case 171:
                        return 96;
                    case 172:
                        return 1073741898;
                    case 173:
                        return 45;
                    case 174:
                        return 1073741953;
                    case 175:
                        return 1073741952;
                    case 176:
                        return 1073742082;
                    case 177:
                        return 1073742083;
                    case 178:
                        return 1073742084;
                    case 179:
                        return 1073742085;
                    case 180:
                        return 1073742089;
                    case 181:
                        return 1073742086;
                    case 182:
                        return 1073741953;
                    case 183:
                        return 1073741952;
                    case 186:
                        return 59;
                    case 187:
                        return 61;
                    case 188:
                        return 44;
                    case 189:
                        return 45;
                    case 190:
                        return 46;
                    case 191:
                        return 47;
                    case 192:
                        return 96;
                    case 193:
                        return 63;
                    case 194:
                        return 1073741923;
                    case 219:
                        return 91;
                    case 220:
                        return 92;
                    case 221:
                        return 93;
                    case 222:
                        return 39;
                    case 223:
                        return 96;
                    case 224:
                        return 1073742051;
                    case 226:
                        return 92
                    }
                    return a
                },
                exec: function() {
                    window.addEventListener("keydown", t(this, this.handleKeyEvent), !1);
                    window.addEventListener("keyup", t(this, this.handleKeyEvent), !1);
                    window.addEventListener("focus", t(this, this.handleWindowEvent), !1);
                    window.addEventListener("blur", t(this, this.handleWindowEvent), !1);
                    window.addEventListener("resize", t(this, this.handleWindowEvent), !1);
                    window.addEventListener("beforeunload", t(this, this.handleWindowEvent), !1);
                    Object.prototype.hasOwnProperty.call(window, "Accelerometer") && window.addEventListener("devicemotion", t(this, this.handleSensorEvent), !1);
                    CanvasRenderingContext2D.prototype.isPointInStroke || (CanvasRenderingContext2D.prototype.isPointInStroke = function(a, b, c) {
                        return !1
                    }
                    );
                    CanvasRenderingContext2D.prototype.isPointInPath || (CanvasRenderingContext2D.prototype.isPointInPath = function(a, b, c) {
                        return !1
                    }
                    );
                    0 == "performance"in window && (window.performance = {});
                    if (0 == "now"in window.performance) {
                        var a = Date.now();
                        performance.timing && performance.timing.navigationStart && (a = performance.timing.navigationStart);
                        window.performance.now = function() {
                            return Date.now() - a
                        }
                    }
                    for (var b = 0, c = ["ms", "moz", "webkit", "o"], f = 0; f < c.length && !window.requestAnimationFrame; ++f)
                        window.requestAnimationFrame = window[c[f] + "RequestAnimationFrame"],
                        window.cancelAnimationFrame = window[c[f] + "CancelAnimationFrame"] || window[c[f] + "CancelRequestAnimationFrame"];
                    window.requestAnimationFrame || (window.requestAnimationFrame = function(a, c) {
                        var f = window.performance.now()
                          , h = Math.max(0, 16 - (f - b));
                        c = window.setTimeout(function() {
                            a(f + h)
                        }, h);
                        b = f + h;
                        return c
                    }
                    );
                    window.cancelAnimationFrame || (window.cancelAnimationFrame = function(a) {
                        clearTimeout(a)
                    }
                    );
                    window.requestAnimFrame = window.requestAnimationFrame;
                    this.lastUpdate = window.performance.now();
                    this.handleApplicationEvent();
                    return 0
                },
                exit: function() {},
                handleApplicationEvent: function(a) {
                    a = 0;
                    for (var b = this.parent.__windows; a < b.length; )
                        b[a++].__backend.updateSize();
                    this.updateGameDevices();
                    this.currentUpdate = window.performance.now();
                    if (this.currentUpdate >= this.nextUpdate) {
                        this.deltaTime = this.currentUpdate - this.lastUpdate;
                        a = 0;
                        for (b = this.parent.__windows; a < b.length; ) {
                            var c = b[a];
                            ++a;
                            this.parent.onUpdate.dispatch(this.deltaTime | 0);
                            null != c.context && c.onRender.dispatch(c.context)
                        }
                        this.nextUpdate = 0 > this.framePeriod ? this.currentUpdate : this.currentUpdate - this.currentUpdate % this.framePeriod + this.framePeriod;
                        this.lastUpdate = this.currentUpdate
                    }
                    window.requestAnimationFrame(t(this, this.handleApplicationEvent))
                },
                handleKeyEvent: function(a) {
                    if (null != this.parent.__window) {
                        var b = this.convertKeyCode(null != a.keyCode ? a.keyCode : a.which)
                          , c = (a.shiftKey ? 3 : 0) | (a.ctrlKey ? 192 : 0) | (a.altKey ? 768 : 0) | (a.metaKey ? 3072 : 0);
                        "keydown" == a.type ? (this.parent.__window.onKeyDown.dispatch(b, c),
                        this.parent.__window.onKeyDown.canceled && a.cancelable && a.preventDefault()) : (this.parent.__window.onKeyUp.dispatch(b, c),
                        this.parent.__window.onKeyUp.canceled && a.cancelable && a.preventDefault())
                    }
                },
                handleSensorEvent: function(a) {
                    this.accelerometer.onUpdate.dispatch(a.accelerationIncludingGravity.x, a.accelerationIncludingGravity.y, a.accelerationIncludingGravity.z)
                },
                handleWindowEvent: function(a) {
                    if (null != this.parent.__window)
                        switch (a.type) {
                        case "blur":
                            this.hidden || (this.parent.__window.onFocusOut.dispatch(),
                            this.parent.__window.onDeactivate.dispatch(),
                            this.hidden = !0);
                            break;
                        case "focus":
                            this.hidden && (this.parent.__window.onFocusIn.dispatch(),
                            this.parent.__window.onActivate.dispatch(),
                            this.hidden = !1);
                            break;
                        case "resize":
                            this.parent.__window.__backend.handleResizeEvent(a);
                            break;
                        case "visibilitychange":
                            window.document.hidden ? this.hidden || (this.parent.__window.onFocusOut.dispatch(),
                            this.parent.__window.onDeactivate.dispatch(),
                            this.hidden = !0) : this.hidden && (this.parent.__window.onFocusIn.dispatch(),
                            this.parent.__window.onActivate.dispatch(),
                            this.hidden = !1)
                        }
                },
                updateGameDevices: function() {
                    var a = ob.__getDeviceData();
                    if (null != a)
                        for (var b, c, f, h, q = 0, I = a.length; q < I; ) {
                            var d = q++;
                            f = a[d];
                            if (null != f) {
                                if (!this.gameDeviceCache.h.hasOwnProperty(d)) {
                                    h = new sd;
                                    h.id = d;
                                    h.connected = f.connected;
                                    b = 0;
                                    for (c = f.buttons.length; b < c; )
                                        h.buttons.push(f.buttons[b++].value);
                                    b = 0;
                                    for (c = f.axes.length; b < c; )
                                        h.axes.push(f.axes[b++]);
                                    "standard" == f.mapping && (h.isGamepad = !0);
                                    this.gameDeviceCache.h[d] = h;
                                    f.connected && (ob.__connect(d),
                                    h.isGamepad && sb.__connect(d))
                                }
                                h = this.gameDeviceCache.h[d];
                                c = ob.devices.h[d];
                                b = sb.devices.h[d];
                                if (f.connected) {
                                    for (var g, l = 0, p = f.buttons.length; l < p; ) {
                                        var y = l++;
                                        g = f.buttons[y].value;
                                        if (g != h.buttons[y]) {
                                            if (6 == y)
                                                c.onAxisMove.dispatch(f.axes.length, g),
                                                null != b && b.onAxisMove.dispatch(4, g);
                                            else if (7 == y)
                                                c.onAxisMove.dispatch(f.axes.length + 1, g),
                                                null != b && b.onAxisMove.dispatch(5, g);
                                            else if (0 < g ? c.onButtonDown.dispatch(y) : c.onButtonUp.dispatch(y),
                                            null != b) {
                                                switch (y) {
                                                case 0:
                                                    d = 0;
                                                    break;
                                                case 1:
                                                    d = 1;
                                                    break;
                                                case 2:
                                                    d = 2;
                                                    break;
                                                case 3:
                                                    d = 3;
                                                    break;
                                                case 4:
                                                    d = 9;
                                                    break;
                                                case 5:
                                                    d = 10;
                                                    break;
                                                case 8:
                                                    d = 4;
                                                    break;
                                                case 9:
                                                    d = 6;
                                                    break;
                                                case 10:
                                                    d = 7;
                                                    break;
                                                case 11:
                                                    d = 8;
                                                    break;
                                                case 12:
                                                    d = 11;
                                                    break;
                                                case 13:
                                                    d = 12;
                                                    break;
                                                case 14:
                                                    d = 13;
                                                    break;
                                                case 15:
                                                    d = 14;
                                                    break;
                                                case 16:
                                                    d = 5;
                                                    break;
                                                default:
                                                    continue
                                                }
                                                0 < g ? b.onButtonDown.dispatch(d) : b.onButtonUp.dispatch(d)
                                            }
                                            h.buttons[y] = g
                                        }
                                    }
                                    d = 0;
                                    for (g = f.axes.length; d < g; )
                                        l = d++,
                                        f.axes[l] != h.axes[l] && (c.onAxisMove.dispatch(l, f.axes[l]),
                                        null != b && b.onAxisMove.dispatch(l, f.axes[l]),
                                        h.axes[l] = f.axes[l])
                                } else
                                    h.connected && (h.connected = !1,
                                    ob.__disconnect(d),
                                    sb.__disconnect(d))
                            }
                        }
                },
                __class__: M
            };
            var oa = function() {
                this.onCreateWindow = new ud;
                this.onUpdate = new Cc;
                this.onExit = new Cc;
                null == oa.current && (oa.current = this);
                this.meta = new p;
                this.modules = [];
                this.__windowByID = new ra;
                this.__windows = [];
                this.__backend = new M(this);
                this.__registerLimeModule(this);
                this.__preloader = new vd;
                this.__preloader.onProgress.add(t(this, this.onPreloadProgress));
                this.__preloader.onComplete.add(t(this, this.onPreloadComplete))
            };
            g["lime.app.Application"] = oa;
            oa.__name__ = "lime.app.Application";
            oa.__super__ = ma;
            oa.prototype = n(ma.prototype, {
                createWindow: function(a) {
                    a = this.__createWindow(a);
                    this.__addWindow(a);
                    return a
                },
                exec: function() {
                    oa.current = this;
                    return this.__backend.exec()
                },
                onGamepadAxisMove: function(a, b, c) {},
                onGamepadButtonDown: function(a, b) {},
                onGamepadButtonUp: function(a, b) {},
                onGamepadConnect: function(a) {},
                onGamepadDisconnect: function(a) {},
                onJoystickAxisMove: function(a, b, c) {},
                onJoystickButtonDown: function(a, b) {},
                onJoystickButtonUp: function(a, b) {},
                onJoystickConnect: function(a) {},
                onJoystickDisconnect: function(a) {},
                onJoystickHatMove: function(a, b, c) {},
                onKeyDown: function(a, b) {},
                onKeyUp: function(a, b) {},
                onModuleExit: function(a) {},
                onMouseDown: function(a, b, c) {},
                onMouseMove: function(a, b) {},
                onMouseMoveRelative: function(a, b) {},
                onMouseUp: function(a, b, c) {},
                onMouseWheel: function(a, b, c) {},
                onPreloadComplete: function() {},
                onPreloadProgress: function(a, b) {},
                onRenderContextLost: function() {},
                onRenderContextRestored: function(a) {},
                onTextEdit: function(a, b, c) {},
                onTextInput: function(a) {},
                onTouchCancel: function(a) {},
                onTouchEnd: function(a) {},
                onTouchMove: function(a) {},
                onTouchStart: function(a) {},
                onWindowActivate: function() {},
                onWindowClose: function() {},
                onWindowCreate: function() {},
                onWindowDeactivate: function() {},
                onWindowDropFile: function(a) {},
                onWindowEnter: function() {},
                onWindowExpose: function() {},
                onWindowFocusIn: function() {},
                onWindowFocusOut: function() {},
                onWindowFullscreen: function() {},
                onWindowLeave: function() {},
                onWindowMove: function(a, b) {},
                onWindowMinimize: function() {},
                onWindowResize: function(a, b) {},
                onWindowRestore: function() {},
                render: function(a) {},
                update: function(a) {},
                __addWindow: function(a) {
                    if (null != a) {
                        this.__windows.push(a);
                        this.__windowByID.h[a.id] = a;
                        var b = this;
                        a.onClose.add(function() {
                            b.__onWindowClose(a)
                        }, !1, -1E4);
                        null == this.__window && (this.__window = a,
                        a.onActivate.add(t(this, this.onWindowActivate)),
                        a.onRenderContextLost.add(t(this, this.onRenderContextLost)),
                        a.onRenderContextRestored.add(t(this, this.onRenderContextRestored)),
                        a.onDeactivate.add(t(this, this.onWindowDeactivate)),
                        a.onDropFile.add(t(this, this.onWindowDropFile)),
                        a.onEnter.add(t(this, this.onWindowEnter)),
                        a.onExpose.add(t(this, this.onWindowExpose)),
                        a.onFocusIn.add(t(this, this.onWindowFocusIn)),
                        a.onFocusOut.add(t(this, this.onWindowFocusOut)),
                        a.onFullscreen.add(t(this, this.onWindowFullscreen)),
                        a.onKeyDown.add(t(this, this.onKeyDown)),
                        a.onKeyUp.add(t(this, this.onKeyUp)),
                        a.onLeave.add(t(this, this.onWindowLeave)),
                        a.onMinimize.add(t(this, this.onWindowMinimize)),
                        a.onMouseDown.add(t(this, this.onMouseDown)),
                        a.onMouseMove.add(t(this, this.onMouseMove)),
                        a.onMouseMoveRelative.add(t(this, this.onMouseMoveRelative)),
                        a.onMouseUp.add(t(this, this.onMouseUp)),
                        a.onMouseWheel.add(t(this, this.onMouseWheel)),
                        a.onMove.add(t(this, this.onWindowMove)),
                        a.onRender.add(t(this, this.render)),
                        a.onResize.add(t(this, this.onWindowResize)),
                        a.onRestore.add(t(this, this.onWindowRestore)),
                        a.onTextEdit.add(t(this, this.onTextEdit)),
                        a.onTextInput.add(t(this, this.onTextInput)),
                        this.onWindowCreate());
                        this.onCreateWindow.dispatch(a)
                    }
                },
                __createWindow: function(a) {
                    a = new wd(this,a);
                    return -1 == a.id ? null : a
                },
                __registerLimeModule: function(a) {
                    a.onUpdate.add(t(this, this.update));
                    a.onExit.add(t(this, this.onModuleExit), !1, 0);
                    a.onExit.add(t(this, this.__onModuleExit), !1, -1E3);
                    for (a = sb.devices.iterator(); a.hasNext(); )
                        this.__onGamepadConnect(a.next());
                    sb.onConnect.add(t(this, this.__onGamepadConnect));
                    for (a = ob.devices.iterator(); a.hasNext(); )
                        this.__onJoystickConnect(a.next());
                    ob.onConnect.add(t(this, this.__onJoystickConnect));
                    ub.onCancel.add(t(this, this.onTouchCancel));
                    ub.onStart.add(t(this, this.onTouchStart));
                    ub.onMove.add(t(this, this.onTouchMove));
                    ub.onEnd.add(t(this, this.onTouchEnd))
                },
                __removeWindow: function(a) {
                    null != a && this.__windowByID.h.hasOwnProperty(a.id) && (this.__window == a && (this.__window = null),
                    K.remove(this.__windows, a),
                    this.__windowByID.remove(a.id),
                    a.close(),
                    this.__checkForAllWindowsClosed())
                },
                __checkForAllWindowsClosed: function() {
                    0 == this.__windows.length && rb.exit(0)
                },
                __onGamepadConnect: function(a) {
                    this.onGamepadConnect(a);
                    var b = this
                      , c = function(c, f) {
                        b.onGamepadAxisMove(a, c, f)
                    };
                    a.onAxisMove.add(c);
                    var f = this;
                    c = function(b) {
                        f.onGamepadButtonDown(a, b)
                    }
                    ;
                    a.onButtonDown.add(c);
                    var h = this;
                    c = function(b) {
                        h.onGamepadButtonUp(a, b)
                    }
                    ;
                    a.onButtonUp.add(c);
                    var q = this;
                    a.onDisconnect.add(function() {
                        q.onGamepadDisconnect(a)
                    })
                },
                __onJoystickConnect: function(a) {
                    this.onJoystickConnect(a);
                    var b = this
                      , c = function(c, f) {
                        b.onJoystickAxisMove(a, c, f)
                    };
                    a.onAxisMove.add(c);
                    var f = this;
                    c = function(b) {
                        f.onJoystickButtonDown(a, b)
                    }
                    ;
                    a.onButtonDown.add(c);
                    var h = this;
                    c = function(b) {
                        h.onJoystickButtonUp(a, b)
                    }
                    ;
                    a.onButtonUp.add(c);
                    var q = this;
                    a.onDisconnect.add(function() {
                        q.onJoystickDisconnect(a)
                    });
                    var I = this;
                    c = function(b, c) {
                        I.onJoystickHatMove(a, b, c)
                    }
                    ;
                    a.onHatMove.add(c)
                },
                __onModuleExit: function(a) {
                    this.onExit.canceled || (this.__unregisterLimeModule(this),
                    this.__backend.exit(),
                    oa.current == this && (oa.current = null))
                },
                __onWindowClose: function(a) {
                    if (this.__window == a)
                        this.onWindowClose();
                    this.__removeWindow(a)
                },
                __unregisterLimeModule: function(a) {
                    a.onUpdate.remove(t(this, this.update));
                    a.onExit.remove(t(this, this.__onModuleExit));
                    a.onExit.remove(t(this, this.onModuleExit));
                    sb.onConnect.remove(t(this, this.__onGamepadConnect));
                    ob.onConnect.remove(t(this, this.__onJoystickConnect));
                    ub.onCancel.remove(t(this, this.onTouchCancel));
                    ub.onStart.remove(t(this, this.onTouchStart));
                    ub.onMove.remove(t(this, this.onTouchMove));
                    ub.onEnd.remove(t(this, this.onTouchEnd))
                },
                __class__: oa
            });
            var G = function() {};
            g.ApplicationMain = G;
            G.__name__ = "ApplicationMain";
            G.main = function() {
                rb.__registerEntryPoint("Mine Blocks 2", G.create)
            }
            ;
            G.create = function(a) {
                La.init(a);
                var b = new d;
                b.meta.h.build = "198";
                b.meta.h.company = "Zanzlanz";
                b.meta.h.file = "Mine Blocks 2";
                b.meta.h.name = "Mine Blocks 2";
                b.meta.h.packageName = "com.zanzlanz.mineblocks2";
                b.meta.h.version = "0.8.1";
                var c = {
                    allowHighDPI: !1,
                    alwaysOnTop: !1,
                    borderless: !1,
                    element: null,
                    frameRate: 60,
                    height: 0,
                    hidden: !1,
                    maximized: !1,
                    minimized: !1,
                    parameters: {},
                    resizable: !0,
                    title: "Mine Blocks 2",
                    width: 0,
                    x: null,
                    y: null,
                    context: {
                        antialiasing: 0,
                        background: 16777215,
                        colorDepth: 32,
                        depth: !0,
                        hardware: !0,
                        stencil: !0,
                        type: null,
                        vsync: !0
                    }
                };
                if (null == b.__window && null != a)
                    for (var f = 0, h = Y.fields(a); f < h.length; ) {
                        var q = h[f];
                        ++f;
                        Object.prototype.hasOwnProperty.call(c, q) ? c[q] = Y.field(a, q) : Object.prototype.hasOwnProperty.call(c.context, q) && (c.context[q] = Y.field(a, q))
                    }
                b.createWindow(c);
                f = 0;
                for (h = La.preloadLibraries; f < h.length; )
                    b.__preloader.addLibrary(h[f++]);
                f = 0;
                for (h = La.preloadLibraryNames; f < h.length; )
                    b.__preloader.addLibraryName(h[f++]);
                b.__preloader.load();
                G.start(b)
            }
            ;
            G.start = function(a) {
                a.exec()
            }
            ;
            var u = function() {};
            g.BlockInfo = u;
            u.__name__ = "BlockInfo";
            u.get = function(a) {
                return Object.prototype.hasOwnProperty.call(u.blockData.h, a) ? u.blockData.h[a] : u.emptyBlockInfoData
            }
            ;
            u.inBlockGroup = function(a, b) {
                return null == u.blockGroups.h[a] ? !1 : 1 == u.blockGroups.h[a].h[b]
            }
            ;
            u.setBlockGroup = function(a, b) {
                null == u.blockGroups.h[a] && (u.blockGroups.h[a] = new p);
                u.blockGroups.h[a].h[b] = !0
            }
            ;
            u.redesignateBlockGroups = function() {
                u.blockGroups = new p;
                u.creativeInventory = [];
                for (var a = Object.keys(u.blockData.h), b = a.length, c = 0; c < b; ) {
                    var f = a[c++];
                    1 == u.blockData.h[f].solid && u.setBlockGroup("solid", f);
                    null != u.blockData.h[f].climb && u.setBlockGroup("climb", f);
                    null != u.blockData.h[f].slippery && u.setBlockGroup("slippery", f);
                    if (null != u.blockData.h[f].groups)
                        for (var h = 0, q = u.blockData.h[f].groups; h < q.length; )
                            u.setBlockGroup(q[h++], f);
                    if (1 == u.blockData.h[f].inCreativeInventory)
                        if (null != u.blockData.h[f].creativeTypes)
                            for (h = 0,
                            q = u.blockData.h[f].creativeTypes.length; h < q; ) {
                                var I = new p;
                                I.h.type = u.blockData.h[f].creativeTypes[h++];
                                u.creativeInventory.push(new Z(f,1,I))
                            }
                        else
                            u.creativeInventory.push(new Z(f,1))
                }
                u.creativeInventory.sort(u.sortCreativeInventory)
            }
            ;
            u.sortCreativeInventory = function(a, b) {
                return u.blockData.h[a.type].name < u.blockData.h[b.type].name ? -1 : u.blockData.h[a.type].name > u.blockData.h[b.type].name ? 1 : 0
            }
            ;
            u.initBlockData = function() {
                var a = u.blockData
                  , b = {
                    name: x.get("STICK"),
                    inCreativeInventory: !0,
                    fuel: {
                        speed: 1,
                        amount: 15
                    },
                    stackSize: 200
                };
                a.h.stick = b;
                a = u.blockData;
                b = {
                    name: x.get("CHEST"),
                    inCreativeInventory: !0,
                    placeSpecial: !0,
                    fuel: {
                        speed: 1,
                        amount: 50
                    },
                    stackSize: 50
                };
                a.h.chest = b;
                a = u.blockData;
                b = {
                    name: x.get("CHEST_BATTERED"),
                    inCreativeInventory: !0,
                    placeSpecial: !0,
                    fuel: {
                        speed: 1,
                        amount: 50
                    },
                    stackSize: 50
                };
                a.h.chest_battered = b;
                a = u.blockData;
                b = {
                    name: x.get("CAMPFIRE"),
                    itemTexture: "campfire_drop",
                    inCreativeInventory: !0,
                    placeSpecial: !0,
                    stackSize: 1
                };
                a.h.campfire = b;
                a = u.blockData;
                b = {
                    name: x.get("DOOR_WOOD_PINE"),
                    itemTexture: "door_wood_pine_drop",
                    groups: ["door", "door_wood"],
                    inCreativeInventory: !0,
                    placeSpecial: !0,
                    fuel: {
                        speed: 1,
                        amount: 50
                    },
                    stackSize: 50
                };
                a.h.door_wood_pine = b;
                a = u.blockData;
                b = {
                    name: x.get("DOOR_WOOD_BIRCH"),
                    itemTexture: "door_wood_birch_drop",
                    groups: ["door", "door_wood"],
                    inCreativeInventory: !0,
                    placeSpecial: !0,
                    fuel: {
                        speed: 1,
                        amount: 50
                    },
                    stackSize: 50
                };
                a.h.door_wood_birch = b;
                a = u.blockData;
                b = {
                    name: x.get("DOOR_WOOD_ORANGE"),
                    itemTexture: "door_wood_orange_drop",
                    groups: ["door", "door_wood"],
                    inCreativeInventory: !0,
                    placeSpecial: !0,
                    fuel: {
                        speed: 1,
                        amount: 50
                    },
                    stackSize: 50
                };
                a.h.door_wood_orange = b;
                a = u.blockData;
                b = {
                    name: x.get("COAL"),
                    inCreativeInventory: !0,
                    groups: ["coal"],
                    fuel: {
                        speed: 2,
                        amount: 300
                    },
                    stackSize: 100
                };
                a.h.coal = b;
                a = u.blockData;
                b = {
                    name: x.get("DIAMOND"),
                    inCreativeInventory: !0,
                    stackSize: 100
                };
                a.h.diamond = b;
                a = u.blockData;
                b = {
                    name: x.get("CHARCOAL"),
                    inCreativeInventory: !0,
                    groups: ["coal"],
                    fuel: {
                        speed: 2,
                        amount: 300
                    },
                    stackSize: 100
                };
                a.h.charcoal = b;
                a = u.blockData;
                b = {
                    name: x.get("COTTON"),
                    itemTexture: "cotton_drop",
                    inCreativeInventory: !0,
                    placeable: !0,
                    uniqueUpdate: 0,
                    isTransparent: !0,
                    mineable: !0,
                    replace: !0,
                    liquidReplace: !0,
                    damageValue: 200,
                    stackSize: 100,
                    fuel: {
                        speed: 1,
                        amount: 100
                    }
                };
                a.h.cotton = b;
                a = u.blockData;
                b = {
                    name: x.get("STRING"),
                    inCreativeInventory: !0,
                    stackSize: 100
                };
                a.h.string = b;
                a = u.blockData;
                b = {
                    name: x.get("IRON"),
                    inCreativeInventory: !0,
                    stackSize: 100
                };
                a.h.iron_ingot = b;
                a = u.blockData;
                b = {
                    name: x.get("GOLD"),
                    inCreativeInventory: !0,
                    stackSize: 100
                };
                a.h.gold_ingot = b;
                a = u.blockData;
                b = {
                    name: x.get("COPPER"),
                    inCreativeInventory: !0,
                    stackSize: 100
                };
                a.h.copper_ingot = b;
                a = u.blockData;
                b = {
                    name: x.get("COIN_COPPER"),
                    inCreativeInventory: !0,
                    stackSize: 500
                };
                a.h.coin_copper = b;
                a = u.blockData;
                b = {
                    name: x.get("COIN_GOLD"),
                    inCreativeInventory: !0,
                    stackSize: 500
                };
                a.h.coin_gold = b;
                a = u.blockData;
                b = {
                    name: x.get("ORANGE_TREE_FLOWER"),
                    inCreativeInventory: !0,
                    stackSize: 100
                };
                a.h.flower_orange_tree = b;
                a = u.blockData;
                b = {
                    name: x.get("WOOD_PICKAXE"),
                    inCreativeInventory: !0,
                    tool: !0,
                    toolType: "pickaxe",
                    damageValue: 100,
                    strength: 1,
                    fuel: {
                        speed: 1,
                        amount: 50
                    },
                    stackSize: 1
                };
                a.h.pickaxe_wood = b;
                a = u.blockData;
                b = {
                    name: x.get("STONE_PICKAXE"),
                    inCreativeInventory: !0,
                    tool: !0,
                    toolType: "pickaxe",
                    damageValue: 200,
                    strength: 2,
                    stackSize: 1
                };
                a.h.pickaxe_stone = b;
                a = u.blockData;
                b = {
                    name: x.get("IRON_PICKAXE"),
                    inCreativeInventory: !0,
                    tool: !0,
                    toolType: "pickaxe",
                    damageValue: 500,
                    strength: 4,
                    stackSize: 1
                };
                a.h.pickaxe_iron = b;
                a = u.blockData;
                b = {
                    name: x.get("DIAMOND_PICKAXE"),
                    inCreativeInventory: !0,
                    tool: !0,
                    toolType: "pickaxe",
                    damageValue: 1500,
                    strength: 6,
                    stackSize: 1
                };
                a.h.pickaxe_diamond = b;
                a = u.blockData;
                b = {
                    name: x.get("WOOD_SHOVEL"),
                    inCreativeInventory: !0,
                    tool: !0,
                    toolType: "shovel",
                    damageValue: 100,
                    strength: 1,
                    fuel: {
                        speed: 1,
                        amount: 50
                    },
                    stackSize: 1
                };
                a.h.shovel_wood = b;
                a = u.blockData;
                b = {
                    name: x.get("STONE_SHOVEL"),
                    inCreativeInventory: !0,
                    tool: !0,
                    toolType: "shovel",
                    damageValue: 200,
                    strength: 2,
                    stackSize: 1
                };
                a.h.shovel_stone = b;
                a = u.blockData;
                b = {
                    name: x.get("IRON_SHOVEL"),
                    inCreativeInventory: !0,
                    tool: !0,
                    toolType: "shovel",
                    damageValue: 500,
                    strength: 4,
                    stackSize: 1
                };
                a.h.shovel_iron = b;
                a = u.blockData;
                b = {
                    name: x.get("DIAMOND_SHOVEL"),
                    inCreativeInventory: !0,
                    tool: !0,
                    toolType: "shovel",
                    damageValue: 1500,
                    strength: 6,
                    stackSize: 1
                };
                a.h.shovel_diamond = b;
                a = u.blockData;
                b = {
                    name: x.get("WOOD_AXE"),
                    inCreativeInventory: !0,
                    tool: !0,
                    toolType: "axe",
                    damageValue: 100,
                    strength: 1,
                    fuel: {
                        speed: 1,
                        amount: 50
                    },
                    stackSize: 1
                };
                a.h.axe_wood = b;
                a = u.blockData;
                b = {
                    name: x.get("STONE_AXE"),
                    inCreativeInventory: !0,
                    tool: !0,
                    toolType: "axe",
                    damageValue: 200,
                    strength: 2,
                    stackSize: 1
                };
                a.h.axe_stone = b;
                a = u.blockData;
                b = {
                    name: x.get("IRON_AXE"),
                    inCreativeInventory: !0,
                    tool: !0,
                    toolType: "axe",
                    damageValue: 500,
                    strength: 4,
                    stackSize: 1
                };
                a.h.axe_iron = b;
                a = u.blockData;
                b = {
                    name: x.get("DIAMOND_AXE"),
                    inCreativeInventory: !0,
                    tool: !0,
                    toolType: "axe",
                    damageValue: 1500,
                    strength: 6,
                    stackSize: 1
                };
                a.h.axe_diamond = b;
                a = u.blockData;
                b = {
                    name: x.get("WOOD_SWORD"),
                    inCreativeInventory: !0,
                    tool: !0,
                    toolType: "sword",
                    damageValue: 100,
                    strength: 1,
                    fuel: {
                        speed: 1,
                        amount: 50
                    },
                    stackSize: 1
                };
                a.h.sword_wood = b;
                a = u.blockData;
                b = {
                    name: x.get("STONE_SWORD"),
                    inCreativeInventory: !0,
                    tool: !0,
                    toolType: "sword",
                    damageValue: 200,
                    strength: 2,
                    stackSize: 1
                };
                a.h.sword_stone = b;
                a = u.blockData;
                b = {
                    name: x.get("IRON_SWORD"),
                    inCreativeInventory: !0,
                    tool: !0,
                    toolType: "sword",
                    damageValue: 500,
                    strength: 4,
                    stackSize: 1
                };
                a.h.sword_iron = b;
                a = u.blockData;
                b = {
                    name: x.get("DIAMOND_SWORD"),
                    inCreativeInventory: !0,
                    tool: !0,
                    toolType: "sword",
                    damageValue: 1500,
                    strength: 6,
                    stackSize: 1
                };
                a.h.sword_diamond = b;
                a = u.blockData;
                b = x.get("DIRT");
                var c = new p;
                c.h.shovel = 1;
                c.h.pickaxe = .5;
                a.h.dirt = {
                    name: b,
                    inCreativeInventory: !0,
                    placeable: !0,
                    placeableBG: !0,
                    solid: !0,
                    safe: 1,
                    uniqueUpdate: .4,
                    mineable: !0,
                    stackSize: 100,
                    damageValue: 1500,
                    affectedBy: c,
                    hasBlockBorder: !0
                };
                a = u.blockData;
                b = x.get("DIRT_GRASS");
                c = new p;
                c.h.shovel = 1;
                c.h.pickaxe = .5;
                a.h.dirt_grass = {
                    name: b,
                    inCreativeInventory: !0,
                    placeable: !0,
                    solid: !0,
                    safe: 1,
                    uniqueUpdate: .4,
                    mineable: !0,
                    stackSize: 100,
                    damageValue: 1500,
                    dropDifferent: [{
                        iChance: 1,
                        amount: 1,
                        type: "dirt"
                    }],
                    affectedBy: c,
                    hasBlockBorder: !0
                };
                a = u.blockData;
                b = {
                    name: x.get("TORCH"),
                    inCreativeInventory: !0,
                    placeable: !0,
                    uniqueUpdate: 0,
                    isTransparent: !0,
                    mineable: !0,
                    stackSize: 100,
                    liquidReplace: !0,
                    damageValue: 250
                };
                a.h.torch = b;
                a = u.blockData;
                b = x.get("SAPLING");
                c = new p;
                c.h.sword = 1;
                c.h.axe = 1;
                a.h.sapling_pine = {
                    name: b,
                    inCreativeInventory: !0,
                    placeable: !0,
                    uniqueUpdate: 0,
                    isTransparent: !0,
                    mineable: !0,
                    stackSize: 100,
                    damageValue: 250,
                    fuel: {
                        speed: 1,
                        amount: 25
                    },
                    affectedBy: c
                };
                a = u.blockData;
                b = x.get("SAPLING");
                c = new p;
                c.h.sword = 1;
                c.h.axe = 1;
                a.h.sapling_birch = {
                    name: b,
                    inCreativeInventory: !0,
                    placeable: !0,
                    uniqueUpdate: 0,
                    isTransparent: !0,
                    mineable: !0,
                    stackSize: 100,
                    damageValue: 250,
                    fuel: {
                        speed: 1,
                        amount: 25
                    },
                    affectedBy: c
                };
                a = u.blockData;
                b = x.get("SAPLING");
                c = new p;
                c.h.sword = 1;
                c.h.axe = 1;
                a.h.sapling_orange = {
                    name: b,
                    inCreativeInventory: !0,
                    placeable: !0,
                    uniqueUpdate: 0,
                    isTransparent: !0,
                    mineable: !0,
                    stackSize: 100,
                    damageValue: 250,
                    fuel: {
                        speed: 1,
                        amount: 25
                    },
                    affectedBy: c
                };
                a = u.blockData;
                b = x.get("WOOD_PLANKS");
                c = new p;
                c.h.axe = 1;
                a.h.planks_pine = {
                    name: b,
                    inCreativeInventory: !0,
                    groups: ["planks"],
                    placeable: !0,
                    placeableBG: !0,
                    solid: !0,
                    safe: 1,
                    mineable: !0,
                    stackSize: 100,
                    damageValue: 2500,
                    fuel: {
                        speed: 1,
                        amount: 75
                    },
                    affectedBy: c
                };
                a = u.blockData;
                b = x.get("WOOD_PLANKS");
                c = new p;
                c.h.axe = 1;
                a.h.planks_birch = {
                    name: b,
                    inCreativeInventory: !0,
                    groups: ["planks"],
                    placeable: !0,
                    placeableBG: !0,
                    solid: !0,
                    safe: 1,
                    mineable: !0,
                    stackSize: 100,
                    damageValue: 2500,
                    fuel: {
                        speed: 1,
                        amount: 75
                    },
                    affectedBy: c
                };
                a = u.blockData;
                b = x.get("WOOD_PLANKS");
                c = new p;
                c.h.axe = 1;
                a.h.planks_orange = {
                    name: b,
                    inCreativeInventory: !0,
                    groups: ["planks"],
                    placeable: !0,
                    placeableBG: !0,
                    solid: !0,
                    safe: 1,
                    mineable: !0,
                    stackSize: 100,
                    damageValue: 2500,
                    fuel: {
                        speed: 1,
                        amount: 75
                    },
                    affectedBy: c
                };
                a = u.blockData;
                b = x.get("SNOW");
                c = new p;
                c.h.shovel = 1;
                a.h.snow_block = {
                    name: b,
                    placeable: !0,
                    solid: !0,
                    safe: 1,
                    mineable: !0,
                    stackSize: 100,
                    damageValue: 1500,
                    affectedBy: c
                };
                a = u.blockData;
                b = x.get("OBSIDIAN");
                c = new p;
                c.h.pickaxe = 1;
                var f = new p;
                f.h.pickaxe_diamond = !0;
                a.h.obsidian = {
                    name: b,
                    inCreativeInventory: !0,
                    placeable: !0,
                    placeableBG: !0,
                    solid: !0,
                    safe: 1,
                    mineable: !0,
                    stackSize: 100,
                    damageValue: 5E4,
                    affectedBy: c,
                    dropInclusion: f
                };
                a = u.blockData;
                b = x.get("STONE_BRICKS");
                c = new p;
                c.h.pickaxe = 1;
                f = new p;
                f.h.pickaxe_wood = !0;
                f.h.pickaxe_stone = !0;
                f.h.pickaxe_iron = !0;
                f.h.pickaxe_diamond = !0;
                a.h.stone_bricks = {
                    name: b,
                    inCreativeInventory: !0,
                    placeable: !0,
                    placeableBG: !0,
                    solid: !0,
                    safe: 1,
                    mineable: !0,
                    stackSize: 100,
                    damageValue: 3E3,
                    affectedBy: c,
                    dropInclusion: f
                };
                a = u.blockData;
                b = x.get("STONE_BRICKS");
                c = new p;
                c.h.pickaxe = 1;
                f = new p;
                f.h.pickaxe_wood = !0;
                f.h.pickaxe_stone = !0;
                f.h.pickaxe_iron = !0;
                f.h.pickaxe_diamond = !0;
                a.h.stone_bricks_x = {
                    name: b,
                    inCreativeInventory: !0,
                    placeable: !0,
                    placeableBG: !0,
                    solid: !0,
                    safe: 1,
                    mineable: !0,
                    stackSize: 100,
                    damageValue: 3E3,
                    affectedBy: c,
                    dropInclusion: f
                };
                a = u.blockData;
                b = x.get("MOSSY_STONE_BRICKS");
                c = new p;
                c.h.pickaxe = 1;
                f = new p;
                f.h.pickaxe_wood = !0;
                f.h.pickaxe_stone = !0;
                f.h.pickaxe_iron = !0;
                f.h.pickaxe_diamond = !0;
                a.h.stone_bricks_moss = {
                    name: b,
                    inCreativeInventory: !0,
                    placeable: !0,
                    placeableBG: !0,
                    solid: !0,
                    safe: 1,
                    mineable: !0,
                    slippery: 1.1,
                    stackSize: 100,
                    damageValue: 3E3,
                    affectedBy: c,
                    dropInclusion: f
                };
                a = u.blockData;
                b = x.get("LEAVES_PINE");
                c = new p;
                c.h.axe = 1;
                c.h.sword = 1;
                a.h.leaves_pine = {
                    name: b,
                    inCreativeInventory: !0,
                    groups: ["leaves"],
                    placeable: !0,
                    isTransparent: !0,
                    mineable: !0,
                    damageValue: 1E3,
                    stackSize: 100,
                    uniqueUpdate: .4,
                    dropDifferent: [{
                        iChance: 7,
                        amount: 1,
                        type: "sapling_pine"
                    }],
                    fuel: {
                        speed: 1,
                        amount: 25
                    },
                    affectedBy: c,
                    hasBlockBorder: !0
                };
                a = u.blockData;
                b = x.get("LEAVES_BIRCH");
                c = new p;
                c.h.axe = 1;
                c.h.sword = 1;
                a.h.leaves_birch = {
                    name: b,
                    inCreativeInventory: !0,
                    groups: ["leaves"],
                    placeable: !0,
                    isTransparent: !0,
                    mineable: !0,
                    damageValue: 1E3,
                    stackSize: 100,
                    uniqueUpdate: .4,
                    dropDifferent: [{
                        iChance: 7,
                        amount: 1,
                        type: "sapling_birch"
                    }],
                    fuel: {
                        speed: 1,
                        amount: 25
                    },
                    affectedBy: c,
                    hasBlockBorder: !0
                };
                a = u.blockData;
                b = x.get("LEAVES_ORANGE");
                c = new p;
                c.h.axe = 1;
                c.h.sword = 1;
                a.h.leaves_orange = {
                    name: b,
                    inCreativeInventory: !0,
                    groups: ["leaves"],
                    placeable: !0,
                    isTransparent: !0,
                    mineable: !0,
                    damageValue: 1E3,
                    stackSize: 100,
                    uniqueUpdate: .4,
                    dropDifferent: [{
                        iChance: 7,
                        amount: 1,
                        type: "sapling_orange"
                    }],
                    fuel: {
                        speed: 1,
                        amount: 25
                    },
                    affectedBy: c,
                    hasBlockBorder: !0
                };
                a = u.blockData;
                b = x.get("LEAVES_ORANGE");
                c = new p;
                c.h.axe = 1;
                c.h.sword = 1;
                a.h.leaves_orange_flower = {
                    name: b,
                    inCreativeInventory: !0,
                    groups: ["leaves"],
                    placeable: !0,
                    isTransparent: !0,
                    mineable: !0,
                    damageValue: 1E3,
                    stackSize: 100,
                    uniqueUpdate: .4,
                    dropDifferent: [{
                        iChance: 7,
                        amount: 1,
                        type: "sapling_orange"
                    }, {
                        iChance: 1,
                        amount: 1,
                        type: "flower_orange_tree"
                    }],
                    fuel: {
                        speed: 1,
                        amount: 25
                    },
                    affectedBy: c,
                    hasBlockBorder: !0
                };
                a = u.blockData;
                b = x.get("LEAVES_ORANGE_CORD");
                c = new p;
                c.h.sword = 1;
                a.h.vines_orange = {
                    name: b,
                    inCreativeInventory: !0,
                    placeable: !0,
                    isTransparent: !0,
                    mineable: !0,
                    damageValue: 750,
                    stackSize: 100,
                    uniqueUpdate: 0,
                    fuel: {
                        speed: 1,
                        amount: 10
                    },
                    affectedBy: c
                };
                a = u.blockData;
                b = x.get("PEBBLED_DIRT");
                c = new p;
                c.h.shovel = 1;
                c.h.pickaxe = .5;
                a.h.dirt_gravel = {
                    name: b,
                    inCreativeInventory: !0,
                    placeable: !0,
                    placeableBG: !0,
                    solid: !0,
                    safe: 1,
                    mineable: !0,
                    damageValue: 1500,
                    stackSize: 100,
                    dropDifferent: [{
                        iChance: 1,
                        amount: 1,
                        type: "dirt"
                    }, {
                        iChance: 2,
                        amount: 2,
                        type: "rock"
                    }],
                    affectedBy: c,
                    hasBlockBorder: !0
                };
                a = u.blockData;
                b = x.get("PEBBLED_SAND");
                c = new p;
                c.h.shovel = 1;
                a.h.sand_gravel = {
                    name: b,
                    inCreativeInventory: !0,
                    placeable: !0,
                    solid: !0,
                    safe: .9,
                    uniqueUpdate: .1,
                    mineable: !0,
                    damageValue: 1500,
                    stackSize: 100,
                    dropDifferent: [{
                        iChance: 1,
                        amount: 1,
                        type: "sand"
                    }, {
                        iChance: 2,
                        amount: 2,
                        type: "rock"
                    }],
                    affectedBy: c,
                    hasBlockBorder: !0
                };
                a = u.blockData;
                b = x.get("STONE_ROCK");
                c = new p;
                c.h.pickaxe = 1;
                a.h.rock = {
                    name: b,
                    itemTexture: "rock_drop",
                    inCreativeInventory: !0,
                    placeable: !0,
                    uniqueUpdate: 0,
                    isTransparent: !0,
                    mineable: !0,
                    stackSize: 100,
                    damageValue: 250,
                    affectedBy: c
                };
                a = u.blockData;
                b = x.get("SPIKES");
                c = new p;
                c.h.pickaxe = 1;
                a.h.spikes = {
                    name: b,
                    itemTexture: "spikes_floor",
                    placeable: !0,
                    uniqueUpdate: 0,
                    isTransparent: !0,
                    mineable: !0,
                    hurt: 10,
                    stackSize: 100,
                    damageValue: 250,
                    affectedBy: c
                };
                a = u.blockData;
                b = x.get("GRASS");
                f = [{
                    iChance: Infinity,
                    amount: 0,
                    type: "grass_short"
                }];
                c = new p;
                c.h.sword = 1;
                a.h.grass_short = {
                    name: b,
                    inCreativeInventory: !0,
                    placeable: !0,
                    uniqueUpdate: 0,
                    isTransparent: !0,
                    mineable: !0,
                    replace: !0,
                    liquidReplace: !0,
                    damageValue: 150,
                    stackSize: 100,
                    dropDifferent: f,
                    affectedBy: c
                };
                a = u.blockData;
                b = x.get("GRASS");
                f = [{
                    iChance: Infinity,
                    amount: 0,
                    type: "grass_medium"
                }];
                c = new p;
                c.h.sword = 1;
                a.h.grass_medium = {
                    name: b,
                    inCreativeInventory: !0,
                    placeable: !0,
                    uniqueUpdate: 0,
                    isTransparent: !0,
                    mineable: !0,
                    replace: !0,
                    liquidReplace: !0,
                    damageValue: 175,
                    stackSize: 100,
                    dropDifferent: f,
                    affectedBy: c
                };
                a = u.blockData;
                b = x.get("GRASS");
                f = [{
                    iChance: Infinity,
                    amount: 0,
                    type: "grass_tall"
                }];
                c = new p;
                c.h.sword = 1;
                a.h.grass_tall = {
                    name: b,
                    inCreativeInventory: !0,
                    placeable: !0,
                    uniqueUpdate: 0,
                    isTransparent: !0,
                    mineable: !0,
                    replace: !0,
                    liquidReplace: !0,
                    damageValue: 200,
                    stackSize: 100,
                    dropDifferent: f,
                    affectedBy: c
                };
                a = u.blockData;
                b = x.get("BUSH");
                f = [{
                    iChance: Infinity,
                    amount: 0,
                    type: "bush"
                }];
                c = new p;
                c.h.sword = 1;
                a.h.bush = {
                    name: b,
                    inCreativeInventory: !0,
                    placeable: !0,
                    uniqueUpdate: 0,
                    isTransparent: !0,
                    mineable: !0,
                    replace: !0,
                    liquidReplace: !0,
                    damageValue: 250,
                    stackSize: 100,
                    dropDifferent: f,
                    affectedBy: c
                };
                a = u.blockData;
                b = x.get("BUSH_DESERT");
                f = [{
                    iChance: Infinity,
                    amount: 0,
                    type: "bush_desert"
                }];
                c = new p;
                c.h.sword = 1;
                a.h.bush_desert = {
                    name: b,
                    inCreativeInventory: !0,
                    placeable: !0,
                    uniqueUpdate: 0,
                    isTransparent: !0,
                    mineable: !0,
                    replace: !0,
                    liquidReplace: !0,
                    damageValue: 200,
                    stackSize: 100,
                    dropDifferent: f,
                    affectedBy: c
                };
                a = u.blockData;
                b = x.get("FLOWERS_YELLOW");
                f = [{
                    iChance: Infinity,
                    amount: 0,
                    type: "flower_patch_yellow"
                }];
                c = new p;
                c.h.sword = 1;
                a.h.flower_patch_yellow = {
                    name: b,
                    inCreativeInventory: !0,
                    placeable: !0,
                    uniqueUpdate: 0,
                    isTransparent: !0,
                    mineable: !0,
                    replace: !0,
                    liquidReplace: !0,
                    damageValue: 200,
                    stackSize: 100,
                    dropDifferent: f,
                    affectedBy: c
                };
                a = u.blockData;
                b = x.get("FLOWERS_RED");
                f = [{
                    iChance: Infinity,
                    amount: 0,
                    type: "flower_patch_red"
                }];
                c = new p;
                c.h.sword = 1;
                a.h.flower_patch_red = {
                    name: b,
                    inCreativeInventory: !0,
                    placeable: !0,
                    uniqueUpdate: 0,
                    isTransparent: !0,
                    mineable: !0,
                    replace: !0,
                    liquidReplace: !0,
                    damageValue: 200,
                    stackSize: 100,
                    dropDifferent: f,
                    affectedBy: c
                };
                a = u.blockData;
                b = x.get("BULB_FLOWER");
                c = new p;
                c.h.sword = 1;
                a.h.flower_bulb = {
                    name: b,
                    inCreativeInventory: !0,
                    placeable: !0,
                    uniqueUpdate: 0,
                    isTransparent: !0,
                    mineable: !0,
                    replace: !1,
                    stackSize: 100,
                    liquidReplace: !0,
                    damageValue: 250,
                    affectedBy: c
                };
                a = u.blockData;
                b = x.get("MUSHROOMS");
                c = new p;
                c.h.sword = 1;
                a.h.mushrooms = {
                    name: b,
                    inCreativeInventory: !0,
                    placeable: !0,
                    uniqueUpdate: 0,
                    isTransparent: !0,
                    mineable: !0,
                    replace: !0,
                    liquidReplace: !0,
                    stackSize: 100,
                    damageValue: 200,
                    affectedBy: c
                };
                a = u.blockData;
                b = {
                    name: x.get("BEDROCK"),
                    placeable: !1,
                    solid: !0,
                    safe: 1,
                    stackSize: 100,
                    damageValue: T.MAX_INT()
                };
                a.h.bedrock = b;
                a = u.blockData;
                b = x.get("COBBLESTONE");
                c = new p;
                c.h.pickaxe = 1;
                f = new p;
                f.h.pickaxe_wood = !0;
                f.h.pickaxe_stone = !0;
                f.h.pickaxe_iron = !0;
                f.h.pickaxe_diamond = !0;
                a.h.cobblestone = {
                    name: b,
                    inCreativeInventory: !0,
                    placeable: !0,
                    placeableBG: !0,
                    solid: !0,
                    safe: 1,
                    mineable: !0,
                    stackSize: 100,
                    damageValue: 3E3,
                    affectedBy: c,
                    smelt: {
                        speed: 1,
                        amount: 100,
                        into: "stone"
                    },
                    dropInclusion: f,
                    hasBlockBorder: !0
                };
                a = u.blockData;
                b = x.get("MOSSY_COBBLESTONE");
                c = new p;
                c.h.pickaxe = 1;
                f = new p;
                f.h.pickaxe_wood = !0;
                f.h.pickaxe_stone = !0;
                f.h.pickaxe_iron = !0;
                f.h.pickaxe_diamond = !0;
                a.h.cobblestone_moss = {
                    name: b,
                    inCreativeInventory: !0,
                    placeable: !0,
                    placeableBG: !0,
                    solid: !0,
                    safe: 1,
                    mineable: !0,
                    slippery: 1.1,
                    stackSize: 100,
                    damageValue: 3E3,
                    affectedBy: c,
                    dropInclusion: f,
                    hasBlockBorder: !0
                };
                a = u.blockData;
                b = x.get("WOOD_PINE");
                c = new p;
                c.h.axe = 1;
                a.h.wood_pine = {
                    name: b,
                    inCreativeInventory: !0,
                    groups: ["wood"],
                    placeable: !0,
                    placeableBG: !0,
                    isTreeTrunk: !0,
                    safe: 1,
                    isTransparent: !0,
                    mineable: !0,
                    damageValue: 2500,
                    stackSize: 100,
                    fuel: {
                        speed: 1,
                        amount: 300
                    },
                    smelt: {
                        speed: 1,
                        amount: 150,
                        into: "charcoal"
                    },
                    affectedBy: c
                };
                a = u.blockData;
                b = x.get("WOOD_BIRCH");
                c = new p;
                c.h.axe = 1;
                a.h.wood_birch = {
                    name: b,
                    inCreativeInventory: !0,
                    groups: ["wood"],
                    placeable: !0,
                    placeableBG: !0,
                    isTreeTrunk: !0,
                    safe: 1,
                    isTransparent: !0,
                    mineable: !0,
                    damageValue: 2500,
                    stackSize: 100,
                    fuel: {
                        speed: 1,
                        amount: 300
                    },
                    smelt: {
                        speed: 1,
                        amount: 150,
                        into: "charcoal"
                    },
                    affectedBy: c
                };
                a = u.blockData;
                b = x.get("WOOD_ORANGE");
                c = new p;
                c.h.axe = 1;
                a.h.wood_orange = {
                    name: b,
                    inCreativeInventory: !0,
                    groups: ["wood"],
                    placeable: !0,
                    placeableBG: !0,
                    isTreeTrunk: !0,
                    safe: 1,
                    isTransparent: !0,
                    mineable: !0,
                    damageValue: 2500,
                    stackSize: 100,
                    fuel: {
                        speed: 1,
                        amount: 300
                    },
                    smelt: {
                        speed: 1,
                        amount: 150,
                        into: "charcoal"
                    },
                    affectedBy: c
                };
                a = u.blockData;
                b = x.get("SAND");
                c = new p;
                c.h.shovel = 1;
                a.h.sand = {
                    name: b,
                    inCreativeInventory: !0,
                    placeable: !0,
                    solid: !0,
                    safe: .9,
                    uniqueUpdate: .1,
                    mineable: !0,
                    stackSize: 100,
                    damageValue: 1500,
                    affectedBy: c,
                    hasBlockBorder: !0
                };
                a = u.blockData;
                b = x.get("WATER");
                f = T.MAX_INT();
                b = {
                    name: b,
                    inCreativeInventory: !0,
                    climb: {
                        dampening: .8,
                        speed: .3
                    },
                    safe: .7,
                    uniqueUpdate: .2,
                    liquid: !0,
                    isTransparent: !0,
                    affectsLighting: !0,
                    placeable: !0,
                    replace: !0,
                    slippery: .8,
                    damageValue: f,
                    stackSize: 100,
                    dropDifferent: [{
                        iChance: Infinity,
                        amount: 0,
                        type: "water"
                    }],
                    hasBlockBorder: !0
                };
                a.h.water = b;
                a = u.blockData;
                b = x.get("LAVA");
                f = T.MAX_INT();
                b = {
                    name: b,
                    inCreativeInventory: !0,
                    climb: {
                        dampening: .8,
                        speed: .3
                    },
                    uniqueUpdate: 1,
                    liquid: !0,
                    isTransparent: !0,
                    placeable: !0,
                    replace: !0,
                    slippery: .7,
                    hurt: 20,
                    damageValue: f,
                    stackSize: 100,
                    dropDifferent: [{
                        iChance: Infinity,
                        amount: 0,
                        type: "lava"
                    }],
                    hasBlockBorder: !0
                };
                a.h.lava = b;
                a = u.blockData;
                b = x.get("CACTUS");
                c = new p;
                c.h.flowered = "true";
                f = new p;
                f.h.axe = 1;
                a.h.cactus = {
                    name: b,
                    inCreativeInventory: !0,
                    placeable: !0,
                    uniqueUpdate: 0,
                    isTransparent: !0,
                    mineable: !0,
                    hurt: 5,
                    stackSize: 100,
                    dropDifferent: [{
                        iChance: 1,
                        amount: 1,
                        type: "cactus"
                    }, {
                        iChance: 1,
                        amount: 1,
                        type: "cactus_flower",
                        dataConditions: c
                    }],
                    damageValue: 1500,
                    affectedBy: f
                };
                a = u.blockData;
                b = {
                    name: x.get("CACTUS_FLOWER"),
                    inCreativeInventory: !0,
                    stackSize: 100
                };
                a.h.cactus_flower = b;
                a = u.blockData;
                b = x.get("STONE");
                c = new p;
                c.h.pickaxe = 1;
                f = new p;
                f.h.pickaxe_wood = !0;
                f.h.pickaxe_stone = !0;
                f.h.pickaxe_iron = !0;
                f.h.pickaxe_diamond = !0;
                a.h.stone = {
                    name: b,
                    inCreativeInventory: !0,
                    placeable: !0,
                    placeableBG: !0,
                    solid: !0,
                    safe: 1,
                    mineable: !0,
                    damageValue: 3E3,
                    stackSize: 100,
                    dropDifferent: [{
                        iChance: 1,
                        amount: 1,
                        type: "cobblestone"
                    }],
                    affectedBy: c,
                    dropInclusion: f,
                    hasBlockBorder: !0
                };
                a = u.blockData;
                b = x.get("STONE");
                c = new p;
                c.h.pickaxe = 1;
                f = new p;
                f.h.pickaxe_wood = !0;
                f.h.pickaxe_stone = !0;
                f.h.pickaxe_iron = !0;
                f.h.pickaxe_diamond = !0;
                a.h.stone_slate = {
                    name: b,
                    inCreativeInventory: !0,
                    placeable: !0,
                    placeableBG: !0,
                    solid: !0,
                    safe: 1,
                    mineable: !0,
                    damageValue: 3E3,
                    stackSize: 100,
                    affectedBy: c,
                    dropInclusion: f,
                    hasBlockBorder: !0
                };
                a = u.blockData;
                b = x.get("STONE");
                c = new p;
                c.h.pickaxe = 1;
                f = new p;
                f.h.pickaxe_wood = !0;
                f.h.pickaxe_stone = !0;
                f.h.pickaxe_iron = !0;
                f.h.pickaxe_diamond = !0;
                a.h.stone_syenite = {
                    name: b,
                    inCreativeInventory: !0,
                    placeable: !0,
                    placeableBG: !0,
                    solid: !0,
                    safe: 1,
                    mineable: !0,
                    damageValue: 3E3,
                    stackSize: 100,
                    affectedBy: c,
                    dropInclusion: f,
                    hasBlockBorder: !0
                };
                a = u.blockData;
                b = x.get("STONE");
                c = new p;
                c.h.pickaxe = 1;
                f = new p;
                f.h.pickaxe_wood = !0;
                f.h.pickaxe_stone = !0;
                f.h.pickaxe_iron = !0;
                f.h.pickaxe_diamond = !0;
                a.h.stone_gneiss = {
                    name: b,
                    inCreativeInventory: !0,
                    placeable: !0,
                    placeableBG: !0,
                    solid: !0,
                    safe: 1,
                    mineable: !0,
                    damageValue: 3E3,
                    stackSize: 100,
                    affectedBy: c,
                    dropInclusion: f,
                    hasBlockBorder: !0
                };
                a = u.blockData;
                b = x.get("STONE");
                c = new p;
                c.h.pickaxe = 1;
                f = new p;
                f.h.pickaxe_wood = !0;
                f.h.pickaxe_stone = !0;
                f.h.pickaxe_iron = !0;
                f.h.pickaxe_diamond = !0;
                a.h.stone_basalt_column = {
                    name: b,
                    inCreativeInventory: !0,
                    placeable: !0,
                    placeableBG: !0,
                    solid: !0,
                    safe: 1,
                    mineable: !0,
                    damageValue: 3E3,
                    stackSize: 100,
                    dropDifferent: [{
                        iChance: 1,
                        amount: 1,
                        type: "cobblestone"
                    }],
                    affectedBy: c,
                    dropInclusion: f
                };
                a = u.blockData;
                b = x.get("GRAVEL");
                c = new p;
                c.h.shovel = 1;
                a.h.gravel = {
                    name: b,
                    inCreativeInventory: !0,
                    placeable: !0,
                    solid: !0,
                    safe: .9,
                    uniqueUpdate: .1,
                    mineable: !0,
                    stackSize: 100,
                    damageValue: 1500,
                    affectedBy: c,
                    hasBlockBorder: !0
                };
                a = u.blockData;
                b = x.get("VINE");
                c = new p;
                c.h.sword = 1;
                c.h.axe = 1;
                a.h.vine = {
                    name: b,
                    groups: ["lightBounce_green"],
                    inCreativeInventory: !0,
                    placeable: !0,
                    safe: .6,
                    uniqueUpdate: 0,
                    isTransparent: !0,
                    affectsLighting: !0,
                    mineable: !0,
                    replace: !0,
                    liquidReplace: !0,
                    slippery: .8,
                    climb: {
                        dampening: .9,
                        speed: .15
                    },
                    stackSize: 100,
                    damageValue: 750,
                    fuel: {
                        speed: 1,
                        amount: 30
                    },
                    affectedBy: c
                };
                a = u.blockData;
                b = x.get("VINES");
                c = new p;
                c.h.sword = 1;
                c.h.axe = 1;
                a.h.vines = {
                    name: b,
                    inCreativeInventory: !0,
                    groups: ["lightBounce_green"],
                    placeable: !0,
                    safe: .6,
                    uniqueUpdate: 0,
                    isTransparent: !0,
                    affectsLighting: !0,
                    mineable: !0,
                    replace: !0,
                    liquidReplace: !0,
                    slippery: .8,
                    climb: {
                        dampening: .9,
                        speed: .15
                    },
                    stackSize: 100,
                    damageValue: 750,
                    fuel: {
                        speed: 1,
                        amount: 30
                    },
                    affectedBy: c
                };
                a = u.blockData;
                b = x.get("VINES");
                c = new p;
                c.h.sword = 1;
                c.h.axe = 1;
                a.h.roots_plant = {
                    name: b,
                    itemTexture: "roots_plant1",
                    inCreativeInventory: !0,
                    placeable: !0,
                    uniqueUpdate: 0,
                    isTransparent: !0,
                    mineable: !0,
                    replace: !0,
                    liquidReplace: !0,
                    stackSize: 100,
                    damageValue: 500,
                    fuel: {
                        speed: 1,
                        amount: 20
                    },
                    affectedBy: c
                };
                a = u.blockData;
                b = x.get("GOLD_ORE");
                c = new p;
                c.h.pickaxe = 1;
                f = new p;
                f.h.pickaxe_iron = !0;
                f.h.pickaxe_diamond = !0;
                a.h.gold_ore = {
                    name: b,
                    inCreativeInventory: !0,
                    placeable: !0,
                    solid: !0,
                    safe: 1,
                    mineable: !0,
                    stackSize: 100,
                    damageValue: 6E3,
                    affectedBy: c,
                    smelt: {
                        speed: 1,
                        amount: 400,
                        into: "gold_ingot"
                    },
                    dropInclusion: f,
                    hasBlockBorder: !0
                };
                a = u.blockData;
                b = x.get("COAL_ORE");
                c = new p;
                c.h.pickaxe = 1;
                f = new p;
                f.h.pickaxe_wood = !0;
                f.h.pickaxe_stone = !0;
                f.h.pickaxe_iron = !0;
                f.h.pickaxe_diamond = !0;
                a.h.coal_ore = {
                    name: b,
                    inCreativeInventory: !0,
                    placeable: !0,
                    solid: !0,
                    safe: 1,
                    mineable: !0,
                    stackSize: 100,
                    damageValue: 5E3,
                    dropDifferent: [{
                        iChance: 1,
                        amount: 1,
                        type: "coal"
                    }],
                    affectedBy: c,
                    dropInclusion: f,
                    hasBlockBorder: !0
                };
                a = u.blockData;
                b = x.get("COPPER_ORE");
                c = new p;
                c.h.pickaxe = 1;
                f = new p;
                f.h.pickaxe_stone = !0;
                f.h.pickaxe_iron = !0;
                f.h.pickaxe_diamond = !0;
                a.h.copper_ore = {
                    name: b,
                    inCreativeInventory: !0,
                    placeable: !0,
                    solid: !0,
                    safe: 1,
                    mineable: !0,
                    stackSize: 100,
                    damageValue: 5E3,
                    affectedBy: c,
                    lowestSmelter: 1,
                    smelt: {
                        speed: 1,
                        amount: 300,
                        into: "copper_ingot"
                    },
                    dropInclusion: f,
                    hasBlockBorder: !0
                };
                a = u.blockData;
                b = x.get("DIAMOND_ORE");
                c = new p;
                c.h.pickaxe = 1;
                f = new p;
                f.h.pickaxe_iron = !0;
                f.h.pickaxe_diamond = !0;
                a.h.diamond_ore = {
                    name: b,
                    inCreativeInventory: !0,
                    placeable: !0,
                    solid: !0,
                    safe: 1,
                    mineable: !0,
                    stackSize: 100,
                    damageValue: 6E3,
                    affectedBy: c,
                    lowestSmelter: 1,
                    smelt: {
                        speed: 1,
                        amount: 450,
                        into: "diamond"
                    },
                    dropInclusion: f,
                    hasBlockBorder: !0
                };
                a = u.blockData;
                b = x.get("IRON_ORE");
                c = new p;
                c.h.pickaxe = 1;
                f = new p;
                f.h.pickaxe_stone = !0;
                f.h.pickaxe_iron = !0;
                f.h.pickaxe_diamond = !0;
                a.h.iron_ore = {
                    name: b,
                    inCreativeInventory: !0,
                    placeable: !0,
                    solid: !0,
                    safe: 1,
                    mineable: !0,
                    stackSize: 100,
                    damageValue: 5500,
                    affectedBy: c,
                    lowestSmelter: 1,
                    smelt: {
                        speed: 1,
                        amount: 350,
                        into: "iron_ingot"
                    },
                    dropInclusion: f,
                    hasBlockBorder: !0
                };
                a = u.blockData;
                b = x.get("IRON_BLOCK");
                c = new p;
                c.h.pickaxe = 1;
                f = new p;
                f.h.pickaxe_iron = !0;
                f.h.pickaxe_diamond = !0;
                a.h.iron_block = {
                    name: b,
                    inCreativeInventory: !0,
                    placeable: !0,
                    placeableBG: !0,
                    solid: !0,
                    safe: 1,
                    mineable: !0,
                    stackSize: 100,
                    damageValue: 6E3,
                    affectedBy: c,
                    dropInclusion: f
                };
                a = u.blockData;
                b = x.get("GOLD_BLOCK");
                c = new p;
                c.h.pickaxe = 1;
                f = new p;
                f.h.pickaxe_iron = !0;
                f.h.pickaxe_diamond = !0;
                a.h.gold_block = {
                    name: b,
                    inCreativeInventory: !0,
                    placeable: !0,
                    placeableBG: !0,
                    solid: !0,
                    safe: 1,
                    mineable: !0,
                    stackSize: 100,
                    damageValue: 6E3,
                    affectedBy: c,
                    dropInclusion: f
                };
                a = u.blockData;
                b = x.get("COPPER_BLOCK");
                c = new p;
                c.h.pickaxe = 1;
                f = new p;
                f.h.pickaxe_iron = !0;
                f.h.pickaxe_diamond = !0;
                a.h.copper_block = {
                    name: b,
                    inCreativeInventory: !0,
                    placeable: !0,
                    placeableBG: !0,
                    solid: !0,
                    safe: 1,
                    mineable: !0,
                    stackSize: 100,
                    damageValue: 6E3,
                    affectedBy: c,
                    dropInclusion: f
                };
                a = u.blockData;
                b = x.get("SANDSTONE");
                c = new p;
                c.h.pickaxe = 1;
                f = new p;
                f.h.pickaxe_wood = !0;
                f.h.pickaxe_stone = !0;
                f.h.pickaxe_iron = !0;
                f.h.pickaxe_diamond = !0;
                a.h.sandstone = {
                    name: b,
                    inCreativeInventory: !0,
                    placeable: !0,
                    placeableBG: !0,
                    solid: !0,
                    safe: 1,
                    mineable: !0,
                    stackSize: 100,
                    damageValue: 2500,
                    affectedBy: c,
                    dropInclusion: f,
                    hasBlockBorder: !0
                };
                a = u.blockData;
                b = {
                    name: x.get("WOOL"),
                    inCreativeInventory: !0,
                    creativeTypes: "white;grey;green;black;cyan;blue;light green;pink;red;orange;yellow;violet;purple;brown".split(";"),
                    placeable: !0,
                    placeableBG: !0,
                    solid: !0,
                    safe: 1,
                    mineable: !0,
                    stackSize: 100,
                    damageValue: 1E3,
                    fuel: {
                        speed: 1,
                        amount: 100
                    }
                };
                a.h.wool = b;
                a = u.blockData;
                b = x.get("LADDER");
                c = new p;
                c.h.axe = 1;
                a.h.ladder_wood = {
                    name: b,
                    inCreativeInventory: !0,
                    isTransparent: !0,
                    placeable: !0,
                    solid: !1,
                    safe: .8,
                    slippery: .7,
                    climb: {
                        dampening: .9,
                        speed: .15
                    },
                    mineable: !0,
                    stackSize: 50,
                    damageValue: 1500,
                    affectedBy: c,
                    fuel: {
                        speed: 1,
                        amount: 150
                    }
                };
                a = u.blockData;
                b = {
                    name: x.get("BUCKET_EMPTY"),
                    inCreativeInventory: !0,
                    placeSpecial: !0,
                    stackSize: 25
                };
                a.h.bucket_empty = b;
                a = u.blockData;
                b = {
                    name: x.get("BUCKET_WATER"),
                    inCreativeInventory: !0,
                    placeSpecial: !0,
                    stackSize: 1
                };
                a.h.bucket_water = b;
                a = u.blockData;
                b = {
                    name: x.get("BUCKET_LAVA"),
                    inCreativeInventory: !0,
                    placeSpecial: !0,
                    stackSize: 1,
                    fuel: {
                        speed: 3,
                        amount: 300
                    }
                };
                a.h.bucket_lava = b;
                a = u.blockData;
                b = {
                    name: x.get("BED"),
                    itemTexture: "bed_drop",
                    inCreativeInventory: !0,
                    placeSpecial: !0,
                    stackSize: 1,
                    fuel: {
                        speed: 1,
                        amount: 50
                    }
                };
                a.h.bed = b;
                c = a = u.blockData;
                b = {
                    name: x.get("NOTHING"),
                    isTransparent: !0,
                    replace: !0,
                    liquidReplace: !0,
                    dropDifferent: [{
                        iChance: Infinity,
                        amount: 0,
                        type: ""
                    }],
                    damageValue: -1
                };
                c.h[""] = b;
                a.h.air = b;
                u.redesignateBlockGroups()
            }
            ;
            var D = function() {};
            g.CraftingRecipes = D;
            D.__name__ = "CraftingRecipes";
            D.initRecipes = function() {
                D.recipes.splice(0, D.recipes.length);
                D.recipes.push({
                    output: new Z("planks_pine",4),
                    input: [[{
                        type: "wood_pine",
                        count: 1
                    }]]
                });
                D.recipes.push({
                    output: new Z("planks_birch",4),
                    input: [[{
                        type: "wood_birch",
                        count: 1
                    }]]
                });
                D.recipes.push({
                    output: new Z("planks_orange",4),
                    input: [[{
                        type: "wood_orange",
                        count: 1
                    }]]
                });
                D.recipes.push({
                    output: new Z("stick",4),
                    input: [[{
                        type: "~planks",
                        count: 1
                    }]]
                });
                D.recipes.push({
                    output: new Z("chest",1),
                    input: [[{
                        type: "~planks",
                        count: 10
                    }]]
                });
                D.recipes.push({
                    output: new Z("sand_gravel",1),
                    input: [[{
                        type: "sand",
                        count: 1
                    }], [{
                        type: "rock",
                        count: 2
                    }]]
                });
                D.recipes.push({
                    output: new Z("dirt_gravel",1),
                    input: [[{
                        type: "dirt",
                        count: 1
                    }], [{
                        type: "rock",
                        count: 2
                    }]]
                });
                D.recipes.push({
                    output: new Z("cobblestone",1),
                    input: [[{
                        type: "rock",
                        count: 4
                    }]]
                });
                D.recipes.push({
                    output: new Z("rock",4),
                    input: [[{
                        type: "cobblestone",
                        count: 1
                    }]]
                });
                D.recipes.push({
                    output: new Z("torch",2),
                    input: [[{
                        type: "~coal",
                        count: 1
                    }, {
                        type: "flower_bulb",
                        count: 1
                    }], [{
                        type: "stick",
                        count: 1
                    }]]
                });
                D.recipes.push({
                    output: new Z("pickaxe_wood",1),
                    input: [[{
                        type: "~planks",
                        count: 4
                    }], [{
                        type: "stick",
                        count: 4
                    }]]
                });
                D.recipes.push({
                    output: new Z("pickaxe_stone",1),
                    input: [[{
                        type: "rock",
                        count: 8
                    }], [{
                        type: "stick",
                        count: 4
                    }]]
                });
                D.recipes.push({
                    output: new Z("pickaxe_iron",1),
                    input: [[{
                        type: "iron_ingot",
                        count: 6
                    }], [{
                        type: "stick",
                        count: 4
                    }]]
                });
                D.recipes.push({
                    output: new Z("pickaxe_diamond",1),
                    input: [[{
                        type: "diamond",
                        count: 5
                    }], [{
                        type: "stick",
                        count: 4
                    }]]
                });
                D.recipes.push({
                    output: new Z("shovel_wood",1),
                    input: [[{
                        type: "~planks",
                        count: 4
                    }], [{
                        type: "stick",
                        count: 4
                    }]]
                });
                D.recipes.push({
                    output: new Z("shovel_stone",1),
                    input: [[{
                        type: "rock",
                        count: 8
                    }], [{
                        type: "stick",
                        count: 4
                    }]]
                });
                D.recipes.push({
                    output: new Z("shovel_iron",1),
                    input: [[{
                        type: "iron_ingot",
                        count: 6
                    }], [{
                        type: "stick",
                        count: 4
                    }]]
                });
                D.recipes.push({
                    output: new Z("shovel_diamond",1),
                    input: [[{
                        type: "diamond",
                        count: 5
                    }], [{
                        type: "stick",
                        count: 4
                    }]]
                });
                D.recipes.push({
                    output: new Z("axe_wood",1),
                    input: [[{
                        type: "~planks",
                        count: 4
                    }], [{
                        type: "stick",
                        count: 4
                    }]]
                });
                D.recipes.push({
                    output: new Z("axe_stone",1),
                    input: [[{
                        type: "rock",
                        count: 8
                    }], [{
                        type: "stick",
                        count: 4
                    }]]
                });
                D.recipes.push({
                    output: new Z("axe_iron",1),
                    input: [[{
                        type: "iron_ingot",
                        count: 6
                    }], [{
                        type: "stick",
                        count: 4
                    }]]
                });
                D.recipes.push({
                    output: new Z("axe_diamond",1),
                    input: [[{
                        type: "diamond",
                        count: 5
                    }], [{
                        type: "stick",
                        count: 4
                    }]]
                });
                D.recipes.push({
                    output: new Z("sword_wood",1),
                    input: [[{
                        type: "~planks",
                        count: 4
                    }], [{
                        type: "stick",
                        count: 4
                    }]]
                });
                D.recipes.push({
                    output: new Z("sword_stone",1),
                    input: [[{
                        type: "rock",
                        count: 8
                    }], [{
                        type: "stick",
                        count: 4
                    }]]
                });
                D.recipes.push({
                    output: new Z("sword_iron",1),
                    input: [[{
                        type: "iron_ingot",
                        count: 6
                    }], [{
                        type: "stick",
                        count: 4
                    }]]
                });
                D.recipes.push({
                    output: new Z("sword_diamond",1),
                    input: [[{
                        type: "diamond",
                        count: 5
                    }], [{
                        type: "stick",
                        count: 4
                    }]]
                });
                var a = new p;
                a.h.type = "white";
                D.recipes.push({
                    output: new Z("wool",1,a),
                    input: [[{
                        type: "string",
                        count: 10
                    }, {
                        type: "cotton",
                        count: 5
                    }]]
                });
                D.recipes.push({
                    output: new Z("campfire",1),
                    input: [[{
                        type: "rock",
                        count: 12
                    }], [{
                        type: "~wood",
                        count: 4
                    }, {
                        type: "~planks",
                        count: 16
                    }]]
                });
                D.recipes.push({
                    output: new Z("iron_block",1),
                    input: [[{
                        type: "iron_ingot",
                        count: 10
                    }]]
                });
                D.recipes.push({
                    output: new Z("gold_block",1),
                    input: [[{
                        type: "gold_ingot",
                        count: 10
                    }]]
                });
                D.recipes.push({
                    output: new Z("copper_block",1),
                    input: [[{
                        type: "copper_ingot",
                        count: 10
                    }]]
                });
                D.recipes.push({
                    output: new Z("iron_ingot",10),
                    input: [[{
                        type: "iron_block",
                        count: 1
                    }]]
                });
                D.recipes.push({
                    output: new Z("gold_ingot",10),
                    input: [[{
                        type: "gold_block",
                        count: 1
                    }]]
                });
                D.recipes.push({
                    output: new Z("copper_ingot",10),
                    input: [[{
                        type: "copper_block",
                        count: 1
                    }]]
                });
                D.recipes.push({
                    output: new Z("coin_copper",5),
                    input: [[{
                        type: "copper_ingot",
                        count: 1
                    }]]
                });
                D.recipes.push({
                    output: new Z("coin_gold",5),
                    input: [[{
                        type: "gold_ingot",
                        count: 1
                    }]]
                });
                D.recipes.push({
                    output: new Z("ladder_wood",1),
                    input: [[{
                        type: "stick",
                        count: 5
                    }]]
                });
                D.recipes.push({
                    output: new Z("stone_bricks",1),
                    input: [[{
                        type: "stone",
                        count: 1
                    }]]
                });
                D.recipes.push({
                    output: new Z("stone_bricks_x",1),
                    input: [[{
                        type: "stone",
                        count: 1
                    }]]
                });
                D.recipes.push({
                    output: new Z("bucket_empty",1),
                    input: [[{
                        type: "iron_ingot",
                        count: 4
                    }]]
                });
                D.recipes.push({
                    output: new Z("door_wood_pine",1),
                    input: [[{
                        type: "planks_pine",
                        count: 10
                    }]]
                });
                D.recipes.push({
                    output: new Z("door_wood_birch",1),
                    input: [[{
                        type: "planks_birch",
                        count: 10
                    }]]
                });
                D.recipes.push({
                    output: new Z("door_wood_orange",1),
                    input: [[{
                        type: "planks_orange",
                        count: 10
                    }]]
                });
                D.recipes.push({
                    output: new Z("bed",1),
                    input: [[{
                        type: "~planks",
                        count: 5
                    }], [{
                        type: "wool",
                        count: 3
                    }]]
                })
            }
            ;
            var pa = function(a, b) {
                this.r = new RegExp(a,b.split("u").join(""))
            };
            g.EReg = pa;
            pa.__name__ = "EReg";
            pa.prototype = {
                match: function(a) {
                    this.r.global && (this.r.lastIndex = 0);
                    this.r.m = this.r.exec(a);
                    this.r.s = a;
                    return null != this.r.m
                },
                __class__: pa
            };
            var sa = function() {};
            g.Fonts = sa;
            sa.__name__ = "Fonts";
            sa.get_jaggedDreams = function() {
                if (null == sa.jaggedDreams) {
                    var a = "ABCDEFGHIJKLMNOP\r\n\t\t\t\tQRSTUVWXYZ \r\n\t\t\t\tabcdefghijklmnop\r\n\t\t\t\tqrstuvwxyz\r\n\t\t\t\t0123456789\r\n\t\t\t\t~!@#$%^&*()_-+=[\r\n\t\t\t\t]{}|\\;:'\",.<>?/`\r\n\t\t\t\t\u2122\r\n\t\t\t\t\r\n\t\t\t\t\u00c4\u00c1\u00c0\u00c3\u00c2\u00c5\u00c6\u00c7\u0152\u00df\u00cb\u00c9\u00c8\u1ebc\u00ca\u00cf\r\n\t\t\t\t\u00cd\u00cc\u0128\u00ce\u00d1\u00d6\u00d3\u00d2\u00d5\u00d4\u00d8\u00dc\u00da\u00d9\u0168\u00db\r\n\t\t\t\t\u0178\r\n\t\t\t\t\u00e4\u00e1\u00e0\u00e3\u00e2\u00e5\u00e6\u00e7\u00eb\u00e9\u00e8\u1ebd\u00ea\u00ef\u00ed\u00ec\r\n\t\t\t\t\u0129\u00ee\u00f1\u00f6\u00f3\u00f2\u00f5\u00f4\u00f8\u0153\u00fc\u00fa\u00f9\u0169\u00fb\u00ff".replace(/[\t\r]/g, "")
                      , b = [13, 13, 13, 13, 13, 12, 13, 13, 6, 13, 13, 14, 19, 13, 13, 13, 13, 13, 13, 12, 13, 13, 19, 13, 13, 13, 11, 13, 13, 13, 13, 13, 11, 13, 13, 6, 8, 13, 6, 19, 13, 13, 13, 13, 11, 13, 12, 13, 13, 19, 13, 13, 13, 13, 11, 13, 13, 13, 13, 13, 13, 13, 13, 18, 6, 15, 17, 13, 27, 10, 13, 15, 9, 9, 21, 13, 17, 17, 12, 12, 12, 12, 6, 14, 6, 6, 6, 11, 6, 6, 15, 15, 13, 14, 8, 20, 13, 13, 13, 14, 13, 13, 19, 13, 19, 13, 13, 13, 13, 14, 13, 11, 8, 8, 11, 10, 14, 13, 13, 13, 14, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 13, 13, 19, 13, 13, 13, 13, 13, 13, 11, 8, 8, 9, 10, 14, 13, 13, 13, 14, 13, 13, 19, 13, 13, 13, 13, 13, 13];
                    sa.jaggedDreams = new xd(xa.getImage("font_jagged_dreams"),null,a,14,16);
                    for (var c = 0, f = 0, h = a.length; f < h; ) {
                        var q = f++;
                        "\n" != a.charAt(q) && (sa.jaggedDreams.glyphs.h[a.charAt(q)].backOffset = b[c],
                        ++c)
                    }
                    sa.jaggedDreams.glyphs.h.j.frontOffset = 7
                }
                return sa.jaggedDreams
            }
            ;
            var Qa = function(a) {
                this.date = a.h.date;
                this.dateCreated = a.h.dateCreated;
                this.createdVersion = a.h.createdVersion;
                this.lastOpenedVersion = a.h.lastOpenedVersion;
                this.name = a.h.name;
                this.visibleName = a.h.visibleName;
                this.type = a.h.type;
                this.seed = a.h.seed
            };
            g.SaveFileMeta = Qa;
            Qa.__name__ = "SaveFileMeta";
            Qa.prototype = {
                serialize: function() {
                    var a = new p;
                    a.h.date = this.date;
                    a.h.dateCreated = this.dateCreated;
                    a.h.createdVersion = this.createdVersion;
                    a.h.lastOpenedVersion = this.lastOpenedVersion;
                    a.h.name = this.name;
                    a.h.visibleName = this.visibleName;
                    a.h.type = this.type;
                    a.h.seed = this.seed;
                    return a
                },
                __class__: Qa
            };
            var J = function() {};
            g.GlobalSave = J;
            J.__name__ = "GlobalSave";
            J.loadSettings = function() {
                new uc("Settings","MineBlocks2",function(a) {
                    J.localStorage = a;
                    null == a.data.h.saveList && (a.data.h.saveList = new p);
                    a = ja.__cast(a.data.h.saveList, p).h;
                    for (var b = Object.keys(a), c = b.length, f = 0; f < c; ) {
                        var h = b[f++];
                        J.saveList.h[h] = new Qa(a[h])
                    }
                    J.updateSaveList();
                    a = J.getSettings();
                    J.pixelLightingFactor = a.h.pixelLightingFactor;
                    J.blockBorders = a.h.blockBorders;
                    J.particleQuality = a.h.particleQuality;
                    J.mouseBlockBehavior = a.h.mouseBlockBehavior;
                    J.setFpsLimit(a.h.fpsLimit);
                    null != x.languageMap.h[a.h.selectedLanguage] ? x.loadByCode(a.h.selectedLanguage) : (ha.trace("Language " + H.string(a.h.selectedLanguage) + " is not found", {
                        fileName: "src/GlobalSave.hx",
                        lineNumber: 97,
                        className: "GlobalSave",
                        methodName: "loadSettings"
                    }),
                    x.loadEnglish());
                    if (null != a.h.texturePack)
                        try {
                            var q = C.inputTextures
                              , I = (new hb(512,256,0)).setPixels(Gb.decode(a.h.texturePack));
                            q.h["textures.png"] = I
                        } catch (Zd) {
                            q = ea.caught(Zd),
                            ha.trace("Failed to load texture pack from settings.", {
                                fileName: "src/GlobalSave.hx",
                                lineNumber: 108,
                                className: "GlobalSave",
                                methodName: "loadSettings",
                                customParams: [q]
                            }),
                            a.h.texturePack = null
                        }
                }
                )
            }
            ;
            J.setFpsLimit = function(a) {
                J.fpsLimit = a;
                0 == a ? d.Instance.__window.__backend.setFrameRate(144) : d.Instance.__window.__backend.setFrameRate(a)
            }
            ;
            J.getSettings = function() {
                null == J.localStorage.data.h.settings && (J.localStorage.data.h.settings = new p);
                for (var a = J.localStorage.data.h.settings, b = J.defaultSettings.h, c = Object.keys(b), f = c.length, h = 0; h < f; ) {
                    var q = c[h++];
                    null == a.h[q] && (a.h[q] = b[q])
                }
                return a
            }
            ;
            J.saveSettings = function() {
                var a = J.getSettings();
                a.h.pixelLightingFactor = J.pixelLightingFactor;
                a.h.blockBorders = J.blockBorders;
                a.h.particleQuality = J.particleQuality;
                a.h.mouseBlockBehavior = J.mouseBlockBehavior;
                a.h.selectedLanguage = J.selectedLanguage;
                a.h.fpsLimit = J.fpsLimit;
                J.localStorage.save()
            }
            ;
            J.saveSaveList = function() {
                for (var a = new p, b = J.saveList.h, c = Object.keys(b), f = c.length, h = 0; h < f; ) {
                    var q = c[h++]
                      , I = b[q].serialize();
                    a.h[q] = I
                }
                J.localStorage.data.h.saveList = a;
                J.localStorage.save()
            }
            ;
            J.saveTexturePack = function(a) {
                var b = J.getSettings();
                a = null == a ? null : Gb.encode(a.getPixels());
                b.h.texturePack = a;
                J.localStorage.save()
            }
            ;
            J.updateSaveList = function() {
                J.organizedSaveList.splice(0, J.organizedSaveList.length);
                for (var a = Object.keys(J.saveList.h), b = a.length, c = 0; c < b; )
                    J.organizedSaveList.push(a[c++]);
                J.organizedSaveList.sort(function(a, b) {
                    a = J.saveList.h[a];
                    b = J.saveList.h[b];
                    return null == a ? 1 : null == b ? -1 : a.date < b.date ? 1 : a.date > b.date ? -1 : 0
                })
            }
            ;
            var K = function() {};
            g.HxOverrides = K;
            K.__name__ = "HxOverrides";
            K.strDate = function(a) {
                switch (a.length) {
                case 8:
                    a = a.split(":");
                    var b = new Date;
                    b.setTime(0);
                    b.setUTCHours(a[0]);
                    b.setUTCMinutes(a[1]);
                    b.setUTCSeconds(a[2]);
                    return b;
                case 10:
                    return a = a.split("-"),
                    new Date(a[0],a[1] - 1,a[2],0,0,0);
                case 19:
                    return a = a.split(" "),
                    b = a[0].split("-"),
                    a = a[1].split(":"),
                    new Date(b[0],b[1] - 1,b[2],a[0],a[1],a[2]);
                default:
                    throw ea.thrown("Invalid date format : " + a);
                }
            }
            ;
            K.cca = function(a, b) {
                a = a.charCodeAt(b);
                if (a == a)
                    return a
            }
            ;
            K.substr = function(a, b, c) {
                if (null == c)
                    c = a.length;
                else if (0 > c)
                    if (0 == b)
                        c = a.length + c;
                    else
                        return "";
                return a.substr(b, c)
            }
            ;
            K.remove = function(a, b) {
                b = a.indexOf(b);
                if (-1 == b)
                    return !1;
                a.splice(b, 1);
                return !0
            }
            ;
            K.now = function() {
                return Date.now()
            }
            ;
            var ka = function() {};
            g.InterstitialManager = ka;
            ka.__name__ = "InterstitialManager";
            ka.connect = function(a, b) {
                ka.onSuccess = a;
                ka.onFail = b;
                if (null != window.CrazyGames)
                    try {
                        if (null != window.CrazyGames.CrazySDK.getInstance())
                            return
                    } catch (c) {}
                -1 != window.location.href.indexOf(".ungrounded.net") ? ka.waitingForNG = !0 : ka.initializeIFrame()
            }
            ;
            ka.initializeIFrame = function() {
                var a = window.location.href;
                ka.iF = window.document.createElement("iframe");
                a = encodeURIComponent(a);
                ka.iF.src = "https://mineblocks.com/2/scripts/if?ref=" + a;
                ka.iF.style.visibility = "hidden";
                ka.iF.style.pointerEvents = "none";
                ka.iF.style.position = "absolute";
                ka.iF.style.width = "100%";
                ka.iF.style.height = "100%";
                ka.iF.style.top = "0";
                ka.iF.style.left = "0";
                ka.iF.style.border = "0";
                window.document.querySelector("body").appendChild(ka.iF);
                window.addEventListener("message", function(a) {
                    "https://mineblocks.com" == a.origin && ("adStartCallback" == a.data ? (ka.iF.style.visibility = "visible",
                    ka.iF.style.pointerEvents = "auto",
                    A.adStartCallback()) : "adEndCallback" == a.data && (ka.iF.style.visibility = "hidden",
                    ka.iF.style.pointerEvents = "none",
                    A.adEndCallback()))
                }, !1);
                ka.iF.onload = function(a) {
                    try {
                        if (ka.loaded = !0,
                        null != ka.onSuccess)
                            ka.onSuccess()
                    } catch (c) {
                        ha.trace("iF failed during success", {
                            fileName: "src/InterstitialManager.hx",
                            lineNumber: 68,
                            className: "InterstitialManager",
                            methodName: "initializeIFrame"
                        }),
                        ka.onFail()
                    }
                }
                ;
                ka.iF.onerror = function(a) {
                    ka.loaded = !1;
                    ha.trace("iF failed", {
                        fileName: "src/InterstitialManager.hx",
                        lineNumber: 75,
                        className: "InterstitialManager",
                        methodName: "initializeIFrame"
                    });
                    if (null != ka.onFail)
                        ka.onFail()
                }
            }
            ;
            ka.run = function() {
                ka.loaded && null != ka.iF && ka.iF.contentWindow.postMessage("runInterstitial", "https://mineblocks.com")
            }
            ;
            var Z = function(a, b, c) {
                null == b && (b = 0);
                null == a && (a = "air");
                this.data = null;
                this.count = 0;
                this.type = "air";
                this.type = a;
                this.count = b;
                this.data = c
            };
            g.Item = Z;
            Z.__name__ = "Item";
            Z.deserialize = function(a) {
                return new Z(a.h.type,a.h.count,a.h.data)
            }
            ;
            Z.prototype = {
                getDamage: function() {
                    if (1 != this.getBlockInfo().tool || null == this.data)
                        return 0;
                    var a = this.data.h.damage;
                    return null != a ? a : 0
                },
                damage: function(a) {
                    if (1 == this.getBlockInfo().tool) {
                        null == this.data && (this.data = new p);
                        null == this.data.h.damage && (this.data.h.damage = 0);
                        var b = this.data;
                        b.h.damage += a;
                        a = this.data.h.damage;
                        b = this.getBlockInfo().damageValue;
                        a >= (null != b ? b : 0) && this.empty()
                    }
                },
                getBlockInfo: function() {
                    return u.get(this.type)
                },
                empty: function() {
                    this.type = "air";
                    this.count = 0;
                    this.data = new p
                },
                clone: function() {
                    return Z.deserialize(this.serialize())
                },
                serialize: function() {
                    var a = new p;
                    a.h.type = this.type;
                    a.h.count = this.count;
                    if (null == this.data)
                        var b = null;
                    else {
                        b = new p;
                        for (var c = Object.keys(this.data.h), f = c.length, h = 0; h < f; ) {
                            var q = c[h++];
                            b.h[q] = this.data.h[q]
                        }
                    }
                    a.h.data = b;
                    return a
                },
                fromObject: function(a) {
                    this.type = a.h.type;
                    this.count = a.h.count;
                    this.data = a.h.data;
                    return this
                },
                __class__: Z
            };
            var R = function() {};
            g.Inventory = R;
            R.__name__ = "Inventory";
            R.emptyItem = function() {
                return new Z
            }
            ;
            R.resetInventory = function() {
                var a = [];
                a.push(R.emptyItem());
                a.push(R.emptyItem());
                a.push(R.emptyItem());
                a.push(R.emptyItem());
                a.push(R.emptyItem());
                a.push(R.emptyItem());
                a.push(R.emptyItem());
                a.push(R.emptyItem());
                a.push(R.emptyItem());
                a.push(R.emptyItem());
                a.push(R.emptyItem());
                a.push(R.emptyItem());
                a.push(R.emptyItem());
                a.push(R.emptyItem());
                a.push(R.emptyItem());
                a.push(R.emptyItem());
                a.push(R.emptyItem());
                a.push(R.emptyItem());
                a.push(R.emptyItem());
                a.push(R.emptyItem());
                a.push(R.emptyItem());
                a.push(R.emptyItem());
                a.push(R.emptyItem());
                a.push(R.emptyItem());
                a.push(R.emptyItem());
                a.push(R.emptyItem());
                a.push(R.emptyItem());
                a.push(R.emptyItem());
                a.push(R.emptyItem());
                a.push(R.emptyItem());
                a.push(R.emptyItem());
                a.push(R.emptyItem());
                a.push(R.emptyItem());
                a.push(R.emptyItem());
                a.push(R.emptyItem());
                a.push(R.emptyItem());
                a.push(R.emptyItem());
                a.push(R.emptyItem());
                a.push(R.emptyItem());
                a.push(R.emptyItem());
                return a
            }
            ;
            R.calcInventorySlotCoords = function() {
                for (var a = 129, b = 0; 4 > b; )
                    a = 1 == b++ ? a - 34 : a - 32,
                    R.inventorySlotCoords.push({
                        x: 5,
                        y: a
                    }),
                    R.inventorySlotCoords.push({
                        x: 37,
                        y: a
                    }),
                    R.inventorySlotCoords.push({
                        x: 69,
                        y: a
                    }),
                    R.inventorySlotCoords.push({
                        x: 101,
                        y: a
                    }),
                    R.inventorySlotCoords.push({
                        x: 133,
                        y: a
                    }),
                    R.inventorySlotCoords.push({
                        x: 165,
                        y: a
                    }),
                    R.inventorySlotCoords.push({
                        x: 197,
                        y: a
                    }),
                    R.inventorySlotCoords.push({
                        x: 229,
                        y: a
                    }),
                    R.inventorySlotCoords.push({
                        x: 261,
                        y: a
                    }),
                    R.inventorySlotCoords.push({
                        x: 293,
                        y: a
                    })
            }
            ;
            var ib = function() {};
            g.Lambda = ib;
            ib.__name__ = "Lambda";
            ib.exists = function(a, b) {
                for (a = w(a); a.hasNext(); )
                    if (b(a.next()))
                        return !0;
                return !1
            }
            ;
            var x = function() {};
            g.Language = x;
            x.__name__ = "Language";
            x.get = function(a) {
                null == x.strings.h[a] && (ha.trace("Error: Language string not found: " + a, {
                    fileName: "src/Language.hx",
                    lineNumber: 33,
                    className: "Language",
                    methodName: "get"
                }),
                x.strings.h[a] = a);
                return x.strings.h[a]
            }
            ;
            x.initLanguage = function() {
                for (var a = 0, b = x.languageList.length; a < b; ) {
                    var c = a++;
                    x.languageMap.h[x.languageList[c].file] = x.languageList[c]
                }
                x.loadEnglish()
            }
            ;
            x.loadByCode = function(a) {
                J.selectedLanguage = a;
                "en-US" != a && x.loadLanguage("assets/languages/en-US.json");
                x.loadLanguage("assets/languages/" + a + ".json")
            }
            ;
            x.loadEnglish = function() {
                J.selectedLanguage = "en-US";
                x.loadLanguage("assets/languages/en-US.json")
            }
            ;
            x.loadLanguage = function(a) {
                try {
                    var b = JSON.parse(la.getText(a));
                    b.strings = Ya.mappifyObjectsInMap(b.strings)
                } catch (je) {
                    ha.trace("Error: Language file couldn't be loaded: " + a, {
                        fileName: "src/Language.hx",
                        lineNumber: 62,
                        className: "Language",
                        methodName: "loadLanguage"
                    });
                    return
                }
                a = b;
                -1 == x.languages.indexOf(a.info.language) && x.languages.push(a.info.language);
                b = Object.keys(a.strings.h);
                for (var c = b.length, f = 0; f < c; )
                    for (var h = b[f++], q = Object.keys(a.strings.h[h].h), I = q.length, d = 0; d < I; ) {
                        var g = q[d++];
                        x.strings.h[g] = a.strings.h[h].h[g]
                    }
                x.version = x.get("VERSION_ALPHA") + " 0.8.1";
                u.initBlockData();
                da.initObjectData()
            }
            ;
            var $a = function() {};
            g.Light = $a;
            $a.__name__ = "Light";
            $a.deserialize = function(a) {
                var b = new $a;
                b.x = a.h.x;
                b.y = a.h.y;
                b.lightSourceType = a.h.type;
                var c = a.h.origin;
                null != c && (b.origin = {
                    type: c.h.type,
                    x: c.h.x,
                    y: c.h.y,
                    id: c.h.id
                });
                b.lightSourceSize = a.h.size;
                b.lightSourceColor = a.h.color;
                return b
            }
            ;
            $a.prototype = {
                serialize: function() {
                    if (null == this.origin)
                        var a = null;
                    else {
                        var b = new p;
                        b.h.type = this.origin.type;
                        b.h.x = this.origin.x;
                        b.h.y = this.origin.y;
                        b.h.id = this.origin.id;
                        a = b
                    }
                    b = new p;
                    b.h.x = this.x;
                    b.h.y = this.y;
                    b.h.origin = a;
                    b.h.type = this.lightSourceType;
                    b.h.size = this.lightSourceSize;
                    b.h.color = this.lightSourceColor;
                    return b
                },
                __class__: $a
            };
            var W = function(a, b) {
                null == b && (b = 0);
                null == a && (a = 0);
                this.x = this.y = 0;
                this.x = a;
                this.y = b
            };
            g["lemongine.Point"] = W;
            W.__name__ = "lemongine.Point";
            W.prototype = {
                set: function(a, b) {
                    null == b && (b = 0);
                    null == a && (a = 0);
                    this.x = a;
                    this.y = b;
                    return this
                },
                add: function(a) {
                    this.x += a.x;
                    this.y += a.y;
                    return this
                },
                __class__: W
            };
            var P = function() {};
            g.Lighting = P;
            P.__name__ = "Lighting";
            P.init = function() {
                P.image = new hb(360,360,-65281,!0);
                P.entity = new ia(P.image,Ia.NORMAL,vc.getShader());
                P.entity.isTransparent = !0;
                P.entity.layer = 18;
                P.entity.customBlendFunc = [A.gl.DST_COLOR, A.gl.ZERO, A.gl.ZERO, A.gl.ONE];
                P.entity.setUniform("blockiness", T.clamp(1, 16, 16 / J.pixelLightingFactor));
                for (var a = 0; 900 > a; )
                    P.slots[a++] = {
                        key: -1,
                        tick: -1
                    };
                P.sky = new $a;
                P.sky.x = 0;
                P.sky.y = 0;
                P.sky.origin = null;
                P.sky.lightSourceType = "sky";
                P.sky.lightSourceSize = 5;
                P.sky.lightSourceColor = 16772846
            }
            ;
            P.getUV = function(a) {
                return P.point.set(a % 30 * 12, 12 * Math.floor(a / 30))
            }
            ;
            P.renderChunk = function(a, b) {
                P.chunksLitThisFrame++;
                if (-1 == a.lightingIndex || P.slots[a.lightingIndex].key != a.lightingKey) {
                    for (; P.slots[P.currentIndex].tick == d.Instance.tick; )
                        P.currentIndex++,
                        900 <= P.currentIndex && (P.currentIndex = 0);
                    P.slots[P.currentIndex].key = a.lightingKey = ++Va.lightingKeyIndex;
                    P.slots[P.currentIndex].tick = d.Instance.tick;
                    a.lightingIndex = P.currentIndex
                }
                a.staleLighting = -1;
                for (var c = P.getUV(a.lightingIndex), f = 0; 12 > f; ) {
                    var h = f++;
                    P.image.setPixel(c.x + h | 0, c.y | 0, 0, !1);
                    P.image.setPixel(c.x + h | 0, c.y + 1 | 0, 0, !1);
                    P.image.setPixel(c.x + h | 0, c.y + 2 | 0, 0, !1);
                    P.image.setPixel(c.x + h | 0, c.y + 3 | 0, 0, !1);
                    P.image.setPixel(c.x + h | 0, c.y + 4 | 0, 0, !1);
                    P.image.setPixel(c.x + h | 0, c.y + 5 | 0, 0, !1);
                    P.image.setPixel(c.x + h | 0, c.y + 6 | 0, 0, !1);
                    P.image.setPixel(c.x + h | 0, c.y + 7 | 0, 0, !1);
                    P.image.setPixel(c.x + h | 0, c.y + 8 | 0, 0, !1);
                    P.image.setPixel(c.x + h | 0, c.y + 9 | 0, 0, !1);
                    P.image.setPixel(c.x + h | 0, c.y + 10 | 0, 0, !1);
                    P.image.setPixel(c.x + h | 0, c.y + 11 | 0, 0, !1)
                }
                f = 0;
                for (c = P.getNearbyLights(b, a); f < c.length; )
                    P.renderLight(b, a, c[f++])
            }
            ;
            P.getNearbyLights = function(a, b) {
                var c = [];
                c.push(P.sky);
                for (var f = -2; 3 > f; )
                    for (var h = f++, q = -2; 3 > q; ) {
                        var I = a.createChunk(h + b.chunkX, q++ + b.chunkY);
                        if (null != I && null != I.lights)
                            for (var d = Object.keys(I.lights.h), g = d.length, l = 0; l < g; ) {
                                var p = d[l++];
                                if (null == I.lights.h[p].origin) {
                                    var y = I.lights;
                                    Object.prototype.hasOwnProperty.call(y.h, p) && delete y.h[p]
                                } else {
                                    if ("block" == I.lights.h[p].origin.type) {
                                        if (a.getFG(I.lights.h[p].origin.x, I.lights.h[p].origin.y) != I.lights.h[p].origin.id) {
                                            ha.trace("You aren't a " + I.lights.h[p].origin.id + "!", {
                                                fileName: "src/Lighting.hx",
                                                lineNumber: 137,
                                                className: "Lighting",
                                                methodName: "getNearbyLights"
                                            });
                                            y = I.lights;
                                            Object.prototype.hasOwnProperty.call(y.h, p) && delete y.h[p];
                                            continue
                                        }
                                    } else if ("object" == I.lights.h[p].origin.type)
                                        if (null == a.objects.h[I.lights.h[p].origin.id] || a.objects.h[I.lights.h[p].origin.id].h.id != I.lights.h[p].origin.id) {
                                            ha.trace("You aren't a " + I.lights.h[p].origin.id + "!", {
                                                fileName: "src/Lighting.hx",
                                                lineNumber: 143,
                                                className: "Lighting",
                                                methodName: "getNearbyLights"
                                            });
                                            y = I.lights;
                                            Object.prototype.hasOwnProperty.call(y.h, p) && delete y.h[p];
                                            continue
                                        } else
                                            a.relinkEntityToChunk(I.lights.h[p].origin.id, "object", 0, 0, a.objects.h[I.lights.h[p].origin.id].h.x, a.objects.h[I.lights.h[p].origin.id].h.y);
                                    0 > T.distance(8 * (b.chunkX + .5) - I.lights.h[p].x, 8 * (b.chunkY + 1 - .5) - I.lights.h[p].y) - I.lights.h[p].lightSourceSize - 6 * Math.sqrt(2) && c.push(I.lights.h[p])
                                }
                            }
                    }
                return c
            }
            ;
            P.getBlockLight = function(a, b, c) {
                if (Object.prototype.hasOwnProperty.call(P.lightingCache.h, "X" + b + "Y" + c))
                    return P.lightingCache.h["X" + b + "Y" + c];
                if (null == a.worldChunks.h[H.string(Math.floor(b / 8))])
                    return -16777216;
                var f = a.worldChunks.h[H.string(Math.floor(b / 8))].h[H.string(Math.floor(c / 8))];
                if (null == f)
                    return -16777216;
                f = P.getNearbyLights(a, f);
                for (var h = 0, q = 0, I = f.length; q < I; )
                    h = P.mixColorsAdditive(h, P.renderLightPoint(a, b, c, f[q++]));
                return P.lightingCache.h["X" + b + "Y" + c] = h
            }
            ;
            P.setPixelOfChunk = function(a, b, c, f) {
                0 > b || 12 <= b || 0 > c || 12 <= c || (a[b + 12 * c] = f)
            }
            ;
            P.mixColorsAdditive = function(a, b) {
                var c = Q.toFloat(b >>> 24) / 255;
                return -16777216 | Math.floor(Math.min(255, Q.toFloat(a >>> 16 & 255) + Q.toFloat(b >>> 16 & 255) * c)) << 16 | Math.floor(Math.min(255, Q.toFloat(a >>> 8 & 255) + Q.toFloat(b >>> 8 & 255) * c)) << 8 | Math.floor(Math.min(255, Q.toFloat(a & 255) + Q.toFloat(b & 255) * c))
            }
            ;
            P.renderLight = function(a, b, c) {
                if ("sky" == c.lightSourceType) {
                    for (var f = [], h = [], q = -Math.cos(2.5 * Math.floor(a.weatherAndTime.timeOfDay / 2.5) / 50 * Math.PI), I = -Math.sin(2.5 * Math.floor(a.weatherAndTime.timeOfDay / 2.5) / 50 * Math.PI), d, g = -2; 10 > g; )
                        for (var l = g++, p = -2; 10 > p; ) {
                            var y = p++;
                            d = "X" + (8 * b.chunkX + l) + "Y" + (8 * b.chunkY - y);
                            var m = P.lightingCache;
                            Object.prototype.hasOwnProperty.call(m.h, d) && delete m.h[d];
                            for (var k = 1, L = 1, v = !1, O = !1, z = 15, C = 0, r = 0, J = 0, A = 0; 1600 >= z; ) {
                                if (!v) {
                                    m = l + Math.floor(q * z / 16);
                                    var x = y - Math.floor(I * z / 16);
                                    0 < I || 0 > 8 * b.chunkY + y ? (v = !0,
                                    k = 5) : (d = a.getFG(Math.round(8 * b.chunkX + m), Math.round(8 * b.chunkY + x)),
                                    1 == u.get(d).solid ? (4 < k && (v = !0),
                                    k += .5) : "water" == d ? ++C : u.inBlockGroup("lightBounce_green", d) ? ++J : 1 == u.get(a.getBG(Math.floor(8 * b.chunkX + m), Math.floor(8 * b.chunkY + x))).isTransparent && (v = !0))
                                }
                                O || (m = y + Math.floor(z / 16),
                                0 > 8 * b.chunkY + y ? (O = !0,
                                L = 5) : (d = a.getFG(Math.round(8 * b.chunkX + l), Math.round(8 * b.chunkY + m)),
                                1 == u.get(d).solid ? (4 < L && (O = !0),
                                L += .5) : "water" == d ? ++r : u.inBlockGroup("lightBounce_green", d) ? ++A : 1 == u.get(a.getBG(Math.floor(8 * b.chunkX + l), Math.round(8 * b.chunkY + m))).isTransparent && (O = !0)));
                                if (O && v)
                                    break;
                                z += 15 + z / 15 / 3
                            }
                            P.setPixelOfChunk(f, l + 2, 7 - y + 2, c.lightSourceColor + (Math.floor(Math.max(0, 4 - (k - .5)) / 4 * 255 * Math.abs(I)) << 24) - P.lightDampen(c.lightSourceColor, C, J));
                            P.setPixelOfChunk(h, l + 2, 7 - y + 2, 5281723 + (Math.floor(Math.max(0, 3 - (L - .5)) / 4 * 255) << 24) - P.lightDampen(5281723, r, A))
                        }
                    a = P.getUV(b.lightingIndex);
                    for (g = 0; 12 > g; )
                        for (q = g++,
                        p = 0; 12 > p; )
                            I = p++,
                            P.image.setPixel(a.x + q | 0, a.y + I | 0, P.mixColorsAdditive(P.mixColorsAdditive(P.image.getPixel(a.x + q, a.y + I), f[q + 12 * I]), h[q + 12 * I]), !1)
                } else if ("radial" == c.lightSourceType) {
                    f = [];
                    g = 6 * Math.sqrt(2);
                    p = T.distance(8 * (b.chunkX + .5) - c.x, 8 * (b.chunkY + 1 - .5) - c.y);
                    k = 180 * Math.atan2(8 * -(b.chunkY + 1 - .5) + c.y, 8 * (b.chunkX + .5) - c.x) / Math.PI;
                    z = 180 * Math.asin(g / p) / Math.PI;
                    isNaN(z) && (z = 180);
                    h = 5 * Math.round((k + z + 1080 - 10) / 5);
                    q = 8 * -b.chunkX + c.x;
                    I = 8 * (b.chunkY + 1) - c.y;
                    l = 5 * Math.round((k - z + 1080 - 10) / 5);
                    for (P.setPixelOfChunk(f, Math.floor(q) + 2, Math.floor(I) + 2, c.lightSourceColor + -16777216); l <= h; ) {
                        k = 0;
                        z = 14;
                        for (J = C = 0; z / 16 <= Math.min(p + g + 2, c.lightSourceSize); ) {
                            m = Math.floor(q + Math.cos(l / 180 * Math.PI) * z / 16);
                            x = Math.floor(I + Math.sin(l / 180 * Math.PI) * z / 16);
                            -2 <= m && 10 >= m && -2 <= x && 10 >= x && (P.setPixelOfChunk(f, m + 2, x + 2, c.lightSourceColor + (Math.floor(255 * T.clamp(0, 1, Math.pow(1 - z / 16 / c.lightSourceSize - k / 5.5, .5))) << 24) - P.lightDampen(c.lightSourceColor, C, J)),
                            d = "X" + (8 * b.chunkX + m) + "Y" + (8 * b.chunkY - x),
                            m = P.lightingCache,
                            Object.prototype.hasOwnProperty.call(m.h, d) && delete m.h[d]);
                            d = a.getFG(Math.floor(c.x + Math.cos(l / 180 * Math.PI) * z / 16), Math.floor(c.y - Math.sin(l / 180 * Math.PI) * z / 16));
                            if (1 == u.get(d).solid) {
                                if (++k,
                                4 <= k)
                                    break
                            } else
                                "water" == d ? ++C : u.inBlockGroup("lightBounce_green", d) && ++J;
                            z += 15
                        }
                        l += 5
                    }
                    a = P.getUV(b.lightingIndex);
                    for (g = 0; 12 > g; )
                        for (q = g++,
                        p = 0; 12 > p; )
                            I = p++,
                            P.image.setPixel(a.x + q | 0, a.y + I | 0, P.mixColorsAdditive(P.image.getPixel(a.x + q, a.y + I), f[q + 12 * I]), !1)
                } else
                    ha.trace("Invalid light source type!", {
                        fileName: "src/Lighting.hx",
                        lineNumber: 354,
                        className: "Lighting",
                        methodName: "renderLight"
                    })
            }
            ;
            P.lightDampen = function(a, b, c) {
                return 0 < b ? 0 < c ? (Math.floor(Q.toFloat(a >>> 16 & 255) * (1 - Math.pow(.5, c)) * (1 - Math.pow(.5, b))) << 16) + (Math.floor(Q.toFloat(a >>> 8 & 255) * (1 - Math.pow(.95, c)) * (1 - Math.pow(.85, b))) << 8) + Math.floor(Q.toFloat(a & 255) * (1 - Math.pow(.75, c)) * (1 - Math.pow(.95, b))) : (Math.floor(Q.toFloat(a >>> 16 & 255) * (1 - Math.pow(.5, b))) << 16) + (Math.floor(Q.toFloat(a >>> 8 & 255) * (1 - Math.pow(.85, b))) << 8) + Math.floor(Q.toFloat(a & 255) * (1 - Math.pow(.95, b))) : 0 < c ? (Math.floor(Q.toFloat(a >>> 16 & 255) * (1 - Math.pow(.5, c))) << 16) + (Math.floor(Q.toFloat(a >>> 8 & 255) * (1 - Math.pow(.95, c))) << 8) + Math.floor(Q.toFloat(a & 255) * (1 - Math.pow(.75, c))) : 0
            }
            ;
            P.renderLightPoint = function(a, b, c, f) {
                if ("sky" == f.lightSourceType) {
                    var h = -Math.cos(2.5 * Math.floor(a.weatherAndTime.timeOfDay / 2.5) / 50 * Math.PI)
                      , q = -Math.sin(2.5 * Math.floor(a.weatherAndTime.timeOfDay / 2.5) / 50 * Math.PI)
                      , I = 1
                      , d = 1;
                    var g = f.lightSourceColor;
                    var l = 5281723;
                    for (var p = !1, y = !1, m = 15, k, L = 0, v = 0, O = 0; 1600 >= m; ) {
                        if (!p) {
                            var z = b + Math.floor(h * m / 16)
                              , C = c - Math.floor(q * m / 16);
                            0 < q || 0 > c ? (p = !0,
                            I = 5) : (k = a.getFG(z, C),
                            1 == u.get(k).solid ? (4 < I && (p = !0),
                            I += .5) : "water" == k ? ++L : u.inBlockGroup("lightBounce_green", k) ? ++O : 1 == u.get(a.getBG(z, C)).isTransparent && (p = !0));
                            p && (g = f.lightSourceColor + 16777216 * Math.floor(Math.max(0, 4 - (I - .5)) / 4 * 255 * Math.abs(q)) - P.lightDampen(f.lightSourceColor, L, O))
                        }
                        y || (z = c + Math.floor(m / 16),
                        0 > c ? (y = !0,
                        d = 5) : (k = a.getFG(b, z),
                        1 == u.get(k).solid ? (4 < d && (y = !0),
                        d += .5) : "water" == k ? (++v,
                        d += .1) : 1 == u.get(a.getBG(b, z)).isTransparent && (y = !0)),
                        y && (l = 5281723 + 16777216 * Math.floor(Math.max(0, 3 - (d - .5)) / 4 * 255) - P.lightDampen(5281723, v, 0)));
                        if (y && p)
                            break;
                        m += 15 + m / 15 / 3
                    }
                    return P.mixColorsAdditive(P.mixColorsAdditive(0, g), l)
                }
                l = T.distance(b + .5 - f.x, c + .5 - f.y);
                b = Math.atan2(c + .5 - f.y, b + .5 - f.x);
                I = 0;
                m = 14;
                for (O = L = 0; m / 16 <= Math.min(l, f.lightSourceSize); ) {
                    k = a.getFG(Math.floor(f.x + Math.cos(b) * m / 16), Math.floor(f.y + Math.sin(b) * m / 16));
                    if (1 == u.get(k).solid) {
                        if (++I,
                        4 <= I)
                            break
                    } else
                        "water" == k ? ++L : u.inBlockGroup("lightBounce_green", k) && ++O;
                    m += 15
                }
                a = f.lightSourceColor + (Math.floor(255 * T.clamp(0, 1, Math.pow(1 - m / 16 / f.lightSourceSize - I / 5.5, .5))) << 24);
                return a -= P.lightDampen(f.lightSourceColor, L, O)
            }
            ;
            var X = function() {};
            g.MB2Helpers = X;
            X.__name__ = "MB2Helpers";
            X.createQuadPoolEntity = function(a, b, c) {
                null == c && (c = !1);
                var f = new p
                  , h = T.repeatArray([1], 24);
                f.h.color = h;
                h = T.repeatArray([0], 24);
                f.h.colorOffset = h;
                c && (h = T.repeatArray([0], 24),
                f.h.maskClip = h);
                a = new ia(a,Ia.NORMAL,c ? wc.getShader() : xc.getShader(),f);
                a.isTransparent = !0;
                a.layer = b;
                return a
            }
            ;
            X.randomNumber = function(a, b) {
                return Math.floor(a + (b - a + 1) * Math.random()) | 0
            }
            ;
            X.dateString = function(a) {
                return "Jan. Feb. Mar. Apr. May June July Aug. Sep. Oct. Nov. Dec.".split(" ")[a.getMonth()] + " " + a.getDate() + ", " + a.getFullYear()
            }
            ;
            var A = function() {
                this.firstInteraction = !1;
                this.eventRegistry = new Kb;
                this.mouseButtonsUp = [-1, -1, -1];
                this.mouseButtonsDown = [-1, -1, -1];
                this.mouseLast = new W(0,0);
                this.mouse = new W(0,0);
                this.mouseWheelDelta = 0;
                this.touches = new ra;
                this.isUp = new ra;
                this.isDownRepeat = new ra;
                this.isDown = new ra;
                this.wasDown = new ra;
                this.isDownDouble = new ra;
                this.doubleKeyPressMaxDuration = .3;
                this.keyRemap = new ra;
                this.focus = !0;
                this.hadPreRun = this.enginePaused = !1;
                this.cursor = Cb.DEFAULT;
                this.__internal_scale = 1;
                this.viewportScaleSnap = !1;
                this.viewportScale = 1;
                this.sceneImage = new hb;
                this.tick = 0;
                this.preloadComplete = !1;
                this.lemongineFrame = "firstFrame";
                oa.call(this);
                this.__internal_scene = new yb(1,1);
                this.scene = new yb(1,1)
            };
            g["lemongine.Lemongine"] = A;
            A.__name__ = "lemongine.Lemongine";
            A.adStartCallback = k.zanzlanz.adStartCallback = function() {
                d.Instance.set_enginePaused(!0)
            }
            ;
            A.adEndCallback = k.zanzlanz.adEndCallback = function() {
                d.Instance.set_enginePaused(!1)
            }
            ;
            A.requestInterstitial = function() {
                window.runInterstitial && window.runInterstitial()
            }
            ;
            A.__super__ = oa;
            A.prototype = n(oa.prototype, {
                initialize: function() {},
                loop: function() {},
                loadAssets: function() {},
                onPreloadComplete: function() {
                    this.preloadComplete = !0
                },
                render: function(a) {
                    this.renderContext = a;
                    switch (this.lemongineFrame) {
                    case "firstFrame":
                        this.checkHardwareAcceleration();
                        if (null != a.webgl2)
                            A.gl = Qb.fromWebGL2RenderContext(a.webgl2),
                            A.gl.getExtension("EXT_color_buffer_float");
                        else if (null != a.webgl)
                            A.gl = a.webgl;
                        else if (null != a.gl)
                            A.gl = a.gl;
                        else {
                            this.fatalError("You don't have WebGL enabled. This game needs it!\nSee here for advice: zanz.net/webgl");
                            ha.trace("You don't have WebGL enabled! Try updating your browser or following the advice on https://zanz.net/webgl.", {
                                fileName: "lemongine/Lemongine.hx",
                                lineNumber: 123,
                                className: "lemongine.Lemongine",
                                methodName: "render"
                            });
                            break
                        }
                        this.calculatedFPS = this.currentFPS = this.get_fps();
                        this.lastFrameTime = (new Date).getTime() / 1E3;
                        this.scene.setDimensions(this.__window.__width, this.__window.__height, !0);
                        na.activate(this.scene);
                        this.lemongineFrame = this.preloadComplete ? "loadAssets" : "preload";
                        this.addFirstInteractionCallbacks();
                        break;
                    case "initialize":
                        na.globalInitialize();
                        this.initialize();
                        null != this.splash ? (this.preSplash(),
                        this.currentScreen = this.splash,
                        this.lemongineFrame = "screenLoadAssets") : (this.hadPreRun || (this.hadPreRun = !0,
                        this.preRun()),
                        this.lemongineFrame = "run");
                        break;
                    case "loadAssets":
                        0 == xa.numImages && this.loadAssets();
                        xa.numImagesLoaded == xa.numImages && (this.lemongineFrame = "initialize");
                        break;
                    case "preload":
                        this.preloadComplete && (this.lemongineFrame = "loadAssets");
                        break;
                    case "run":
                        this.doFrame();
                        break;
                    case "screenInitialize":
                        xa.numImagesLoaded == xa.numImages && (this.currentScreen.initialize(),
                        this.lemongineFrame = "screenRun");
                        break;
                    case "screenLoadAssets":
                        this.currentScreen.loadAssets();
                        this.lemongineFrame = "screenInitialize";
                        break;
                    case "screenRun":
                        this.__internal_scene.clear();
                        this.currentScreen.scene.clear();
                        this.currentScreen.run() && (this.hadPreRun || (this.hadPreRun = !0,
                        this.preRun()),
                        this.lemongineFrame = "run");
                        this.currentScreen.scene.render();
                        this.sceneImage.fromGLTexture(this.currentScreen.scene.get_width(), this.currentScreen.scene.get_height(), this.currentScreen.scene.get_glTexture());
                        this.__internal_scene.draw2DFlipped(this.sceneImage);
                        this.__internal_scene.render();
                        break;
                    case "stall":
                        break;
                    default:
                        ha.trace("Frame '" + this.lemongineFrame + "' doesn't exist!", {
                            fileName: "lemongine/Lemongine.hx",
                            lineNumber: 187,
                            className: "lemongine.Lemongine",
                            methodName: "render"
                        })
                    }
                },
                preSplash: function() {},
                preRun: function() {},
                doFrame: function() {
                    na.resetCallCount();
                    this.enginePaused || (this.__internal_scene.clear(),
                    this.scene.clear(),
                    this.loop(),
                    this.runEvents(Ha.TICK, [this.tick]),
                    this.scene.render(),
                    this.sceneImage.fromGLTexture(this.scene.get_width(), this.scene.get_height(), this.scene.get_glTexture()),
                    this.__internal_scene.draw2DFlipped(this.sceneImage),
                    this.__internal_scene.render(),
                    this.tick++);
                    this.mouseWheelDelta = 0;
                    this.__window.set_cursor(this.cursor);
                    this.cursor = Cb.DEFAULT;
                    this.calculatedFPS += (1 / Math.max(.001, (new Date).getTime() / 1E3 - this.lastFrameTime) - this.calculatedFPS) / 10;
                    this.lastFrameTime = (new Date).getTime() / 1E3;
                    0 == (Q.toFloat(this.tick) % Q.toFloat(5) | 0) && (this.currentFPS = Math.floor(10 * this.calculatedFPS) / 10);
                    this.mouseLast.set(this.mouse.x, this.mouse.y)
                },
                getActualScale: function() {
                    return this.__internal_scale
                },
                get_fps: function() {
                    return this.__window.__backend.getFrameRate() | 0
                },
                set_enginePaused: function(a) {
                    this.enginePaused = a;
                    Wa.updateVolumes();
                    return a
                },
                onWindowResize: function(a, b) {
                    null != A.gl && na.activate(this.__internal_scene, !0)
                },
                addEventListener: function(a, b) {
                    this.eventRegistry.exists(a) || this.eventRegistry.set(a, []);
                    -1 == this.eventRegistry.get(a).indexOf(b) && this.eventRegistry.get(a).push(b)
                },
                removeEventListener: function(a, b) {
                    this.eventRegistry.exists(a) && K.remove(this.eventRegistry.get(a), b)
                },
                runEvents: function(a, b) {
                    if (this.eventRegistry.exists(a)) {
                        var c = 0;
                        for (a = this.eventRegistry.get(a); c < a.length; )
                            a[c++].apply(null, b)
                    }
                },
                keyDownDouble: function(a) {
                    this.keyRemap.h.hasOwnProperty(a) && (a = this.keyRemap.h[a]);
                    return this.isDownDouble.h.hasOwnProperty(a) ? this.tick - this.isDownDouble.h[a] + 1 : 0
                },
                keyDown: function(a) {
                    this.keyRemap.h.hasOwnProperty(a) && (a = this.keyRemap.h[a]);
                    return this.isDown.h.hasOwnProperty(a) ? this.tick - this.isDown.h[a] + 1 : 0
                },
                mouseDown: function() {
                    return -1 < this.mouseButtonsDown[0] ? this.tick - this.mouseButtonsDown[0] + 1 : 0
                },
                mouseUp: function() {
                    return -1 < this.mouseButtonsUp[0] ? this.tick - this.mouseButtonsUp[0] + 1 : 0
                },
                rightMouseDown: function() {
                    return -1 < this.mouseButtonsDown[2] ? this.tick - this.mouseButtonsDown[2] + 1 : 0
                },
                onKeyDown: function(a, b) {
                    this.keyRemap.h.hasOwnProperty(a) && (a = this.keyRemap.h[a]);
                    this.isDown.h.hasOwnProperty(a) || (this.wasDown.h.hasOwnProperty(a) && Q.toFloat(this.tick - this.wasDown.h[a]) / this.calculatedFPS <= this.doubleKeyPressMaxDuration && (this.isDownDouble.h[a] = this.tick),
                    this.isDown.h[a] = this.tick,
                    this.isUp.remove(a),
                    this.runEvents(Ha.KEY_DOWN, [a, b]));
                    this.isDownRepeat.h[a] = this.tick;
                    this.runEvents(Ha.KEY_DOWN_REPEAT, [a, b])
                },
                onKeyUp: function(a, b) {
                    this.keyRemap.h.hasOwnProperty(a) && (a = this.keyRemap.h[a]);
                    this.isDown.h.hasOwnProperty(a) && (this.wasDown.h[a] = this.isDown.h[a]);
                    this.isDownDouble.remove(a);
                    this.isDown.remove(a);
                    this.isDownRepeat.remove(a);
                    this.isUp.h.hasOwnProperty(a) || (this.isUp.h[a] = this.tick,
                    this.runEvents(Ha.KEY_UP, [a, b]))
                },
                setMousePosition: function(a, b) {
                    a = this.screenToSceneX(a);
                    this.mouse.x = Math.floor(a);
                    a = this.screenToSceneY(b);
                    this.mouse.y = Math.floor(a)
                },
                screenToSceneX: function(a) {
                    return (a - (oa.current.__window.__width - this.scene.get_width() * this.getActualScale()) / 2) / this.getActualScale()
                },
                screenToSceneY: function(a) {
                    return (a - (oa.current.__window.__height - this.scene.get_height() * this.getActualScale()) / 2) / this.getActualScale()
                },
                onMouseMove: function(a, b) {
                    this.setMousePosition(a, b);
                    this.runEvents(Ha.MOUSE_MOVE, [this.mouse.x, this.mouse.y])
                },
                onMouseDown: function(a, b, c) {
                    this.setMousePosition(a, b);
                    0 <= c && 2 >= c && (this.mouseButtonsDown[c] = this.tick,
                    this.mouseButtonsUp[c] = -1);
                    this.runEvents(Ha.MOUSE_DOWN, [this.mouse.x, this.mouse.y, c])
                },
                onMouseUp: function(a, b, c) {
                    this.setMousePosition(a, b);
                    0 <= c && 2 >= c && (this.mouseButtonsUp[c] = this.tick,
                    this.mouseButtonsDown[c] = -1);
                    this.__window.onMouseUp.cancel();
                    this.runEvents(Ha.MOUSE_UP, [this.mouse.x, this.mouse.y, c])
                },
                onMouseWheel: function(a, b, c) {
                    0 != b && (this.mouseWheelDelta += 0 < b ? 1 : -1,
                    this.runEvents(Ha.MOUSE_WHEEL, [this.mouseWheelDelta]))
                },
                onTextInput: function(a) {
                    this.runEvents(Ha.TEXT_INPUT, [a])
                },
                onWindowFocusIn: function() {
                    this.focus = !0;
                    this.runEvents(Ha.FOCUS_IN, [])
                },
                onWindowFocusOut: function() {
                    this.focus = !1;
                    this.runEvents(Ha.FOCUS_OUT, []);
                    for (var a = this.isDown.keys(); a.hasNext(); ) {
                        var b = a.next();
                        this.isUp.h[b] = this.tick;
                        this.wasDown.h[b] = this.isDown.h[b];
                        this.isDown.remove(b)
                    }
                },
                onWindowActivate: function() {
                    this.focus = !1;
                    this.runEvents(Ha.ACTIVATE, [])
                },
                onTouchStart: function(a) {
                    oa.prototype.onTouchStart.call(this, a);
                    var b = this.touches
                      , c = a.id
                      , f = {
                        id: a.id,
                        x: this.screenToSceneX(a.x * oa.current.__window.__width),
                        y: this.screenToSceneY(a.y * oa.current.__window.__height),
                        tick: this.tick,
                        dx: a.dx * oa.current.__window.__width / this.getActualScale(),
                        dy: a.dy * oa.current.__window.__height / this.getActualScale()
                    };
                    b.h[c] = f;
                    this.runEvents(Ha.TOUCH_START, [a.id, this.screenToSceneX(a.x * oa.current.__window.__width), this.screenToSceneY(a.y * oa.current.__window.__height)])
                },
                onTouchMove: function(a) {
                    oa.prototype.onTouchMove.call(this, a);
                    null != this.touches.h[a.id] && (this.touches.h[a.id].x = this.screenToSceneX(a.x * oa.current.__window.__width),
                    this.touches.h[a.id].y = this.screenToSceneY(a.y * oa.current.__window.__height),
                    this.touches.h[a.id].dx = a.dx / this.getActualScale(),
                    this.touches.h[a.id].dy = a.dy / this.getActualScale(),
                    this.runEvents(Ha.TOUCH_MOVE, [a.id, this.screenToSceneX(a.x * oa.current.__window.__width), this.screenToSceneY(a.y * oa.current.__window.__height)]))
                },
                onTouchEnd: function(a) {
                    oa.prototype.onTouchEnd.call(this, a);
                    this.runEvents(Ha.TOUCH_END, [a.id, this.screenToSceneX(a.x * oa.current.__window.__width), this.screenToSceneY(a.y * oa.current.__window.__height)]);
                    this.touches.remove(a.id)
                },
                onTouchCancel: function(a) {
                    oa.prototype.onTouchCancel.call(this, a);
                    this.runEvents(Ha.TOUCH_END, [a.id, this.screenToSceneX(a.x * oa.current.__window.__width), this.screenToSceneY(a.y * oa.current.__window.__height)]);
                    this.touches.remove(a.id)
                },
                addFirstInteractionCallbacks: function() {
                    var a = this
                      , b = null;
                    b = function(c, f, h) {
                        a.firstInteraction = !0;
                        a.removeEventListener(Ha.MOUSE_DOWN, b)
                    }
                    ;
                    this.addEventListener(Ha.MOUSE_DOWN, b)
                },
                fatalError: function(a) {
                    this.lemongineFrame = "stall";
                    var b = ja.__cast(window.document.querySelector("canvas"), HTMLCanvasElement)
                      , c = ja.__cast(b.cloneNode(!1), HTMLCanvasElement);
                    b.parentNode.replaceChild(c, b);
                    b = c.getContext("2d");
                    b.fillStyle = "#EE2200";
                    b.fillRect(0, 0, c.width, c.height);
                    b.fillStyle = "#012f4f";
                    b.fillRect(2, 2, c.width - 4, c.height - 4);
                    b.font = "20px Verdana";
                    b.fillStyle = "#FFFFFF";
                    a = a.split("\n");
                    for (var f = 0, h = a.length; f < h; ) {
                        var q = f++;
                        b.fillText(a[q], 30, c.height / 2 + 20 + 30 * q, c.width - 60)
                    }
                    b.font = "16px Verdana";
                    b.fillStyle = "#237bbb";
                    b.fillText("You can reach me with email or on Twitter. Visit Zanzlanz.com.", 30, c.height / 2 + 80, c.width - 60);
                    b.font = "64px Verdana";
                    b.fillStyle = "#237bbb";
                    b.fillText("Oof", 25, c.height / 2 + 20 - 40, c.width - 60)
                },
                checkHardwareAcceleration: function() {
                    var a = ja.__cast(window.document.createElement("canvas"), HTMLCanvasElement);
                    null == a.getContext("webgl", {
                        failIfMajorPerformanceCaveat: !0
                    }) && null == a.getContext("experimental-webgl", {
                        failIfMajorPerformanceCaveat: !0
                    }) && (null != a.getContext("webgl") || null != a.getContext("experimental-webgl") ? (ha.trace("Hardware Acceleration is turned off on your browser. The game will run slowly, especially when the window is large. Enable Hardware Acceleration, or see https://zanz.net/webgl for details!", {
                        fileName: "lemongine/Lemongine.hx",
                        lineNumber: 505,
                        className: "lemongine.Lemongine",
                        methodName: "checkHardwareAcceleration"
                    }),
                    window.hardwareAccelerationWarning && window.hardwareAccelerationWarning()) : ha.trace("WebGL appears to be disabled. See https://zanz.net/webgl for details.", {
                        fileName: "lemongine/Lemongine.hx",
                        lineNumber: 508,
                        className: "lemongine.Lemongine",
                        methodName: "checkHardwareAcceleration"
                    }))
                },
                __class__: A
            });
            var d = function() {
                this.timeAccumulator = this.performCount = 0;
                this.lastTime = 8.333333333333334;
                this.timeDelta = 0;
                this.fpsMB2 = this.fpsMB2Smoothed = 50;
                this.runOnMouseUpEvent = null;
                this.fullscreenCache = !1;
                this.lastMouseDownDuration = 0;
                this.waitingForMouseUp = !1;
                d.Instance = this;
                A.call(this);
                this.splash = new dd;
                ka.connect(ka.run, A.requestInterstitial)
            };
            g.Main = d;
            d.__name__ = "Main";
            d.versionToNumber = function(a) {
                var b = 0;
                for (a = a.split("."); 4 > a.length; )
                    a.push("0");
                for (var c = 0, f = a.length; c < f; ) {
                    var h = c++;
                    b += Math.floor(H.parseInt(a[h]) * Math.pow(1E3, a.length - h - 1))
                }
                return b
            }
            ;
            d.__super__ = A;
            d.prototype = n(A.prototype, {
                initialize: function() {
                    var a = this;
                    this.scene.setup2D(900, 360, new Pa(-16703699));
                    this.viewportScale = 0;
                    d.screenWidth = this.scene.get_width();
                    d.screenHeight = this.scene.get_height();
                    x.initLanguage();
                    J.loadSettings();
                    u.initBlockData();
                    da.initObjectData();
                    D.initRecipes();
                    this.__window.onMaximize.add(function() {
                        if (1 == a.__window.__maximized && 0 == a.keyDown(27)) {
                            var b = a.__window;
                            b.__minimized = !1;
                            b.__maximized = b.__backend.setMaximized(!1);
                            a.__window.set_fullscreen(!0);
                            a.fullscreenCache = !0
                        }
                    })
                },
                afterTexturePackLoads: function() {
                    null == this.mainMenuScene && (this.currentScene = this.mainMenuScene = new N("mainMenu",this.scene))
                },
                loop: function() {
                    if (C.state == L.LOADING_IMAGES)
                        if (C.texturePackCheckImages())
                            this.afterTexturePackLoads();
                        else
                            return;
                    this.everyFrame()
                },
                everyFrame: function() {
                    this.calculateDeltaTime();
                    null != this.runOnMouseUpEvent && (this.runOnMouseUpEvent = null);
                    this.currentScene.logic();
                    this.currentScene.render();
                    za.updateExpiration()
                },
                renderScreenshot: function() {
                    this.screenshot = this.scene.get_image().clone(!0, this.screenshot);
                    var a = new Date;
                    a = "Mine-Blocks-2_" + K.substr(H.string(a.getFullYear()), -2, 2) + (10 <= a.getMonth() + 1 ? H.string(a.getMonth() + 1) : "0" + (a.getMonth() + 1)) + (10 <= a.getDate() ? H.string(a.getDate()) : "0" + a.getDate()) + "-" + a.getHours() + (10 <= a.getMinutes() ? H.string(a.getMinutes()) : "0" + a.getMinutes()) + (10 <= a.getSeconds() ? H.string(a.getSeconds()) : "0" + a.getSeconds()) + ".png";
                    this.screenshot.updateImageFromTexture();
                    Db.saveBytes(this.screenshot.data.encode(yd.PNG), a, null, null, !1)
                },
                onKeyDown: function(a, b) {
                    A.prototype.onKeyDown.call(this, a, b);
                    9 == a && this.keyPreventDefault();
                    if (27 == a && 1 == this.keyDown(27) && (this.currentScene != this.gameScene || this.gameScene.isPaused()) && 1 == this.fullscreenCache)
                        a = this.__window,
                        a.__minimized = !1,
                        this.fullscreenCache = this.__window.set_fullscreen(a.__maximized = a.__backend.setMaximized(!1)),
                        this.onKeyUp(27, b);
                    else if (null != this.gameScene && this.currentScene == this.gameScene)
                        switch (a) {
                        case 48:
                            this.gameScene.world.selectedInventoryItem = 9;
                            break;
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        case 57:
                            this.gameScene.world.selectedInventoryItem = a - 49;
                            break;
                        case 101:
                            this.gameScene.showInventory(null, "main");
                            break;
                        case 119:
                            1 == this.keyDownDouble(119) && "creative" == this.gameScene.world.gameMode && (b = this.gameScene.world.mobs.h["char"].h.collisionMode,
                            null == b ? this.gameScene.world.mobs.h["char"].h.collisionMode = "walking" : "walking" == b ? (b = this.gameScene.world.mobs.h["char"],
                            a = Q.gt(this.keyDown(1073742049), 0) ? "noclip" : "flying",
                            b.h.collisionMode = a) : this.gameScene.world.mobs.h["char"].h.collisionMode = "walking");
                            break;
                        case 1073741882:
                            this.gameScene.cinematic = !this.gameScene.cinematic;
                            this.keyPreventDefault();
                            break;
                        case 1073741883:
                            this.renderScreenshot();
                            this.keyPreventDefault();
                            break;
                        case 1073741884:
                            this.gameScene.debugMenu = !this.gameScene.debugMenu,
                            this.keyPreventDefault()
                        }
                },
                keyPreventDefault: function() {
                    oa.current.__window.onKeyDown.cancel()
                },
                onMouseUp: function(a, b, c) {
                    0 == c && (this.lastMouseDownDuration = this.mouseDown() - 1,
                    null != this.runOnMouseUpEvent && (this.runOnMouseUpEvent(),
                    this.runOnMouseUpEvent = null));
                    this.waitingForMouseUp = !1;
                    A.prototype.onMouseUp.call(this, a, b, c)
                },
                loadAssets: function() {
                    xa.loadImage("assets/images/font_jagged_dreams.png", "font_jagged_dreams").smoothing = !0;
                    xa.loadImage("assets/images/header.png", "header");
                    xa.loadImage("assets/images/loading_bg.png", "loading_bg");
                    xa.loadImage("assets/images/stars.png", "stars");
                    xa.loadSound("assets/sfx/btn_over.ogg", "btn_over");
                    xa.loadSound("assets/sfx/btn_down.ogg", "btn_down");
                    C.texturePackInit()
                },
                calculateDeltaTime: function() {
                    var a = this.getNow();
                    this.timeDelta = Math.max(1, a - this.lastTime) / 1E3;
                    this.lastTime = a;
                    this.fpsMB2 = 1 / this.timeDelta;
                    this.fpsMB2Smoothed += .1 * (this.fpsMB2 - this.fpsMB2Smoothed);
                    this.timeAccumulator += this.timeDelta;
                    this.performCount = Math.floor(Math.min(100, 120 * this.timeAccumulator));
                    this.timeAccumulator = T.modulus(this.timeAccumulator, .008333333333333333)
                },
                getNow: function() {
                    return null != window.performance && null != window.performance.now ? window.performance.now() : Ya.getTimer()
                },
                __class__: d
            });
            var La = function() {};
            g.ManifestResources = La;
            La.__name__ = "ManifestResources";
            La.init = function(a) {
                La.preloadLibraries = [];
                La.preloadLibraryNames = [];
                La.rootPath = null;
                null != a && Object.prototype.hasOwnProperty.call(a, "rootPath") && (La.rootPath = Y.field(a, "rootPath"),
                ta.endsWith(La.rootPath, "/") || (La.rootPath += "/"));
                null == La.rootPath && (La.rootPath = "./");
                const modpekAssetLibrary = {
                    name: "modpekAssetLibrary",
                    assets: [
                        {type: "IMAGE", id: "assets/images/borders.png", path: "assets/images/borders.png", preload: true},
                        {type: "IMAGE", id: "assets/images/daymond.png", path: "assets/images/daymond.png", preload: true},
                        {type: "IMAGE", id: "assets/images/font_jagged_dreams.png", path: "assets/images/font_jagged_dreams.png", preload: true},
                        {type: "IMAGE", id: "assets/images/gui.png", path: "assets/images/gui.png", preload: true},
                        {type: "IMAGE", id: "assets/images/header.png", path: "assets/images/header.png", preload: true},
                        {type: "IMAGE", id: "assets/images/loading_bg.png", path: "assets/images/loading_bg.png", preload: true},
                        {type: "IMAGE", id: "assets/images/sky.png", path: "assets/images/sky.png", preload: true},
                        {type: "IMAGE", id: "assets/images/stars.png", path: "assets/images/stars.png", preload: true},
                        {type: "TEXT", id: "assets/images/textures.json", path: "assets/images/textures.json", preload: true},
                        {type: "IMAGE", id: "assets/images/textures.png", path: "assets/images/textures.png", preload: true},
                        {type: "IMAGE", id: "assets/images/utility.png", path: "assets/images/utility.png", preload: true},
                        {type: "IMAGE", id: "assets/images/zanzlanz.png", path: "assets/images/zanzlanz.png", preload: true},
                        {type: "MUSIC", id: "assets/sfx/btn_down.mp3", pathGroup: ["assets/sfx/btn_down.mp3", "assets/sfx/btn_down.ogg"], preload: true},
                        {type: "SOUND", id: "assets/sfx/btn_down.ogg", pathGroup: ["assets/sfx/btn_down.mp3", "assets/sfx/btn_down.ogg"], preload: true},
                        {type: "MUSIC", id: "assets/sfx/btn_over.mp3", pathGroup: ["assets/sfx/btn_over.mp3", "assets/sfx/btn_over.ogg"], preload: true},
                        {type: "SOUND", id: "assets/sfx/btn_over.ogg", pathGroup: ["assets/sfx/btn_over.mp3", "assets/sfx/btn_over.ogg"], preload: true},
                        {type: "MUSIC", id: "assets/sfx/zanzlanz-splash.mp3", pathGroup: ["assets/sfx/zanzlanz-splash.mp3", "assets/sfx/zanzlanz-splash.ogg"], preload: true},
                        {type: "SOUND", id: "assets/sfx/zanzlanz-splash.ogg", pathGroup: ["assets/sfx/zanzlanz-splash.mp3", "assets/sfx/zanzlanz-splash.ogg"], preload: true},
                        {type: "TEXT", id: "assets/languages/de.json", path: "assets/languages/de.json", preload: true},
                        {type: "TEXT", id: "assets/languages/en-US.json", path: "assets/languages/en-US.json", preload: true},
                        {type: "TEXT", id: "assets/languages/es-MX.json", path: "assets/languages/es-MX.json", preload: true},
                        {type: "TEXT", id: "assets/languages/pt-BR.json", path: "assets/languages/pt-BR.json", preload: true}
                    ],
                    libraryArgs: [],
                    libraryType: null
                };
                a = ab.fromManifest(modpekAssetLibrary);
                la.registerLibrary("default", a);
                a = la.getLibrary("default");
                null != a ? La.preloadLibraries.push(a) : La.preloadLibraryNames.push("default")
            }
            ;
            Math.__name__ = "Math";
            var da = function() {};
            g.ObjectInfo = da;
            da.__name__ = "ObjectInfo";
            da.get = function(a) {
                return Object.prototype.hasOwnProperty.call(da.objectData.h, a) ? da.objectData.h[a] : da.objectData.h[""]
            }
            ;
            da.initObjectData = function() {
                da.objectData = new p;
                var a = da.objectData
                  , b = {
                    name: x.get("GRASS"),
                    offsetFromOrigin: new W(.5,0),
                    textureBoundingBox: new ca(-.5,0,1,2),
                    boundingBox: [{
                        value: [new ca(-.5,0,1,2)]
                    }],
                    sway: 1,
                    maxHealth: 10
                };
                a.h.grass_double = b;
                a = da.objectData;
                b = {
                    name: x.get("BOULDER"),
                    offsetFromOrigin: new W(1.5,0),
                    textureBoundingBox: new ca(-1.5,0,3,2),
                    boundingBox: [{
                        value: [new ca(-1,0,2,1)]
                    }],
                    collisionBox: [{
                        value: [new ca(-1,0,2,1)]
                    }],
                    maxHealth: 80
                };
                a.h.boulder = b;
                a = da.objectData;
                b = {
                    name: x.get("MUSHROOMS"),
                    offsetFromOrigin: new W(.5,0),
                    textureBoundingBox: new ca(-.5,0,1,2),
                    boundingBox: [{
                        value: [new ca(-.5,0,1,2)]
                    }],
                    sway: 1,
                    maxHealth: 10
                };
                a.h.mushroom_tall = b;
                a = da.objectData;
                b = {
                    name: x.get("FLOWER_TALL_1"),
                    offsetFromOrigin: new W(.5,0),
                    textureBoundingBox: new ca(-.5,0,1,2),
                    boundingBox: [{
                        value: [new ca(-.5,0,1,2)]
                    }],
                    sway: 1,
                    maxHealth: 10
                };
                a.h.flower_red_monocot = b;
                a = da.objectData;
                b = {
                    name: x.get("COBWEB"),
                    offsetFromOrigin: new W(0,0),
                    textureBoundingBox: new ca(0,0,1,2),
                    boundingBox: [{
                        value: [new ca(0,0,1,2)]
                    }],
                    maxHealth: 10
                };
                a.h.cobweb1 = b;
                a = da.objectData;
                b = {
                    name: x.get("COBWEB"),
                    offsetFromOrigin: new W(1,0),
                    textureBoundingBox: new ca(-1,0,1,2),
                    boundingBox: [{
                        value: [new ca(-1,0,1,2)]
                    }],
                    maxHealth: 10
                };
                a.h.cobweb2 = b;
                a = da.objectData;
                b = {
                    name: x.get("COBWEB"),
                    offsetFromOrigin: new W(0,2),
                    textureBoundingBox: new ca(0,-2,1,2),
                    boundingBox: [{
                        value: [new ca(0,-2,1,2)]
                    }],
                    maxHealth: 10
                };
                a.h.cobweb3 = b;
                a = da.objectData;
                b = {
                    name: x.get("COBWEB"),
                    offsetFromOrigin: new W(1,2),
                    textureBoundingBox: new ca(-1,-2,1,2),
                    boundingBox: [{
                        value: [new ca(-1,-2,1,2)]
                    }],
                    maxHealth: 10
                };
                a.h.cobweb4 = b;
                a = da.objectData;
                b = {
                    name: x.get("COTTON"),
                    offsetFromOrigin: new W(1,0),
                    textureBoundingBox: new ca(-1,0,2,2),
                    boundingBox: [{
                        value: [new ca(-1,0,2,2)]
                    }],
                    sway: 1,
                    maxHealth: 20
                };
                a.h.cotton_large = b;
                a = da.objectData;
                b = {
                    name: x.get("COTTON"),
                    offsetFromOrigin: new W(.5,0),
                    textureBoundingBox: new ca(-.5,0,1,2),
                    boundingBox: [{
                        value: [new ca(-.5,0,1,2)]
                    }],
                    sway: 1,
                    maxHealth: 10
                };
                a.h.cotton_small = b;
                a = da.objectData;
                b = {
                    name: x.get("CHEST"),
                    offsetFromOrigin: new W(.5,0),
                    textureBoundingBox: new ca(-.5,0,1,1),
                    boundingBox: [{
                        value: [new ca(-.5,0,1,1)]
                    }],
                    maxHealth: 50
                };
                a.h.chest = b;
                a = da.objectData;
                b = {
                    name: x.get("CAMPFIRE"),
                    offsetFromOrigin: new W(1.5,0),
                    textureBoundingBox: new ca(-1.5,0,3,2),
                    boundingBox: [{
                        value: [new ca(-1.5,0,3,2)]
                    }],
                    collisionBox: [{
                        value: [new ca(-1.5,0,3,.25)]
                    }],
                    maxHealth: 50
                };
                a.h.campfire = b;
                a = da.objectData;
                b = x.get("DOOR");
                var c = new W(.5,0)
                  , f = new ca(-.5,0,1,2)
                  , h = new p;
                h.h.isClosed = 1;
                var q = {
                    conditions: h,
                    value: [new ca(-.5,0,1,2)]
                };
                h = new p;
                h.h.isClosed = 0;
                h.h.direction = -1;
                var I = {
                    conditions: h,
                    value: [new ca(-.875,0,1,2)]
                };
                h = new p;
                h.h.isClosed = 0;
                h.h.direction = 1;
                q = [q, I, {
                    conditions: h,
                    value: [new ca(-.125,0,1,2)]
                }];
                h = new p;
                h.h.isClosed = 1;
                q = {
                    name: b,
                    offsetFromOrigin: c,
                    textureBoundingBox: f,
                    boundingBox: q,
                    collisionBox: [{
                        conditions: h,
                        value: [new ca(-.125,0,.25,2)]
                    }],
                    maxHealth: 50
                };
                a.h.door_wood = q;
                a = da.objectData;
                b = {
                    name: x.get("BED"),
                    offsetFromOrigin: new W(1,0),
                    textureBoundingBox: new ca(-1,0,2,1),
                    boundingBox: [{
                        value: [new ca(-1,0,2,.625)]
                    }],
                    collisionBox: [{
                        value: [new ca(-1,0,2,.625)]
                    }],
                    maxHealth: 50
                };
                a.h.bed = b;
                a = da.objectData;
                b = {
                    name: x.get("NOTHING"),
                    offsetFromOrigin: new W,
                    textureBoundingBox: new ca,
                    boundingBox: [{
                        value: []
                    }]
                };
                a.h[""] = b
            }
            ;
            var ba = function() {};
            g.Palette = ba;
            ba.__name__ = "Palette";
            ba.generateWoolColors = function() {
                var a = new p
                  , b = {
                    array: [1, 1, 1],
                    name: x.get("WHITE")
                };
                a.h.white = b;
                b = {
                    array: [.5, .5, .5],
                    name: x.get("GREY")
                };
                a.h.grey = b;
                b = {
                    array: [.2, .2, .2],
                    name: x.get("BLACK")
                };
                a.h.black = b;
                b = {
                    array: [.2, .6, 1],
                    name: x.get("CYAN")
                };
                a.h.cyan = b;
                b = {
                    array: [0, 0, 1],
                    name: x.get("BLUE")
                };
                a.h.blue = b;
                b = {
                    array: [.5, 1, .5],
                    name: x.get("LIGHT_GREEN")
                };
                a.h["light green"] = b;
                b = {
                    array: [0, 1, 0],
                    name: x.get("GREEN")
                };
                a.h.green = b;
                b = {
                    array: [1, .5, .5],
                    name: x.get("PINK")
                };
                a.h.pink = b;
                b = {
                    array: [1, 0, 0],
                    name: x.get("RED")
                };
                a.h.red = b;
                b = {
                    array: [1, .5, 0],
                    name: x.get("ORANGE")
                };
                a.h.orange = b;
                b = {
                    array: [1, 1, 0],
                    name: x.get("YELLOW")
                };
                a.h.yellow = b;
                b = {
                    array: [1, 0, 1],
                    name: x.get("VIOLET")
                };
                a.h.violet = b;
                b = {
                    array: [1, 0, .5],
                    name: x.get("PURPLE")
                };
                a.h.purple = b;
                b = {
                    array: [.5, 0, 0],
                    name: x.get("BROWN")
                };
                a.h.brown = b;
                ba.woolColors = a
            }
            ;
            ba.getWoolColor = function(a) {
                null == ba.woolColors && ba.generateWoolColors();
                return ba.woolColors.h[a]
            }
            ;
            var Y = function() {};
            g.Reflect = Y;
            Y.__name__ = "Reflect";
            Y.field = function(a, b) {
                try {
                    return a[b]
                } catch (c) {
                    return null
                }
            }
            ;
            Y.fields = function(a) {
                var b = [];
                if (null != a) {
                    var c = Object.prototype.hasOwnProperty, f;
                    for (f in a)
                        "__id__" != f && "hx__closures__" != f && c.call(a, f) && b.push(f)
                }
                return b
            }
            ;
            Y.isFunction = function(a) {
                return "function" == typeof a ? !(a.__name__ || a.__ename__) : !1
            }
            ;
            Y.compare = function(a, b) {
                return a == b ? 0 : a > b ? 1 : -1
            }
            ;
            Y.isEnumValue = function(a) {
                return null != a ? null != a.__enum__ : !1
            }
            ;
            Y.deleteField = function(a, b) {
                if (!Object.prototype.hasOwnProperty.call(a, b))
                    return !1;
                delete a[b];
                return !0
            }
            ;
            var Ma = function(a, b) {
                this.startHeight = this.biomeSpot = -1;
                this.biome = null;
                this.genStage = 1;
                this.generated = !1;
                this.worldChunks = new p;
                this.blockRegistry = [];
                this.isLoaded = !1;
                this.nextSave = this.unloadTimeout = 0;
                this.needsSave = !1;
                this.world = a;
                this.x = b;
                this.boop()
            };
            g.Region = Ma;
            Ma.__name__ = "Region";
            Ma.prototype = {
                init: function() {
                    var a = this;
                    new uc("/MineBlocks2/saves/" + this.world.saveName + "/" + this.x,"/",function(b) {
                        a.storage = b;
                        a.load()
                    }
                    )
                },
                generate: function() {
                    this.isLoaded && E.generate(this, Sa.currentGame)
                },
                boop: function() {
                    this.unloadTimeout = 30
                },
                entityObject: function(a) {
                    null == a && (a = "mob");
                    switch (a) {
                    case "drop":
                        return this.drops;
                    case "mob":
                        return this.mobs;
                    case "object":
                        return this.objects
                    }
                    return new p
                },
                load: function() {
                    var a = this.storage.data;
                    if (null == this.storage.data.h.generated)
                        this.isLoaded = !0;
                    else {
                        this.blockRegistry = a.h.registry;
                        this.generated = a.h.generated;
                        this.genStage = a.h.genStage;
                        this.biome = a.h.biome;
                        this.startHeight = a.h.startHeight;
                        this.biomeSpot = a.h.biomeSpot;
                        if (null != a.h.objects) {
                            null == this.objects && (this.objects = new p);
                            for (var b = Object.keys(ja.__cast(a.h.objects, p).h), c = b.length, f = 0; f < c; ) {
                                var h = b[f++]
                                  , q = ja.__cast(a.h.objects, p).h[h];
                                this.world.objects.h[h] = q;
                                this.objects.h[h] = q
                            }
                        }
                        if (null != a.h.timers)
                            for (null == this.timers && (this.timers = new p),
                            b = Object.keys(ja.__cast(a.h.timers, p).h),
                            c = b.length,
                            f = 0; f < c; )
                                h = b[f++],
                                q = ja.__cast(a.h.timers, p).h[h],
                                this.world.timers.h[h] = q,
                                this.timers.h[h] = q;
                        if (null != a.h.mobs)
                            for (null == this.mobs && (this.mobs = new p),
                            b = Object.keys(ja.__cast(a.h.mobs, p).h),
                            c = b.length,
                            f = 0; f < c; )
                                h = b[f++],
                                q = ja.__cast(a.h.mobs, p).h[h],
                                this.world.mobs.h[h] = q,
                                this.mobs.h[h] = q;
                        if (null != a.h.drops)
                            for (null == this.drops && (this.drops = new p),
                            b = Object.keys(ja.__cast(a.h.drops, p).h),
                            c = b.length,
                            f = 0; f < c; )
                                h = b[f++],
                                q = ja.__cast(a.h.drops, p).h[h],
                                this.world.drops.h[h] = q,
                                this.drops.h[h] = q;
                        this.isLoaded = !0;
                        if (null != a.h.worldChunks)
                            for (a = ja.__cast(a.h.worldChunks, p),
                            b = Object.keys(a.h),
                            c = b.length,
                            f = 0; f < c; ) {
                                h = b[f++];
                                q = Object.keys(ja.__cast(a.h[h], p).h);
                                for (var I = q.length, d = 0; d < I; )
                                    this.world.createChunk(H.parseInt(h), H.parseInt(q[d++]))
                            }
                    }
                },
                save: function(a) {
                    null == a && (a = !1);
                    this.nextSave = X.randomNumber(15, 30);
                    if (this.needsSave) {
                        this.needsSave = !1;
                        var b = this.storage.data;
                        b.h.version = 1;
                        b.h.registry = this.blockRegistry;
                        b.h.generated = this.generated;
                        b.h.genStage = this.genStage;
                        b.h.biome = this.biome;
                        b.h.startHeight = this.startHeight;
                        b.h.biomeSpot = this.biomeSpot;
                        if (null != this.objects) {
                            null == b.h.objects && (b.h.objects = new p);
                            for (var c = Object.keys(this.objects.h), f = c.length, h = 0; h < f; ) {
                                var q = c[h++];
                                ja.__cast(b.h.objects, p).h[q] = this.objects.h[q]
                            }
                        }
                        if (null != this.timers)
                            for (null == b.h.timers && (b.h.timers = new p),
                            c = Object.keys(this.timers.h),
                            f = c.length,
                            h = 0; h < f; )
                                q = c[h++],
                                ja.__cast(b.h.timers, p).h[q] = this.timers.h[q];
                        if (null != this.mobs)
                            for (null == b.h.mobs && (b.h.mobs = new p),
                            c = Object.keys(this.mobs.h),
                            f = c.length,
                            h = 0; h < f; )
                                q = c[h++],
                                ja.__cast(b.h.mobs, p).h[q] = this.mobs.h[q];
                        if (null != this.drops)
                            for (null == b.h.drops && (b.h.drops = new p),
                            c = Object.keys(this.drops.h),
                            f = c.length,
                            h = 0; h < f; )
                                q = c[h++],
                                ja.__cast(b.h.drops, p).h[q] = this.drops.h[q];
                        if (a)
                            for (a = Object.keys(this.worldChunks.h),
                            b = a.length,
                            c = 0; c < b; ) {
                                f = a[c++];
                                h = Object.keys(this.worldChunks.h[f].h);
                                q = h.length;
                                for (var I = 0; I < q; )
                                    this.saveChunk(this.worldChunks.h[f].h[h[I++]])
                            }
                        this.storage.save()
                    }
                },
                unload: function() {
                    this.save(!0);
                    if (null != this.objects)
                        for (var a = Object.keys(this.objects.h), b = a.length, c = 0; c < b; ) {
                            var f = a[c++]
                              , h = this.world.objects;
                            Object.prototype.hasOwnProperty.call(h.h, f) && delete h.h[f]
                        }
                    if (null != this.timers)
                        for (a = Object.keys(this.timers.h),
                        b = a.length,
                        c = 0; c < b; )
                            f = a[c++],
                            h = this.world.timers,
                            Object.prototype.hasOwnProperty.call(h.h, f) && delete h.h[f];
                    if (null != this.mobs)
                        for (a = Object.keys(this.mobs.h),
                        b = a.length,
                        c = 0; c < b; )
                            f = a[c++],
                            h = this.world.mobs,
                            Object.prototype.hasOwnProperty.call(h.h, f) && delete h.h[f];
                    if (null != this.drops)
                        for (a = Object.keys(this.drops.h),
                        b = a.length,
                        c = 0; c < b; )
                            f = a[c++],
                            h = this.world.drops,
                            Object.prototype.hasOwnProperty.call(h.h, f) && delete h.h[f];
                    a = Object.keys(this.worldChunks.h);
                    b = a.length;
                    for (c = 0; c < b; )
                        if (f = a[c++],
                        null != this.world.worldChunks.h[null == f ? "null" : "" + f])
                            for (var q = Object.keys(this.worldChunks.h[null == f ? "null" : "" + f].h), I = q.length, d = 0; d < I; ) {
                                var g = q[d++];
                                h = this.world.worldChunks.h[null == f ? "null" : "" + f];
                                g = null == g ? "null" : "" + g;
                                Object.prototype.hasOwnProperty.call(h.h, g) && delete h.h[g]
                            }
                },
                addWorldChunk: function(a) {
                    null == this.worldChunks.h[null == a.chunkX ? "null" : "" + a.chunkX] && (this.worldChunks.h[null == a.chunkX ? "null" : "" + a.chunkX] = new p);
                    this.worldChunks.h[null == a.chunkX ? "null" : "" + a.chunkX].h[null == a.chunkY ? "null" : "" + a.chunkY] = a
                },
                saveChunk: function(a) {
                    var b = this.storage.data
                      , c = a.chunkX;
                    a = a.chunkY;
                    null == b.h.worldChunks && (b.h.worldChunks = new p);
                    b = b.h.worldChunks;
                    null == b.h[null == c ? "null" : "" + c] && (b.h[null == c ? "null" : "" + c] = new p);
                    b = b.h[null == c ? "null" : "" + c];
                    c = this.worldChunks.h[null == c ? "null" : "" + c].h[null == a ? "null" : "" + a].serialize();
                    b.h[null == a ? "null" : "" + a] = c;
                    this.needsSave = !0
                },
                loadWorldChunk: function(a, b, c) {
                    var f = this.storage.data.h.worldChunks;
                    null != f && null != f.h[null == b ? "null" : "" + b] && null != f.h[null == b ? "null" : "" + b].h[null == c ? "null" : "" + c] && a.deserialize(f.h[null == b ? "null" : "" + b].h[null == c ? "null" : "" + c]);
                    a.isLoaded = !0
                },
                __class__: Ma
            };
            var fa = function() {};
            g.SaveManager = fa;
            fa.__name__ = "SaveManager";
            fa.editWorld = function(a, b) {
                J.saveList.h[a].visibleName = b;
                J.saveSaveList()
            }
            ;
            fa.deleteWorld = function(a, b) {
                new uc("/MineBlocks2/saves/" + a + "/data","/",function(c) {
                    var f = c.data.h.savedRegions
                      , h = {
                        value: 0
                    };
                    if (null != f) {
                        for (var q = Object.keys(f.h).length, I = 0; I < q; )
                            ++I,
                            h.value++;
                        if (0 < h.value) {
                            var d = f.h
                              , g = Object.keys(d);
                            q = g.length;
                            for (I = 0; I < q; )
                                fa.deleteSaveRegion(c, a, a + "/" + H.string(f.h[d[g[I++]]]), h, b);
                            return
                        }
                    }
                    fa.finishDeleteWorld(c, a, b)
                }
                )
            }
            ;
            fa.deleteSaveRegion = function(a, b, c, f, h) {
                new uc("/MineBlocks2/saves/" + c,"/",function(c) {
                    c.destroy();
                    f.value--;
                    0 == f.value && fa.finishDeleteWorld(a, b, h)
                }
                )
            }
            ;
            fa.finishDeleteWorld = function(a, b, c) {
                a.destroy();
                a = J.saveList;
                Object.prototype.hasOwnProperty.call(a.h, b) && delete a.h[b];
                J.saveSaveList();
                null != c && c()
            }
            ;
            var S = function() {};
            g.Sounds = S;
            S.__name__ = "Sounds";
            S.playSound = function(a, b, c) {
                xa.getSound(a).play(b, c)
            }
            ;
            var H = function() {};
            g.Std = H;
            H.__name__ = "Std";
            H.string = function(a) {
                return ja.__string_rec(a, "")
            }
            ;
            H.parseInt = function(a) {
                a = parseInt(a);
                return isNaN(a) ? null : a
            }
            ;
            var Lb = function() {};
            g["_String.String_Impl_"] = Lb;
            Lb.__name__ = "_String.String_Impl_";
            Lb.fromCharCode = function(a) {
                return String.fromCodePoint(a)
            }
            ;
            var pb = function() {
                this.b = ""
            };
            g.StringBuf = pb;
            pb.__name__ = "StringBuf";
            pb.prototype = {
                __class__: pb
            };
            var ta = function() {};
            g.StringTools = ta;
            ta.__name__ = "StringTools";
            ta.startsWith = function(a, b) {
                return a.length >= b.length ? 0 == a.lastIndexOf(b, 0) : !1
            }
            ;
            ta.endsWith = function(a, b) {
                var c = b.length
                  , f = a.length;
                return f >= c ? a.indexOf(b, f - c) == f - c : !1
            }
            ;
            ta.isSpace = function(a, b) {
                a = K.cca(a, b);
                return 8 < a && 14 > a ? !0 : 32 == a
            }
            ;
            ta.ltrim = function(a) {
                for (var b = a.length, c = 0; c < b && ta.isSpace(a, c); )
                    ++c;
                return 0 < c ? K.substr(a, c, b - c) : a
            }
            ;
            ta.rtrim = function(a) {
                for (var b = a.length, c = 0; c < b && ta.isSpace(a, b - c - 1); )
                    ++c;
                return 0 < c ? K.substr(a, 0, b - c) : a
            }
            ;
            ta.trim = function(a) {
                return ta.ltrim(ta.rtrim(a))
            }
            ;
            ta.replace = function(a, b, c) {
                return a.split(b).join(c)
            }
            ;
            var za = function() {};
            g.TextCache = za;
            za.__name__ = "TextCache";
            za.get = function(a, b, c, f, h, q, I, d, g) {
                null == d && (d = zb.LEFT);
                var l = !1;
                if (Object.prototype.hasOwnProperty.call(za.entityCache.h, a))
                    a = za.entityCache.h[a],
                    a.entity.textAlignment = d,
                    b != a.entity.text && (l = !0),
                    a.entity.setText(b),
                    a.expires = 10,
                    null == q || q.equals(a.color) || (a.entity.setColor(q),
                    a.color = q);
                else {
                    null == q && (q = new Pa(-16777216));
                    var Zd = za.entityCache;
                    b = {
                        entity: new ed(null != h ? h : sa.get_jaggedDreams(),b,q,d),
                        color: q,
                        expires: 10,
                        aliasBleed: 1.5
                    };
                    Zd.h[a] = b;
                    a = za.entityCache.h[a];
                    a.entity.layer = c
                }
                null != g && g != a.aliasBleed && (a.aliasBleed = g);
                if (null != I && I != a.scale) {
                    c = null != f ? new va(f.x,f.y,a.entity.transform.getZ()) : new va(a.entity.transform.getX(),a.entity.transform.getY(),a.entity.transform.getZ());
                    a.entity.transform.reset().scale(I, I, I).setPosition(c.x, c.y, c.z);
                    if (null == a.scale || Math.floor(I) == I != (Math.floor(a.scale) == a.scale))
                        Math.floor(I) != I ? (a.entity.shaderProgram = Hb.getShader(),
                        a.entity.setUniform("aliasBleed", a.aliasBleed / 2)) : a.entity.shaderProgram = Tb.getShader(Ia.NORMAL),
                        a.entity.updateShaderAttribs();
                    a.scale = I;
                    d == zb.RIGHT && a.entity.transform.translate(-a.entity.calculatedWidth * I, 0)
                } else
                    null == f || a.entity.transform.getX() == f.x && a.entity.transform.getY() == f.y ? l && d == zb.RIGHT && a.entity.transform.translate(-a.entity.calculatedWidth * I, 0) : (a.point = f,
                    a.entity.transform.setPosition(f.x, f.y, a.entity.transform.getZ()),
                    d == zb.RIGHT && a.entity.transform.translate(-a.entity.calculatedWidth * I, 0));
                return a.entity
            }
            ;
            za.updateExpiration = function() {
                for (var a = Object.keys(za.entityCache.h), b = a.length, c = 0; c < b; ) {
                    var f = a[c++];
                    if (0 >= --za.entityCache.h[f].expires) {
                        var h = za.entityCache;
                        Object.prototype.hasOwnProperty.call(h.h, f) && delete h.h[f]
                    }
                }
            }
            ;
            var L = z.TextureLoadingState = {
                __ename__: "TextureLoadingState",
                __constructs__: null,
                DONE: {
                    _hx_name: "DONE",
                    _hx_index: 0,
                    __enum__: "TextureLoadingState",
                    toString: m
                },
                INIT: {
                    _hx_name: "INIT",
                    _hx_index: 1,
                    __enum__: "TextureLoadingState",
                    toString: m
                },
                LOADING_IMAGES: {
                    _hx_name: "LOADING_IMAGES",
                    _hx_index: 2,
                    __enum__: "TextureLoadingState",
                    toString: m
                },
                PROCESSING: {
                    _hx_name: "PROCESSING",
                    _hx_index: 3,
                    __enum__: "TextureLoadingState",
                    toString: m
                }
            };
            L.__constructs__ = [L.DONE, L.INIT, L.LOADING_IMAGES, L.PROCESSING];
            var C = function() {};
            g.Textures = C;
            C.__name__ = "Textures";
            C.get = function(a, b) {
                null == b && (b = "");
                "" != b && (a += "[" + b + "]");
                return Object.prototype.hasOwnProperty.call(C.blockTextureMap.h, a) ? C.blockTextureMap.h[a] : C.blockTextureMap.h.missing
            }
            ;
            C.hasTexture = function(a, b) {
                null == b && (b = "");
                "" != b && (a += "[" + b + "]");
                return Object.prototype.hasOwnProperty.call(C.blockTextureMap.h, a)
            }
            ;
            C.texturePackInit = function() {
                C.texturesScene = new yb(0,0);
                C.texturePackJson = {};
                try {
                    C.texturePackJson = JSON.parse(la.getText("assets/images/textures.json"))
                } catch (q) {
                    ha.trace("Couldn't load texture pack JSON! " + H.string(ea.caught(q).unwrap()), {
                        fileName: "src/Textures.hx",
                        lineNumber: 60,
                        className: "Textures",
                        methodName: "texturePackInit"
                    });
                    C.state = L.DONE;
                    return
                }
                C.inputTextures = new p;
                for (var a = 0, b = ja.__cast(C.texturePackJson.images, Array).length; a < b; ) {
                    var c = C.texturePackJson.images[a++]
                      , f = C.inputTextures
                      , h = c.meta.file;
                    c = xa.loadImage("assets/images/" + c.meta.file);
                    f.h[h] = c
                }
                C.state = L.LOADING_IMAGES
            }
            ;
            C.browseForTexturesFile = function() {
                Db.openBytes(["png"], function(a, b) {
                    a = Ja.loadFromBase64(Gb.encode(a), "image/png");
                    a.onComplete(function(a) {
                        a = (new hb).fromData(a);
                        512 == a.width && 256 == a.height ? (J.saveTexturePack(a),
                        C.texturePackError = "",
                        C.texturePackSuccess = x.get("TEXTURE_PACK_SUCCESS"),
                        C.inputTextures.h["textures.png"] = a,
                        C.texturePackProcess()) : (C.texturePackError = x.get("TEXTURE_PACK_ERROR_SIZE").split("{1}").join("512").split("{2}").join("256"),
                        C.texturePackSuccess = "")
                    });
                    a.onError(function(a) {
                        C.texturePackError = x.get("TEXTURE_PACK_ERROR");
                        C.texturePackSuccess = ""
                    })
                }, function() {
                    C.texturePackError = x.get("TEXTURE_PACK_ERROR");
                    C.texturePackSuccess = ""
                }, !1)
            }
            ;
            C.loadDefaultTextures = function() {
                var a = C.inputTextures
                  , b = xa.getImage("assets/images/textures.png");
                a.h["textures.png"] = b;
                C.texturePackProcess();
                J.saveTexturePack(null)
            }
            ;
            C.texturePackCheckImages = function() {
                for (var a = C.inputTextures.h, b = Object.keys(a), c = b.length, f = 0; f < c; )
                    if (!a[b[f++]].imageLoaded)
                        return !1;
                C.texturePackProcess();
                return !0
            }
            ;
            C.texturePackProcess = function() {
                C.texturesScene.setup2D(1024, 1024, new Pa(0));
                C.texturesScene.clear();
                C.textures = (new hb).fromScene(C.texturesScene);
                C.texturesOccupied = new ra;
                for (var a = 0, b = Math.pow(64, 2); a < b; )
                    C.texturesUnoccupied.h[a++] = !0;
                var c = new W;
                a = 0;
                for (b = ja.__cast(C.texturePackJson.images, Array).length; a < b; )
                    for (var f = C.texturePackJson.images[a++], h = 0, q = Y.fields(f.textures); h < q.length; ) {
                        var I = q[h];
                        ++h;
                        var d = f.meta.unit_size;
                        var g = null != Y.field(f.textures, I).width ? Y.field(f.textures, I).width * d : d;
                        var l = null != Y.field(f.textures, I).height ? Y.field(f.textures, I).height * d : d;
                        C.nearestUnoccupied(c, C.texturesUnoccupied, Math.ceil(g / 16), Math.ceil(l / 16));
                        C.texturesScene.draw2D(C.inputTextures.h[f.meta.file], new W(16 * c.x,16 * c.y), new ca(Y.field(f.textures, I).x * d,Y.field(f.textures, I).y * d,g,l), null, null, null, 1, 1 == Y.field(f.textures, I).flipY != (1 == Y.field(f.textures, I).flipX), 0, !0, !0, 1 == Y.field(f.textures, I).flipX ? Math.PI : 0);
                        d = 0;
                        for (var p = Math.ceil(g / 16); d < p; )
                            for (var y = d++, m = 0, k = Math.ceil(l / 16); m < k; ) {
                                var v = m++;
                                C.texturesUnoccupied.remove(64 * (c.y + v) + (c.x + y));
                                C.texturesOccupied.h[64 * (c.y + v) + (c.x + y)] = I
                            }
                        d = C.blockTextureMap;
                        g = new ca(16 * c.x,16 * c.y,g,l);
                        d.h[I] = g
                    }
                c = C.textures.clone(!0);
                a = 0;
                for (b = Y.fields(C.texturePackJson.compositing); a < b.length; )
                    if (f = b[a],
                    ++a,
                    Object.prototype.hasOwnProperty.call(C.blockTextureMap.h, f)) {
                        I = [];
                        g = Y.field(C.texturePackJson.compositing, f);
                        h = 0;
                        for (q = g.length; h < q; )
                            l = h++,
                            Object.prototype.hasOwnProperty.call(g[l], "id") && Object.prototype.hasOwnProperty.call(C.blockTextureMap.h, Y.field(g[l], "id")) && I.push(new W(C.blockTextureMap.h[Y.field(g[l], "id")].x,C.blockTextureMap.h[Y.field(g[l], "id")].y));
                        C.stackTextures(c, C.texturesScene, C.blockTextureMap.h[f], I)
                    }
                c.destroy();
                c = C.textures.clone();
                C.texturesScene.clear();
                C.texturesScene.draw2D(c);
                C.texturesScene.render();
                C.state = L.DONE
            }
            ;
            C.nearestUnoccupied = function(a, b, c, f) {
                for (var h, q = b.keys(); q.hasNext(); ) {
                    var I = q.next();
                    h = !1;
                    if (!(I % 64 > 64 - c)) {
                        for (var d = 0; d < c; ) {
                            for (var g = d++, l = 0; l < f; )
                                b.h.hasOwnProperty(I + 64 * l++ + g) || (h = !0);
                            if (h)
                                break
                        }
                        if (!h) {
                            a.set(I % 64, Math.floor(I / 64));
                            return
                        }
                    }
                }
                ha.trace("Error! Failed to find available texture spot.", {
                    fileName: "src/Textures.hx",
                    lineNumber: 216,
                    className: "Textures",
                    methodName: "nearestUnoccupied"
                })
            }
            ;
            C.stackTextures = function(a, b, c, f) {
                b.fillRect(new ca(c.x,c.y,c.width,c.height), Pa.clear, 0, !0);
                for (var h = 0; h < f.length; ) {
                    var q = f[h];
                    ++h;
                    b.draw2D(a, new W(c.x,c.y), new ca(q.x,q.y,c.width,c.height))
                }
            }
            ;
            var O = z.ValueType = {
                __ename__: "ValueType",
                __constructs__: null,
                TNull: {
                    _hx_name: "TNull",
                    _hx_index: 0,
                    __enum__: "ValueType",
                    toString: m
                },
                TInt: {
                    _hx_name: "TInt",
                    _hx_index: 1,
                    __enum__: "ValueType",
                    toString: m
                },
                TFloat: {
                    _hx_name: "TFloat",
                    _hx_index: 2,
                    __enum__: "ValueType",
                    toString: m
                },
                TBool: {
                    _hx_name: "TBool",
                    _hx_index: 3,
                    __enum__: "ValueType",
                    toString: m
                },
                TObject: {
                    _hx_name: "TObject",
                    _hx_index: 4,
                    __enum__: "ValueType",
                    toString: m
                },
                TFunction: {
                    _hx_name: "TFunction",
                    _hx_index: 5,
                    __enum__: "ValueType",
                    toString: m
                },
                TClass: (B = function(a) {
                    return {
                        _hx_index: 6,
                        c: a,
                        __enum__: "ValueType",
                        toString: m
                    }
                }
                ,
                B._hx_name = "TClass",
                B.__params__ = ["c"],
                B),
                TEnum: (B = function(a) {
                    return {
                        _hx_index: 7,
                        e: a,
                        __enum__: "ValueType",
                        toString: m
                    }
                }
                ,
                B._hx_name = "TEnum",
                B.__params__ = ["e"],
                B),
                TUnknown: {
                    _hx_name: "TUnknown",
                    _hx_index: 8,
                    __enum__: "ValueType",
                    toString: m
                }
            };
            O.__constructs__ = [O.TNull, O.TInt, O.TFloat, O.TBool, O.TObject, O.TFunction, O.TClass, O.TEnum, O.TUnknown];
            var v = function() {};
            g.Type = v;
            v.__name__ = "Type";
            v.createInstance = function(a, b) {
                return new (Function.prototype.bind.apply(a, [null].concat(b)))
            }
            ;
            v.createEnum = function(a, b, c) {
                var f = Y.field(a, b);
                if (null == f)
                    throw ea.thrown("No such constructor " + b);
                if (Y.isFunction(f)) {
                    if (null == c)
                        throw ea.thrown("Constructor " + b + " need parameters");
                    return f.apply(a, c)
                }
                if (null != c && 0 != c.length)
                    throw ea.thrown("Constructor " + b + " does not need parameters");
                return f
            }
            ;
            v.typeof = function(a) {
                switch (typeof a) {
                case "boolean":
                    return O.TBool;
                case "function":
                    return a.__name__ || a.__ename__ ? O.TObject : O.TFunction;
                case "number":
                    return Math.ceil(a) == a % 2147483648 ? O.TInt : O.TFloat;
                case "object":
                    if (null == a)
                        return O.TNull;
                    var b = a.__enum__;
                    if (null != b)
                        return O.TEnum(z[b]);
                    a = ja.getClass(a);
                    return null != a ? O.TClass(a) : O.TObject;
                case "string":
                    return O.TClass(String);
                case "undefined":
                    return O.TNull;
                default:
                    return O.TUnknown
                }
            }
            ;
            v.enumParameters = function(a) {
                var b = z[a.__enum__].__constructs__[a._hx_index].__params__;
                if (null != b) {
                    for (var c = [], f = 0; f < b.length; ) {
                        var h = b[f];
                        ++f;
                        c.push(a[h])
                    }
                    return c
                }
                return []
            }
            ;
            var Na = function() {};
            g.UI = Na;
            Na.__name__ = "UI";
            Na.mouseIsOver = function(a, b, c, f) {
                return d.Instance.mouse.x > Math.max(0, a) && d.Instance.mouse.x < Math.min(d.Instance.scene.get_width(), a + c) && d.Instance.mouse.y > Math.max(0, b) ? d.Instance.mouse.y < Math.min(d.Instance.scene.get_height(), b + f) : !1
            }
            ;
            var Q = {
                gt: function(a, b) {
                    var c = 0 > a;
                    return c != 0 > b ? c : a > b
                },
                gte: function(a, b) {
                    var c = 0 > a;
                    return c != 0 > b ? c : a >= b
                },
                toFloat: function(a) {
                    return 0 > a ? 4294967296 + a : a + 0
                }
            }
              , Rb = function() {
                this.cloudiness = 20;
                this.moon2Spot = this.moon3Spot = this.skySpot = 0;
                this.timeOfDay = 10;
                this.dayNum = 0
            };
            g.WeatherAndTime = Rb;
            Rb.__name__ = "WeatherAndTime";
            Rb.prototype = {
                tickTimeOfDay: function() {
                    this.timeOfDay += .08333 * d.Instance.timeDelta;
                    this.moon2Spot = T.modulus(.6 * (100 * this.dayNum + this.timeOfDay), 100);
                    this.moon3Spot = T.modulus(.3 * (100 * this.dayNum + this.timeOfDay), 100);
                    100 <= this.timeOfDay && (this.timeOfDay -= 100,
                    this.dayNum++)
                },
                tickSkySpot: function() {
                    this.skySpot += 2E-4 * d.Instance.timeDelta;
                    100 <= this.skySpot && (this.skySpot -= 100)
                },
                isDay: function() {
                    return 50 > this.timeOfDay
                },
                __class__: Rb
            };
            var Sa = function() {
                this.collisionObject = {
                    type: "",
                    id: ""
                };
                this.loadedChunks = new p;
                this.worldChunks = new p;
                this.savingChunks = new p;
                this.loadedRegions = new ra;
                this.toGenerate = new ra;
                this.spawnSpot = new W(50,-E.worldHeight + .5);
                this.editLayer = 1;
                this.selectedInventoryItem = 0;
                this.gameStartTimer = (new Date).getTime() / 1E3;
                this.gameTime = this.seed = 0;
                this.drops = new p;
                this.timers = new p;
                this.objects = new p;
                this.mobs = new p;
                this.inventory = R.resetInventory();
                this.gameMode = "survival";
                this.saveName = "";
                this.weatherAndTime = new Rb
            };
            g.World = Sa;
            Sa.__name__ = "World";
            Sa.fromNew = function(a, b, c, f) {
                var h = new Sa;
                h.saveName = a;
                h.saveFile = b;
                h.seed = c;
                h.gameMode = f;
                h.gameStartTimer = (new Date).getTime() / 1E3;
                h.newMob("char", "char", "char", 0, 0, 100);
                return h
            }
            ;
            Sa.fromSave = function(a, b, c) {
                var f = new Sa;
                f.saveName = a;
                new uc("/MineBlocks2/saves/" + a + "/data","/",function(a) {
                    null == a.data.h["char"] ? c() : (f.saveFile = a,
                    f.load(),
                    b(f))
                }
                )
            }
            ;
            Sa.prototype = {
                runSaveCheck: function() {
                    if (Math.floor(this.gameTime - d.Instance.timeDelta) != Math.floor(this.gameTime)) {
                        for (var a = this.savingChunks.h, b = Object.keys(a), c = b.length, f = 0; f < c; ) {
                            var h = b[f++]
                              , q = a[h];
                            q.chunk.region.boop();
                            if (0 >= --q.timeout || 0 == X.randomNumber(0, 10)) {
                                var I = q.chunk.region;
                                null == this.saveFile.data.h.savedRegions && (this.saveFile.data.h.savedRegions = new p);
                                var g = null == I.x ? "null" : "" + I.x;
                                ja.__cast(this.saveFile.data.h.savedRegions, p).h[g] = g;
                                I.saveChunk(q.chunk);
                                q = this.savingChunks;
                                Object.prototype.hasOwnProperty.call(q.h, h) && delete q.h[h]
                            }
                        }
                        a = this.loadedRegions;
                        for (b = a.keys(); b.hasNext(); )
                            h = b.next(),
                            q = a.get(h),
                            q.isLoaded && (0 >= --q.unloadTimeout ? (q.unload(),
                            this.loadedRegions.remove(h),
                            this.saveWorldInfo()) : 0 >= --q.nextSave && (q.save(!0),
                            this.saveWorldInfo()))
                    }
                },
                saveAll: function() {
                    for (var a = this.savingChunks.h, b = Object.keys(a), c = b.length, f = 0; f < c; ) {
                        var h = b[f++]
                          , q = a[h]
                          , I = q.chunk.region;
                        null == this.saveFile.data.h.savedRegions && (this.saveFile.data.h.savedRegions = new p);
                        var d = null == I.x ? "null" : "" + I.x;
                        ja.__cast(this.saveFile.data.h.savedRegions, p).h[d] = d;
                        I.saveChunk(q.chunk);
                        q = this.savingChunks;
                        Object.prototype.hasOwnProperty.call(q.h, h) && delete q.h[h]
                    }
                    a = this.loadedRegions;
                    for (b = a.keys(); b.hasNext(); )
                        h = b.next(),
                        q = a.get(h),
                        q.isLoaded && (q.unload(),
                        this.loadedRegions.remove(h));
                    this.saveWorldInfo()
                },
                saveWorldInfo: function() {
                    if (null == this.saveFile)
                        return !1;
                    this.saveFile.data.h.gameMode = this.gameMode;
                    this.saveFile.data.h.seed = this.seed;
                    this.saveFile.data.h.dayNum = this.weatherAndTime.dayNum;
                    this.saveFile.data.h.timeOfDay = this.weatherAndTime.timeOfDay;
                    this.saveFile.data.h.moon2Spot = this.weatherAndTime.moon2Spot;
                    this.saveFile.data.h.moon3Spot = this.weatherAndTime.moon3Spot;
                    this.saveFile.data.h.cloudiness = this.weatherAndTime.cloudiness;
                    this.saveFile.data.h.gameTime = this.gameTime;
                    this.saveFile.data.h.editLayer = this.editLayer;
                    this.saveFile.data.h.selectedInventoryItem = this.selectedInventoryItem;
                    var a = new p;
                    a.h.x = this.spawnSpot.x;
                    a.h.y = this.spawnSpot.y;
                    this.saveFile.data.h.spawnSpot = a;
                    var b = this.saveFile.data
                      , c = this.inventory
                      , f = Array(c.length);
                    a = 0;
                    for (var h = c.length; a < h; ) {
                        var q = a++;
                        f[q] = c[q].serialize()
                    }
                    b.h.inventory = f;
                    this.saveFile.data.h["char"] = this.mobs.h["char"];
                    this.saveFile.save();
                    return !0
                },
                load: function() {
                    if (null == this.saveFile)
                        return !1;
                    this.gameMode = this.saveFile.data.h.gameMode;
                    this.seed = this.saveFile.data.h.seed;
                    this.weatherAndTime.dayNum = this.saveFile.data.h.dayNum;
                    this.weatherAndTime.timeOfDay = this.saveFile.data.h.timeOfDay;
                    this.weatherAndTime.moon2Spot = this.saveFile.data.h.moon2Spot;
                    this.weatherAndTime.moon3Spot = this.saveFile.data.h.moon3Spot;
                    this.weatherAndTime.cloudiness = this.saveFile.data.h.cloudiness;
                    this.gameTime = this.saveFile.data.h.gameTime;
                    isNaN(this.gameTime) && (this.gameTime = 0);
                    this.editLayer = this.saveFile.data.h.editLayer;
                    this.selectedInventoryItem = this.saveFile.data.h.selectedInventoryItem;
                    this.spawnSpot = new W(ja.__cast(this.saveFile.data.h.spawnSpot, p).h.x,ja.__cast(this.saveFile.data.h.spawnSpot, p).h.y);
                    for (var a = ja.__cast(this.saveFile.data.h.inventory, Array), b = Array(a.length), c = 0, f = a.length; c < f; ) {
                        var h = c++;
                        b[h] = Z.deserialize(ja.__cast(a[h], p))
                    }
                    this.inventory = b;
                    c = new p;
                    c.h["char"] = this.saveFile.data.h["char"];
                    this.mobs = c;
                    return !0
                },
                setFG: function(a, b, c, f) {
                    null == f && (f = !0);
                    null == c && (c = "stone");
                    if (0 > b)
                        return !1;
                    var h = Math.floor(a / 8)
                      , q = Math.floor(b / 8)
                      , I = Math.floor(T.modulus(a, 8))
                      , d = Math.floor(T.modulus(b, 8))
                      , g = this.createChunk(h, q);
                    if (null != this.blockEntityCollision(Math.floor(a), Math.floor(b)))
                        return !1;
                    this.appendSavingChunk(g);
                    "air" != g.getBlock(I, d, !0).get_fg() && this.mineFG(a, b, !1, !1);
                    if ("lava" == c)
                        this.setLight(Math.floor(a), Math.floor(b), "radial", 3, 10031360, {
                            type: "block",
                            x: Math.floor(a),
                            y: Math.floor(b),
                            id: c
                        });
                    else if ("flower_bulb" == c)
                        "dirt" != this.getFG(a, b - 1) && "dirt_grass" != this.getFG(a, b - 1) && "dirt_gravel" != this.getFG(a, b - 1) || this.setLight(Math.floor(a), Math.floor(b), "radial", 6, 10092543, {
                            type: "block",
                            x: Math.floor(a),
                            y: Math.floor(b),
                            id: c
                        });
                    else if ("torch" == c) {
                        if (1 != u.get(this.getFG(a, b - 1)).solid)
                            if (1 == u.get(this.getFG(a - 1, b)).solid)
                                this.setDataFG(a, b, "orientation", "left", !1);
                            else if (1 == u.get(this.getFG(a + 1, b)).solid)
                                this.setDataFG(a, b, "orientation", "right", !1);
                            else
                                return !1;
                        this.setLight(Math.floor(a), Math.floor(b), "radial", 9, 16759671, {
                            type: "block",
                            x: Math.floor(a),
                            y: Math.floor(b),
                            id: c
                        })
                    } else if ("sapling_pine" == c || "sapling_birch" == c || "sapling_orange" == c || "cotton" == c)
                        if ("dirt" == this.getFG(a, b - 1) || "dirt_grass" == this.getFG(a, b - 1) || "dirt_gravel" == this.getFG(a, b - 1)) {
                            var l = new p;
                            l.h.chance = 200;
                            l.h.blockX = a;
                            l.h.blockY = b;
                            this.addTimer(a + "x" + b, c, a, b, 5, l)
                        } else
                            return !1;
                    else if ("spk11" == c) {
                        if (1 != u.get(this.getFG(a, b - 1)).solid) {
                            if (1 != u.get(this.getFG(a, b + 1)).solid)
                                return !1;
                            c = "spk12"
                        }
                    } else if ("spk12" == c && 1 != u.get(this.getFG(a, b + 1)).solid) {
                        if (1 != u.get(this.getFG(a, b - 1)).solid)
                            return !1;
                        c = "spk11"
                    }
                    if (null != u.get(c).uniqueUpdate)
                        g.updateBlocks.h["bX" + I + "Y" + d] = {
                            x: I,
                            y: d
                        };
                    else if (null != g.updateBlocks.h["bX" + I + "Y" + d]) {
                        l = g.updateBlocks;
                        var y = "bX" + I + "Y" + d;
                        Object.prototype.hasOwnProperty.call(l.h, y) && delete l.h[y]
                    }
                    g.getBlock(I, d).fg = c;
                    f && (f = 1 == u.get(c).solid,
                    this.unloadChunk(h, q, f),
                    Math.floor((a + 1) / 8) != h && this.unloadChunk(h + 1, q, f),
                    Math.floor((a - 1) / 8) != h && this.unloadChunk(h - 1, q, f),
                    Math.floor((b + 1) / 8) != q && this.unloadChunk(h, q + 1, f),
                    Math.floor((b - 1) / 8) != q && this.unloadChunk(h, q - 1, f),
                    1 != u.get(c).solid && 1 != u.get(c).affectsLighting || this.reloadLightingAround(g, 2));
                    return !0
                },
                setBG: function(a, b, c, f) {
                    null == f && (f = !0);
                    null == c && (c = "stone");
                    if (0 > b)
                        return !1;
                    var h = Math.floor(a / 8)
                      , q = Math.floor(b / 8)
                      , I = Math.floor(T.modulus(a, 8))
                      , d = Math.floor(T.modulus(b, 8))
                      , g = this.createChunk(h, q);
                    this.appendSavingChunk(g);
                    g.getBlock(I, d, !0).bg = c;
                    f && (this.unloadChunk(h, q),
                    Math.floor((a + 1) / 8) != h && this.unloadChunk(h + 1, q),
                    Math.floor((a - 1) / 8) != h && this.unloadChunk(h - 1, q),
                    Math.floor((b + 1) / 8) != q && this.unloadChunk(h, q + 1),
                    Math.floor((b - 1) / 8) != q && this.unloadChunk(h, q - 1),
                    this.reloadLightingAround(g, 2));
                    return !0
                },
                mineFG: function(a, b, c, f) {
                    null == f && (f = !0);
                    null == c && (c = !1);
                    var h = Math.floor(a / 8)
                      , q = Math.floor(b / 8)
                      , I = Math.floor(T.modulus(a, 8))
                      , d = Math.floor(T.modulus(b, 8))
                      , g = this.createChunk(h, q);
                    this.appendSavingChunk(g);
                    var l = g.getBlock(I, d);
                    null != l && (f && (f = 1 == u.get(l.get_fg()).solid,
                    this.unloadChunk(h, q, f),
                    Math.floor((a + 1) / 8) != h && this.unloadChunk(h + 1, q, f),
                    Math.floor((a - 1) / 8) != h && this.unloadChunk(h - 1, q, f),
                    Math.floor((b + 1) / 8) != q && this.unloadChunk(h, q + 1, f),
                    Math.floor((b - 1) / 8) != q && this.unloadChunk(h, q - 1, f),
                    f && this.reloadLightingAround(g, 2)),
                    h = null,
                    "lava" == l.get_fg() || "torch" == l.get_fg() || "flower_bulb" == l.get_fg() ? (null != g.lights && (q = g.lights,
                    f = "bX" + I + "Y" + d,
                    Object.prototype.hasOwnProperty.call(q.h, f) && delete q.h[f]),
                    this.reloadLightingAround(g, 2)) : "wool" == l.get_fg() && (h = new p,
                    q = g.getBlock(I, d).dataFG.h.type,
                    h.h.type = q),
                    q = g.updateBlocks,
                    f = "bX" + I + "Y" + d,
                    Object.prototype.hasOwnProperty.call(q.h, f) && delete q.h[f],
                    c && this.addDrop(!0, l.get_fg(), a, b, 1, h, l.dataFG),
                    l.resetFG());
                    return !0
                },
                mineBG: function(a, b, c, f) {
                    null == f && (f = !0);
                    null == c && (c = !1);
                    var h = Math.floor(a / 8)
                      , q = Math.floor(b / 8)
                      , I = Math.floor(T.modulus(a, 8))
                      , d = Math.floor(T.modulus(b, 8))
                      , g = this.createChunk(h, q);
                    this.appendSavingChunk(g);
                    null != g.getBlock(I, d) && (f && (this.unloadChunk(h, q),
                    Math.floor((a + 1) / 8) != h && this.unloadChunk(h + 1, q),
                    Math.floor((a - 1) / 8) != h && this.unloadChunk(h - 1, q),
                    Math.floor((b + 1) / 8) != q && this.unloadChunk(h, q + 1),
                    Math.floor((b - 1) / 8) != q && this.unloadChunk(h, q - 1),
                    this.reloadLightingAround(g, 2)),
                    f = null,
                    "wool" == this.getBG(a, b) && (f = new p,
                    h = g.getBlock(I, d).dataBG.h.type,
                    f.h.type = h),
                    c && this.addDrop(!0, this.getBG(a, b), a, b, 1, f, g.getBlock(I, d).dataBG),
                    g.getBlock(I, d).resetBG());
                    return !0
                },
                setDataFG: function(a, b, c, f, h, q) {
                    null == q && (q = !1);
                    null == h && (h = !0);
                    null == f && (f = "left");
                    null == c && (c = "orientation");
                    var I = Math.floor(a / 8)
                      , d = Math.floor(b / 8)
                      , g = Math.floor(T.modulus(a, 8))
                      , l = Math.floor(T.modulus(b, 8))
                      , y = this.createChunk(I, d);
                    this.appendSavingChunk(y);
                    g = y.getBlock(g, l);
                    if (null == g)
                        return !1;
                    null == g.dataFG && (g.dataFG = new p);
                    if (g.dataFG.h[c] == f)
                        return !0;
                    g.dataFG.h[c] = f;
                    h && (this.unloadChunk(I, d, q),
                    Math.floor((a + 1) / 8) != I && this.unloadChunk(I + 1, d, q),
                    Math.floor((a - 1) / 8) != I && this.unloadChunk(I - 1, d, q),
                    Math.floor((b + 1) / 8) != d && this.unloadChunk(I, d + 1, q),
                    Math.floor((b - 1) / 8) != d && this.unloadChunk(I, d - 1, q),
                    q && this.reloadLightingAround(y, 2));
                    return !0
                },
                setDataBG: function(a, b, c, f, h, q) {
                    null == q && (q = !1);
                    null == h && (h = !0);
                    null == f && (f = "left");
                    null == c && (c = "orientation");
                    var I = Math.floor(a / 8)
                      , d = Math.floor(b / 8)
                      , g = Math.floor(T.modulus(a, 8))
                      , l = Math.floor(T.modulus(b, 8))
                      , y = this.createChunk(I, d);
                    this.appendSavingChunk(y);
                    g = y.getBlock(g, l);
                    if (null == g)
                        return !1;
                    null == g.dataBG && (g.dataBG = new p);
                    if (g.dataBG.h[c] == f)
                        return !0;
                    g.dataBG.h[c] = f;
                    h && (this.unloadChunk(I, d),
                    Math.floor((a + 1) / 8) != I && this.unloadChunk(I + 1, d),
                    Math.floor((a - 1) / 8) != I && this.unloadChunk(I - 1, d),
                    Math.floor((b + 1) / 8) != d && this.unloadChunk(I, d + 1),
                    Math.floor((b - 1) / 8) != d && this.unloadChunk(I, d - 1),
                    q && this.reloadLightingAround(y, 2));
                    return !0
                },
                getDataFG: function(a, b, c) {
                    var f = Math.floor(T.modulus(a, 8))
                      , h = Math.floor(T.modulus(b, 8));
                    a = this.createChunk(Math.floor(a / 8), Math.floor(b / 8)).getBlock(f, h);
                    return null != a && null != a.dataFG ? a.dataFG.h[c] : null
                },
                getDataBG: function(a, b, c) {
                    var f = Math.floor(T.modulus(a, 8))
                      , h = Math.floor(T.modulus(b, 8));
                    a = this.createChunk(Math.floor(a / 8), Math.floor(b / 8)).getBlock(f, h);
                    return null != a && null != a.dataBG ? a.dataBG.h[c] : null
                },
                getFG: function(a, b) {
                    var c = Math.floor(T.modulus(a, 8))
                      , f = Math.floor(T.modulus(b, 8));
                    a = this.createChunk(Math.floor(a / 8), Math.floor(b / 8));
                    return null != a.getBlock(c, f) ? a.getBlock(c, f).get_fg() : "air"
                },
                getBG: function(a, b) {
                    var c = Math.floor(T.modulus(a, 8))
                      , f = Math.floor(T.modulus(b, 8));
                    a = this.createChunk(Math.floor(a / 8), Math.floor(b / 8));
                    return null != a.getBlock(c, f) ? a.getBlock(c, f).get_bg() : "air"
                },
                blockNextToFG: function(a, b, c) {
                    null == c && (c = !0);
                    if (c) {
                        if (1 == u.get(this.getFG(a + 1, b)).solid || 1 == u.get(this.getFG(a - 1, b)).solid || 1 == u.get(this.getFG(a, b + 1)).solid || 1 == u.get(this.getFG(a, b - 1)).solid)
                            return !0
                    } else if ("air" != this.getFG(a + 1, b) || "air" != this.getFG(a - 1, b) || "air" != this.getFG(a, b + 1) || "air" != this.getFG(a, b - 1))
                        return !0;
                    return !1
                },
                blockNextToBG: function(a, b, c) {
                    null == c && (c = !0);
                    if (c) {
                        if (1 == u.get(this.getBG(a + 1, b)).solid || 1 == u.get(this.getBG(a - 1, b)).solid || 1 == u.get(this.getBG(a, b + 1)).solid || 1 == u.get(this.getBG(a, b - 1)).solid)
                            return !0
                    } else if ("air" != this.getBG(a + 1, b) || "air" != this.getBG(a - 1, b) || "air" != this.getBG(a, b + 1) || "air" != this.getBG(a, b - 1))
                        return !0;
                    return !1
                },
                setLight: function(a, b, c, f, h, q) {
                    null == h && (h = 16777215);
                    null == f && (f = 8);
                    null == c && (c = "radial");
                    var I = Math.floor(T.modulus(a, 8))
                      , d = Math.floor(T.modulus(b, 8))
                      , g = this.createChunk(Math.floor(a / 8), Math.floor(b / 8));
                    this.appendSavingChunk(g);
                    null == g.lights && (g.lights = new p);
                    var l = new $a;
                    l.lightSourceType = c;
                    l.x = a + .5;
                    l.y = b + .5;
                    l.origin = q;
                    l.lightSourceSize = f;
                    l.lightSourceColor = h;
                    g.lights.h["bX" + I + "Y" + d] = l;
                    this.reloadLightingAround(g, Math.ceil(f / 8))
                },
                reloadLightingAround: function(a, b, c) {
                    null == c && (c = !0);
                    for (var f = -b, h = b + 1; f < h; )
                        for (var q = f++, I = -b, d = b + 1; I < d; ) {
                            var g = I++
                              , l = this.createChunk(a.chunkX + q, a.chunkY + g);
                            if (c) {
                                if (g = Math.floor(Math.abs(q) * b * 2 + 2 * Math.abs(g)),
                                -1 == l.staleLighting || g < l.staleLighting)
                                    l.staleLighting = g
                            } else
                                l.staleLighting = 0
                        }
                },
                resetLighting: function() {
                    P.entity.setUniform("blockiness", T.clamp(1, 16, 16 / J.pixelLightingFactor));
                    for (var a = this.loadedChunks.h, b = Object.keys(a), c = b.length, f = 0; f < c; ) {
                        var h = a[b[f++]]
                          , q = Math.floor(2 * T.modulus(h.chunkX, 10));
                        if (-1 == h.staleLighting || q < h.staleLighting)
                            h.staleLighting = q
                    }
                },
                resetChunks: function() {
                    for (var a = this.loadedChunks.h, b = Object.keys(a), c = b.length, f = 0; f < c; ) {
                        var h = a[b[f++]];
                        this.unloadChunk(h.chunkX, h.chunkY)
                    }
                },
                newMob: function(a, b, c, f, h, q) {
                    null == q && (q = 100);
                    null == h && (h = 0);
                    null == f && (f = 0);
                    null == c && (c = "zombie");
                    null == b && (b = "zombie");
                    if (Object.prototype.hasOwnProperty.call(this.mobs.h, a))
                        return this.mobs.h[a];
                    var I = new p;
                    I.h.id = a;
                    I.h.type = b;
                    I.h.x = f;
                    I.h.y = h;
                    I.h.state = "default";
                    I.h.collisionMode = "walking";
                    I.h.xSpeed = 0;
                    I.h.ySpeed = 0;
                    I.h.health = q;
                    I.h.maxHealth = q;
                    I.h.air = 100;
                    I.h.graphicsType = c;
                    I.h.textureDirection = 1;
                    I.h.textureSet = 0;
                    I.h.textureFrame = 1;
                    this.mobs.h[a] = I;
                    "char" != b && (this.mobs.h[a].h.leftArrow = !1,
                    this.mobs.h[a].h.rightArrow = !1,
                    this.mobs.h[a].h.upArrow = !1,
                    this.mobs.h[a].h.downArrow = !1);
                    "zombie" == b && (this.mobs.h[a].h.targeting = "char");
                    "char" != a && this.linkEntityToChunk(a, "mob", f, h);
                    return this.mobs.h[a]
                },
                linkEntityToChunk: function(a, b, c, f) {
                    null == f && (f = 0);
                    null == c && (c = 0);
                    null == b && (b = "mob");
                    c = Math.floor(c / 8);
                    f = Math.floor(f / 8);
                    if (0 > f)
                        return !1;
                    var h = this.getRegion(8 * c);
                    null == this.worldChunks.h[null == c ? "null" : "" + c] && (ja.__cast(this.worldChunks, p).h[null == c ? "null" : "" + c] = new p);
                    if (null == this.worldChunks.h[null == c ? "null" : "" + c].h[null == f ? "null" : "" + f]) {
                        var q = this.worldChunks.h[null == c ? "null" : "" + c]
                          , I = new Va(c,f,h);
                        q.h[null == f ? "null" : "" + f] = I
                    }
                    q = this.worldChunks.h[null == c ? "null" : "" + c].h[null == f ? "null" : "" + f];
                    null == q.entities && (q.entities = new p);
                    "object" == b ? (null == h.objects && (h.objects = new p),
                    h.objects.h[a] = this.objects.h[a]) : "mob" == b ? (null == h.mobs && (h.mobs = new p),
                    h.mobs.h[a] = this.mobs.h[a]) : "drop" == b && (null == h.drops && (h.drops = new p),
                    h.drops.h[a] = this.drops.h[a]);
                    h.needsSave = !0;
                    null == q.entities.h[a] && this.appendSavingChunk(q);
                    q.entities.h[a] = {
                        type: b,
                        id: a
                    };
                    q = this.entityObject(b).h[a];
                    a = new p;
                    a.h.x = c;
                    a.h.y = f;
                    q.h.lastInChunk = a;
                    return !0
                },
                relinkEntityToChunk: function(a, b, c, f, h, q) {
                    null == q && (q = 0);
                    null == h && (h = 0);
                    null == f && (f = 0);
                    null == c && (c = 0);
                    null == b && (b = "");
                    null == a && (a = "zombie1");
                    if ("" != b)
                        if (null != this.entityObject(b).h[a])
                            f = this.entityObject(b).h[a].h.lastInChunk,
                            c = f.h.x,
                            f = f.h.y;
                        else
                            return;
                    var I = Math.floor(h / 8)
                      , d = Math.floor(q / 8)
                      , g = this.getRegion(8 * I);
                    null == this.worldChunks.h[null == I ? "null" : "" + I] && (ja.__cast(this.worldChunks, p).h[null == I ? "null" : "" + I] = new p);
                    if (null == this.worldChunks.h[null == I ? "null" : "" + I].h[null == d ? "null" : "" + d]) {
                        var l = this.worldChunks.h[null == I ? "null" : "" + I];
                        g = new Va(I,d,g);
                        l.h[null == d ? "null" : "" + d] = g
                    }
                    l = this.worldChunks.h[null == I ? "null" : "" + I].h[null == d ? "null" : "" + d];
                    if (I != c || d != f || null == l.entities.h[a]) {
                        if (null != this.worldChunks.h[null == c ? "null" : "" + c] && null != this.worldChunks.h[null == c ? "null" : "" + c].h[null == f ? "null" : "" + f].entities && null != this.worldChunks.h[null == c ? "null" : "" + c].h[null == f ? "null" : "" + f].entities.h[a])
                            b = this.worldChunks.h[null == c ? "null" : "" + c].h[null == f ? "null" : "" + f].entities.h[a].type;
                        else if ("" == b) {
                            ha.trace("Error: Type is null on " + a, {
                                fileName: "src/World.hx",
                                lineNumber: 655,
                                className: "World",
                                methodName: "relinkEntityToChunk"
                            });
                            return
                        }
                        g = this.getRegion(8 * c);
                        if ("object" == b) {
                            if (null != g.objects) {
                                var y = g.objects;
                                Object.prototype.hasOwnProperty.call(y.h, a) && delete y.h[a];
                                g.needsSave = !0
                            }
                        } else
                            "mob" == b ? null != g.mobs && (y = g.mobs,
                            Object.prototype.hasOwnProperty.call(y.h, a) && delete y.h[a],
                            g.needsSave = !0) : "drop" == b && null != g.drops && (y = g.drops,
                            Object.prototype.hasOwnProperty.call(y.h, a) && delete y.h[a],
                            g.needsSave = !0);
                        this.linkEntityToChunk(a, b, h, q);
                        I == c && d == f || null == this.worldChunks.h[null == c ? "null" : "" + c] || null == this.worldChunks.h[null == c ? "null" : "" + c].h[null == f ? "null" : "" + f] || null == this.worldChunks.h[null == c ? "null" : "" + c].h[null == f ? "null" : "" + f].entities || (y = this.worldChunks.h[null == c ? "null" : "" + c].h[null == f ? "null" : "" + f].entities,
                        Object.prototype.hasOwnProperty.call(y.h, a) && delete y.h[a]);
                        this.appendSavingChunk(l)
                    }
                },
                entityObject: function(a) {
                    null == a && (a = "mob");
                    switch (a) {
                    case "drop":
                        return this.drops;
                    case "mob":
                        return this.mobs;
                    case "object":
                        return this.objects
                    }
                    return new p
                },
                addObject: function(a, b, c, f, h) {
                    null == h && (h = "");
                    for (var q = 0, I = da.get(a).boundingBox; q < I.length; ) {
                        var d = I[q];
                        ++q;
                        if (null != d.conditions) {
                            for (var g = !0, l = Object.keys(d.conditions.h), y = l.length, m = 0; m < y; ) {
                                var k = l[m++];
                                if (f.h[k] != d.conditions.h[k]) {
                                    g = !1;
                                    break
                                }
                            }
                            if (!g)
                                continue
                        }
                        g = 0;
                        for (l = d.value; g < l.length; )
                            if (d = l[g],
                            ++g,
                            null != this.entityCollision(new ca(b + da.get(a).offsetFromOrigin.x + d.x,c + da.get(a).offsetFromOrigin.y + d.y,d.width,d.height)))
                                return null
                    }
                    "" == h && (h = H.string(Math.floor(Math.random() * T.MAX_INT())));
                    "campfire" == a && this.addTimer("object" + h, "campfire", b, c, .2, null);
                    q = new p;
                    q.h.id = "object" + h;
                    q.h.type = a;
                    q.h.x = b;
                    q.h.y = c;
                    a = da.get(a).maxHealth;
                    q.h.health = a;
                    q.h.hitAnimation = 0;
                    if (null != f)
                        for (a = Object.keys(f.h),
                        I = a.length,
                        g = 0; g < I; )
                            d = a[g++],
                            q.h[d] = f.h[d];
                    this.objects.h["object" + h] = q;
                    this.linkEntityToChunk("object" + h, "object", b, c);
                    return q
                },
                addTimer: function(a, b, c, f, h, q) {
                    var I = Math.floor(c / 8)
                      , d = Math.floor(f / 8)
                      , g = new p;
                    g.h.type = b;
                    g.h.region = Math.floor(8 * I / 150);
                    g.h.tickTime = h;
                    g.h.x = c;
                    g.h.y = f;
                    if (null != q)
                        for (b = Object.keys(q.h),
                        c = b.length,
                        f = 0; f < c; )
                            h = b[f++],
                            g.h[h] = q.h[h];
                    this.timers.h[a] = g;
                    q = this.getRegion(8 * I);
                    I = this.createChunk(I, d);
                    null == q.timers && (q.timers = new p);
                    q.timers.h[a] = this.timers.h[a];
                    q.needsSave = !0;
                    this.appendSavingChunk(I)
                },
                removeTimer: function(a, b) {
                    this.getRegion(150 * b);
                    if (Object.prototype.hasOwnProperty.call(this.timers.h, a)) {
                        var c = Math.floor(this.timers.h[a].h.x / 8)
                          , f = Math.floor(this.timers.h[a].h.y / 8)
                          , h = this.loadedRegions.h[b].timers;
                        Object.prototype.hasOwnProperty.call(h.h, a) && delete h.h[a];
                        h = this.timers;
                        Object.prototype.hasOwnProperty.call(h.h, a) && delete h.h[a];
                        this.loadedRegions.h[b].needsSave = !0;
                        this.appendSavingChunk(this.createChunk(c, f))
                    }
                },
                addDrop: function(a, b, c, f, h, q, I) {
                    null == h && (h = 1);
                    null == f && (f = 0);
                    null == c && (c = 0);
                    null == b && (b = "bedrock");
                    null == a && (a = !1);
                    if ("creative" != this.gameMode)
                        if (a)
                            if (a = u.get(b).dropDifferent,
                            null == a)
                                this.addDropEntity(b, 1, c + .5, f + .5, Math.random() - .5, -1.5, Math.random(), null, q);
                            else
                                for (b = 0; b < a.length; ) {
                                    h = a[b];
                                    ++b;
                                    var d = !0;
                                    if (null != h.dataConditions)
                                        for (var g = h.dataConditions.h, l = Object.keys(g), p = l.length, y = 0; y < p; ) {
                                            var m = l[y++];
                                            if (null == I || I.h[m] != g[m]) {
                                                d = !1;
                                                break
                                            }
                                        }
                                    if (d) {
                                        g = d = 0;
                                        for (l = h.amount; g < l; )
                                            ++g,
                                            Math.random() < 1 / h.iChance && ++d;
                                        0 < d && this.addDropEntity(h.type, d, c + .5, f + .5, Math.random() - .5, -1.5, Math.random(), null, q)
                                    }
                                }
                        else
                            0 < h && this.addDropEntity(b, h, c, f, Math.random() - .5, -1.5, Math.random(), null, q)
                },
                addDropEntity: function(a, b, c, f, h, q, I, d, g) {
                    null == d && (d = H.string(Math.floor(Math.random() * T.MAX_INT())));
                    var l = new p;
                    l.h.type = a;
                    l.h.count = b;
                    l.h.x = c;
                    l.h.y = f;
                    l.h.xSpeed = h;
                    l.h.ySpeed = q;
                    l.h.r1 = I;
                    if (null != g)
                        for (a = Object.keys(g.h),
                        b = a.length,
                        h = 0; h < b; )
                            q = a[h++],
                            null == l.h.data && (l.h.data = new p),
                            ja.__cast(l.h.data, p).h[q] = g.h[q];
                    this.drops.h["drop" + d] = l;
                    this.linkEntityToChunk("drop" + d, "drop", c, f)
                },
                dropInventory: function() {
                    for (var a = 0; 40 > a; ) {
                        var b = a++;
                        "air" != this.inventory[b].type && (this.addDrop(!1, this.inventory[b].type, this.mobs.h["char"].h.x, this.mobs.h["char"].h.y, this.inventory[b].count, this.inventory[b].data),
                        this.inventory[b] = R.emptyItem())
                    }
                },
                collision: function(a, b) {
                    null == b && (b = "solid");
                    for (var c = Math.floor(Math.floor(a.get_left()) / 8) - 1, f; c <= Math.floor(Math.floor(a.get_right()) / 8) + 1; ) {
                        for (f = Math.floor(Math.floor(a.get_bottom()) / 8) - 1; f <= Math.floor(Math.floor(a.get_top()) / 8) + 1; ) {
                            var h = this.createChunk(c, f);
                            if (null != h.entities) {
                                h = h.entities.h;
                                for (var q = Object.keys(h), d = q.length, g = 0; g < d; ) {
                                    var l = h[q[g++]];
                                    if ("object" == l.type) {
                                        var p = this.entityObject("object").h[l.id];
                                        if (null != da.get(p.h.type).collisionBox)
                                            for (var y = 0, m = da.get(p.h.type).collisionBox; y < m.length; ) {
                                                var k = m[y];
                                                ++y;
                                                if (null != k.conditions) {
                                                    for (var L = !0, v = Object.keys(k.conditions.h), O = v.length, z = 0; z < O; ) {
                                                        var C = v[z++];
                                                        if (p.h[C] != k.conditions.h[C]) {
                                                            L = !1;
                                                            break
                                                        }
                                                    }
                                                    if (!L)
                                                        continue
                                                }
                                                L = 0;
                                                for (k = k.value; L < k.length; )
                                                    if (v = k[L],
                                                    ++L,
                                                    a.intersects(new ca(p.h.x + da.get(p.h.type).offsetFromOrigin.x + v.x,p.h.y + da.get(p.h.type).offsetFromOrigin.y + v.y,v.width,v.height)))
                                                        return this.collisionObject.type = l.type,
                                                        this.collisionObject.id = l.id,
                                                        this.collisionObject
                                            }
                                    }
                                }
                            }
                            ++f
                        }
                        ++c
                    }
                    for (c = a.get_left(); c < a.get_right(); ) {
                        for (f = a.get_top(); f < a.get_bottom(); ) {
                            h = u.blockGroups.h[b];
                            q = this.getFG(Math.floor(c), Math.floor(f));
                            if (1 == h.h[q])
                                return this.collisionObject.type = "block",
                                this.collisionObject.id = this.getFG(Math.floor(c), Math.floor(f)),
                                this.collisionObject;
                            if (f == a.get_bottom() - .0625)
                                break;
                            f = Math.min(f + 1, a.get_bottom() - .0625)
                        }
                        if (c == a.get_right() - .0625)
                            break;
                        c = Math.min(c + 1, a.get_right() - .0625)
                    }
                    return null
                },
                blockEntityCollision: function(a, b) {
                    return this.entityCollision(new ca(a,b,1,1))
                },
                entityCollision: function(a) {
                    for (var b = Math.floor(Math.floor(a.get_left()) / 8) - 1, c = Math.floor(Math.floor(a.get_right()) / 8) + 2; b < c; )
                        for (var f = b++, h = Math.floor(Math.floor(a.get_top()) / 8) - 1, q = Math.floor(Math.floor(a.get_bottom()) / 8) + 2; h < q; ) {
                            var d = this.createChunk(f, h++);
                            if (null != d.entities) {
                                d = d.entities.h;
                                for (var g = Object.keys(d), l = g.length, p = 0; p < l; ) {
                                    var y = d[g[p++]];
                                    if ("object" == y.type)
                                        for (var m = this.entityObject("object").h[y.id], k = 0, L = da.get(m.h.type).boundingBox; k < L.length; ) {
                                            var v = L[k];
                                            ++k;
                                            if (null != v.conditions) {
                                                for (var u = !0, O = Object.keys(v.conditions.h), z = O.length, C = 0; C < z; ) {
                                                    var r = O[C++];
                                                    if (m.h[r] != v.conditions.h[r]) {
                                                        u = !1;
                                                        break
                                                    }
                                                }
                                                if (!u)
                                                    continue
                                            }
                                            u = 0;
                                            for (v = v.value; u < v.length; )
                                                if (O = v[u],
                                                ++u,
                                                a.intersects(new ca(m.h.x + da.get(m.h.type).offsetFromOrigin.x + O.x,m.h.y + da.get(m.h.type).offsetFromOrigin.y + O.y,O.width,O.height)))
                                                    return {
                                                        id: y.id,
                                                        type: y.type
                                                    }
                                        }
                                }
                            }
                        }
                    return null
                },
                getFGHeight: function(a) {
                    for (var b = 500; 1 < b--; )
                        if ("air" != this.getFG(a, b))
                            return b + 1;
                    return null
                },
                getFGHeight2: function(a) {
                    for (var b = 500; 1 < b--; )
                        if (1 == u.get(this.getFG(a, b)).solid)
                            return b + 1;
                    return null
                },
                getBGHeight: function(a) {
                    for (var b = 500; 1 < b--; )
                        if ("air" != this.getBG(a, b))
                            return b + 1;
                    return null
                },
                appendSavingChunk: function(a) {
                    if (null == this.savingChunks.h[a.id]) {
                        var b = this.savingChunks
                          , c = a.id;
                        a = {
                            chunk: a,
                            timeout: X.randomNumber(10, 20)
                        };
                        b.h[c] = a
                    }
                },
                createChunk: function(a, b) {
                    var c = this.getRegion(8 * a);
                    if (!c.isLoaded)
                        return null;
                    null == this.worldChunks.h[null == a ? "null" : "" + a] && (ja.__cast(this.worldChunks, p).h[null == a ? "null" : "" + a] = new p);
                    if (null == this.worldChunks.h[null == a ? "null" : "" + a].h[null == b ? "null" : "" + b]) {
                        var f = this.worldChunks.h[null == a ? "null" : "" + a]
                          , h = new Va(a,b,c);
                        f.h[null == b ? "null" : "" + b] = h
                    }
                    f = this.worldChunks.h[null == a ? "null" : "" + a].h[null == b ? "null" : "" + b];
                    0 == f.isLoaded && c.loadWorldChunk(f, a, b);
                    return f
                },
                unloadChunk: function(a, b, c) {
                    null == c && (c = !0);
                    null != this.worldChunks.h[null == a ? "null" : "" + a] && null != this.worldChunks.h[null == a ? "null" : "" + a].h[null == b ? "null" : "" + b] && (c && null != this.worldChunks.h[null == a ? "null" : "" + a].h[null == b ? "null" : "" + b].imageDataFG && (this.worldChunks.h[null == a ? "null" : "" + a].h[null == b ? "null" : "" + b].imageDataFG.clearPool(),
                    this.worldChunks.h[null == a ? "null" : "" + a].h[null == b ? "null" : "" + b].imageDataBG.clearPool(),
                    this.worldChunks.h[null == a ? "null" : "" + a].h[null == b ? "null" : "" + b].staleLighting = 0),
                    this.worldChunks.h[null == a ? "null" : "" + a].h[null == b ? "null" : "" + b].isRenderable = !1,
                    a = this.worldChunks.h[null == a ? "null" : "" + a].h[null == b ? "null" : "" + b].id,
                    b = this.loadedChunks,
                    Object.prototype.hasOwnProperty.call(b.h, a) && delete b.h[a])
                },
                unloadChunksAround: function(a, b, c) {
                    for (var f = -c, h = c + 1; f < h; )
                        for (var q = f++, d = -c, g = c + 1; d < g; )
                            this.unloadChunk(a + q, b + d++)
                },
                generatedAt: function(a) {
                    a = this.loadedRegions.h[Math.floor(a / 150)];
                    return null != a && a.isLoaded ? a.generated : !1
                },
                getRegion: function(a, b) {
                    null == b && (b = !1);
                    a = Math.floor(a / 150);
                    if (null != this.loadedRegions.h[a])
                        return this.loadedRegions.h[a].boop(),
                        this.loadedRegions.h[a];
                    if (b)
                        return null;
                    b = this.loadedRegions;
                    var c = new Ma(this,a);
                    b.h[a] = c;
                    this.loadedRegions.h[a].init();
                    return this.loadedRegions.h[a]
                },
                __class__: Sa
            };
            var Zb = function() {
                this.fg = this.bg = this.dataFG = this.dataBG = null
            };
            g.BlockData = Zb;
            Zb.__name__ = "BlockData";
            Zb.deserialize = function(a, b) {
                var c = new Zb;
                c.fg = b[a.b[0]];
                c.bg = b[a.b[1]];
                2 < a.length && (b = a.getInt32(2),
                c.dataFG = Ya.mappifyObjectsInMap(JSON.parse(a.getString(6, b, $b.UTF8))),
                a.length > 6 + b && (c.dataBG = Ya.mappifyObjectsInMap(JSON.parse(a.getString(6 + b + 4, a.getInt32(6 + b), $b.UTF8)))));
                return c
            }
            ;
            Zb.prototype = {
                resetFG: function() {
                    this.dataFG = this.fg = null
                },
                resetBG: function() {
                    this.dataBG = this.bg = null
                },
                get_fg: function() {
                    return null == this.fg ? "air" : this.fg
                },
                get_bg: function() {
                    return null == this.bg ? "air" : this.bg
                },
                serialize: function(a) {
                    var b = a.indexOf(this.get_fg());
                    -1 == b && (b = a.push(this.get_fg()) - 1);
                    var c = a.indexOf(this.get_bg());
                    -1 == c && (c = a.push(this.get_bg()) - 1);
                    a = new ac;
                    a.addByte(b);
                    a.addByte(c);
                    null != this.dataFG && (null != this.dataFG.h.h && (b = this.dataFG,
                    Object.prototype.hasOwnProperty.call(b.h, "h") && delete b.h.h),
                    b = Aa.ofString(JSON.stringify(Ya.objectifyObjectsInMap(this.dataFG)), $b.UTF8),
                    a.addInt32(b.length),
                    a.addBytes(b, 0, b.length),
                    null != this.dataBG && (null != this.dataBG.h.h && (b = this.dataBG,
                    Object.prototype.hasOwnProperty.call(b.h, "h") && delete b.h.h),
                    b = Aa.ofString(JSON.stringify(Ya.objectifyObjectsInMap(this.dataBG)), $b.UTF8),
                    a.addInt32(b.length),
                    a.addBytes(b, 0, b.length)));
                    return a.getBytes()
                },
                __class__: Zb
            };
            var Va = function(a, b, c) {
                this.lightingIndex = this.lightingKey = this.staleLighting = -1;
                this.imageDataBG = this.imageDataFG = null;
                this.isLoaded = this.isRenderable = !1;
                this.entities = null;
                this.updateBlocks = new p;
                this.blocks = this.lights = null;
                this.blockRegistry = [];
                this.id = "";
                this.chunkX = a;
                this.chunkY = b;
                this.region = c;
                c.addWorldChunk(this);
                this.id = "X" + this.chunkX + "Y" + this.chunkY
            };
            g.WorldChunk = Va;
            Va.__name__ = "WorldChunk";
            Va.prototype = {
                deserialize: function(a) {
                    if (null != a.h.l) {
                        this.lights = new p;
                        for (var b = ja.__cast(a.h.l, p).h, c = Object.keys(b), f = c.length, h = 0; h < f; ) {
                            var q = c[h++]
                              , d = this.lights
                              , g = $a.deserialize(b[q]);
                            d.h[q] = g
                        }
                    }
                    if (null != a.h.e)
                        for (this.entities = new p,
                        b = ja.__cast(a.h.e, p).h,
                        c = Object.keys(b),
                        f = c.length,
                        h = 0; h < f; ) {
                            q = c[h++];
                            g = b[q];
                            d = ja.__cast(g, p).h.type;
                            g = ja.__cast(g, p).h.id;
                            var l = this.region.entityObject(d);
                            l = null != l ? Object.prototype.hasOwnProperty.call(l.h, g) : null;
                            0 == (null != l && l) ? ha.trace("Warning! " + H.string(d) + " " + H.string(g) + " not found in region " + this.region.x + ". Removing from chunk.", {
                                fileName: "src/WorldChunk.hx",
                                lineNumber: 134,
                                className: "WorldChunk",
                                methodName: "deserialize"
                            }) : this.entities.h[q] = {
                                type: d,
                                id: g
                            }
                        }
                    c = a.h.r;
                    for (b = 0; b < c.length; )
                        this.blockRegistry.push(this.region.blockRegistry[c[b++]]);
                    a = a.h.b;
                    if (null != a)
                        for (this.blocks = [],
                        b = 0; 8 > b; )
                            if (c = b++,
                            null != a[c])
                                for (this.blocks[c] = [],
                                f = 0; 8 > f; )
                                    h = f++,
                                    null != a[c][h] && (this.blocks[c][h] = Zb.deserialize(Gb.decode(a[c][h]), this.blockRegistry),
                                    null != u.get(this.blocks[c][h].get_fg()).uniqueUpdate && (this.updateBlocks.h["bX" + c + "Y" + h] = {
                                        x: Math.floor(c),
                                        y: Math.floor(h)
                                    }))
                },
                serialize: function() {
                    var a = null;
                    if (null != this.blocks) {
                        this.blockRegistry = [];
                        a = [];
                        for (var b = 0; 8 > b; )
                            for (var c = b++, f = 0; 8 > f; ) {
                                var h = f++;
                                null != this.blocks[c] && null != this.blocks[c][h] && (null == a[c] && (a[c] = []),
                                a[c][h] = Gb.encode(this.blocks[c][h].serialize(this.blockRegistry)))
                            }
                    }
                    c = null;
                    if (null != this.lights) {
                        c = new p;
                        b = Object.keys(this.lights.h);
                        f = b.length;
                        for (var q = 0; q < f; ) {
                            var d = b[q++]
                              , g = this.lights.h[d].serialize();
                            c.h[d] = g
                        }
                    }
                    h = null;
                    if (null != this.entities)
                        for (h = new p,
                        b = Object.keys(this.entities.h),
                        f = b.length,
                        q = 0; q < f; )
                            d = b[q++],
                            g = Ya.mappifyObjectsInMap(this.entities.h[d]),
                            h.h[d] = g;
                    q = [];
                    b = 0;
                    for (f = this.blockRegistry; b < f.length; )
                        d = f[b],
                        ++b,
                        g = this.region.blockRegistry.indexOf(d),
                        -1 == g && (g = this.region.blockRegistry.push(d) - 1),
                        q.push(g);
                    b = new p;
                    b.h.r = q;
                    b.h.b = a;
                    b.h.l = c;
                    b.h.e = h;
                    return b
                },
                getBlock: function(a, b, c) {
                    null == c && (c = !1);
                    if (null == this.blocks)
                        if (c)
                            this.blocks = [];
                        else
                            return null;
                    if (null == this.blocks[a])
                        if (c)
                            this.blocks[a] = [];
                        else
                            return null;
                    c && null == this.blocks[a][b] && (this.blocks[a][b] = new Zb);
                    return this.blocks[a][b]
                },
                render: function(a, b) {
                    null == b && (b = !0);
                    var c = 8 * this.chunkX
                      , f = 8 * (this.chunkX + 1)
                      , h = 8 * this.chunkY
                      , q = 8 * (this.chunkY + 1);
                    null == this.imageDataFG ? (this.imageDataBG = X.createQuadPoolEntity(C.textures, 10, !0),
                    this.imageDataFG = X.createQuadPoolEntity(C.textures, 12, !0)) : (this.imageDataBG.clearPool(),
                    this.imageDataFG.clearPool());
                    for (this.isRenderable = !0; c < f; )
                        for (var I = c++, g = h; g < q; ) {
                            var l = g++
                              , y = Math.floor(16 * T.modulus(I, 8))
                              , m = Math.floor(16 * (7 - T.modulus(l, 8)))
                              , k = a.getFG(I, l)
                              , L = a.getBG(I, l);
                            if ("air" != L && (1 == u.get(k).isTransparent || "dirt_grass" == k || "stone_basalt_column" == k || 1 == u.get(a.getFG(I + 1, l)).isTransparent || 1 == u.get(a.getFG(I - 1, l)).isTransparent || 1 == u.get(a.getFG(I, l + 1)).isTransparent || 1 == u.get(a.getFG(I, l - 1)).isTransparent)) {
                                var v = L
                                  , O = !1
                                  , z = 15;
                                if (J.blockBorders)
                                    if (1 != u.get(L).hasBlockBorder)
                                        z = 0;
                                    else {
                                        "air" != a.getBG(I + 1, l) && (z = 11);
                                        "air" != a.getBG(I - 1, l) && --z;
                                        if ("air" != a.getBG(I, l + 1) || "dirt_grass" == k)
                                            z -= 8;
                                        "air" != a.getBG(I, l - 1) && (z -= 2)
                                    }
                                if ("stone_basalt_column" == L)
                                    "stone_basalt_column" != a.getBG(I, l + 1) && (v = L + "_top");
                                else if ("wool" == L && null != a.getDataBG(I, l, "type")) {
                                    O = !0;
                                    var r = ba.getWoolColor(a.getDataBG(I, l, "type"));
                                    if (J.blockBorders) {
                                        var A = this.imageDataBG
                                          , x = new va(y,m)
                                          , t = C.get(L).get_position()
                                          , E = C.get(L).get_size()
                                          , B = new W(16,16)
                                          , Q = new p;
                                        r = T.repeatArray([.5 * r.array[0], .5 * r.array[1], .5 * r.array[2], 1], 6);
                                        Q.h.color = r;
                                        r = T.repeatArray(C.get("W" + z).toArray(), 6);
                                        Q.h.maskClip = r;
                                        A.addQuad(x, t, E, !0, B, null, null, Q)
                                    } else
                                        A = this.imageDataBG,
                                        x = new va(y,m),
                                        t = C.get(L).get_position(),
                                        E = C.get(L).get_size(),
                                        B = new W(16,16),
                                        Q = new p,
                                        r = T.repeatArray([.5 * r.array[0], .5 * r.array[1], .5 * r.array[2], 1], 6),
                                        Q.h.color = r,
                                        A.addQuad(x, t, E, !0, B, null, null, Q)
                                }
                                O || (C.hasTexture(v) ? J.blockBorders ? (L = this.imageDataBG,
                                O = new va(y,m),
                                r = C.get(v).get_position(),
                                v = C.get(v).get_size(),
                                A = new W(16,16),
                                x = new p,
                                t = T.repeatArray([.5, .5, .5, 1], 6),
                                x.h.color = t,
                                z = T.repeatArray(C.get("W" + z).toArray(), 6),
                                x.h.maskClip = z,
                                L.addQuad(O, r, v, !0, A, null, null, x)) : (z = this.imageDataBG,
                                L = new va(y,m),
                                O = C.get(v).get_position(),
                                v = C.get(v).get_size(),
                                r = new W(16,16),
                                A = new p,
                                x = T.repeatArray([.5, .5, .5, 1], 6),
                                A.h.color = x,
                                z.addQuad(L, O, v, !0, r, null, null, A)) : ha.trace("(world) Bad texture: " + v + " (BG is " + L + ")", {
                                    fileName: "src/WorldChunk.hx",
                                    lineNumber: 315,
                                    className: "WorldChunk",
                                    methodName: "render"
                                }))
                            }
                            if ("air" != k) {
                                L = !1;
                                v = k;
                                z = 15;
                                if (J.blockBorders)
                                    if (1 != u.get(k).hasBlockBorder)
                                        z = 0;
                                    else {
                                        "air" != a.getFG(I + 1, l) && (z = 11);
                                        "air" != a.getFG(I - 1, l) && --z;
                                        if ("air" != a.getFG(I, l + 1) || "dirt_grass" == k)
                                            z -= 8;
                                        "air" != a.getFG(I, l - 1) && (z -= 2)
                                    }
                                "cactus" == k ? "cactus" != a.getFG(I, l + 1) ? v = "true" == a.getDataFG(I, l, "flowered") ? "cactus_cap_flower" : "cactus_cap" : 1 != u.get(a.getFG(I, l - 1)).solid && "cactus" != a.getFG(I, l - 1) ? "left" == a.getDataFG(I, l, "orientation") ? v = "cactus_connects_left" : "right" == a.getDataFG(I, l, "orientation") ? v = "cactus_connects_right" : "cactus" != a.getFG(I - 1, l) || "cactus" != a.getFG(I - 1, l + 1) || "cactus" != a.getFG(I - 1, l - 1) && 1 != u.get(a.getFG(I - 1, l - 1)).solid ? "cactus" == a.getFG(I + 1, l) && (v = "cactus_connects_right") : v = "cactus_connects_left" : (O = "cactus" == a.getFG(I - 1, l) && 1 != u.get(a.getFG(I - 1, l - 1)).solid && "cactus" != a.getFG(I - 1, l - 1) && ("right" == a.getDataFG(I - 1, l, "orientation") || "left" != a.getDataFG(I - 1, l, "orientation") && !("cactus" == a.getFG(I - 2, l + 1) && ("cactus" == a.getFG(I - 2, l - 1) || 1 == u.get(a.getFG(I - 2, l - 1)).solid))),
                                r = "cactus" == a.getFG(I + 1, l) && 1 != u.get(a.getFG(I + 1, l - 1)).solid && "cactus" != a.getFG(I + 1, l - 1) && ("left" == a.getDataFG(I + 1, l, "orientation") || "right" != a.getDataFG(I + 1, l, "orientation") && 1 != u.get(a.getFG(I + 1, l - 1)).solid && "cactus" != a.getFG(I + 1, l - 1)),
                                O ? v = r ? "cactus_branches_left_and_right" : "cactus_branches_left" : r && (v = "cactus_branches_right")) : "roots_plant" == k ? v = k + H.string(T.modulus(I + l, 2) + 1) : "torch" == k || "mushrooms" == k ? "left" == a.getDataFG(I, l, "orientation") ? v = k + "1" : "right" == a.getDataFG(I, l, "orientation") && (v = k + "2") : "water" == k ? v = k + (Math.floor(T.modulus(d.Instance.lastTime / 1E3, 2) / 2 * 4) + 1) : "stone_basalt_column" == k ? "stone_basalt_column" != a.getFG(I, l + 1) && (v = k + "_top") : "vines_orange" == k ? "vines_orange" != a.getFG(I, l - 1) && (v = k + "_bottom") : "spikes" == k ? v = "ceiling" == a.getDataFG(I, l, "orientation") ? k + "_ceiling" : k + "_floor" : "lava" == k ? v = k + (Math.floor(T.modulus(d.Instance.lastTime / 1E3, 4) / 4 * 4) + 1) : "dirt_grass" == k ? 1 != u.get(a.getFG(I - 1, l)).solid && 1 == u.get(a.getFG(I + 1, l)).solid ? v = k + 21 : 1 == u.get(a.getFG(I - 1, l)).solid && 1 != u.get(a.getFG(I + 1, l)).solid && (v = k + 22) : "wool" == k && null != a.getDataFG(I, l, "type") && (L = !0,
                                O = ba.getWoolColor(a.getDataFG(I, l, "type")),
                                J.blockBorders ? (r = this.imageDataFG,
                                A = new va(y,m),
                                x = C.get(k).get_position(),
                                t = C.get(k).get_size(),
                                E = new W(16,16),
                                B = new p,
                                O = T.repeatArray([O.array[0], O.array[1], O.array[2], 1], 6),
                                B.h.color = O,
                                O = T.repeatArray(C.get("W" + z).toArray(), 6),
                                B.h.maskClip = O,
                                r.addQuad(A, x, t, !0, E, null, null, B)) : (r = this.imageDataFG,
                                A = new va(y,m),
                                x = C.get(k).get_position(),
                                t = C.get(k).get_size(),
                                E = new W(16,16),
                                B = new p,
                                O = T.repeatArray([O.array[0], O.array[1], O.array[2], 1], 6),
                                B.h.color = O,
                                r.addQuad(A, x, t, !0, E, null, null, B)));
                                L || (C.hasTexture(v) ? (J.blockBorders ? (L = this.imageDataFG,
                                O = new va(y,m),
                                r = C.get(v).get_position(),
                                v = C.get(v).get_size(),
                                A = new W(16,16),
                                x = new p,
                                z = T.repeatArray(C.get("W" + z).toArray(), 6),
                                x.h.maskClip = z,
                                L.addQuad(O, r, v, !0, A, null, null, x)) : this.imageDataFG.addQuad(new va(y,m), C.get(v).get_position(), C.get(v).get_size(), !0, new W(16,16)),
                                1 == u.blockGroups.h.wood.h[k] && (k = a.getFG(I - 1, l),
                                z = a.getFG(I + 1, l),
                                v = Math.floor(Math.min(k.length, z.length)),
                                u.blockGroups.h.leaves.h[k] && u.blockGroups.h.leaves.h[z] && K.substr(k, 0, v) == K.substr(z, 0, v) && this.imageDataFG.addQuad(new va(y,m), C.get(K.substr(z, 0, v)).get_position(), C.get(K.substr(z, 0, v)).get_size(), !0, new W(16,16)))) : ha.trace("(world) Bad texture: " + v + " (FG is " + k + ")", {
                                    fileName: "src/WorldChunk.hx",
                                    lineNumber: 454,
                                    className: "WorldChunk",
                                    methodName: "render"
                                }));
                                0 > l && this.imageDataBG.addQuad(new va(y,m), C.get("bedrock").get_position(), C.get("bedrock").get_size(), !0, new W(16,16))
                            }
                        }
                    b && P.renderChunk(this, a);
                    this.imageDataBG.resetUnusedQuads();
                    this.imageDataFG.resetUnusedQuads();
                    a.loadedChunks.h["X" + this.chunkX + "Y" + this.chunkY] = this
                },
                __class__: Va
            };
            var E = function() {};
            g.WorldGenerator = E;
            E.__name__ = "WorldGenerator";
            E.randomNumberSeed = function(a, b, c, f) {
                for (var h = T.modulus(930001 * (7 * f.seed + 3.14159 * a) + a * f.seed, 233280), q = 1; q <= T.modulus(a, 5) + 2; )
                    h = T.modulus(930001 * h + a * f.seed, 233280),
                    ++q;
                return Math.floor(b + (c - b + 1) * h / 233280)
            }
            ;
            E.getHeightOfChunk = function(a, b) {
                var c = b.getRegion(150 * a);
                if (null == c) {
                    var f = 0;
                    "mountain" == E.getBiomeOfChunk(a, b)[0] ? f = 30 : "beach" == E.getBiomeOfChunk(a, b)[0] && (f = -30);
                    return E.randomNumberSeed(Math.abs(3 * a - 1), E.worldHeight + 2 + f, E.worldHeight + 30 + f, b)
                }
                -1 == c.startHeight && (f = 0,
                "mountain" == E.getBiomeOfChunk(a, b)[0] ? f = 30 : "beach" == E.getBiomeOfChunk(a, b)[0] && (f = -30),
                c.startHeight = E.randomNumberSeed(Math.abs(3 * c.x - 1), E.worldHeight + 2 + f, E.worldHeight + 30 + f, b));
                return c.startHeight
            }
            ;
            E.getHeightOfChunkAtX = function(a, b) {
                return a < E.getBiomeSpot(Math.floor(a / 150), b) ? E.getHeightOfChunk(Math.floor(a / 150 - 1), b) : E.getHeightOfChunk(Math.floor(a / 150), b)
            }
            ;
            E.getBiomeOfChunk = function(a, b) {
                var c = b.getRegion(150 * a);
                if (null == c)
                    return E.getBiomeByNumber(E.randomNumberSeed(Math.abs(3 * a - 1), 1, 600, b));
                null == c.biome && (c.biome = E.getBiomeByNumber(E.randomNumberSeed(Math.abs(3 * c.x - 1), 1, 600, b)));
                return c.biome
            }
            ;
            E.getBiomeAtX = function(a, b) {
                return a < E.getBiomeSpot(Math.floor(a / 150), b) ? E.getBiomeOfChunk(Math.floor(a / 150 - 1), b)[0] : E.getBiomeOfChunk(Math.floor(a / 150), b)[0]
            }
            ;
            E.getSpecificBiomeAtX = function(a, b) {
                return a < E.getBiomeSpot(Math.floor(a / 150), b) ? E.getBiomeOfChunk(Math.floor(a / 150 - 1), b)[1] : E.getBiomeOfChunk(Math.floor(a / 150), b)[1]
            }
            ;
            E.getBiomeSpot = function(a, b) {
                var c = b.getRegion(150 * a);
                if (null == c)
                    return E.randomNumberSeed(Math.abs(3 * a - 1), 37, 112, b) + 150 * a;
                -1 == c.biomeSpot && (c.biomeSpot = E.randomNumberSeed(Math.abs(3 * c.x - 1), 37, 112, b) + 150 * c.x);
                return c.biomeSpot
            }
            ;
            E.getBiomeByNumber = function(a) {
                if (200 >= a)
                    return 15 >= a ? ["forest", "orange forest"] : 60 >= a ? ["forest", "birch forest"] : ["forest", "pine forest"];
                if (300 >= a)
                    return 220 >= a ? ["plain", "red plains"] : 240 >= a ? ["plain", "mushroom plains"] : 260 >= a ? ["plain", "cotton field"] : ["plain", "grassy plain"];
                if (350 >= a)
                    return ["beach", "beach"];
                if (450 >= a)
                    return ["desert", "desert"];
                if (550 >= a)
                    return ["hills", "hills"];
                if (600 >= a)
                    return ["mountain", "mountain"];
                ha.trace("Warning: defaulting to mountain", {
                    fileName: "src/WorldGenerator.hx",
                    lineNumber: 131,
                    className: "WorldGenerator",
                    methodName: "getBiomeByNumber"
                });
                return ["mountain", "mountain"]
            }
            ;
            E.generate = function(a, b) {
                var c = 0;
                if (null == a || 1 != a.generated) {
                    for (var f = !0, h = a.x - 1, q = a.x + 2; h < q; )
                        b.getRegion(150 * h++).isLoaded || (f = !1);
                    if (f)
                        if (1 == Math.floor(a.genStage)) {
                            var d = 150 * a.x + Math.floor(150 * (T.modulus(a.genStage, 1) + .1) + 1);
                            for (h = 150 * a.x + Math.floor(150 * T.modulus(a.genStage, 1)); h < d; ) {
                                var g = h++;
                                q = 0;
                                for (var l = E.getHeightOfChunkAtX(g, b) + 1; q < l; ) {
                                    var y = q++;
                                    b.setFG(g, y, "stone", !1);
                                    b.setBG(g, y, "stone", !1)
                                }
                            }
                            a.genStage = Math.floor(10 * a.genStage + 1) / 10
                        } else if (2 == Math.floor(a.genStage)) {
                            c = 0;
                            if (E.getHeightOfChunk(a.x - 1, b) > E.getHeightOfChunk(a.x, b))
                                for (h = E.getHeightOfChunk(a.x, b),
                                q = E.getHeightOfChunk(a.x - 1, b); h < q; ) {
                                    ++h;
                                    var m = ++c
                                      , k = !0;
                                    5 == E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 0, 8, b) && (k = !1);
                                    l = 0;
                                    for (var L = E.randomNumberSeed(Math.abs(3 * a.x - 1) + m, 2, 50, b) + 1; l < L; ) {
                                        var v = l++;
                                        E.getBiomeSpot(a.x, b) + v < 150 * (a.x + 1) && (b.setFG(E.getBiomeSpot(a.x, b) + v, b.getFGHeight(E.getBiomeSpot(a.x, b) + v), "stone", !1),
                                        k && b.setBG(E.getBiomeSpot(a.x, b) + v, b.getBGHeight(E.getBiomeSpot(a.x, b) + v), "stone", !1))
                                    }
                                }
                            else if (E.getHeightOfChunk(a.x, b) > E.getHeightOfChunk(a.x - 1, b))
                                for (h = E.getHeightOfChunk(a.x - 1, b),
                                q = E.getHeightOfChunk(a.x, b); h < q; )
                                    for (++h,
                                    m = ++c,
                                    k = !0,
                                    5 == E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 0, 8, b) && (k = !1),
                                    l = 1,
                                    L = E.randomNumberSeed(Math.abs(3 * a.x - 1) + m, 2, 50, b) + 1; l < L; )
                                        v = l++,
                                        E.getBiomeSpot(a.x, b) - v > 150 * a.x && (b.setFG(E.getBiomeSpot(a.x, b) - v, b.getFGHeight(E.getBiomeSpot(a.x, b) - v), "stone", !1),
                                        k && b.setBG(E.getBiomeSpot(a.x, b) - v, b.getBGHeight(E.getBiomeSpot(a.x, b) - v), "stone", !1));
                            a.genStage = 3
                        } else if (3 == Math.floor(a.genStage)) {
                            c = Math.floor(1234 * T.modulus(a.genStage, 1));
                            var O = 1.5
                              , u = 90
                              , z = E.getBiomeOfChunk(a.x - 1, b)[0]
                              , r = 10;
                            "plain" == z || "desert" == z ? (O = .5,
                            u = 60,
                            r = 200) : "hills" == z ? (O = 3,
                            u = 50,
                            r = 20) : "forest" == z ? (O = 3,
                            u = 80,
                            r = 10) : "mountain" == z ? (O = 4.5,
                            u = 20,
                            r = 30) : "beach" == z && (O = 3,
                            u = 50,
                            r = 3);
                            h = 1;
                            for (q = Math.floor(O + 1); h < q; ) {
                                ++h;
                                m = E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 10, 27, b);
                                var C = E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, m + 5, E.getBiomeSpot(a.x, b) - 150 * a.x - m - 5, b);
                                k = !0;
                                u = 1 == E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 1, r, b) ? -Math.floor(Math.abs(u)) : Math.floor(Math.abs(u));
                                l = 0;
                                for (L = Math.floor(m / Math.abs(u) + 1); l < L; ) {
                                    var J = l++;
                                    2 == E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 0, 0 > u ? 4 : 10, b) && (k = !1);
                                    for (var x = -Math.floor(m), A = m + 1; x < A; )
                                        if (v = x++,
                                        0 <= C + v && 1 >= Math.pow(v, 2) / Math.pow(m, 2) + Math.pow(J, 2) / Math.pow(m / Math.abs(u), 2)) {
                                            var t = C + 150 * a.x + v;
                                            0 < u ? (b.setFG(t, b.getFGHeight(t), "stone", !1),
                                            k && b.setBG(t, b.getBGHeight(t), "stone", !1)) : (b.mineFG(t, b.getFGHeight(t) - 1, !1, !1),
                                            k && b.mineBG(t, b.getBGHeight(t) - 1, !1, !1))
                                        }
                                }
                            }
                            O = 1.5;
                            u = 90;
                            z = E.getBiomeOfChunk(a.x, b)[0];
                            r = 10;
                            "plain" == z || "desert" == z ? (O = .5,
                            u = 60,
                            r = 200) : "hills" == z ? (O = 3,
                            u = 50,
                            r = 20) : "forest" == z ? (O = 3,
                            u = 80,
                            r = 10) : "mountain" == z ? (O = 4.5,
                            u = 20,
                            r = 30) : "beach" == z && (O = 3,
                            u = 50,
                            r = 3);
                            h = 1;
                            for (q = Math.floor(O + 1); h < q; )
                                for (++h,
                                m = E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 10, 20, b),
                                C = E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, E.getBiomeSpot(a.x, b) - 150 * a.x + m + 5, 150 - m - 5, b),
                                k = !0,
                                u = 1 == E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 1, r, b) ? -Math.floor(Math.abs(u)) : Math.floor(Math.abs(u)),
                                l = 0,
                                L = Math.floor(m / Math.abs(u)) + 1; l < L; )
                                    for (J = l++,
                                    2 == E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 0, 0 > u ? 4 : 10, b) && (k = !1),
                                    x = -Math.floor(m),
                                    A = m + 1; x < A; )
                                        v = x++,
                                        150 > C + v && 1 >= Math.pow(v, 2) / Math.pow(m, 2) + Math.pow(J, 2) / Math.pow(m / Math.abs(u), 2) && (t = C + 150 * a.x + v,
                                        0 < u ? (b.setFG(t, b.getFGHeight(t), "stone", !1),
                                        k && b.setBG(t, b.getBGHeight(t), "stone", !1)) : (b.mineFG(t, b.getFGHeight(t) - 1, !1, !1),
                                        k && b.mineBG(t, b.getBGHeight(t) - 1, !1, !1)));
                            a.genStage = Math.floor(10 * a.genStage + 1) / 10
                        } else if (4 == Math.floor(a.genStage)) {
                            for (h = 0; 150 > h; ) {
                                var B = h++;
                                if (b.getFGHeight(150 * a.x + B) <= E.worldHeight)
                                    for (var Q = E.worldHeight; Q > E.worldHeight / 2 && "air" == b.getFG(150 * a.x + B, Q); )
                                        b.setFG(150 * a.x + B, Q, "water", !1),
                                        --Q
                            }
                            a.genStage = 5
                        } else if (5 == Math.floor(a.genStage)) {
                            c = 0;
                            h = Math.floor(75 * T.modulus(a.genStage, 1));
                            for (q = Math.floor(75 * (T.modulus(a.genStage, 1) + .1) + 1); h < q; ) {
                                ++h;
                                var zc = E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, Math.floor(E.worldHeight / 4), Math.floor(2 * E.worldHeight), b)
                                  , F = E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 9, 19, b) / 4
                                  , Ca = 150 * a.x + E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, Math.floor(F), Math.floor(150 - F), b)
                                  , n = b.getFGHeight(Math.floor(Ca)) - 1
                                  , Ka = E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 30, Math.floor(n - 30), b)
                                  , ma = E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, -14, 14, b)
                                  , R = E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, -3, 5, b)
                                  , wa = 2 * E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 0, 1, b) - 1;
                                for (l = 0; l < zc; )
                                    for (++l,
                                    0 == E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 0, 3, b) && (R *= .8,
                                    ma *= 1.2),
                                    ma = Math.min(F / 2, Math.max(-F / 2, ma + E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, -4, 4, b) / 3)),
                                    R = Math.min(F / 3, Math.max(-F / 3, R + E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, -3, 5, b) / 5)),
                                    F = Math.min(4.75, Math.max(2.25, F + E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, -4, 4, b) / 2)),
                                    5 == E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 1, 20, b) && (ma = -ma),
                                    Ca + ma < 150 * a.x + F / 2 ? ma = Math.abs(ma) : Ca + ma > 150 * (a.x + 1) - F / 2 && (ma = -Math.abs(ma)),
                                    Ca += ma,
                                    Ka += R * wa,
                                    L = Math.round(-F / 2),
                                    x = Math.round(F / 2) + 1; L < x; ) {
                                        var w = L++;
                                        A = Math.round(-F / 2);
                                        for (var D = Math.round(F / 2) + 1; A < D; ) {
                                            var K = A++;
                                            if (0 <= Math.floor(Ca + w - 150 * a.x) && 150 > Math.floor(Ca + w - 150 * a.x) && w * w + K * K <= Math.pow(F / 2, 2))
                                                try {
                                                    var M = E.appropriateMineBlocks
                                                      , Na = b.getFG(Math.floor(Ca + w), Math.floor(Ka + K));
                                                    1 == M.h[Na] && "water" != b.getFG(Math.floor(Ca + w), Math.floor(Ka + K + 1)) && "water" != b.getFG(Math.floor(Ca + w), Math.floor(Ka + K + 2)) && "water" != b.getFG(Math.floor(Ca + w), Math.floor(Ka + K + 3)) && "water" != b.getFG(Math.floor(Ca + w), Math.floor(Ka + K + 4)) && "water" != b.getFG(Math.floor(Ca + w + 1), Math.floor(Ka + K + 1)) && "water" != b.getFG(Math.floor(Ca + w - 1), Math.floor(Ka + K + 1)) && b.mineFG(Math.floor(Ca + w), Math.floor(Ka + K), !1, !1)
                                                } catch (Dc) {
                                                    var G = ea.caught(Dc).unwrap();
                                                    ha.trace("Error at mine generation: " + (null == G ? "null" : H.string(G)), {
                                                        fileName: "src/WorldGenerator.hx",
                                                        lineNumber: 340,
                                                        className: "WorldGenerator",
                                                        methodName: "generate"
                                                    })
                                                }
                                        }
                                    }
                            }
                            a.genStage = Math.floor(10 * a.genStage + 1) / 10
                        } else if (6 == Math.floor(a.genStage)) {
                            c = 0;
                            var N = ["water", "lava"];
                            for (h = 0; 15 > h; ) {
                                ++h;
                                var oa = N[E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 0, N.length - 1, b)];
                                zc = E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 5, 10, b);
                                F = E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 15, 26, b) / 4;
                                Ca = 150 * a.x + E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, Math.floor(F / 2), Math.floor(150 - F / 2), b);
                                n = b.getFGHeight(Math.floor(Ca)) - 1;
                                Ka = E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 30, Math.floor(n - 30), b);
                                var db = Math.floor(Ka);
                                ma = E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, -14, 14, b);
                                R = E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, -2, 2, b);
                                wa = 2 * E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 0, 1, b) - 1;
                                for (q = 0; q < zc; )
                                    for (++q,
                                    ma = Math.min(F / 2, Math.max(-F / 2, ma + E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, -4, 4, b) / 3)),
                                    R = Math.min(F / 6, Math.max(-F / 6, R + E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, -2, 2, b) / 5)),
                                    F = Math.min(6.5, Math.max(3.75, F + E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, -4, 4, b) / 2)),
                                    Ca + ma < 150 * a.x + F / 2 ? ma = Math.abs(ma) : Ca + ma > 150 * (a.x + 1) - F / 2 && (ma = -Math.abs(ma)),
                                    Ca += ma,
                                    Ka += R * wa,
                                    l = Math.round(-F / 2),
                                    L = Math.round(F / 2) + 1; l < L; )
                                        for (w = l++,
                                        x = Math.round(-F / 2),
                                        A = Math.round(F / 2) + 1; x < A; )
                                            if (K = x++,
                                            1 <= Math.floor(Ca + w - 150 * a.x) && 149 > Math.floor(Ca + w - 150 * a.x) && w * w + K * K <= Math.pow(F / 2, 2))
                                                try {
                                                    M = E.appropriateMineBlocks,
                                                    Na = b.getFG(Math.floor(Ca + w), Math.floor(Ka + K)),
                                                    1 == M.h[Na] && (b.mineFG(Math.floor(Ca + w), Math.floor(Ka + K), !1, !1),
                                                    Ka + K <= db && (b.setFG(Math.floor(Ca + w), Math.floor(Ka + K), oa, !1),
                                                    "air" == b.getFG(Math.floor(Ca + w) - 1, Math.floor(Ka + K)) ? b.setFG(Math.floor(Ca + w) - 1, Math.floor(Ka + K), "stone", !1) : "gravel" == b.getFG(Math.floor(Ca + w) - 1, Math.floor(Ka + K)) ? b.setFG(Math.floor(Ca + w) - 1, Math.floor(Ka + K), "stone", !1) : "sand" == b.getFG(Math.floor(Ca + w) - 1, Math.floor(Ka + K)) && b.setFG(Math.floor(Ca + w) - 1, Math.floor(Ka + K), "sandstone", !1),
                                                    "air" == b.getFG(Math.floor(Ca + w) + 1, Math.floor(Ka + K)) ? b.setFG(Math.floor(Ca + w) + 1, Math.floor(Ka + K), "stone", !1) : "gravel" == b.getFG(Math.floor(Ca + w) + 1, Math.floor(Ka + K)) ? b.setFG(Math.floor(Ca + w) + 1, Math.floor(Ka + K), "stone", !1) : "sand" == b.getFG(Math.floor(Ca + w) + 1, Math.floor(Ka + K)) && b.setFG(Math.floor(Ca + w) + 1, Math.floor(Ka + K), "sandstone", !1),
                                                    "air" == b.getFG(Math.floor(Ca + w), Math.floor(Ka + K - 1)) ? b.setFG(Math.floor(Ca + w), Math.floor(Ka + K - 1), "stone", !1) : "gravel" == b.getFG(Math.floor(Ca + w), Math.floor(Ka + K - 1)) ? b.setFG(Math.floor(Ca + w), Math.floor(Ka + K - 1), "stone", !1) : "sand" == b.getFG(Math.floor(Ca + w), Math.floor(Ka + K - 1)) && b.setFG(Math.floor(Ca + w), Math.floor(Ka + K - 1), "sandstone", !1)))
                                                } catch (Dc) {
                                                    var V = ea.caught(Dc).unwrap();
                                                    ha.trace("Error at cavern generation: " + (null == V ? "null" : H.string(V)), {
                                                        fileName: "src/WorldGenerator.hx",
                                                        lineNumber: 393,
                                                        className: "WorldGenerator",
                                                        methodName: "generate"
                                                    })
                                                }
                            }
                            a.genStage = 7
                        } else if (7 == Math.floor(a.genStage)) {
                            c = Math.floor(100 * T.modulus(a.genStage, 1));
                            h = 150 * a.x + Math.floor(150 * T.modulus(a.genStage, 1));
                            for (q = Math.floor(150 * a.x + 150 * (T.modulus(a.genStage, 1) + .1) + 1); h < q; ) {
                                var ka = h++
                                  , P = "dirt"
                                  , U = "dirt_gravel"
                                  , ac = 3
                                  , Ta = ka;
                                z = E.getBiomeAtX(ka, b);
                                if ("desert" == z || "beach" == z || "water" == b.getFG(ka, b.getFGHeight(ka) - 1))
                                    P = "sand",
                                    U = "sandstone",
                                    ac = 2;
                                var S = b.getFGHeight2(ka) + 1;
                                if (!(S > E.worldHeight + 100)) {
                                    var W = E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 14, 23, b) / 2
                                      , Ac = E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 1, 3, b)
                                      , aa = E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 3, 6, b) * (2 * E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 0, 1, b) - 1)
                                      , Rb = -E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 3, 6, b);
                                    for (l = 0; l < Ac; ) {
                                        ++l;
                                        Ta += Math.floor(aa / 4);
                                        S += Math.floor(Rb / 4);
                                        L = Math.round(-W / 2);
                                        for (x = Math.round(W / 2) + 1; L < x; ) {
                                            var X = L++;
                                            A = Math.round(-W / 2);
                                            for (D = Math.round(W / 2) + 1; A < D; ) {
                                                var Y = A++;
                                                if (X * X + Y * Y <= W * W / 4)
                                                    try {
                                                        Math.floor(Ta + X) >= 150 * a.x && Math.floor(Ta + X) < 150 * a.x + 150 && (M = E.appropriateMineBlocks,
                                                        Na = b.getFG(Math.floor(Ta + X), Math.floor(S + Y)),
                                                        1 == M.h[Na] && ("air" != b.getFG(Math.floor(Ta + X), Math.floor(S + Y - 1)) && S + Y >= b.getFGHeight2(Ta + X) - 1 - ac + E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, -1, 1, b) ? ("sand" == P && 1 == E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 1, 10, b) ? b.setFG(Math.floor(Ta + X), Math.floor(S + Y), P + "_gravel", !1) : b.setFG(Math.floor(Ta + X), Math.floor(S + Y), P, !1),
                                                        "stone" == b.getBG(Math.floor(Ta + X), Math.floor(S + Y)) && b.setBG(Math.floor(Ta + X), Math.floor(S + Y), P, !1)) : (b.setFG(Math.floor(Ta + X), Math.floor(S + Y), U, !1),
                                                        "stone" == b.getBG(Math.floor(Ta + X), Math.floor(S + Y)) && b.setBG(Math.floor(Ta + X), Math.floor(S + Y), U, !1))))
                                                    } catch (Dc) {
                                                        G = ea.caught(Dc).unwrap(),
                                                        ha.trace("Error at dirt and sand generation: " + (null == G ? "null" : H.string(G)), {
                                                            fileName: "src/WorldGenerator.hx",
                                                            lineNumber: 448,
                                                            className: "WorldGenerator",
                                                            methodName: "generate"
                                                        })
                                                    }
                                            }
                                        }
                                        --W
                                    }
                                }
                            }
                            a.genStage = Math.floor(10 * a.genStage + 1) / 10
                        } else if (8 == Math.floor(a.genStage)) {
                            c = Math.floor(T.modulus(a.genStage, 1));
                            h = 150 * a.x + Math.floor(150 * T.modulus(a.genStage, 1));
                            for (q = Math.floor(150 * a.x + 150 * (T.modulus(a.genStage, 1) + .1) + 1); h < q; ) {
                                ka = h++;
                                P = "dirt";
                                U = "dirt_gravel";
                                ac = 3;
                                Ta = ka;
                                z = E.getBiomeAtX(ka, b);
                                if ("desert" == z || "beach" == z || "water" == b.getFG(ka, b.getFGHeight(ka) - 1))
                                    P = "sand",
                                    U = "sandstone",
                                    ac = 2;
                                S = b.getBGHeight(ka) + 1;
                                if (!(S > E.worldHeight + 100))
                                    for (W = E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 9, 15, b) / 2,
                                    Ac = E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 1, 4, b),
                                    aa = E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 3, 6, b) * (2 * E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 0, 1, b) - 1),
                                    Rb = -E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 3, 6, b),
                                    l = 0; l < Ac; ) {
                                        ++l;
                                        Ta += Math.floor(aa / 4);
                                        S += Math.floor(Rb / 4);
                                        L = Math.round(-W / 2);
                                        for (x = Math.round(W / 2) + 1; L < x; )
                                            for (X = L++,
                                            A = Math.round(-W / 2),
                                            D = Math.round(W / 2) + 1; A < D; )
                                                if (Y = A++,
                                                X * X + Y * Y <= W * W / 4)
                                                    try {
                                                        Math.floor(Ta + X) >= 150 * a.x && Math.floor(Ta + X) < 150 * a.x + 150 && (M = E.appropriateMineBlocks,
                                                        Na = b.getBG(Math.floor(Ta + X), Math.floor(S + Y)),
                                                        1 == M.h[Na] && ("air" != b.getBG(Math.floor(Ta + X), Math.floor(S + Y - 1)) && S + Y >= b.getBGHeight(Ta + X) - 1 - ac + E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, -1, 1, b) ? ("sand" == P && 1 == E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 1, 10, b) ? b.setBG(Math.floor(Ta + X), Math.floor(S + Y), P + "_gravel", !1) : b.setBG(Math.floor(Ta + X), Math.floor(S + Y), P, !1),
                                                        "stone" == b.getBG(Math.floor(Ta + X), Math.floor(S + Y)) && b.setBG(Math.floor(Ta + X), Math.floor(S + Y), P, !1)) : b.setBG(Math.floor(Ta + X), Math.floor(S + Y), U, !1)))
                                                    } catch (Dc) {
                                                        G = ea.caught(Dc).unwrap(),
                                                        ha.trace("Error at dirt and sand generation phase 2: " + (null == G ? "null" : H.string(G)), {
                                                            fileName: "src/WorldGenerator.hx",
                                                            lineNumber: 502,
                                                            className: "WorldGenerator",
                                                            methodName: "generate"
                                                        })
                                                    }
                                        --W
                                    }
                            }
                            a.genStage = Math.floor(10 * a.genStage + 1) / 10
                        } else if (9 == Math.floor(a.genStage)) {
                            c = 152 * a.x + Sa.currentGame.seed;
                            c = E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 1, 1E6, b) * (152 * a.x + Sa.currentGame.seed);
                            h = 0;
                            for (q = Math.floor(150 * E.worldHeight / 100); h < q; ) {
                                ++h;
                                var ja = E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 0, 900, b)
                                  , ca = "coal_ore";
                                100 > ja ? ca = "stone_slate" : 200 > ja ? ca = "stone_syenite" : 300 > ja ? ca = "stone_gneiss" : 440 > ja ? ca = "dirt" : 530 > ja ? ca = "gravel" : 680 > ja ? ca = "coal_ore" : 780 > ja ? ca = "iron_ore" : 860 > ja ? ca = "copper_ore" : 885 > ja ? ca = "gold_ore" : 900 > ja && (ca = "diamond_ore");
                                var Ab = E.veinAttributes.h[ca][2]
                                  , da = E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 1, Math.floor(E.veinAttributes.h[ca][3]), b)
                                  , Ob = 150 * a.x + E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, Math.round(Ab), 150 - Math.round(Ab), b);
                                n = b.getFGHeight(Ob) - 1;
                                var mc = E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, Math.floor(n * E.veinAttributes.h[ca][0]), Math.floor(n * E.veinAttributes.h[ca][1]), b)
                                  , Va = E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, -5, 5, b) / 2
                                  , fa = E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, -5, 5, b) / 2;
                                for (l = 0; l < da; )
                                    for (++l,
                                    Ab = Math.min(1.5 * E.veinAttributes.h[ca][2], Math.max(E.veinAttributes.h[ca][2] / 2, Ab + E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, -5, 5, b) / 2)),
                                    Ob + Va < 150 * a.x + Ab / 2 ? Va = Math.floor(Math.abs(Va)) : Ob + Va > 150 * (a.x + 1) - Ab / 2 && (Va = -Math.floor(Math.abs(Va))),
                                    Ob += Math.floor(Va / 2),
                                    mc += Math.floor(fa / 2),
                                    L = Math.round(-Ab / 2),
                                    x = Math.round(Ab / 2) + 1; L < x; ) {
                                        var la = L++;
                                        A = Math.round(-Ab / 2);
                                        for (D = Math.round(Ab / 2) + 1; A < D; ) {
                                            var na = A++;
                                            if (Math.floor(Ob + la) >= 150 * a.x && Math.floor(Ob + la) < 150 * (a.x + 1) && la * la + na * na <= Ab * Ab / 4)
                                                try {
                                                    "stone" == b.getFG(Math.floor(Ob + la), Math.floor(mc + na)) && b.setFG(Math.floor(Ob + la), Math.floor(mc + na), ca, !1)
                                                } catch (Dc) {
                                                    G = ea.caught(Dc).unwrap(),
                                                    ha.trace("Error at ore generation: " + (null == G ? "null" : H.string(G)), {
                                                        fileName: "src/WorldGenerator.hx",
                                                        lineNumber: 553,
                                                        className: "WorldGenerator",
                                                        methodName: "generate"
                                                    })
                                                }
                                        }
                                    }
                            }
                            a.genStage = 10
                        } else if (10 == Math.floor(a.genStage)) {
                            for (h = c = 0; 150 > h; ) {
                                B = h++;
                                z = E.getBiomeAtX(B + 150 * a.x, b);
                                var pa = E.getSpecificBiomeAtX(B + 150 * a.x, b);
                                n = b.getFGHeight(150 * a.x + B) - 1;
                                if ("dirt" == b.getFG(150 * a.x + B, n)) {
                                    b.setFG(150 * a.x + B, n, "dirt_grass", !1);
                                    var ia = E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 1, 200, b);
                                    if (20 >= ia)
                                        "air" == b.getFG(150 * a.x + B, n + 2) && b.addObject("grass_double", 150 * a.x + B, n + 1);
                                    else if (35 >= ia)
                                        b.setFG(150 * a.x + B, n + 1, "rock", !1);
                                    else if (65 >= ia)
                                        b.setFG(150 * a.x + B, n + 1, "grass_tall", !1);
                                    else if (70 >= ia)
                                        b.setFG(150 * a.x + B, n + 1, "grass_medium", !1);
                                    else if (80 >= ia)
                                        b.setFG(150 * a.x + B, n + 1, "grass_short", !1);
                                    else if (90 >= ia)
                                        b.setFG(150 * a.x + B, n + 1, "bush", !1);
                                    else if (95 >= ia)
                                        b.setFG(150 * a.x + B, n + 1, "flower_patch_yellow", !1);
                                    else if (100 >= ia)
                                        b.setFG(150 * a.x + B, n + 1, "flower_patch_red", !1);
                                    else if (150 >= ia)
                                        if ("red plains" == pa && 1 != E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 1, 5, b) || 1 == E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 1, 50, b))
                                            130 >= ia && "air" == b.getFG(150 * a.x + B, n + 2) && b.addObject("flower_red_monocot", 150 * a.x + B, n + 1);
                                        else if ("orange forest" == pa && 1 != E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 1, 5, b) || 1 == E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 1, 50, b))
                                            130 >= ia && b.setFG(150 * a.x + B, n + 1, "flower_bulb", !1);
                                        else if ("mushroom plains" == pa && 1 != E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 1, 5, b) || 1 == E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 1, 50, b))
                                            120 >= ia && "air" == b.getFG(150 * a.x + B, n + 2) && b.addObject("mushroom_tall", 150 * a.x + B, n + 1);
                                        else {
                                            if ("cotton field" == pa && 1 != E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 1, 5, b) || 1 == E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 1, 50, b))
                                                120 >= ia && "air" == b.getFG(150 * a.x + B, n + 2) && "air" == b.getFG(150 * a.x + B + 1, n + 2) ? b.addObject("cotton_large", 150 * a.x + B - .5, n + 1) : 150 >= ia && "air" == b.getFG(150 * a.x + B, n + 2) && b.addObject("cotton_small", 150 * a.x + B, n + 1)
                                        }
                                    else
                                        151 >= ia ? b.setFG(150 * a.x + B, n + 1, "flower_bulb", !1) : 160 >= ia && "air" == b.getFG(150 * a.x + B, n + 2) && "air" == b.getFG(150 * a.x + B, n + 1) && "air" == b.getFG(150 * a.x + B - 1, n + 1) && "air" == b.getFG(150 * a.x + B - 1, n + 2) && "air" == b.getFG(150 * a.x + B - 2, n + 1) && "air" == b.getFG(150 * a.x + B - 2, n + 2) && "dirt_grass" == b.getFG(150 * a.x + B, n) && "dirt_grass" == b.getFG(150 * a.x + B - 1, n) && "dirt_grass" == b.getFG(150 * a.x + B - 2, n) && b.addObject("boulder", 150 * a.x + B - 2, n + 1)
                                } else if ("sand" == b.getFG(150 * a.x + B, n)) {
                                    var qa = E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 1, 100, b);
                                    80 < qa && (90 >= qa ? b.setFG(150 * a.x + B, n + 1, "rock", !1) : 100 >= qa && "desert" == z && b.setFG(150 * a.x + B, n + 1, "bush_desert", !1))
                                }
                            }
                            a.genStage = 11
                        } else if (11 == Math.floor(a.genStage)) {
                            c = 0;
                            for (B = 5; 145 > B; )
                                z = E.getBiomeAtX(B + 150 * a.x, b),
                                pa = E.getSpecificBiomeAtX(B + 150 * a.x, b),
                                n = b.getFGHeight2(150 * a.x + B) - 1,
                                "dirt_grass" == b.getFG(150 * a.x + B, n) ? "forest" == z && 1 != E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 1, 3, b) ? "orange forest" == pa ? E.makeTree(150 * a.x + B, n + 1, "orange", Math.floor(Math.abs(3 * a.x - 1) + ++c), b) : "birch forest" == pa ? E.makeTree(150 * a.x + B, n + 1, "birch", Math.floor(Math.abs(3 * a.x - 1) + ++c), b) : E.makeTree(150 * a.x + B, n + 1, "pine", Math.floor(Math.abs(3 * a.x - 1) + ++c), b) : "hills" == z && 1 == E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 1, 10, b) ? E.makeTree(150 * a.x + B, n + 1, "pine", Math.floor(Math.abs(3 * a.x - 1) + ++c), b) : "plain" == z && 1 == E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 1, 20, b) && E.makeTree(150 * a.x + B, n + 1, "pine", Math.floor(Math.abs(3 * a.x - 1) + ++c), b) : "sand" == b.getFG(150 * a.x + B, n) && "desert" == z && 1 == E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 1, 5, b) && E.makeCactus(150 * a.x + B, n + 1, Math.floor(Math.abs(3 * a.x - 1) + ++c), b),
                                B += E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 2, 3, b);
                            a.genStage = 12
                        } else if (12 == Math.floor(a.genStage)) {
                            c = 0;
                            h = Math.floor(150 * T.modulus(a.genStage, 1));
                            for (q = Math.floor(150 * (T.modulus(a.genStage, 1) + .2)); h < q; ) {
                                B = h++;
                                n = b.getFGHeight(150 * a.x + B);
                                for (var ba = 0; 100 > ba; ) {
                                    var sa = "vine";
                                    1 == E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 1, 2, b) && (sa = "vines");
                                    if (1 == E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 1, 2, b)) {
                                        M = E.vineBlocks;
                                        Na = b.getFG(150 * a.x + B, n - ba);
                                        var ra = 1 == M.h[Na]
                                    } else
                                        ra = !1;
                                    if (ra)
                                        var cb = !0;
                                    else if (1 == E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 1, 10, b)) {
                                        var ua = E.rareVineBlocks
                                          , xa = b.getFG(150 * a.x + B, n - ba);
                                        cb = 1 == ua.h[xa]
                                    } else
                                        cb = !1;
                                    if (cb)
                                        for (var va = E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 1, 15, b); 1 <= va; ) {
                                            if ("air" == b.getFG(150 * a.x + B, n - ba - 1))
                                                b.setFG(150 * a.x + B, n - ba - 1, sa, !1),
                                                ++ba;
                                            else
                                                break;
                                            --va
                                        }
                                    ++ba
                                }
                            }
                            a.genStage = 13
                        } else if (13 == Math.floor(a.genStage)) {
                            for (h = c = 0; 150 > h; ) {
                                B = h++;
                                E.getBiomeAtX(B + 150 * a.x, b);
                                n = b.getFGHeight(150 * a.x + B);
                                var Ma = Object.create(null);
                                Ma.dirt = !0;
                                Ma.dirt_grass = !0;
                                Ma.dirt_gravel = !0;
                                Ma.stone = !0;
                                Ma.coal_ore = !0;
                                Ma.iron_ore = !0;
                                var Oa = Object.create(null);
                                Oa.stone = !0;
                                Oa.coal_ore = !0;
                                Oa.iron_ore = !0;
                                var ta = Object.create(null);
                                ta.stone = !0;
                                ta.leaves_pine = !0;
                                ta.leaves_birch = !0;
                                ta.dirt = !0;
                                ta.dirt_grass = !0;
                                ta.dirt_gravel = !0;
                                ta.coal_ore = !0;
                                ta.iron_ore = !0;
                                for (ba = 0; ba < n - 1; ) {
                                    if ("air" == b.getFG(150 * a.x + B, n - ba))
                                        if (1 == E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 1, 4, b))
                                            1 == E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 1, 3, b) && Ma[b.getFG(150 * a.x + B + 1, n - ba)] ? (b.setFG(150 * a.x + B, n - ba, "mushrooms", !1),
                                            b.setDataFG(150 * a.x + B, n - ba, "orientation", "right", !1)) : 1 == E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 1, 2, b) && Ma[b.getFG(150 * a.x + B - 1, n - ba)] ? (b.setFG(150 * a.x + B, n - ba, "mushrooms", !1),
                                            b.setDataFG(150 * a.x + B, n - ba, "orientation", "left", !1)) : Ma[b.getFG(150 * a.x + B, n - ba - 1)] && b.setFG(150 * a.x + B, n - ba, "mushrooms", !1);
                                        else if (1 == E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 1, 3, b))
                                            1 == E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 1, 2, b) && Oa[b.getFG(150 * a.x + B, n - ba - 1)] ? (b.setFG(150 * a.x + B, n - ba, "spikes", !1),
                                            b.setDataFG(150 * a.x + B, n - ba, "orientation", "floor", !1)) : Oa[b.getFG(150 * a.x + B, n - ba + 1)] && (b.setFG(150 * a.x + B, n - ba, "spikes", !1),
                                            b.setDataFG(150 * a.x + B, n - ba, "orientation", "ceiling", !1));
                                        else if (1 == E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 1, 3, b)) {
                                            if (1 == E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 1, 2, b)) {
                                                M = E.cobwebBlocks;
                                                Na = b.getFG(150 * a.x + B, n - ba - 1);
                                                var $b = M.h[Na]
                                            } else
                                                $b = !1;
                                            $b ? (ua = E.cobwebBlocks,
                                            xa = b.getFG(150 * a.x + B - 1, n - ba),
                                            ra = ua.h[xa]) : ra = !1;
                                            if (ra) {
                                                var ya = E.cobwebBlocks
                                                  , Zb = b.getFG(150 * a.x + B - 1, n - ba + 1);
                                                cb = ya.h[Zb]
                                            } else
                                                cb = !1;
                                            if (cb)
                                                "air" == b.getFG(150 * a.x + B, n - ba + 1) && (q = new p,
                                                q.h.orientation = 1,
                                                b.addObject("cobweb1", 150 * a.x + B, n - ba, q));
                                            else {
                                                var vb = E.cobwebBlocks
                                                  , za = b.getFG(150 * a.x + B, n - ba - 1);
                                                if (vb.h[za]) {
                                                    var Nb = E.cobwebBlocks
                                                      , ib = b.getFG(150 * a.x + B + 1, n - ba - 1);
                                                    var La = Nb.h[ib]
                                                } else
                                                    La = !1;
                                                if (La) {
                                                    var Aa = E.cobwebBlocks
                                                      , Ba = b.getFG(150 * a.x + B + 1, n - ba + 1);
                                                    var $a = Aa.h[Ba]
                                                } else
                                                    $a = !1;
                                                if ($a)
                                                    "air" == b.getFG(150 * a.x + B, n - ba + 1) && (l = new p,
                                                    l.h.orientation = 2,
                                                    b.addObject("cobweb2", 150 * a.x + B, n - ba, l));
                                                else {
                                                    var Za = E.cobwebBlocks
                                                      , gb = b.getFG(150 * a.x + B, n - ba + 1);
                                                    if (Za.h[gb]) {
                                                        var pb = E.cobwebBlocks
                                                          , Da = b.getFG(150 * a.x + B - 1, n - ba);
                                                        var sc = pb.h[Da]
                                                    } else
                                                        sc = !1;
                                                    if (sc) {
                                                        var Ub = E.cobwebBlocks
                                                          , Pb = b.getFG(150 * a.x + B - 1, n - ba - 1);
                                                        var Ea = Ub.h[Pb]
                                                    } else
                                                        Ea = !1;
                                                    if (Ea)
                                                        "air" == b.getFG(150 * a.x + B, n - ba - 1) && (L = new p,
                                                        L.h.orientation = 3,
                                                        b.addObject("cobweb3", 150 * a.x + B, n - ba - 1, L));
                                                    else {
                                                        var Fa = E.cobwebBlocks
                                                          , Ga = b.getFG(150 * a.x + B, n - ba + 1);
                                                        if (Fa.h[Ga]) {
                                                            var Qa = E.cobwebBlocks
                                                              , Ia = b.getFG(150 * a.x + B + 1, n - ba);
                                                            var Ha = Qa.h[Ia]
                                                        } else
                                                            Ha = !1;
                                                        if (Ha) {
                                                            var Ja = E.cobwebBlocks
                                                              , Wa = b.getFG(150 * a.x + B + 1, n - ba - 1);
                                                            var Pa = Ja.h[Wa]
                                                        } else
                                                            Pa = !1;
                                                        Pa && "air" == b.getFG(150 * a.x + B, n - ba - 1) && (x = new p,
                                                        x.h.orientation = 4,
                                                        b.addObject("cobweb4", 150 * a.x + B, n - ba - 1, x))
                                                    }
                                                }
                                            }
                                        } else
                                            ++c,
                                            ta[b.getFG(150 * a.x + B, n - ba + 1)] && b.setFG(150 * a.x + B, n - ba, "roots_plant", !1);
                                    ba += E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 1, 10, b)
                                }
                            }
                            a.genStage = 14
                        } else if (14 == Math.floor(a.genStage)) {
                            for (h = c = 0; 150 > h; )
                                for (B = h++,
                                q = 0,
                                l = E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 2, 5, b) + 1; q < l; )
                                    b.setFG(150 * a.x + B, q++, "bedrock", !1);
                            a.genStage = 15
                        } else if (15 == Math.floor(a.genStage)) {
                            for (B = c = 0; 150 > B; ) {
                                n = Math.max(5, b.getFGHeight(150 * a.x + B) - 20);
                                for (ba = 5; ba < n - 1; ) {
                                    if ("air" == b.getFG(150 * a.x + B, ba) && "stone" == b.getFG(150 * a.x + B, ba - 1)) {
                                        var Ra = [];
                                        for (h = 0; 5 > h; ) {
                                            ++h;
                                            var nc = E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 0, E.bonusChestItems.length - 1, b);
                                            Ra[E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 0, 20, b)] = new Z(E.bonusChestItems[nc].type,E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, E.bonusChestItems[nc].min, E.bonusChestItems[nc].max, b))
                                        }
                                        q = new p;
                                        q.h.items = Ra;
                                        q.h.chestType = "battered";
                                        b.addObject("chest", 150 * a.x + B, ba, q)
                                    }
                                    ba += E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 1, 40, b)
                                }
                                B += E.randomNumberSeed(Math.abs(3 * a.x - 1) + ++c, 1, 5, b)
                            }
                            a.genStage = 16
                        } else
                            a.genStage = 100,
                            a.generated = !0,
                            b.toGenerate.remove(a.x)
                }
            }
            ;
            E.makeCactus = function(a, b, c, f, h) {
                null == h && (h = 3);
                if (null == c)
                    for (var q = X.randomNumber(2, Math.max(2, 6 - h)), d = q; 0 <= --q; )
                        "air" == f.getFG(a, b + q) && (f.setFG(a, b + q, "cactus", !1),
                        X.randomNumber(1, 30) < h * h && 0 < q && q < d && "air" == f.getFG(a - 1, b + q - 1) && "air" == f.getFG(a - 1, b + q) && "air" == f.getFG(a - 1, b + q + 1) && E.makeCactus(a - 1, b + q, c, f, h - 1),
                        X.randomNumber(1, 30) < h * h && 0 < q && q < d && "air" == f.getFG(a + 1, b + q - 1) && "air" == f.getFG(a + 1, b + q) && "air" == f.getFG(a + 1, b + q + 1) && E.makeCactus(a + 1, b + q, c, f, h - 1));
                else
                    for (d = q = E.randomNumberSeed(++c, 2, Math.floor(Math.max(2, 6 - h)), f); 0 <= --q; )
                        "air" == f.getFG(a, b + q) && (f.setFG(a, b + q, "cactus", !1),
                        E.randomNumberSeed(++c, 1, 30, f) < h * h && 0 < q && q < d - 1 && "air" == f.getFG(a - 1, b + q - 1) && "air" == f.getFG(a - 1, b + q) && "air" == f.getFG(a - 1, b + q + 1) && (E.makeCactus(a - 1, b + q, c, f, h - 1),
                        f.setDataFG(a - 1, b + q, "orientation", "right")),
                        E.randomNumberSeed(++c, 1, 30, f) < h * h && 0 < q && q < d - 1 && "air" == f.getFG(a + 1, b + q - 1) && "air" == f.getFG(a + 1, b + q) && "air" == f.getFG(a + 1, b + q + 1) && (E.makeCactus(a + 1, b + q, c, f, h - 1),
                        f.setDataFG(a + 1, b + q, "orientation", "left")))
            }
            ;
            E.makeTree = function(a, b, c, f, h) {
                if ("pine" == c) {
                    c = null == f ? X.randomNumber(5, 8) : E.randomNumberSeed(++f, 5, 8, h);
                    for (var q = 0; q <= c + 1; ) {
                        if (q <= c && !h.setFG(a, b + q, "wood_pine", !1))
                            return !1;
                        ++q;
                        if (q >= c / 2.5) {
                            var d = null == f ? X.randomNumber(-1, 1) : E.randomNumberSeed(++f, -1, 1, h)
                              , g = -Math.round(Math.max(c - q + d + 2, 0) / 2.5);
                            for (d = Math.round(Math.max(c - q + d + 2, 0) / 2.5) + 1; g < d; ) {
                                var l = g++;
                                try {
                                    "air" == h.getFG(a + l, b + q) && h.setFG(a + l, b + q, "leaves_pine", !1)
                                } catch (td) {
                                    l = ea.caught(td).unwrap(),
                                    ha.trace("Error at pine tree generation: " + (null == l ? "null" : H.string(l)), {
                                        fileName: "src/WorldGenerator.hx",
                                        lineNumber: 830,
                                        className: "WorldGenerator",
                                        methodName: "makeTree"
                                    })
                                }
                            }
                        }
                    }
                } else if ("orange" == c)
                    for (c = null == f ? X.randomNumber(7, 9) : E.randomNumberSeed(++f, 7, 9, h),
                    q = 0; q <= c + 1; ) {
                        if (q <= c && !h.setFG(a, b + q, "wood_orange", !1))
                            return !1;
                        ++q;
                        if (q >= c / 2.5)
                            for (d = null == f ? X.randomNumber(-1, 1) : E.randomNumberSeed(++f, -1, 1, h),
                            g = -Math.round(Math.max(c - q + d + 2, 0) / 2.5),
                            d = Math.round(Math.max(c - q + d + 2, 0) / 2.5) + 1; g < d; ) {
                                l = g++;
                                try {
                                    "air" == h.getFG(a + l, b + q) && (1 == (null == f ? X.randomNumber(0, 3) : E.randomNumberSeed(++f, 0, 3, h)) ? h.setFG(a + l, b + q, "leaves_orange_flower", !1) : h.setFG(a + l, b + q, "leaves_orange", !1)),
                                    1 != E.randomNumberSeed(++f, 0, 5, h) && "air" == h.getFG(a + l, b + q - 1) && (h.setFG(a + l, b + q - 1, "vines_orange", !1),
                                    1 != E.randomNumberSeed(++f, 0, 2, h) && "air" == h.getFG(a + l, b + q - 2) && h.setFG(a + l, b + q - 2, "vines_orange", !1))
                                } catch (td) {
                                    l = ea.caught(td).unwrap(),
                                    ha.trace("Error at unknown tree generation: " + (null == l ? "null" : H.string(l)), {
                                        fileName: "src/WorldGenerator.hx",
                                        lineNumber: 863,
                                        className: "WorldGenerator",
                                        methodName: "makeTree"
                                    })
                                }
                            }
                    }
                else if ("birch" == c)
                    for (c = null == f ? X.randomNumber(6, 7) : E.randomNumberSeed(++f, 6, 7, h),
                    q = 0; q <= c + 1; ) {
                        if (q <= c && !h.setFG(a, b + q, "wood_birch", !1))
                            return !1;
                        ++q;
                        if (q >= c / 1.6)
                            for (g = Math.round(-c / 4),
                            d = Math.floor(c / 4) + 1; g < d; ) {
                                f = g++;
                                var p = Math.round(-c / 2.7);
                                for (l = Math.floor(c / 2.7) + 1; p < l; ) {
                                    var y = p++;
                                    if (f * f + y * y <= c * c / 10)
                                        try {
                                            "air" == h.getFG(a + f, b + q + y) && (h.setFG(a + f, b + q + y, "leaves_birch", !1),
                                            h.setFG(a - f, b + q + y, "leaves_birch", !1))
                                        } catch (td) {
                                            y = ea.caught(td).unwrap(),
                                            ha.trace("Error at birch tree generation: " + (null == y ? "null" : H.string(y)), {
                                                fileName: "src/WorldGenerator.hx",
                                                lineNumber: 886,
                                                className: "WorldGenerator",
                                                methodName: "makeTree"
                                            })
                                        }
                                }
                            }
                    }
                return !0
            }
            ;
            var Oa = function() {};
            g["haxe.IMap"] = Oa;
            Oa.__name__ = "haxe.IMap";
            Oa.__isInterface__ = !0;
            Oa.prototype = {
                __class__: Oa
            };
            var ea = function(a, b, c) {
                Error.call(this, a);
                this.message = a;
                this.__previousException = b;
                this.__nativeException = null != c ? c : this
            };
            g["haxe.Exception"] = ea;
            ea.__name__ = "haxe.Exception";
            ea.caught = function(a) {
                return a instanceof ea ? a : a instanceof Error ? new ea(a.message,null,a) : new Vb(a,null,a)
            }
            ;
            ea.thrown = function(a) {
                return a instanceof ea ? a.get_native() : a instanceof Error ? a : new Vb(a)
            }
            ;
            ea.__super__ = Error;
            ea.prototype = n(Error.prototype, {
                unwrap: function() {
                    return this.__nativeException
                },
                toString: function() {
                    return this.get_message()
                },
                get_message: function() {
                    return this.message
                },
                get_native: function() {
                    return this.__nativeException
                },
                __class__: ea
            });
            var ha = function() {};
            g["haxe.Log"] = ha;
            ha.__name__ = "haxe.Log";
            ha.formatOutput = function(a, b) {
                a = H.string(a);
                if (null == b)
                    return a;
                var c = b.fileName + ":" + b.lineNumber;
                if (null != b.customParams) {
                    var f = 0;
                    for (b = b.customParams; f < b.length; )
                        a += ", " + H.string(b[f++])
                }
                return c + ": " + a
            }
            ;
            ha.trace = function(a, b) {
                a = ha.formatOutput(a, b);
                "undefined" != typeof console && null != console.log && console.log(a)
            }
            ;
            var jb = function() {
                this.buf = new pb;
                this.cache = [];
                this.useCache = jb.USE_CACHE;
                this.useEnumIndex = jb.USE_ENUM_INDEX;
                this.shash = new p;
                this.scount = 0
            };
            g["haxe.Serializer"] = jb;
            jb.__name__ = "haxe.Serializer";
            jb.run = function(a) {
                var b = new jb;
                b.serialize(a);
                return b.toString()
            }
            ;
            jb.prototype = {
                toString: function() {
                    return this.buf.b
                },
                serializeString: function(a) {
                    var b = this.shash.h[a];
                    null != b ? (this.buf.b += "R",
                    this.buf.b += null == b ? "null" : "" + b) : (this.shash.h[a] = this.scount++,
                    this.buf.b += "y",
                    a = encodeURIComponent(a),
                    this.buf.b += H.string(a.length),
                    this.buf.b += ":",
                    this.buf.b += null == a ? "null" : "" + a)
                },
                serializeRef: function(a) {
                    for (var b = typeof a, c = 0, f = this.cache.length; c < f; ) {
                        var h = c++
                          , q = this.cache[h];
                        if (typeof q == b && q == a)
                            return this.buf.b += "r",
                            this.buf.b += null == h ? "null" : "" + h,
                            !0
                    }
                    this.cache.push(a);
                    return !1
                },
                serializeFields: function(a) {
                    for (var b = 0, c = Y.fields(a); b < c.length; ) {
                        var f = c[b];
                        ++b;
                        this.serializeString(f);
                        this.serialize(Y.field(a, f))
                    }
                    this.buf.b += "g"
                },
                serialize: function(a) {
                    var b = v.typeof(a);
                    switch (b._hx_index) {
                    case 0:
                        this.buf.b += "n";
                        break;
                    case 1:
                        if (0 == a) {
                            this.buf.b += "z";
                            break
                        }
                        this.buf.b += "i";
                        this.buf.b += null == a ? "null" : "" + a;
                        break;
                    case 2:
                        isNaN(a) ? this.buf.b += "k" : isFinite(a) ? (this.buf.b += "d",
                        this.buf.b += null == a ? "null" : "" + a) : this.buf.b += 0 > a ? "m" : "p";
                        break;
                    case 3:
                        this.buf.b += a ? "t" : "f";
                        break;
                    case 4:
                        ja.__instanceof(a, ke) ? (a = a.__name__,
                        this.buf.b += "A",
                        this.serializeString(a)) : ja.__instanceof(a, le) ? (this.buf.b += "B",
                        this.serializeString(a.__ename__)) : this.useCache && this.serializeRef(a) || (this.buf.b += "o",
                        this.serializeFields(a));
                        break;
                    case 5:
                        throw ea.thrown("Cannot serialize function");
                    case 6:
                        b = b.c;
                        if (b == String) {
                            this.serializeString(a);
                            break
                        }
                        if (this.useCache && this.serializeRef(a))
                            break;
                        switch (b) {
                        case Array:
                            var c = 0;
                            this.buf.b += "a";
                            for (var f = 0, h = a.length; f < h; )
                                b = f++,
                                null == a[b] ? ++c : (0 < c && (1 == c ? this.buf.b += "n" : (this.buf.b += "u",
                                this.buf.b += null == c ? "null" : "" + c),
                                c = 0),
                                this.serialize(a[b]));
                            0 < c && (1 == c ? this.buf.b += "n" : (this.buf.b += "u",
                            this.buf.b += null == c ? "null" : "" + c));
                            this.buf.b += "h";
                            break;
                        case Date:
                            this.buf.b += "v";
                            this.buf.b += H.string(a.getTime());
                            break;
                        case ra:
                            this.buf.b += "q";
                            for (b = a.keys(); b.hasNext(); )
                                c = b.next(),
                                this.buf.b += ":",
                                this.buf.b += null == c ? "null" : "" + c,
                                this.serialize(a.h[c]);
                            this.buf.b += "h";
                            break;
                        case Mb:
                            this.buf.b += "l";
                            for (a = a.h; null != a; )
                                b = a.item,
                                a = a.next,
                                this.serialize(b);
                            this.buf.b += "h";
                            break;
                        case y:
                            this.buf.b += "M";
                            for (b = a.keys(); b.hasNext(); ) {
                                c = b.next();
                                var q = Y.field(c, "__id__");
                                Y.deleteField(c, "__id__");
                                this.serialize(c);
                                c.__id__ = q;
                                this.serialize(a.h[c.__id__])
                            }
                            this.buf.b += "h";
                            break;
                        case p:
                            this.buf.b += "b";
                            c = Object.keys(a.h);
                            q = c.length;
                            for (f = 0; f < q; )
                                b = c[f++],
                                this.serializeString(b),
                                this.serialize(a.h[b]);
                            this.buf.b += "h";
                            break;
                        case Aa:
                            this.buf.b += "s";
                            this.buf.b += H.string(Math.ceil(8 * a.length / 6));
                            this.buf.b += ":";
                            b = 0;
                            c = a.length - 2;
                            q = jb.BASE64_CODES;
                            if (null == q) {
                                q = Array(jb.BASE64.length);
                                f = 0;
                                for (h = jb.BASE64.length; f < h; ) {
                                    var d = f++;
                                    q[d] = K.cca(jb.BASE64, d)
                                }
                                jb.BASE64_CODES = q
                            }
                            for (; b < c; )
                                f = a.b[b++],
                                h = a.b[b++],
                                d = a.b[b++],
                                this.buf.b += String.fromCodePoint(q[f >> 2]),
                                this.buf.b += String.fromCodePoint(q[(f << 4 | h >> 4) & 63]),
                                this.buf.b += String.fromCodePoint(q[(h << 2 | d >> 6) & 63]),
                                this.buf.b += String.fromCodePoint(q[d & 63]);
                            b == c ? (f = a.b[b++],
                            h = a.b[b++],
                            this.buf.b += String.fromCodePoint(q[f >> 2]),
                            this.buf.b += String.fromCodePoint(q[(f << 4 | h >> 4) & 63]),
                            this.buf.b += String.fromCodePoint(q[h << 2 & 63])) : b == c + 1 && (f = a.b[b++],
                            this.buf.b += String.fromCodePoint(q[f >> 2]),
                            this.buf.b += String.fromCodePoint(q[f << 4 & 63]));
                            break;
                        default:
                            this.useCache && this.cache.pop(),
                            null != a.hxSerialize ? (this.buf.b += "C",
                            this.serializeString(b.__name__),
                            this.useCache && this.cache.push(a),
                            a.hxSerialize(this),
                            this.buf.b += "g") : (this.buf.b += "c",
                            this.serializeString(b.__name__),
                            this.useCache && this.cache.push(a),
                            this.serializeFields(a))
                        }
                        break;
                    case 7:
                        b = b.e;
                        if (this.useCache) {
                            if (this.serializeRef(a))
                                break;
                            this.cache.pop()
                        }
                        this.buf.b += H.string(this.useEnumIndex ? "j" : "w");
                        this.serializeString(b.__ename__);
                        this.useEnumIndex ? (this.buf.b += ":",
                        this.buf.b += H.string(a._hx_index)) : (b = a,
                        this.serializeString(z[b.__enum__].__constructs__[b._hx_index]._hx_name));
                        this.buf.b += ":";
                        c = v.enumParameters(a);
                        this.buf.b += H.string(c.length);
                        for (b = 0; b < c.length; )
                            this.serialize(c[b++]);
                        this.useCache && this.cache.push(a);
                        break;
                    default:
                        throw ea.thrown("Cannot serialize " + H.string(a));
                    }
                },
                __class__: jb
            };
            var bc = function(a) {
                var b = this;
                this.id = setInterval(function() {
                    b.run()
                }, a)
            };
            g["haxe.Timer"] = bc;
            bc.__name__ = "haxe.Timer";
            bc.delay = function(a, b) {
                var c = new bc(b);
                c.run = function() {
                    c.stop();
                    a()
                }
                ;
                return c
            }
            ;
            bc.prototype = {
                stop: function() {
                    null != this.id && (clearInterval(this.id),
                    this.id = null)
                },
                run: function() {},
                __class__: bc
            };
            var Ec = function() {};
            g["haxe._Unserializer.DefaultResolver"] = Ec;
            Ec.__name__ = "haxe._Unserializer.DefaultResolver";
            Ec.prototype = {
                resolveClass: function(a) {
                    return g[a]
                },
                resolveEnum: function(a) {
                    return z[a]
                },
                __class__: Ec
            };
            var fb = function(a) {
                this.buf = a;
                this.length = this.buf.length;
                this.pos = 0;
                this.scache = [];
                this.cache = [];
                a = fb.DEFAULT_RESOLVER;
                null == a && (a = new Ec,
                fb.DEFAULT_RESOLVER = a);
                this.resolver = a
            };
            g["haxe.Unserializer"] = fb;
            fb.__name__ = "haxe.Unserializer";
            fb.initCodes = function() {
                for (var a = [], b = 0, c = fb.BASE64.length; b < c; ) {
                    var f = b++;
                    a[fb.BASE64.charCodeAt(f)] = f
                }
                return a
            }
            ;
            fb.run = function(a) {
                return (new fb(a)).unserialize()
            }
            ;
            fb.prototype = {
                readDigits: function() {
                    for (var a = 0, b = !1, c = this.pos; ; ) {
                        var f = this.buf.charCodeAt(this.pos);
                        if (f != f)
                            break;
                        if (45 == f) {
                            if (this.pos != c)
                                break;
                            b = !0
                        } else {
                            if (48 > f || 57 < f)
                                break;
                            a = 10 * a + (f - 48)
                        }
                        this.pos++
                    }
                    b && (a *= -1);
                    return a
                },
                readFloat: function() {
                    for (var a = this.pos; ; ) {
                        var b = this.buf.charCodeAt(this.pos);
                        if (b != b)
                            break;
                        if (43 <= b && 58 > b || 101 == b || 69 == b)
                            this.pos++;
                        else
                            break
                    }
                    return parseFloat(K.substr(this.buf, a, this.pos - a))
                },
                unserializeObject: function(a) {
                    for (; ; ) {
                        if (this.pos >= this.length)
                            throw ea.thrown("Invalid object");
                        if (103 == this.buf.charCodeAt(this.pos))
                            break;
                        var b = this.unserialize();
                        if ("string" != typeof b)
                            throw ea.thrown("Invalid object key");
                        a[b] = this.unserialize()
                    }
                    this.pos++
                },
                unserializeEnum: function(a, b) {
                    if (58 != this.buf.charCodeAt(this.pos++))
                        throw ea.thrown("Invalid enum format");
                    var c = this.readDigits();
                    if (0 == c)
                        return v.createEnum(a, b);
                    for (var f = []; 0 < c--; )
                        f.push(this.unserialize());
                    return v.createEnum(a, b, f)
                },
                unserialize: function() {
                    switch (this.buf.charCodeAt(this.pos++)) {
                    case 65:
                        var a = this.unserialize()
                          , b = this.resolver.resolveClass(a);
                        if (null == b)
                            throw ea.thrown("Class not found " + a);
                        return b;
                    case 66:
                        a = this.unserialize();
                        b = this.resolver.resolveEnum(a);
                        if (null == b)
                            throw ea.thrown("Enum not found " + a);
                        return b;
                    case 67:
                        a = this.unserialize();
                        b = this.resolver.resolveClass(a);
                        if (null == b)
                            throw ea.thrown("Class not found " + a);
                        b = Object.create(b.prototype);
                        this.cache.push(b);
                        b.hxUnserialize(this);
                        if (103 != this.buf.charCodeAt(this.pos++))
                            throw ea.thrown("Invalid custom data");
                        return b;
                    case 77:
                        a = new y;
                        for (this.cache.push(a); 104 != this.buf.charCodeAt(this.pos); )
                            a.set(this.unserialize(), this.unserialize());
                        this.pos++;
                        return a;
                    case 82:
                        a = this.readDigits();
                        if (0 > a || a >= this.scache.length)
                            throw ea.thrown("Invalid string reference");
                        return this.scache[a];
                    case 97:
                        b = [];
                        for (this.cache.push(b); ; ) {
                            var c = this.buf.charCodeAt(this.pos);
                            if (104 == c) {
                                this.pos++;
                                break
                            }
                            117 == c ? (this.pos++,
                            a = this.readDigits(),
                            b[b.length + a - 1] = null) : b.push(this.unserialize())
                        }
                        return b;
                    case 98:
                        a = new p;
                        for (this.cache.push(a); 104 != this.buf.charCodeAt(this.pos); )
                            b = this.unserialize(),
                            c = this.unserialize(),
                            a.h[b] = c;
                        this.pos++;
                        return a;
                    case 99:
                        a = this.unserialize();
                        b = this.resolver.resolveClass(a);
                        if (null == b)
                            throw ea.thrown("Class not found " + a);
                        b = Object.create(b.prototype);
                        this.cache.push(b);
                        this.unserializeObject(b);
                        return b;
                    case 100:
                        return this.readFloat();
                    case 102:
                        return !1;
                    case 105:
                        return this.readDigits();
                    case 106:
                        a = this.unserialize();
                        c = this.resolver.resolveEnum(a);
                        if (null == c)
                            throw ea.thrown("Enum not found " + a);
                        this.pos++;
                        for (var f = this.readDigits(), h = c.__constructs__, q = Array(h.length), d = 0, g = h.length; d < g; )
                            b = d++,
                            q[b] = h[b]._hx_name;
                        b = q[f];
                        if (null == b)
                            throw ea.thrown("Unknown enum index " + a + "@" + f);
                        b = this.unserializeEnum(c, b);
                        this.cache.push(b);
                        return b;
                    case 107:
                        return NaN;
                    case 108:
                        b = new Mb;
                        for (this.cache.push(b); 104 != this.buf.charCodeAt(this.pos); )
                            b.add(this.unserialize());
                        this.pos++;
                        return b;
                    case 109:
                        return -Infinity;
                    case 110:
                        return null;
                    case 111:
                        return b = {},
                        this.cache.push(b),
                        this.unserializeObject(b),
                        b;
                    case 112:
                        return Infinity;
                    case 113:
                        a = new ra;
                        this.cache.push(a);
                        for (c = this.buf.charCodeAt(this.pos++); 58 == c; )
                            b = this.readDigits(),
                            c = this.unserialize(),
                            a.h[b] = c,
                            c = this.buf.charCodeAt(this.pos++);
                        if (104 != c)
                            throw ea.thrown("Invalid IntMap format");
                        return a;
                    case 114:
                        a = this.readDigits();
                        if (0 > a || a >= this.cache.length)
                            throw ea.thrown("Invalid reference");
                        return this.cache[a];
                    case 115:
                        a = this.readDigits();
                        c = this.buf;
                        if (58 != this.buf.charCodeAt(this.pos++) || this.length - this.pos < a)
                            throw ea.thrown("Invalid bytes length");
                        f = fb.CODES;
                        null == f && (f = fb.initCodes(),
                        fb.CODES = f);
                        b = this.pos;
                        h = a & 3;
                        q = b + (a - h);
                        d = new Aa(new ArrayBuffer(3 * (a >> 2) + (2 <= h ? h - 1 : 0)));
                        for (g = 0; b < q; ) {
                            var l = f[c.charCodeAt(b++)]
                              , m = f[c.charCodeAt(b++)];
                            d.b[g++] = (l << 2 | m >> 4) & 255;
                            l = f[c.charCodeAt(b++)];
                            d.b[g++] = (m << 4 | l >> 2) & 255;
                            m = f[c.charCodeAt(b++)];
                            d.b[g++] = (l << 6 | m) & 255
                        }
                        2 <= h && (l = f[c.charCodeAt(b++)],
                        m = f[c.charCodeAt(b++)],
                        d.b[g++] = (l << 2 | m >> 4) & 255,
                        3 == h && (l = f[c.charCodeAt(b++)],
                        d.b[g++] = (m << 4 | l >> 2) & 255));
                        this.pos += a;
                        this.cache.push(d);
                        return d;
                    case 116:
                        return !0;
                    case 118:
                        return 48 <= this.buf.charCodeAt(this.pos) && 57 >= this.buf.charCodeAt(this.pos) && 48 <= this.buf.charCodeAt(this.pos + 1) && 57 >= this.buf.charCodeAt(this.pos + 1) && 48 <= this.buf.charCodeAt(this.pos + 2) && 57 >= this.buf.charCodeAt(this.pos + 2) && 48 <= this.buf.charCodeAt(this.pos + 3) && 57 >= this.buf.charCodeAt(this.pos + 3) && 45 == this.buf.charCodeAt(this.pos + 4) ? (b = K.strDate(K.substr(this.buf, this.pos, 19)),
                        this.pos += 19) : b = new Date(this.readFloat()),
                        this.cache.push(b),
                        b;
                    case 119:
                        a = this.unserialize();
                        c = this.resolver.resolveEnum(a);
                        if (null == c)
                            throw ea.thrown("Enum not found " + a);
                        b = this.unserializeEnum(c, this.unserialize());
                        this.cache.push(b);
                        return b;
                    case 120:
                        throw ea.thrown(this.unserialize());
                    case 121:
                        a = this.readDigits();
                        if (58 != this.buf.charCodeAt(this.pos++) || this.length - this.pos < a)
                            throw ea.thrown("Invalid string length");
                        b = K.substr(this.buf, this.pos, a);
                        this.pos += a;
                        b = decodeURIComponent(b.split("+").join(" "));
                        this.scache.push(b);
                        return b;
                    case 122:
                        return 0
                    }
                    this.pos--;
                    throw ea.thrown("Invalid char " + this.buf.charAt(this.pos) + " at position " + this.pos);
                },
                __class__: fb
            };
            var Vb = function(a, b, c) {
                ea.call(this, String(a), b, c);
                this.value = a
            };
            g["haxe.ValueException"] = Vb;
            Vb.__name__ = "haxe.ValueException";
            Vb.__super__ = ea;
            Vb.prototype = n(ea.prototype, {
                unwrap: function() {
                    return this.value
                },
                __class__: Vb
            });
            var kb = function() {
                this.a1 = 1;
                this.a2 = 0
            };
            g["haxe.crypto.Adler32"] = kb;
            kb.__name__ = "haxe.crypto.Adler32";
            kb.read = function(a) {
                var b = new kb
                  , c = a.readByte()
                  , f = a.readByte();
                b.a1 = a.readByte() << 8 | a.readByte();
                b.a2 = c << 8 | f;
                return b
            }
            ;
            kb.prototype = {
                update: function(a, b, c) {
                    var f = this.a1
                      , h = this.a2
                      , q = b;
                    for (b += c; q < b; )
                        f = (f + a.b[q++]) % 65521,
                        h = (h + f) % 65521;
                    this.a1 = f;
                    this.a2 = h
                },
                equals: function(a) {
                    return a.a1 == this.a1 ? a.a2 == this.a2 : !1
                },
                __class__: kb
            };
            var Aa = function(a) {
                this.length = a.byteLength;
                this.b = new Uint8Array(a);
                this.b.bufferValue = a;
                a.hxBytes = this;
                a.bytes = this.b
            };
            g["haxe.io.Bytes"] = Aa;
            Aa.__name__ = "haxe.io.Bytes";
            Aa.ofString = function(a, b) {
                b = [];
                for (var c = 0; c < a.length; ) {
                    var f = a.charCodeAt(c++);
                    55296 <= f && 56319 >= f && (f = f - 55232 << 10 | a.charCodeAt(c++) & 1023);
                    127 >= f ? b.push(f) : (2047 >= f ? b.push(192 | f >> 6) : (65535 >= f ? b.push(224 | f >> 12) : (b.push(240 | f >> 18),
                    b.push(128 | f >> 12 & 63)),
                    b.push(128 | f >> 6 & 63)),
                    b.push(128 | f & 63))
                }
                return new Aa((new Uint8Array(b)).buffer)
            }
            ;
            Aa.ofData = function(a) {
                var b = a.hxBytes;
                return null != b ? b : new Aa(a)
            }
            ;
            Aa.prototype = {
                blit: function(a, b, c, f) {
                    if (0 > a || 0 > c || 0 > f || a + f > this.length || c + f > b.length)
                        throw ea.thrown(Nb.OutsideBounds);
                    0 == c && f == b.b.byteLength ? this.b.set(b.b, a) : this.b.set(b.b.subarray(c, c + f), a)
                },
                setUInt16: function(a, b) {
                    null == this.data && (this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength));
                    this.data.setUint16(a, b, !0)
                },
                getInt32: function(a) {
                    null == this.data && (this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength));
                    return this.data.getInt32(a, !0)
                },
                setInt32: function(a, b) {
                    null == this.data && (this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength));
                    this.data.setInt32(a, b, !0)
                },
                getString: function(a, b, c) {
                    if (0 > a || 0 > b || a + b > this.length)
                        throw ea.thrown(Nb.OutsideBounds);
                    c = "";
                    var f = this.b
                      , h = Lb.fromCharCode
                      , q = a;
                    for (a += b; q < a; )
                        if (b = f[q++],
                        128 > b) {
                            if (0 == b)
                                break;
                            c += h(b)
                        } else
                            224 > b ? c += h((b & 63) << 6 | f[q++] & 127) : 240 > b ? c += h((b & 31) << 12 | (f[q++] & 127) << 6 | f[q++] & 127) : (b = (b & 15) << 18 | (f[q++] & 127) << 12 | (f[q++] & 127) << 6 | f[q++] & 127,
                            c += h((b >> 10) + 55232),
                            c += h(b & 1023 | 56320));
                    return c
                },
                toString: function() {
                    return this.getString(0, this.length)
                },
                __class__: Aa
            };
            var Gb = function() {};
            g["haxe.crypto.Base64"] = Gb;
            Gb.__name__ = "haxe.crypto.Base64";
            Gb.encode = function(a, b) {
                null == b && (b = !0);
                var c = (new Eb(Gb.BYTES)).encodeBytes(a).toString();
                if (b)
                    switch (a.length % 3) {
                    case 1:
                        c += "==";
                        break;
                    case 2:
                        c += "="
                    }
                return c
            }
            ;
            Gb.decode = function(a, b) {
                null == b && (b = !0);
                if (b)
                    for (; 61 == K.cca(a, a.length - 1); )
                        a = K.substr(a, 0, -1);
                return (new Eb(Gb.BYTES)).decodeBytes(Aa.ofString(a))
            }
            ;
            var Eb = function(a) {
                for (var b = a.length, c = 1; b > 1 << c; )
                    ++c;
                if (8 < c || b != 1 << c)
                    throw ea.thrown("BaseCode : base length must be a power of two.");
                this.base = a;
                this.nbits = c
            };
            g["haxe.crypto.BaseCode"] = Eb;
            Eb.__name__ = "haxe.crypto.BaseCode";
            Eb.prototype = {
                encodeBytes: function(a) {
                    for (var b = this.nbits, c = this.base, f = 8 * a.length / b | 0, h = new Aa(new ArrayBuffer(f + (0 == 8 * a.length % b ? 0 : 1))), q = 0, d = 0, g = (1 << b) - 1, l = 0, p = 0; p < f; ) {
                        for (; d < b; )
                            d += 8,
                            q <<= 8,
                            q |= a.b[l++];
                        d -= b;
                        h.b[p++] = c.b[q >> d & g] & 255
                    }
                    0 < d && (h.b[p++] = c.b[q << b - d & g] & 255);
                    return h
                },
                initTable: function() {
                    for (var a = [], b = 0; 256 > b; )
                        a[b++] = -1;
                    b = 0;
                    for (var c = this.base.length; b < c; ) {
                        var f = b++;
                        a[this.base.b[f]] = f
                    }
                    this.tbl = a
                },
                decodeBytes: function(a) {
                    var b = this.nbits;
                    null == this.tbl && this.initTable();
                    for (var c = this.tbl, f = a.length * b >> 3, h = new Aa(new ArrayBuffer(f)), q = 0, d = 0, g = 0, l = 0; l < f; ) {
                        for (; 8 > d; ) {
                            d += b;
                            q <<= b;
                            var p = c[a.b[g++]];
                            if (-1 == p)
                                throw ea.thrown("BaseCode : invalid encoded char");
                            q |= p
                        }
                        d -= 8;
                        h.b[l++] = q >> d & 255
                    }
                    return h
                },
                __class__: Eb
            };
            var yc = function() {};
            g["haxe.ds.BalancedTree"] = yc;
            yc.__name__ = "haxe.ds.BalancedTree";
            yc.__interfaces__ = [Oa];
            yc.prototype = {
                set: function(a, b) {
                    this.root = this.setLoop(a, b, this.root)
                },
                get: function(a) {
                    for (var b = this.root; null != b; ) {
                        var c = this.compare(a, b.key);
                        if (0 == c)
                            return b.value;
                        b = 0 > c ? b.left : b.right
                    }
                    return null
                },
                exists: function(a) {
                    for (var b = this.root; null != b; ) {
                        var c = this.compare(a, b.key);
                        if (0 == c)
                            return !0;
                        b = 0 > c ? b.left : b.right
                    }
                    return !1
                },
                keys: function() {
                    var a = [];
                    this.keysLoop(this.root, a);
                    return new sc(a)
                },
                setLoop: function(a, b, c) {
                    if (null == c)
                        return new tb(null,a,b,null);
                    var f = this.compare(a, c.key);
                    if (0 == f)
                        return new tb(c.left,a,b,c.right,null == c ? 0 : c._height);
                    if (0 > f)
                        return this.balance(this.setLoop(a, b, c.left), c.key, c.value, c.right);
                    a = this.setLoop(a, b, c.right);
                    return this.balance(c.left, c.key, c.value, a)
                },
                keysLoop: function(a, b) {
                    null != a && (this.keysLoop(a.left, b),
                    b.push(a.key),
                    this.keysLoop(a.right, b))
                },
                balance: function(a, b, c, f) {
                    var h = null == a ? 0 : a._height
                      , q = null == f ? 0 : f._height;
                    return h > q + 2 ? (h = a.left,
                    q = a.right,
                    (null == h ? 0 : h._height) >= (null == q ? 0 : q._height) ? new tb(a.left,a.key,a.value,new tb(a.right,b,c,f)) : new tb(new tb(a.left,a.key,a.value,a.right.left),a.right.key,a.right.value,new tb(a.right.right,b,c,f))) : q > h + 2 ? (h = f.right,
                    q = f.left,
                    (null == h ? 0 : h._height) > (null == q ? 0 : q._height) ? new tb(new tb(a,b,c,f.left),f.key,f.value,f.right) : new tb(new tb(a,b,c,f.left.left),f.left.key,f.left.value,new tb(f.left.right,f.key,f.value,f.right))) : new tb(a,b,c,f,(h > q ? h : q) + 1)
                },
                compare: function(a, b) {
                    return Y.compare(a, b)
                },
                __class__: yc
            };
            var tb = function(a, b, c, f, h) {
                null == h && (h = -1);
                this.left = a;
                this.key = b;
                this.value = c;
                this.right = f;
                -1 == h ? (a = this.left,
                b = this.right,
                a = (null == a ? 0 : a._height) > (null == b ? 0 : b._height) ? this.left : this.right,
                this._height = (null == a ? 0 : a._height) + 1) : this._height = h
            };
            g["haxe.ds.TreeNode"] = tb;
            tb.__name__ = "haxe.ds.TreeNode";
            tb.prototype = {
                __class__: tb
            };
            var Kb = function() {};
            g["haxe.ds.EnumValueMap"] = Kb;
            Kb.__name__ = "haxe.ds.EnumValueMap";
            Kb.__interfaces__ = [Oa];
            Kb.__super__ = yc;
            Kb.prototype = n(yc.prototype, {
                compare: function(a, b) {
                    var c = a._hx_index - b._hx_index;
                    if (0 != c)
                        return c;
                    a = v.enumParameters(a);
                    b = v.enumParameters(b);
                    return 0 == a.length && 0 == b.length ? 0 : this.compareArgs(a, b)
                },
                compareArgs: function(a, b) {
                    var c = a.length - b.length;
                    if (0 != c)
                        return c;
                    c = 0;
                    for (var f = a.length; c < f; ) {
                        var h = c++;
                        h = this.compareArg(a[h], b[h]);
                        if (0 != h)
                            return h
                    }
                    return 0
                },
                compareArg: function(a, b) {
                    return Y.isEnumValue(a) && Y.isEnumValue(b) ? this.compare(a, b) : a instanceof Array && b instanceof Array ? this.compareArgs(a, b) : Y.compare(a, b)
                },
                __class__: Kb
            });
            var ra = function() {
                this.h = {}
            };
            g["haxe.ds.IntMap"] = ra;
            ra.__name__ = "haxe.ds.IntMap";
            ra.__interfaces__ = [Oa];
            ra.prototype = {
                get: function(a) {
                    return this.h[a]
                },
                remove: function(a) {
                    if (!this.h.hasOwnProperty(a))
                        return !1;
                    delete this.h[a];
                    return !0
                },
                keys: function() {
                    var a = [], b;
                    for (b in this.h)
                        this.h.hasOwnProperty(b) && a.push(+b);
                    return new sc(a)
                },
                iterator: function() {
                    return {
                        ref: this.h,
                        it: this.keys(),
                        hasNext: function() {
                            return this.it.hasNext()
                        },
                        next: function() {
                            var a = this.it.next();
                            return this.ref[a]
                        }
                    }
                },
                __class__: ra
            };
            var Mb = function() {
                this.length = 0
            };
            g["haxe.ds.List"] = Mb;
            Mb.__name__ = "haxe.ds.List";
            Mb.prototype = {
                add: function(a) {
                    a = new l(a,null);
                    null == this.h ? this.h = a : this.q.next = a;
                    this.q = a;
                    this.length++
                },
                push: function(a) {
                    this.h = a = new l(a,this.h);
                    null == this.q && (this.q = a);
                    this.length++
                },
                pop: function() {
                    if (null == this.h)
                        return null;
                    var a = this.h.item;
                    this.h = this.h.next;
                    null == this.h && (this.q = null);
                    this.length--;
                    return a
                },
                isEmpty: function() {
                    return null == this.h
                },
                __class__: Mb
            };
            var l = function(a, b) {
                this.item = a;
                this.next = b
            };
            g["haxe.ds._List.ListNode"] = l;
            l.__name__ = "haxe.ds._List.ListNode";
            l.prototype = {
                __class__: l
            };
            var y = function() {
                this.h = {
                    __keys__: {}
                }
            };
            g["haxe.ds.ObjectMap"] = y;
            y.__name__ = "haxe.ds.ObjectMap";
            y.__interfaces__ = [Oa];
            y.prototype = {
                set: function(a, b) {
                    var c = a.__id__;
                    null == c && (c = a.__id__ = r.$haxeUID++);
                    this.h[c] = b;
                    this.h.__keys__[c] = a
                },
                get: function(a) {
                    return this.h[a.__id__]
                },
                remove: function(a) {
                    a = a.__id__;
                    if (null == this.h.__keys__[a])
                        return !1;
                    delete this.h[a];
                    delete this.h.__keys__[a];
                    return !0
                },
                keys: function() {
                    var a = [], b;
                    for (b in this.h.__keys__)
                        this.h.hasOwnProperty(b) && a.push(this.h.__keys__[b]);
                    return new sc(a)
                },
                __class__: y
            };
            var p = function() {
                this.h = Object.create(null)
            };
            g["haxe.ds.StringMap"] = p;
            p.__name__ = "haxe.ds.StringMap";
            p.__interfaces__ = [Oa];
            p.prototype = {
                get: function(a) {
                    return this.h[a]
                },
                keys: function() {
                    return new Ca(this.h)
                },
                __class__: p
            };
            var Ca = function(a) {
                this.h = a;
                this.keys = Object.keys(a);
                this.length = this.keys.length;
                this.current = 0
            };
            g["haxe.ds._StringMap.StringMapKeyIterator"] = Ca;
            Ca.__name__ = "haxe.ds._StringMap.StringMapKeyIterator";
            Ca.prototype = {
                hasNext: function() {
                    return this.current < this.length
                },
                next: function() {
                    return this.keys[this.current++]
                },
                __class__: Ca
            };
            var Ka = function(a, b, c) {
                ea.call(this, a, b);
                this.posInfos = null == c ? {
                    fileName: "(unknown)",
                    lineNumber: 0,
                    className: "(unknown)",
                    methodName: "(unknown)"
                } : c
            };
            g["haxe.exceptions.PosException"] = Ka;
            Ka.__name__ = "haxe.exceptions.PosException";
            Ka.__super__ = ea;
            Ka.prototype = n(ea.prototype, {
                toString: function() {
                    return "" + ea.prototype.toString.call(this) + " in " + this.posInfos.className + "." + this.posInfos.methodName + " at " + this.posInfos.fileName + ":" + this.posInfos.lineNumber
                },
                __class__: Ka
            });
            var zc = function(a, b, c) {
                null == a && (a = "Not implemented");
                Ka.call(this, a, b, c)
            };
            g["haxe.exceptions.NotImplementedException"] = zc;
            zc.__name__ = "haxe.exceptions.NotImplementedException";
            zc.__super__ = Ka;
            zc.prototype = n(Ka.prototype, {
                __class__: zc
            });
            var Ta = function(a) {
                this.url = a;
                this.headers = [];
                this.params = [];
                this.emptyOnData = t(this, this.onData)
            };
            g["haxe.http.HttpBase"] = Ta;
            Ta.__name__ = "haxe.http.HttpBase";
            Ta.prototype = {
                addParameter: function(a, b) {
                    this.params.push({
                        name: a,
                        value: b
                    })
                },
                onData: function(a) {},
                onBytes: function(a) {},
                onError: function(a) {},
                onStatus: function(a) {},
                hasOnData: function() {
                    return t(this, this.onData) != this.emptyOnData
                },
                success: function(a) {
                    this.responseBytes = a;
                    this.responseAsString = null;
                    if (this.hasOnData())
                        this.onData(this.get_responseData());
                    this.onBytes(this.responseBytes)
                },
                get_responseData: function() {
                    null == this.responseAsString && null != this.responseBytes && (this.responseAsString = this.responseBytes.getString(0, this.responseBytes.length, $b.UTF8));
                    return this.responseAsString
                },
                __class__: Ta
            };
            var Ac = function(a) {
                this.async = !0;
                this.withCredentials = !1;
                Ta.call(this, a)
            };
            g["haxe.http.HttpJs"] = Ac;
            Ac.__name__ = "haxe.http.HttpJs";
            Ac.__super__ = Ta;
            Ac.prototype = n(Ta.prototype, {
                request: function(a) {
                    var b = this;
                    this.responseHeaders = this.responseBytes = this.responseAsString = null;
                    var c = this.req = Jc.createXMLHttpRequest()
                      , f = function(a) {
                        if (4 == c.readyState) {
                            try {
                                var f = c.status
                            } catch (se) {
                                f = null
                            }
                            0 == f && Jc.get_supported() && null != r.location && (a = r.location.protocol.toLowerCase(),
                            (new pa("^(?:about|app|app-storage|.+-extension|file|res|widget):$","")).match(a) && (f = null != c.response ? 200 : 404));
                            void 0 == f && (f = null);
                            if (null != f)
                                b.onStatus(f);
                            if (null != f && 200 <= f && 400 > f) {
                                b.req = null;
                                a = c.getAllResponseHeaders().split("\r\n");
                                f = [];
                                for (var h = 0; h < a.length; ) {
                                    var q = a[h];
                                    ++h;
                                    "" != q && f.push(q)
                                }
                                a = f;
                                b.responseHeaders = new p;
                                for (f = 0; f < a.length; )
                                    q = a[f++].split(": "),
                                    h = q.shift(),
                                    q = 1 == q.length ? q[0] : q.join(": "),
                                    q = ta.ltrim(ta.rtrim(q)),
                                    b.responseHeaders.h[h] = q;
                                b.success(Aa.ofData(c.response))
                            } else if (null == f || 0 == f && null == c.response)
                                b.req = null,
                                b.onError("Failed to connect or resolve host");
                            else if (null == f)
                                b.req = null,
                                f = null != c.response ? Aa.ofData(c.response) : null,
                                b.responseBytes = f,
                                b.onError("Http Error #" + c.status);
                            else
                                switch (f) {
                                case 12007:
                                    b.req = null;
                                    b.onError("Unknown host");
                                    break;
                                case 12029:
                                    b.req = null;
                                    b.onError("Failed to connect to host");
                                    break;
                                default:
                                    b.req = null,
                                    f = null != c.response ? Aa.ofData(c.response) : null,
                                    b.responseBytes = f,
                                    b.onError("Http Error #" + c.status)
                                }
                        }
                    };
                    this.async && (c.onreadystatechange = f);
                    var h = this.postData
                      , q = this.postBytes
                      , d = null == h ? null == q ? null : new Blob([q.b.bufferValue]) : null == q ? h : null;
                    if (null != d)
                        a = !0;
                    else
                        for (h = 0,
                        q = this.params; h < q.length; ) {
                            var g = q[h];
                            ++h;
                            d = null == d ? "" : (null == d ? "null" : H.string(d)) + "&";
                            var l = g.name;
                            d = (null == d ? "null" : H.string(d)) + encodeURIComponent(l) + "=" + encodeURIComponent(g.value)
                        }
                    try {
                        a ? c.open("POST", this.url, this.async) : null != d ? (c.open("GET", this.url + (1 >= this.url.split("?").length ? "?" : "&") + (null == d ? "null" : H.string(d)), this.async),
                        d = null) : c.open("GET", this.url, this.async),
                        c.responseType = "arraybuffer"
                    } catch (je) {
                        q = ea.caught(je).unwrap();
                        this.req = null;
                        this.onError(q.toString());
                        return
                    }
                    c.withCredentials = this.withCredentials;
                    !ib.exists(this.headers, function(a) {
                        return "Content-Type" == a.name
                    }) && a && null == this.postData && c.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
                    h = 0;
                    for (q = this.headers; h < q.length; )
                        a = q[h],
                        ++h,
                        c.setRequestHeader(a.name, a.value);
                    c.send(d);
                    this.async || f(null)
                },
                __class__: Ac
            });
            var ac = function() {
                this.size = this.pos = 0
            };
            g["haxe.io.BytesBuffer"] = ac;
            ac.__name__ = "haxe.io.BytesBuffer";
            ac.prototype = {
                addByte: function(a) {
                    this.pos == this.size && this.grow(1);
                    this.view.setUint8(this.pos++, a)
                },
                add: function(a) {
                    this.pos + a.length > this.size && this.grow(a.length);
                    if (0 != this.size) {
                        var b = new Uint8Array(a.b.buffer,a.b.byteOffset,a.length);
                        this.u8.set(b, this.pos);
                        this.pos += a.length
                    }
                },
                addInt32: function(a) {
                    this.pos + 4 > this.size && this.grow(4);
                    this.view.setInt32(this.pos, a, !0);
                    this.pos += 4
                },
                addBytes: function(a, b, c) {
                    if (0 > b || 0 > c || b + c > a.length)
                        throw ea.thrown(Nb.OutsideBounds);
                    this.pos + c > this.size && this.grow(c);
                    0 != this.size && (a = new Uint8Array(a.b.buffer,a.b.byteOffset + b,c),
                    this.u8.set(a, this.pos),
                    this.pos += c)
                },
                grow: function(a) {
                    var b = this.pos + a;
                    for (a = 0 == this.size ? 16 : this.size; a < b; )
                        a = 3 * a >> 1;
                    b = new ArrayBuffer(a);
                    var c = new Uint8Array(b);
                    0 < this.size && c.set(this.u8);
                    this.size = a;
                    this.buffer = b;
                    this.u8 = c;
                    this.view = new DataView(this.buffer)
                },
                getBytes: function() {
                    if (0 == this.size)
                        return new Aa(new ArrayBuffer(0));
                    var a = new Aa(this.buffer);
                    a.length = this.pos;
                    return a
                },
                __class__: ac
            };
            var Ob = function() {};
            g["haxe.io.Input"] = Ob;
            Ob.__name__ = "haxe.io.Input";
            Ob.prototype = {
                readByte: function() {
                    throw new zc(null,null,{
                        fileName: "haxe/io/Input.hx",
                        lineNumber: 53,
                        className: "haxe.io.Input",
                        methodName: "readByte"
                    });
                },
                readBytes: function(a, b, c) {
                    var f = c
                      , h = a.b;
                    if (0 > b || 0 > c || b + c > a.length)
                        throw ea.thrown(Nb.OutsideBounds);
                    try {
                        for (; 0 < f; )
                            h[b] = this.readByte(),
                            ++b,
                            --f
                    } catch (q) {
                        if (!(ea.caught(q).unwrap()instanceof Ab))
                            throw q;
                    }
                    return c - f
                },
                readFullBytes: function(a, b, c) {
                    for (; 0 < c; ) {
                        var f = this.readBytes(a, b, c);
                        if (0 == f)
                            throw ea.thrown(Nb.Blocked);
                        b += f;
                        c -= f
                    }
                },
                read: function(a) {
                    for (var b = new Aa(new ArrayBuffer(a)), c = 0; 0 < a; ) {
                        var f = this.readBytes(b, c, a);
                        if (0 == f)
                            throw ea.thrown(Nb.Blocked);
                        c += f;
                        a -= f
                    }
                    return b
                },
                readInt16: function() {
                    var a = this.readByte()
                      , b = this.readByte();
                    a = this.bigEndian ? b | a << 8 : a | b << 8;
                    return 0 != (a & 32768) ? a - 65536 : a
                },
                readUInt16: function() {
                    var a = this.readByte()
                      , b = this.readByte();
                    return this.bigEndian ? b | a << 8 : a | b << 8
                },
                readInt32: function() {
                    var a = this.readByte()
                      , b = this.readByte()
                      , c = this.readByte()
                      , f = this.readByte();
                    return this.bigEndian ? f | c << 8 | b << 16 | a << 24 : a | b << 8 | c << 16 | f << 24
                },
                readString: function(a, b) {
                    var c = new Aa(new ArrayBuffer(a));
                    this.readFullBytes(c, 0, a);
                    return c.getString(0, a, b)
                },
                __class__: Ob
            };
            var mc = function(a, b, c) {
                null == b && (b = 0);
                null == c && (c = a.length - b);
                if (0 > b || 0 > c || b + c > a.length)
                    throw ea.thrown(Nb.OutsideBounds);
                this.b = a.b;
                this.pos = b;
                this.totlen = this.len = c
            };
            g["haxe.io.BytesInput"] = mc;
            mc.__name__ = "haxe.io.BytesInput";
            mc.__super__ = Ob;
            mc.prototype = n(Ob.prototype, {
                readByte: function() {
                    if (0 == this.len)
                        throw ea.thrown(new Ab);
                    this.len--;
                    return this.b[this.pos++]
                },
                readBytes: function(a, b, c) {
                    if (0 > b || 0 > c || b + c > a.length)
                        throw ea.thrown(Nb.OutsideBounds);
                    if (0 == this.len && 0 < c)
                        throw ea.thrown(new Ab);
                    this.len < c && (c = this.len);
                    var f = this.b;
                    a = a.b;
                    for (var h = 0, q = c; h < q; ) {
                        var d = h++;
                        a[b + d] = f[this.pos + d]
                    }
                    this.pos += c;
                    this.len -= c;
                    return c
                },
                __class__: mc
            });
            var $b = z["haxe.io.Encoding"] = {
                __ename__: "haxe.io.Encoding",
                __constructs__: null,
                UTF8: {
                    _hx_name: "UTF8",
                    _hx_index: 0,
                    __enum__: "haxe.io.Encoding",
                    toString: m
                },
                RawNative: {
                    _hx_name: "RawNative",
                    _hx_index: 1,
                    __enum__: "haxe.io.Encoding",
                    toString: m
                }
            };
            $b.__constructs__ = [$b.UTF8, $b.RawNative];
            var Ab = function() {};
            g["haxe.io.Eof"] = Ab;
            Ab.__name__ = "haxe.io.Eof";
            Ab.prototype = {
                toString: function() {
                    return "Eof"
                },
                __class__: Ab
            };
            var Nb = z["haxe.io.Error"] = {
                __ename__: "haxe.io.Error",
                __constructs__: null,
                Blocked: {
                    _hx_name: "Blocked",
                    _hx_index: 0,
                    __enum__: "haxe.io.Error",
                    toString: m
                },
                Overflow: {
                    _hx_name: "Overflow",
                    _hx_index: 1,
                    __enum__: "haxe.io.Error",
                    toString: m
                },
                OutsideBounds: {
                    _hx_name: "OutsideBounds",
                    _hx_index: 2,
                    __enum__: "haxe.io.Error",
                    toString: m
                },
                Custom: (B = function(a) {
                    return {
                        _hx_index: 3,
                        e: a,
                        __enum__: "haxe.io.Error",
                        toString: m
                    }
                }
                ,
                B._hx_name = "Custom",
                B.__params__ = ["e"],
                B)
            };
            Nb.__constructs__ = [Nb.Blocked, Nb.Overflow, Nb.OutsideBounds, Nb.Custom];
            var vb = function(a) {
                switch (a) {
                case ".":
                case "..":
                    this.dir = a;
                    this.file = "";
                    return
                }
                var b = a.lastIndexOf("/")
                  , c = a.lastIndexOf("\\");
                b < c ? (this.dir = K.substr(a, 0, c),
                a = K.substr(a, c + 1, null),
                this.backslash = !0) : c < b ? (this.dir = K.substr(a, 0, b),
                a = K.substr(a, b + 1, null)) : this.dir = null;
                b = a.lastIndexOf(".");
                -1 != b ? (this.ext = K.substr(a, b + 1, null),
                this.file = K.substr(a, 0, b)) : (this.ext = null,
                this.file = a)
            };
            g["haxe.io.Path"] = vb;
            vb.__name__ = "haxe.io.Path";
            vb.withoutDirectory = function(a) {
                a = new vb(a);
                a.dir = null;
                return a.toString()
            }
            ;
            vb.directory = function(a) {
                a = new vb(a);
                return null == a.dir ? "" : a.dir
            }
            ;
            vb.join = function(a) {
                for (var b = [], c = 0; c < a.length; ) {
                    var f = a[c];
                    ++c;
                    null != f && "" != f && b.push(f)
                }
                if (0 == b.length)
                    return "";
                a = b[0];
                c = 1;
                for (f = b.length; c < f; )
                    a = vb.addTrailingSlash(a),
                    a += b[c++];
                return vb.normalize(a)
            }
            ;
            vb.normalize = function(a) {
                a = a.split("\\").join("/");
                if ("/" == a)
                    return "/";
                for (var b = [], c = 0, f = a.split("/"); c < f.length; ) {
                    var h = f[c];
                    ++c;
                    ".." == h && 0 < b.length && ".." != b[b.length - 1] ? b.pop() : "" == h ? (0 < b.length || 47 == K.cca(a, 0)) && b.push(h) : "." != h && b.push(h)
                }
                a = "";
                f = c = !1;
                h = 0;
                for (b = b.join("/"); h < b.length; ) {
                    var q = b
                      , d = h++
                      , g = q.charCodeAt(d);
                    55296 <= g && 56319 >= g && (g = g - 55232 << 10 | q.charCodeAt(d + 1) & 1023);
                    q = g;
                    65536 <= q && ++h;
                    switch (q) {
                    case 47:
                        c ? (c = !1,
                        f && (a += "/",
                        f = !1),
                        a += String.fromCodePoint(q)) : f = !0;
                        break;
                    case 58:
                        a += ":";
                        c = !0;
                        break;
                    default:
                        c = !1,
                        f && (a += "/",
                        f = !1),
                        a += String.fromCodePoint(q)
                    }
                }
                return a
            }
            ;
            vb.addTrailingSlash = function(a) {
                if (0 == a.length)
                    return "/";
                var b = a.lastIndexOf("/")
                  , c = a.lastIndexOf("\\");
                return b < c ? c != a.length - 1 ? a + "\\" : a : b != a.length - 1 ? a + "/" : a
            }
            ;
            vb.prototype = {
                toString: function() {
                    return (null == this.dir ? "" : this.dir + (this.backslash ? "\\" : "/")) + this.file + (null == this.ext ? "" : "." + this.ext)
                },
                __class__: vb
            };
            var sc = function(a) {
                this.current = 0;
                this.array = a
            };
            g["haxe.iterators.ArrayIterator"] = sc;
            sc.__name__ = "haxe.iterators.ArrayIterator";
            sc.prototype = {
                hasNext: function() {
                    return this.current < this.array.length
                },
                next: function() {
                    return this.array[this.current++]
                },
                __class__: sc
            };
            var nc = z["haxe.zip.ExtraField"] = {
                __ename__: "haxe.zip.ExtraField",
                __constructs__: null,
                FUnknown: (B = function(a, b) {
                    return {
                        _hx_index: 0,
                        tag: a,
                        bytes: b,
                        __enum__: "haxe.zip.ExtraField",
                        toString: m
                    }
                }
                ,
                B._hx_name = "FUnknown",
                B.__params__ = ["tag", "bytes"],
                B),
                FInfoZipUnicodePath: (B = function(a, b) {
                    return {
                        _hx_index: 1,
                        name: a,
                        crc: b,
                        __enum__: "haxe.zip.ExtraField",
                        toString: m
                    }
                }
                ,
                B._hx_name = "FInfoZipUnicodePath",
                B.__params__ = ["name", "crc"],
                B),
                FUtf8: {
                    _hx_name: "FUtf8",
                    _hx_index: 2,
                    __enum__: "haxe.zip.ExtraField",
                    toString: m
                }
            };
            nc.__constructs__ = [nc.FUnknown, nc.FInfoZipUnicodePath, nc.FUtf8];
            var Ub = z["haxe.zip.Huffman"] = {
                __ename__: "haxe.zip.Huffman",
                __constructs__: null,
                Found: (B = function(a) {
                    return {
                        _hx_index: 0,
                        i: a,
                        __enum__: "haxe.zip.Huffman",
                        toString: m
                    }
                }
                ,
                B._hx_name = "Found",
                B.__params__ = ["i"],
                B),
                NeedBit: (B = function(a, b) {
                    return {
                        _hx_index: 1,
                        left: a,
                        right: b,
                        __enum__: "haxe.zip.Huffman",
                        toString: m
                    }
                }
                ,
                B._hx_name = "NeedBit",
                B.__params__ = ["left", "right"],
                B),
                NeedBits: (B = function(a, b) {
                    return {
                        _hx_index: 2,
                        n: a,
                        table: b,
                        __enum__: "haxe.zip.Huffman",
                        toString: m
                    }
                }
                ,
                B._hx_name = "NeedBits",
                B.__params__ = ["n", "table"],
                B)
            };
            Ub.__constructs__ = [Ub.Found, Ub.NeedBit, Ub.NeedBits];
            var zd = function() {};
            g["haxe.zip.HuffTools"] = zd;
            zd.__name__ = "haxe.zip.HuffTools";
            zd.prototype = {
                treeDepth: function(a) {
                    switch (a._hx_index) {
                    case 0:
                        return 0;
                    case 1:
                        var b = this.treeDepth(a.left);
                        a = this.treeDepth(a.right);
                        return 1 + (b < a ? b : a);
                    case 2:
                        throw ea.thrown("assert");
                    }
                },
                treeCompress: function(a) {
                    var b = this.treeDepth(a);
                    if (0 == b)
                        return a;
                    if (1 == b) {
                        if (1 == a._hx_index)
                            return Ub.NeedBit(this.treeCompress(a.left), this.treeCompress(a.right));
                        throw ea.thrown("assert");
                    }
                    for (var c = 1 << b, f = [], h = 0; h < c; )
                        ++h,
                        f.push(Ub.Found(-1));
                    this.treeWalk(f, 0, 0, b, a);
                    return Ub.NeedBits(b, f)
                },
                treeWalk: function(a, b, c, f, h) {
                    1 == h._hx_index ? 0 < f ? (this.treeWalk(a, b, c + 1, f - 1, h.left),
                    this.treeWalk(a, b | 1 << c, c + 1, f - 1, h.right)) : a[b] = this.treeCompress(h) : a[b] = this.treeCompress(h)
                },
                treeMake: function(a, b, c, f) {
                    if (f > b)
                        throw ea.thrown("Invalid huffman");
                    var h = c << 5 | f;
                    if (a.h.hasOwnProperty(h))
                        return Ub.Found(a.h[h]);
                    c <<= 1;
                    ++f;
                    return Ub.NeedBit(this.treeMake(a, b, c, f), this.treeMake(a, b, c | 1, f))
                },
                make: function(a, b, c, f) {
                    if (1 == c)
                        return Ub.NeedBit(Ub.Found(0), Ub.Found(0));
                    var h = []
                      , q = [];
                    if (32 < f)
                        throw ea.thrown("Invalid huffman");
                    for (var d = 0; d < f; )
                        ++d,
                        h.push(0),
                        q.push(0);
                    for (d = 0; d < c; ) {
                        var g = a[d++ + b];
                        if (g >= f)
                            throw ea.thrown("Invalid huffman");
                        h[g]++
                    }
                    var l = 0;
                    d = 1;
                    for (var p = f - 1; d < p; )
                        g = d++,
                        l = l + h[g] << 1,
                        q[g] = l;
                    h = new ra;
                    for (d = 0; d < c; )
                        g = d++,
                        l = a[g + b],
                        0 != l && (p = q[l - 1],
                        q[l - 1] = p + 1,
                        h.h[p << 5 | l] = g);
                    return this.treeCompress(Ub.NeedBit(this.treeMake(h, f, 0, 1), this.treeMake(h, f, 1, 1)))
                },
                __class__: zd
            };
            var Ad = function(a) {
                this.buffer = new Aa(new ArrayBuffer(65536));
                this.pos = 0;
                a && (this.crc = new kb)
            };
            g["haxe.zip._InflateImpl.Window"] = Ad;
            Ad.__name__ = "haxe.zip._InflateImpl.Window";
            Ad.prototype = {
                slide: function() {
                    null != this.crc && this.crc.update(this.buffer, 0, 32768);
                    var a = new Aa(new ArrayBuffer(65536));
                    this.pos -= 32768;
                    a.blit(0, this.buffer, 32768, this.pos);
                    this.buffer = a
                },
                addBytes: function(a, b, c) {
                    65536 < this.pos + c && this.slide();
                    this.buffer.blit(this.pos, a, b, c);
                    this.pos += c
                },
                addByte: function(a) {
                    65536 == this.pos && this.slide();
                    this.buffer.b[this.pos] = a & 255;
                    this.pos++
                },
                getLastChar: function() {
                    return this.buffer.b[this.pos - 1]
                },
                available: function() {
                    return this.pos
                },
                checksum: function() {
                    null != this.crc && this.crc.update(this.buffer, 0, this.pos);
                    return this.crc
                },
                __class__: Ad
            };
            var gb = z["haxe.zip._InflateImpl.State"] = {
                __ename__: "haxe.zip._InflateImpl.State",
                __constructs__: null,
                Head: {
                    _hx_name: "Head",
                    _hx_index: 0,
                    __enum__: "haxe.zip._InflateImpl.State",
                    toString: m
                },
                Block: {
                    _hx_name: "Block",
                    _hx_index: 1,
                    __enum__: "haxe.zip._InflateImpl.State",
                    toString: m
                },
                CData: {
                    _hx_name: "CData",
                    _hx_index: 2,
                    __enum__: "haxe.zip._InflateImpl.State",
                    toString: m
                },
                Flat: {
                    _hx_name: "Flat",
                    _hx_index: 3,
                    __enum__: "haxe.zip._InflateImpl.State",
                    toString: m
                },
                Crc: {
                    _hx_name: "Crc",
                    _hx_index: 4,
                    __enum__: "haxe.zip._InflateImpl.State",
                    toString: m
                },
                Dist: {
                    _hx_name: "Dist",
                    _hx_index: 5,
                    __enum__: "haxe.zip._InflateImpl.State",
                    toString: m
                },
                DistOne: {
                    _hx_name: "DistOne",
                    _hx_index: 6,
                    __enum__: "haxe.zip._InflateImpl.State",
                    toString: m
                },
                Done: {
                    _hx_name: "Done",
                    _hx_index: 7,
                    __enum__: "haxe.zip._InflateImpl.State",
                    toString: m
                }
            };
            gb.__constructs__ = [gb.Head, gb.Block, gb.CData, gb.Flat, gb.Crc, gb.Dist, gb.DistOne, gb.Done];
            var Bb = function(a, b, c) {
                null == c && (c = !0);
                null == b && (b = !0);
                this.isFinal = !1;
                this.htools = new zd;
                this.huffman = this.buildFixedHuffman();
                this.huffdist = null;
                this.dist = this.len = 0;
                this.state = b ? gb.Head : gb.Block;
                this.input = a;
                this.needed = this.nbits = this.bits = 0;
                this.output = null;
                this.outpos = 0;
                this.lengths = [];
                this.lengths.push(-1);
                this.lengths.push(-1);
                this.lengths.push(-1);
                this.lengths.push(-1);
                this.lengths.push(-1);
                this.lengths.push(-1);
                this.lengths.push(-1);
                this.lengths.push(-1);
                this.lengths.push(-1);
                this.lengths.push(-1);
                this.lengths.push(-1);
                this.lengths.push(-1);
                this.lengths.push(-1);
                this.lengths.push(-1);
                this.lengths.push(-1);
                this.lengths.push(-1);
                this.lengths.push(-1);
                this.lengths.push(-1);
                this.lengths.push(-1);
                this.window = new Ad(c)
            };
            g["haxe.zip.InflateImpl"] = Bb;
            Bb.__name__ = "haxe.zip.InflateImpl";
            Bb.prototype = {
                buildFixedHuffman: function() {
                    if (null != Bb.FIXED_HUFFMAN)
                        return Bb.FIXED_HUFFMAN;
                    for (var a = [], b = 0; 288 > b; ) {
                        var c = b++;
                        a.push(143 >= c ? 8 : 255 >= c ? 9 : 279 >= c ? 7 : 8)
                    }
                    Bb.FIXED_HUFFMAN = this.htools.make(a, 0, 288, 10);
                    return Bb.FIXED_HUFFMAN
                },
                readBytes: function(a, b, c) {
                    this.needed = c;
                    this.outpos = b;
                    this.output = a;
                    if (0 < c)
                        for (; this.inflateLoop(); )
                            ;
                    return c - this.needed
                },
                getBits: function(a) {
                    for (; this.nbits < a; )
                        this.bits |= this.input.readByte() << this.nbits,
                        this.nbits += 8;
                    var b = this.bits & (1 << a) - 1;
                    this.nbits -= a;
                    this.bits >>= a;
                    return b
                },
                getBit: function() {
                    0 == this.nbits && (this.nbits = 8,
                    this.bits = this.input.readByte());
                    var a = 1 == (this.bits & 1);
                    this.nbits--;
                    this.bits >>= 1;
                    return a
                },
                getRevBits: function(a) {
                    return 0 == a ? 0 : this.getBit() ? 1 << a - 1 | this.getRevBits(a - 1) : this.getRevBits(a - 1)
                },
                resetBits: function() {
                    this.nbits = this.bits = 0
                },
                addBytes: function(a, b, c) {
                    this.window.addBytes(a, b, c);
                    this.output.blit(this.outpos, a, b, c);
                    this.needed -= c;
                    this.outpos += c
                },
                addByte: function(a) {
                    this.window.addByte(a);
                    this.output.b[this.outpos] = a & 255;
                    this.needed--;
                    this.outpos++
                },
                addDistOne: function(a) {
                    for (var b = this.window.getLastChar(), c = 0; c < a; )
                        ++c,
                        this.addByte(b)
                },
                addDist: function(a, b) {
                    this.addBytes(this.window.buffer, this.window.pos - a, b)
                },
                applyHuffman: function(a) {
                    switch (a._hx_index) {
                    case 0:
                        return a.i;
                    case 1:
                        return this.applyHuffman(this.getBit() ? a.right : a.left);
                    case 2:
                        return this.applyHuffman(a.table[this.getBits(a.n)])
                    }
                },
                inflateLengths: function(a, b) {
                    for (var c = 0, f = 0; c < b; ) {
                        var h = this.applyHuffman(this.huffman);
                        switch (h) {
                        case 0:
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                            f = h;
                            a[c] = h;
                            ++c;
                            break;
                        case 16:
                            h = c + 3 + this.getBits(2);
                            if (h > b)
                                throw ea.thrown("Invalid data");
                            for (; c < h; )
                                a[c] = f,
                                ++c;
                            break;
                        case 17:
                            c += 3 + this.getBits(3);
                            if (c > b)
                                throw ea.thrown("Invalid data");
                            break;
                        case 18:
                            c += 11 + this.getBits(7);
                            if (c > b)
                                throw ea.thrown("Invalid data");
                            break;
                        default:
                            throw ea.thrown("Invalid data");
                        }
                    }
                },
                inflateLoop: function() {
                    switch (this.state._hx_index) {
                    case 0:
                        var a = this.input.readByte();
                        if (8 != (a & 15))
                            throw ea.thrown("Invalid data");
                        var b = this.input.readByte();
                        if (0 != ((a << 8) + b) % 31)
                            throw ea.thrown("Invalid data");
                        if (0 != (b & 32))
                            throw ea.thrown("Unsupported dictionary");
                        this.state = gb.Block;
                        return !0;
                    case 1:
                        switch (this.isFinal = this.getBit(),
                        this.getBits(2)) {
                        case 0:
                            this.len = this.input.readUInt16();
                            if (this.input.readUInt16() != 65535 - this.len)
                                throw ea.thrown("Invalid data");
                            this.state = gb.Flat;
                            a = this.inflateLoop();
                            this.resetBits();
                            return a;
                        case 1:
                            return this.huffman = this.buildFixedHuffman(),
                            this.huffdist = null,
                            this.state = gb.CData,
                            !0;
                        case 2:
                            a = this.getBits(5) + 257;
                            b = this.getBits(5) + 1;
                            for (var c = this.getBits(4) + 4, f = 0; f < c; )
                                this.lengths[Bb.CODE_LENGTHS_POS[f++]] = this.getBits(3);
                            for (f = c; 19 > f; )
                                this.lengths[Bb.CODE_LENGTHS_POS[f++]] = 0;
                            this.huffman = this.htools.make(this.lengths, 0, 19, 8);
                            c = [];
                            f = 0;
                            for (var h = a + b; f < h; )
                                ++f,
                                c.push(0);
                            this.inflateLengths(c, a + b);
                            this.huffdist = this.htools.make(c, a, b, 16);
                            this.huffman = this.htools.make(c, 0, a, 16);
                            this.state = gb.CData;
                            return !0;
                        default:
                            throw ea.thrown("Invalid data");
                        }
                    case 2:
                        b = this.applyHuffman(this.huffman);
                        if (256 > b)
                            return this.addByte(b),
                            0 < this.needed;
                        if (256 == b)
                            this.state = this.isFinal ? gb.Crc : gb.Block;
                        else {
                            b -= 257;
                            a = Bb.LEN_EXTRA_BITS_TBL[b];
                            if (-1 == a)
                                throw ea.thrown("Invalid data");
                            this.len = Bb.LEN_BASE_VAL_TBL[b] + this.getBits(a);
                            b = null == this.huffdist ? this.getRevBits(5) : this.applyHuffman(this.huffdist);
                            a = Bb.DIST_EXTRA_BITS_TBL[b];
                            if (-1 == a)
                                throw ea.thrown("Invalid data");
                            this.dist = Bb.DIST_BASE_VAL_TBL[b] + this.getBits(a);
                            if (this.dist > this.window.available())
                                throw ea.thrown("Invalid data");
                            this.state = 1 == this.dist ? gb.DistOne : gb.Dist
                        }
                        return !0;
                    case 3:
                        return a = this.len < this.needed ? this.len : this.needed,
                        b = this.input.read(a),
                        this.len -= a,
                        this.addBytes(b, 0, a),
                        0 == this.len && (this.state = this.isFinal ? gb.Crc : gb.Block),
                        0 < this.needed;
                    case 4:
                        a = this.window.checksum();
                        if (null == a)
                            return this.state = gb.Done,
                            !0;
                        if (!a.equals(kb.read(this.input)))
                            throw ea.thrown("Invalid CRC");
                        this.state = gb.Done;
                        return !0;
                    case 5:
                        for (; 0 < this.len && 0 < this.needed; )
                            a = this.len < this.dist ? this.len : this.dist,
                            a = this.needed < a ? this.needed : a,
                            this.addDist(this.dist, a),
                            this.len -= a;
                        0 == this.len && (this.state = gb.CData);
                        return 0 < this.needed;
                    case 6:
                        return a = this.len < this.needed ? this.len : this.needed,
                        this.addDistOne(a),
                        this.len -= a,
                        0 == this.len && (this.state = gb.CData),
                        0 < this.needed;
                    case 7:
                        return !1
                    }
                },
                __class__: Bb
            };
            var Qc = function(a) {
                this.i = a
            };
            g["haxe.zip.Reader"] = Qc;
            Qc.__name__ = "haxe.zip.Reader";
            Qc.readZip = function(a) {
                return (new Qc(a)).read()
            }
            ;
            Qc.prototype = {
                readZipDate: function() {
                    var a = this.i.readUInt16()
                      , b = this.i.readUInt16();
                    return new Date((b >> 9) + 1980,(b >> 5 & 15) - 1,b & 31,a >> 11 & 31,a >> 5 & 63,(a & 31) << 1)
                },
                readExtraFields: function(a) {
                    for (var b = new Mb; 0 < a; ) {
                        if (4 > a)
                            throw ea.thrown("Invalid extra fields data");
                        var c = this.i.readUInt16()
                          , f = this.i.readUInt16();
                        if (a < f)
                            throw ea.thrown("Invalid extra fields data");
                        if (28789 == c) {
                            var h = this.i.readByte();
                            if (1 != h) {
                                var q = new ac;
                                q.addByte(h);
                                q.add(this.i.read(f - 1));
                                b.add(nc.FUnknown(c, q.getBytes()))
                            } else
                                c = this.i.readInt32(),
                                b.add(nc.FInfoZipUnicodePath(this.i.read(f - 5).toString(), c))
                        } else
                            b.add(nc.FUnknown(c, this.i.read(f)));
                        a -= 4 + f
                    }
                    return b
                },
                readEntryHeader: function() {
                    var a = this.i
                      , b = a.readInt32();
                    if (33639248 == b || 101010256 == b)
                        return null;
                    if (67324752 != b)
                        throw ea.thrown("Invalid Zip Data");
                    a.readUInt16();
                    b = a.readUInt16();
                    if (0 != (b & 63473))
                        throw ea.thrown("Unsupported flags " + b);
                    var c = a.readUInt16()
                      , f = 0 != c;
                    if (f && 8 != c)
                        throw ea.thrown("Unsupported compression " + c);
                    c = this.readZipDate();
                    var h = a.readInt32()
                      , q = a.readInt32()
                      , d = a.readInt32()
                      , g = a.readInt16()
                      , l = a.readInt16();
                    a = a.readString(g);
                    l = this.readExtraFields(l);
                    0 != (b & 2048) && l.push(nc.FUtf8);
                    0 != (b & 8) && (h = null);
                    return {
                        fileName: a,
                        fileSize: d,
                        fileTime: c,
                        compressed: f,
                        dataSize: q,
                        data: null,
                        crc32: h,
                        extraFields: l
                    }
                },
                read: function() {
                    for (var a = new Mb, b = null; ; ) {
                        var c = this.readEntryHeader();
                        if (null == c)
                            break;
                        if (null == c.crc32) {
                            if (c.compressed) {
                                null == b && (b = new Aa(new ArrayBuffer(65536)));
                                for (var f = new ac, h = new Bb(this.i,!1,!1); ; ) {
                                    var q = h.readBytes(b, 0, 65536);
                                    f.addBytes(b, 0, q);
                                    if (65536 > q)
                                        break
                                }
                                c.data = f.getBytes()
                            } else
                                c.data = this.i.read(c.dataSize);
                            c.crc32 = this.i.readInt32();
                            134695760 == c.crc32 && (c.crc32 = this.i.readInt32());
                            c.dataSize = this.i.readInt32();
                            c.fileSize = this.i.readInt32();
                            c.dataSize = c.fileSize;
                            c.compressed = !1
                        } else
                            c.data = this.i.read(c.dataSize);
                        a.add(c)
                    }
                    return a
                },
                __class__: Qc
            };
            var ja = function() {};
            g["js.Boot"] = ja;
            ja.__name__ = "js.Boot";
            ja.getClass = function(a) {
                if (null == a)
                    return null;
                if (a instanceof Array)
                    return Array;
                var b = a.__class__;
                if (null != b)
                    return b;
                a = ja.__nativeClassName(a);
                return null != a ? ja.__resolveNativeClass(a) : null
            }
            ;
            ja.__string_rec = function(a, b) {
                if (null == a)
                    return "null";
                if (5 <= b.length)
                    return "<...>";
                var c = typeof a;
                "function" == c && (a.__name__ || a.__ename__) && (c = "object");
                switch (c) {
                case "function":
                    return "<function>";
                case "object":
                    if (a.__enum__) {
                        var f = z[a.__enum__].__constructs__[a._hx_index];
                        c = f._hx_name;
                        if (f.__params__) {
                            b += "\t";
                            var h = []
                              , q = 0;
                            for (f = f.__params__; q < f.length; ) {
                                var d = f[q];
                                q += 1;
                                h.push(ja.__string_rec(a[d], b))
                            }
                            return c + "(" + h.join(",") + ")"
                        }
                        return c
                    }
                    if (a instanceof Array) {
                        c = "[";
                        b += "\t";
                        h = 0;
                        for (q = a.length; h < q; )
                            f = h++,
                            c += (0 < f ? "," : "") + ja.__string_rec(a[f], b);
                        return c + "]"
                    }
                    try {
                        h = a.toString
                    } catch (Zd) {
                        return "???"
                    }
                    if (null != h && h != Object.toString && "function" == typeof h && (c = a.toString(),
                    "[object Object]" != c))
                        return c;
                    c = "{\n";
                    b += "\t";
                    h = null != a.hasOwnProperty;
                    q = null;
                    for (q in a)
                        h && !a.hasOwnProperty(q) || "prototype" == q || "__class__" == q || "__super__" == q || "__interfaces__" == q || "__properties__" == q || (2 != c.length && (c += ", \n"),
                        c += b + q + " : " + ja.__string_rec(a[q], b));
                    b = b.substring(1);
                    return c + ("\n" + b + "}");
                case "string":
                    return a;
                default:
                    return String(a)
                }
            }
            ;
            ja.__interfLoop = function(a, b) {
                for (; ; ) {
                    if (null == a)
                        return !1;
                    if (a == b)
                        return !0;
                    var c = a.__interfaces__;
                    if (null != c)
                        for (var f = 0, h = c.length; f < h; ) {
                            var q = c[f++];
                            if (q == b || ja.__interfLoop(q, b))
                                return !0
                        }
                    a = a.__super__
                }
            }
            ;
            ja.__instanceof = function(a, b) {
                if (null == b)
                    return !1;
                switch (b) {
                case Array:
                    return a instanceof Array;
                case me:
                    return "boolean" == typeof a;
                case ne:
                    return null != a;
                case $d:
                    return "number" == typeof a;
                case oe:
                    return "number" == typeof a ? (a | 0) === a : !1;
                case String:
                    return "string" == typeof a;
                default:
                    if (null != a)
                        if ("function" == typeof b) {
                            if (ja.__downcastCheck(a, b))
                                return !0
                        } else {
                            if ("object" == typeof b && ja.__isNativeObj(b) && a instanceof b)
                                return !0
                        }
                    else
                        return !1;
                    return b == ke && null != a.__name__ || b == le && null != a.__ename__ ? !0 : null != a.__enum__ ? z[a.__enum__] == b : !1
                }
            }
            ;
            ja.__downcastCheck = function(a, b) {
                return a instanceof b ? !0 : b.__isInterface__ ? ja.__interfLoop(ja.getClass(a), b) : !1
            }
            ;
            ja.__cast = function(a, b) {
                if (null == a || ja.__instanceof(a, b))
                    return a;
                throw ea.thrown("Cannot cast " + H.string(a) + " to " + H.string(b));
            }
            ;
            ja.__nativeClassName = function(a) {
                a = ja.__toStr.call(a).slice(8, -1);
                return "Object" == a || "Function" == a || "Math" == a || "JSON" == a ? null : a
            }
            ;
            ja.__isNativeObj = function(a) {
                return null != ja.__nativeClassName(a)
            }
            ;
            ja.__resolveNativeClass = function(a) {
                return r[a]
            }
            ;
            var Jc = function() {};
            g["js.Browser"] = Jc;
            Jc.__name__ = "js.Browser";
            Jc.get_supported = function() {
                return "undefined" != typeof window && "undefined" != typeof window.location ? "string" == typeof window.location.protocol : !1
            }
            ;
            Jc.getLocalStorage = function() {
                try {
                    var a = window.localStorage;
                    a.getItem("");
                    if (0 == a.length) {
                        var b = "_hx_" + Math.random();
                        a.setItem(b, b);
                        a.removeItem(b)
                    }
                    return a
                } catch (c) {
                    return null
                }
            }
            ;
            Jc.createXMLHttpRequest = function() {
                if ("undefined" != typeof XMLHttpRequest)
                    return new XMLHttpRequest;
                if ("undefined" != typeof ActiveXObject)
                    return new ActiveXObject("Microsoft.XMLHTTP");
                throw ea.thrown("Unable to create XMLHttpRequest object.");
            }
            ;
            var ae = function() {};
            g["js.lib._ArrayBuffer.ArrayBufferCompat"] = ae;
            ae.__name__ = "js.lib._ArrayBuffer.ArrayBufferCompat";
            ae.sliceImpl = function(a, b) {
                a = new Uint8Array(this,a,null == b ? null : b - a);
                b = new Uint8Array(a.byteLength);
                b.set(a);
                return b.buffer
            }
            ;
            var Rc = function(a, b) {
                this.playTimestamp = this.playDuration = 0;
                this.setOnFail = !1;
                this.speed = 1;
                this.pan = 0;
                this.loops = this.volume = 1;
                this.offset = this.duration = 0;
                this.loaded = !1;
                null == b && (b = fd.SFX);
                this.tag = b;
                null == a ? new gd : (this.source = a,
                this.source.onComplete.add(t(this, this.completeEvent)),
                this.loaded = !0)
            };
            g["lemongine.Sound"] = Rc;
            Rc.__name__ = "lemongine.Sound";
            Rc.prototype = {
                fromBuffer: function(a) {
                    this.buffer = a;
                    this.loaded = !0;
                    return this
                },
                completeEvent: function() {
                    this.onComplete()
                },
                play: function(a, b, c, f, h, q, g) {
                    null == g && (g = 1);
                    null == q && (q = !0);
                    null == h && (h = 1);
                    null == f && (f = 0);
                    null == c && (c = 0);
                    null == b && (b = 0);
                    null == a && (a = 1);
                    var l = this;
                    if (null != this.buffer && (null == this.source && (this.source = new gd(this.buffer)),
                    this.tag != fd.SFX || 0 != d.Instance.firstInteraction)) {
                        this.set_offset(c);
                        this.set_duration(f);
                        this.set_loops(h);
                        this.set_volume(a);
                        this.set_pan(b);
                        this.set_speed(g);
                        try {
                            q && this.source.stop(),
                            this.source.play()
                        } catch (re) {
                            if (null != this.onFail)
                                this.onFail()
                        }
                        null != this.source.__backend.parent.buffer.__srcHowl && (null != this.onFail && 0 == this.setOnFail && (this.setOnFail = !0,
                        this.source.__backend.parent.buffer.__srcHowl.on("playerror", function() {
                            if (null != l.onFail)
                                l.onFail()
                        })),
                        this.source.__backend.parent.buffer.__srcHowl.stereo(b, this.source.__backend.id));
                        this.playTimestamp = (new Date).getTime() / 1E3;
                        this.track();
                        0 < f && 0 == h && (null != this.durationTimer && this.durationTimer.stop(),
                        0 != g && (this.durationTimer = bc.delay(t(this, this.stop), Math.floor((f - this.playDuration) / g * 1E3))))
                    }
                },
                pause: function() {
                    null != this.source && (this.source.pause(),
                    this.playDuration += ((new Date).getTime() / 1E3 - this.playTimestamp) * this.speed,
                    null != this.durationTimer && this.durationTimer.stop())
                },
                stop: function() {
                    null != this.source && (this.source.stop(),
                    this.untrack(),
                    null != this.durationTimer && this.durationTimer.stop())
                },
                set_offset: function(a) {
                    isFinite(a) || (a = 0);
                    this.offset = a;
                    if (null == this.source)
                        return a;
                    this.source.offset = Math.floor(1E3 * a);
                    return a
                },
                set_duration: function(a) {
                    isFinite(a) || (a = 0);
                    var b = Math.floor(1E3 * a);
                    0 >= a && (b = null);
                    this.source.set_length(b);
                    return this.duration = a
                },
                set_loops: function(a) {
                    isFinite(a) || (a = 1);
                    this.loops = a;
                    if (null == this.source)
                        return a;
                    this.source.set_loops(a - 1);
                    return a
                },
                set_volume: function(a) {
                    isFinite(a) || (a = 1);
                    this.volume = a;
                    if (null == this.source)
                        return a;
                    var b = a * Wa.masterVolume * (d.Instance.enginePaused ? 0 : 1);
                    switch (this.tag._hx_index) {
                    case 0:
                        b *= Wa.sfxVolume;
                        break;
                    case 1:
                        b *= Wa.musicVolume;
                        break;
                    case 2:
                        b *= Wa.ambienceVolume
                    }
                    this.source.set_gain(b);
                    return a
                },
                set_pan: function(a) {
                    isFinite(a) || (a = 0);
                    this.pan = a;
                    if (null == this.source)
                        return a;
                    null != this.source.__backend.parent.buffer.__srcHowl && this.source.__backend.parent.buffer.__srcHowl.stereo(this.pan, this.source.__backend.id);
                    return a
                },
                set_speed: function(a) {
                    if (0 == a)
                        return this.pause(),
                        this.speed = a;
                    this.playDuration += ((new Date).getTime() / 1E3 - this.playTimestamp) * this.speed;
                    this.playTimestamp = (new Date).getTime() / 1E3;
                    this.speed = a;
                    0 < this.duration && 0 == this.loops && (null != this.durationTimer && this.durationTimer.stop(),
                    0 != this.speed && (this.durationTimer = bc.delay(t(this, this.stop), Math.floor((this.duration - this.playDuration) / this.speed * 1E3))));
                    this.source.set_pitch(this.speed);
                    return this.speed
                },
                track: function() {
                    switch (this.tag._hx_index) {
                    case 0:
                        null == Wa.sfxChannel.h.__keys__[this.__id__] && Wa.sfxChannel.set(this, !0);
                        break;
                    case 1:
                        null == Wa.musicChannel.h.__keys__[this.__id__] && Wa.musicChannel.set(this, !0);
                        break;
                    case 2:
                        null == Wa.ambienceChannel.h.__keys__[this.__id__] && Wa.ambienceChannel.set(this, !0)
                    }
                },
                untrack: function() {
                    switch (this.tag._hx_index) {
                    case 0:
                        null != Wa.sfxChannel.h.__keys__[this.__id__] && Wa.sfxChannel.remove(this);
                        break;
                    case 1:
                        null != Wa.musicChannel.h.__keys__[this.__id__] && Wa.musicChannel.remove(this);
                        break;
                    case 2:
                        null != Wa.ambienceChannel.h.__keys__[this.__id__] && Wa.ambienceChannel.remove(this)
                    }
                },
                __class__: Rc
            };
            var fd = z["lemongine.AudioTag"] = {
                __ename__: "lemongine.AudioTag",
                __constructs__: null,
                SFX: {
                    _hx_name: "SFX",
                    _hx_index: 0,
                    __enum__: "lemongine.AudioTag",
                    toString: m
                },
                MUSIC: {
                    _hx_name: "MUSIC",
                    _hx_index: 1,
                    __enum__: "lemongine.AudioTag",
                    toString: m
                },
                AMBIENCE: {
                    _hx_name: "AMBIENCE",
                    _hx_index: 2,
                    __enum__: "lemongine.AudioTag",
                    toString: m
                }
            };
            fd.__constructs__ = [fd.SFX, fd.MUSIC, fd.AMBIENCE];
            var gd = function(a, b, c, f) {
                null == f && (f = 0);
                null == b && (b = 0);
                this.onComplete = new lb;
                this.buffer = a;
                this.offset = b;
                this.__backend = new Bd(this);
                null != c && 0 != c && this.set_length(c);
                this.set_loops(f);
                null != a && this.init()
            };
            g["lime.media.AudioSource"] = gd;
            gd.__name__ = "lime.media.AudioSource";
            gd.prototype = {
                init: function() {
                    this.__backend.init()
                },
                play: function() {
                    this.__backend.play()
                },
                pause: function() {
                    this.__backend.pause()
                },
                stop: function() {
                    this.__backend.stop()
                },
                get_gain: function() {
                    return this.__backend.getGain()
                },
                set_gain: function(a) {
                    return this.__backend.setGain(a)
                },
                set_length: function(a) {
                    return this.__backend.setLength(a)
                },
                set_loops: function(a) {
                    return this.__backend.setLoops(a)
                },
                set_pitch: function(a) {
                    return this.__backend.setPitch(a)
                },
                get_position: function() {
                    return this.__backend.getPosition()
                },
                __class__: gd
            };
            var Bd = function(a) {
                this.parent = a;
                this.id = -1;
                this.gain = 1;
                this.position = new Cd
            };
            g["lime._internal.backend.html5.HTML5AudioSource"] = Bd;
            Bd.__name__ = "lime._internal.backend.html5.HTML5AudioSource";
            Bd.prototype = {
                init: function() {},
                play: function() {
                    if (!this.playing && null != this.parent.buffer && null != this.parent.buffer.__srcHowl) {
                        this.playing = !0;
                        var a = this.getCurrentTime();
                        this.completed = !1;
                        var b = this.parent.buffer.__srcHowl._volume;
                        this.parent.buffer.__srcHowl._volume = this.parent.get_gain();
                        this.id = this.parent.buffer.__srcHowl.play();
                        this.parent.buffer.__srcHowl._volume = b;
                        this.setPosition(this.parent.get_position());
                        this.parent.buffer.__srcHowl.on("end", t(this, this.howl_onEnd), this.id);
                        this.setCurrentTime(a)
                    }
                },
                pause: function() {
                    this.playing = !1;
                    null != this.parent.buffer && null != this.parent.buffer.__srcHowl && this.parent.buffer.__srcHowl.pause(this.id)
                },
                stop: function() {
                    this.playing = !1;
                    null != this.parent.buffer && null != this.parent.buffer.__srcHowl && (this.parent.buffer.__srcHowl.stop(this.id),
                    this.parent.buffer.__srcHowl.off("end", t(this, this.howl_onEnd), this.id))
                },
                howl_onEnd: function() {
                    this.playing = !1;
                    0 < this.loops ? (this.loops--,
                    this.stop(),
                    this.play()) : (null != this.parent.buffer && null != this.parent.buffer.__srcHowl && (this.parent.buffer.__srcHowl.stop(this.id),
                    this.parent.buffer.__srcHowl.off("end", t(this, this.howl_onEnd), this.id)),
                    this.completed = !0,
                    this.parent.onComplete.dispatch())
                },
                getCurrentTime: function() {
                    if (-1 == this.id)
                        return 0;
                    if (this.completed)
                        return this.getLength();
                    if (null != this.parent.buffer && null != this.parent.buffer.__srcHowl) {
                        var a = (1E3 * this.parent.buffer.__srcHowl.seek(this.id) | 0) - this.parent.offset;
                        return 0 > a ? 0 : a
                    }
                    return 0
                },
                setCurrentTime: function(a) {
                    if (null != this.parent.buffer && null != this.parent.buffer.__srcHowl) {
                        var b = (a + this.parent.offset) / 1E3;
                        0 > b && (b = 0);
                        this.parent.buffer.__srcHowl.seek(b, this.id)
                    }
                    return a
                },
                getGain: function() {
                    return this.gain
                },
                setGain: function(a) {
                    null != this.parent.buffer && null != this.parent.buffer.__srcHowl && -1 != this.id && this.parent.buffer.__srcHowl.volume(a, this.id);
                    return this.gain = a
                },
                getLength: function() {
                    return 0 != this.length ? this.length : null != this.parent.buffer && null != this.parent.buffer.__srcHowl ? 1E3 * this.parent.buffer.__srcHowl.duration() | 0 : 0
                },
                setLength: function(a) {
                    return this.length = a
                },
                setLoops: function(a) {
                    return this.loops = a
                },
                getPitch: function() {
                    return this.parent.buffer.__srcHowl.rate()
                },
                setPitch: function(a) {
                    this.parent.buffer.__srcHowl.rate(a);
                    return this.getPitch()
                },
                getPosition: function() {
                    return this.position
                },
                setPosition: function(a) {
                    this.position.x = a.x;
                    this.position.y = a.y;
                    this.position.z = a.z;
                    this.position.w = a.w;
                    null != this.parent.buffer && null != this.parent.buffer.__srcHowl && null != this.parent.buffer.__srcHowl.pos && this.parent.buffer.__srcHowl.pos(this.position.x, this.position.y, this.position.z, this.id);
                    return this.position
                },
                __class__: Bd
            };
            var Cd = function(a, b, c, f) {
                null == f && (f = 0);
                null == c && (c = 0);
                null == b && (b = 0);
                null == a && (a = 0);
                this.w = f;
                this.x = a;
                this.y = b;
                this.z = c
            };
            g["lime.math.Vector4"] = Cd;
            Cd.__name__ = "lime.math.Vector4";
            Cd.prototype = {
                __class__: Cd
            };
            var xa = function() {};
            g["lemongine.AssetManager"] = xa;
            xa.__name__ = "lemongine.AssetManager";
            xa.loadImage = function(a, b) {
                null == b && (b = a);
                var c = xa.images
                  , f = new hb;
                c.h[b] = f;
                xa.numImages++;
                la.loadImage(a).onError(function(a) {
                    ha.trace("Warning! Image '" + b + "' failed to load (" + H.string(a) + ").", {
                        fileName: "lemongine/AssetManager.hx",
                        lineNumber: 33,
                        className: "lemongine.AssetManager",
                        methodName: "loadImage"
                    })
                }).onComplete(function(a) {
                    xa.images.h[b].fromData(a);
                    xa.numImagesLoaded++
                });
                return xa.images.h[b]
            }
            ;
            xa.getImage = function(a) {
                return Object.prototype.hasOwnProperty.call(xa.images.h, a) ? xa.images.h[a] : null
            }
            ;
            xa.loadSound = function(a, b, c, f) {
                null == f && (f = 1);
                null == b && (b = a);
                if (1 < f)
                    for (var h = 0, q = f; h < q; ) {
                        var d = xa.sounds
                          , g = new Rc(null,c);
                        d.h[b + "_" + h++] = g
                    }
                else
                    d = xa.sounds,
                    g = new Rc(null,c),
                    d.h[b] = g;
                xa.numSounds++;
                la.loadAudioBuffer(a).onError(function(a) {
                    ha.trace("Warning! Sound '" + b + "' failed to load.", {
                        fileName: "lemongine/AssetManager.hx",
                        lineNumber: 94,
                        className: "lemongine.AssetManager",
                        methodName: "loadSound"
                    });
                    if (1 < f) {
                        a = 0;
                        for (var c = f; a < c; )
                            xa.sounds.h[b + "_" + a++].fromBuffer(new mb)
                    } else
                        xa.sounds.h[b].fromBuffer(new mb)
                }).onComplete(function(a) {
                    if (null == a.get_src() && null == a.data)
                        ha.trace("Warning! Sound '" + b + "' failed to load.", {
                            fileName: "lemongine/AssetManager.hx",
                            lineNumber: 103,
                            className: "lemongine.AssetManager",
                            methodName: "loadSound"
                        });
                    else {
                        if (1 < f)
                            for (var c = 0, h = f; c < h; )
                                xa.sounds.h[b + "_" + c++].fromBuffer(a);
                        else
                            xa.sounds.h[b].fromBuffer(a);
                        xa.numSoundsLoaded++
                    }
                });
                return 1 < f ? xa.sounds.h[b + "_0"] : xa.sounds.h[b]
            }
            ;
            xa.getSound = function(a) {
                return Object.prototype.hasOwnProperty.call(xa.sounds.h, a) ? xa.sounds.h[a] : xa.blankSound
            }
            ;
            var Wa = function() {};
            g["lemongine.Audio"] = Wa;
            Wa.__name__ = "lemongine.Audio";
            Wa.updateVolumes = function() {
                for (var a = Wa.sfxChannel.keys(); a.hasNext(); ) {
                    var b = a.next();
                    b.set_volume(b.volume)
                }
                for (a = Wa.musicChannel.keys(); a.hasNext(); )
                    b = a.next(),
                    b.set_volume(b.volume);
                for (a = Wa.ambienceChannel.keys(); a.hasNext(); )
                    b = a.next(),
                    b.set_volume(b.volume)
            }
            ;
            var xd = function(a, b, c, f, h) {
                null == h && (h = 8);
                null == f && (f = 16);
                null == c && (c = "ABCDEFGHIJKLMNOPQRSTUVWXYZ      abcdefghijklmnopqrstuvwxyz      0123456789      ~!@#$%^&*()_-+=[]{}|\\;:'\",.<>?/`");
                null == b && (b = "3343443343442333333432244455555544444444664524444544442444555555444344343355555516322443455344455446456646644345");
                this.width = a.data.width / h | 0;
                this.height = a.data.height / f | 0;
                this.defaultKerning = this.width;
                this.glyphs = new p;
                this.image = a;
                f = a = 0;
                for (var q, d, g = 0, l = c.length; g < l; )
                    d = g++,
                    q = c.charAt(d),
                    "\n" == q ? (++f,
                    a = 0) : (a >= h && (++f,
                    a = 0),
                    Object.prototype.hasOwnProperty.call(this.glyphs.h, q) || (d = H.parseInt(b.charAt(d)),
                    this.glyphs.h[q] = new Dd(q,this.width * a | 0,this.height * f | 0,1,this.defaultKerning - d)),
                    ++a)
            };
            g["lemongine.BitmapFont"] = xd;
            xd.__name__ = "lemongine.BitmapFont";
            xd.prototype = {
                cleanText: function(a) {
                    for (var b = "", c = 0, f = a.length; c < f; ) {
                        var h = c++;
                        if (Object.prototype.hasOwnProperty.call(this.glyphs.h, a.charAt(h)) || "\n" == a.charAt(h) || "\r" == a.charAt(h))
                            b += a.charAt(h)
                    }
                    return b
                },
                __class__: xd
            };
            var zb = z["lemongine.TextAlignment"] = {
                __ename__: "lemongine.TextAlignment",
                __constructs__: null,
                LEFT: {
                    _hx_name: "LEFT",
                    _hx_index: 0,
                    __enum__: "lemongine.TextAlignment",
                    toString: m
                },
                CENTER: {
                    _hx_name: "CENTER",
                    _hx_index: 1,
                    __enum__: "lemongine.TextAlignment",
                    toString: m
                },
                RIGHT: {
                    _hx_name: "RIGHT",
                    _hx_index: 2,
                    __enum__: "lemongine.TextAlignment",
                    toString: m
                }
            };
            zb.__constructs__ = [zb.LEFT, zb.CENTER, zb.RIGHT];
            var Pb = function(a, b, c, f, h) {
                null == f && (f = 4);
                this.useCamera = !1;
                this.transform = new Ua;
                this.ignoreBuffers = new p;
                this.attribs = new p;
                this.uniforms = new p;
                this.textureBuffers = new p;
                this.forceNoCulling = !1;
                this.customBlendFunc = null;
                this.isTransparent = !1;
                this.layer = 0;
                this.blendMode = Ia.NORMAL;
                this.visible = !0;
                this.tags = a;
                this.shaderProgram = c;
                this.primitiveMode = f;
                this.mesh = b;
                this.vboIndex = A.gl.createBuffer();
                this.camera = h
            };
            g["lemongine.Entity"] = Pb;
            Pb.__name__ = "lemongine.Entity";
            Pb.entitySortFunction = function(a, b) {
                return a.isTransparent != b.isTransparent ? (a.isTransparent ? 1 : 0) - (b.isTransparent ? 1 : 0) : a.layer != b.layer ? a.layer - b.layer : a.shaderProgram != b.shaderProgram ? a.shaderProgram.id > b.shaderProgram.id ? 1 : -1 : 0
            }
            ;
            Pb.prototype = {
                render: function(a, b, c, f) {
                    null == f && (f = !0);
                    null == c && (c = !0);
                    null == b && (b = !0);
                    b && this.shaderProgram.useProgram();
                    var h = this.attribs;
                    b = this.shaderProgram.getBuiltin("vertex");
                    h.h[b] = this.mesh.vertices;
                    if (this.mesh.hasUVs && this.shaderProgram.hasBuiltin("uv"))
                        h = this.attribs,
                        b = this.shaderProgram.getBuiltin("uv"),
                        h.h[b] != this.mesh.uvs && (h = this.attribs,
                        b = this.shaderProgram.getBuiltin("uv"),
                        h.h[b] = this.mesh.uvs);
                    else if (h = this.attribs,
                    b = this.shaderProgram.getBuiltin("uv"),
                    Object.prototype.hasOwnProperty.call(h.h, b)) {
                        h = this.attribs;
                        b = this.shaderProgram.getBuiltin("uv");
                        var q = h;
                        Object.prototype.hasOwnProperty.call(q.h, b) && delete q.h[b]
                    }
                    this.mesh.hasNormals && this.shaderProgram.hasBuiltin("normal") ? (h = this.attribs,
                    b = this.shaderProgram.getBuiltin("normal"),
                    h.h[b] != this.mesh.normals && (h = this.attribs,
                    b = this.shaderProgram.getBuiltin("normal"),
                    h.h[b] = this.mesh.normals)) : (h = this.attribs,
                    b = this.shaderProgram.getBuiltin("normal"),
                    Object.prototype.hasOwnProperty.call(h.h, b) && (h = this.attribs,
                    b = this.shaderProgram.getBuiltin("normal"),
                    q = h,
                    Object.prototype.hasOwnProperty.call(q.h, b) && delete q.h[b]));
                    this.mesh.isIndexed ? this.attribs.h["~index"] != this.mesh.indices && (this.attribs.h["~index"] = this.mesh.indices) : Object.prototype.hasOwnProperty.call(this.attribs.h, "~index") && (q = this.attribs,
                    Object.prototype.hasOwnProperty.call(q.h, "~index") && delete q.h["~index"]);
                    c ? (c = this.useCamera && null != this.camera ? this.camera : a.camera,
                    this.shaderProgram.updateProjectionMatrix(c),
                    this.shaderProgram.hasBuiltin("viewMatrix") && this.shaderProgram.setUniform(this.shaderProgram.builtinBuffers.h.viewMatrix, c.getTransformValues(), "matrix4")) : (this.ignoreBuffer(this.shaderProgram.getBuiltin("vertex")),
                    this.mesh.hasUVs && this.shaderProgram.hasBuiltin("uv") && this.ignoreBuffer(this.shaderProgram.getBuiltin("uv")),
                    this.mesh.hasNormals && this.shaderProgram.hasBuiltin("normal") && this.ignoreBuffer(this.shaderProgram.getBuiltin("normal")),
                    this.shaderProgram.hasBuiltin("viewMatrix") && this.ignoreBuffer(this.shaderProgram.getBuiltin("viewMatrix")));
                    this.shaderProgram.hasBuiltin("modelMatrix") && this.shaderProgram.setUniform(this.shaderProgram.builtinBuffers.h.modelMatrix, this.transform.values, "matrix4");
                    this.shaderProgram.hasBuiltin("time") && this.shaderProgram.setUniform(this.shaderProgram.builtinBuffers.h.time, (new Date).getTime() / 1E3, "float");
                    c = this.shaderProgram.uniforms.h;
                    b = Object.keys(c);
                    q = b.length;
                    for (var d = 0; d < q; ) {
                        var g = c[b[d++]];
                        if (1 == this.ignoreBuffers.h[g.name])
                            this.ignoreBuffers.h[g.name] = !1;
                        else {
                            var l = g.value;
                            if (Object.prototype.hasOwnProperty.call(this.uniforms.h, g.name))
                                l = this.uniforms.h[g.name].value;
                            else if (!g.set) {
                                ha.trace("Warning! '" + g.name + "' is a null uniform.", {
                                    fileName: "lemongine/Entity.hx",
                                    lineNumber: 138,
                                    className: "lemongine.Entity",
                                    methodName: "render"
                                });
                                continue
                            }
                            if ("matrix4" == g.type)
                                l = ja.__cast(l, Array),
                                h = null != l ? new Float32Array(l) : null,
                                Qb.uniformMatrix4fv(A.gl, g.location, !1, h);
                            else if ("float" == g.type)
                                A.gl.uniform1f(g.location, ja.__cast(l, $d));
                            else if ("float2" == g.type) {
                                l = ja.__cast(l, Array);
                                var p = null != l ? new Float32Array(l) : null;
                                pe.uniform2fv(A.gl, g.location, p)
                            } else
                                "float3" == g.type ? (l = ja.__cast(l, Array),
                                l = null != l ? new Float32Array(l) : null,
                                A.gl.uniform3fv(g.location, l)) : "float4" == g.type ? (l = ja.__cast(l, Array),
                                h = null != l ? new Float32Array(l) : null,
                                A.gl.uniform4fv(g.location, h)) : ha.trace("Warning! Uniform type '" + g.type + "' not defined (on '" + g.name + "').", {
                                    fileName: "lemongine/Entity.hx",
                                    lineNumber: 179,
                                    className: "lemongine.Entity",
                                    methodName: "render"
                                })
                        }
                    }
                    if (Object.prototype.hasOwnProperty.call(this.attribs.h, "~index") && (l = this.attribs.h["~index"],
                    this.ignoreBuffers.h["~index"] = !0,
                    A.gl.bindBuffer(A.gl.ELEMENT_ARRAY_BUFFER, l.buffer),
                    l.dirtyBuffer))
                        if (l.dirtyBuffer = !1,
                        l.dirtyLength) {
                            p = A.gl;
                            var y = A.gl.ELEMENT_ARRAY_BUFFER;
                            l = l.getValue();
                            h = null != l ? new Uint16Array(l) : null;
                            Qb.bufferData(p, y, h, A.gl.STATIC_DRAW)
                        } else if (-1 == l.dirtyStart) {
                            h = A.gl;
                            var m = A.gl.ELEMENT_ARRAY_BUFFER;
                            l = l.getValue();
                            p = null != l ? new Uint16Array(l) : null;
                            h.bufferSubData(m, 0, p)
                        } else
                            h = A.gl,
                            m = A.gl.ELEMENT_ARRAY_BUFFER,
                            y = 2 * l.dirtyStart,
                            l = l.getValue().slice(l.dirtyStart, l.dirtyEnd),
                            p = null != l ? new Uint16Array(l) : null,
                            h.bufferSubData(m, y, p);
                    c = this.shaderProgram.attribs.h;
                    b = Object.keys(c);
                    q = b.length;
                    for (d = 0; d < q; )
                        g = c[b[d++]],
                        1 == this.ignoreBuffers.h[g.name] ? this.ignoreBuffers.h[g.name] = !1 : (l = this.attribs.h[g.name],
                        "float" == g.type ? (A.gl.bindBuffer(A.gl.ARRAY_BUFFER, l.buffer),
                        l.dirtyBuffer && (l.dirtyBuffer = !1,
                        l.dirtyLength ? (p = A.gl,
                        y = A.gl.ARRAY_BUFFER,
                        l = l.getValue(),
                        h = null != l ? new Float32Array(l) : null,
                        Qb.bufferData(p, y, h, A.gl.STATIC_DRAW)) : -1 == l.dirtyStart ? (p = A.gl,
                        m = A.gl.ARRAY_BUFFER,
                        l = l.getValue(),
                        l = null != l ? new Float32Array(l) : null,
                        p.bufferSubData(m, 0, l)) : (h = A.gl,
                        p = A.gl.ARRAY_BUFFER,
                        y = 4 * l.dirtyStart,
                        l = l.getValue().slice(l.dirtyStart, l.dirtyEnd),
                        l = null != l ? new Float32Array(l) : null,
                        h.bufferSubData(p, y, l))),
                        A.gl.vertexAttribPointer(g.location, g.dataCount, A.gl.FLOAT, !1, 4 * g.dataStride, 4 * g.dataOffset),
                        A.gl.enableVertexAttribArray(g.location)) : "uint" == g.type ? (A.gl.bindBuffer(A.gl.ARRAY_BUFFER, l.buffer),
                        l.dirtyBuffer && (l.dirtyBuffer = !1,
                        l.dirtyLength ? (h = A.gl,
                        p = A.gl.ARRAY_BUFFER,
                        l = l.getValue(),
                        l = null != l ? new Uint16Array(l) : null,
                        Qb.bufferData(h, p, l, A.gl.STATIC_DRAW)) : -1 == l.dirtyStart ? (h = A.gl,
                        p = A.gl.ARRAY_BUFFER,
                        l = l.getValue(),
                        l = null != l ? new Uint16Array(l) : null,
                        h.bufferSubData(p, 0, l)) : (h = A.gl,
                        p = A.gl.ARRAY_BUFFER,
                        y = 2 * l.dirtyStart,
                        l = l.getValue().slice(l.dirtyStart, l.dirtyEnd),
                        l = null != l ? new Uint16Array(l) : null,
                        h.bufferSubData(p, y, l))),
                        A.gl.vertexAttribPointer(g.location, g.dataCount, A.gl.FLOAT, !1, 2 * g.dataStride, 2 * g.dataOffset),
                        A.gl.enableVertexAttribArray(g.location)) : ha.trace("Warning! Attrib type '" + g.type + "' not defined (on '" + g.name + "').", {
                            fileName: "lemongine/Entity.hx",
                            lineNumber: 327,
                            className: "lemongine.Entity",
                            methodName: "render"
                        }));
                    if (f)
                        for (f = 0,
                        c = Object.keys(this.shaderProgram.textureBuffers.h),
                        b = c.length,
                        q = 0; q < b; )
                            g = c[q++],
                            d = this.shaderProgram.textureBuffers.h[g],
                            Object.prototype.hasOwnProperty.call(this.textureBuffers.h, g) && (d = this.textureBuffers.h[g]),
                            d.dirtyRender = !1,
                            g = A.gl.getUniformLocation(this.shaderProgram.program, g),
                            A.gl.uniform1i(g, f),
                            A.gl.activeTexture(A.gl.TEXTURE0 + f),
                            d.isCubemap ? A.gl.bindTexture(A.gl.TEXTURE_CUBE_MAP, d.getTextureBuffer()) : A.gl.bindTexture(A.gl.TEXTURE_2D, d.getTextureBuffer()),
                            ++f;
                    if (!(0 == this.mesh.numVertices() || this.mesh.isIndexed && 0 == this.mesh.numIndices())) {
                        null != this.customBlendFunc ? A.gl.blendFuncSeparate(this.customBlendFunc[0], this.customBlendFunc[1], this.customBlendFunc[2], this.customBlendFunc[3]) : this.blendMode == Ia.ADD ? A.gl.blendFunc(A.gl.ONE, A.gl.ONE) : this.isTransparent ? A.gl.blendFuncSeparate(A.gl.ONE, A.gl.ONE_MINUS_SRC_ALPHA, A.gl.ONE, A.gl.ONE) : A.gl.blendFuncSeparate(A.gl.SRC_ALPHA, A.gl.ONE_MINUS_SRC_ALPHA, A.gl.ONE, A.gl.ZERO);
                        this.forceNoCulling && na.setCulling(!1);
                        this.mesh.isIndexed ? A.gl.drawElements(this.primitiveMode, this.mesh.numIndices(), A.gl.UNSIGNED_SHORT, 0) : A.gl.drawArrays(this.primitiveMode, 0, Math.floor(this.mesh.numVertices()));
                        c = this.shaderProgram.attribs.h;
                        b = Object.keys(c);
                        q = b.length;
                        for (d = 0; d < q; )
                            A.gl.disableVertexAttribArray(c[b[d++]].location);
                        this.forceNoCulling && na.setCulling(a.cull, a.isBackFace)
                    }
                },
                setUniform: function(a, b) {
                    null == b && (b = "");
                    Object.prototype.hasOwnProperty.call(this.uniforms.h, a) ? this.uniforms.h[a].value = b : this.uniforms.h[a] = {
                        name: a,
                        value: b
                    };
                    return this.shaderProgram.uniforms.h[a].location
                },
                setAttrib: function(a, b, c, f, h) {
                    null == h && (h = -1);
                    null == f && (f = -1);
                    null == c && (c = !0);
                    if (!Object.prototype.hasOwnProperty.call(this.attribs.h, a)) {
                        if (null == this.shaderProgram.attribs.h[a])
                            return -1;
                        var q = this.attribs
                          , d = new oc(a,this.shaderProgram.attribs.h[a].type);
                        q.h[a] = d
                    }
                    this.attribs.h[a].setValue(b, c, f, h);
                    return this.shaderProgram.attribs.h[a].location
                },
                getAttrib: function(a) {
                    return Object.prototype.hasOwnProperty.call(this.attribs.h, a) ? this.attribs.h[a] : null
                },
                setTextureBuffer: function(a, b) {
                    Object.prototype.hasOwnProperty.call(this.shaderProgram.textureBuffers.h, a) || (this.shaderProgram.textureBuffers.h[a] = b);
                    Object.prototype.hasOwnProperty.call(this.textureBuffers.h, a) && this.textureBuffers.h[a] == b || (this.textureBuffers.h[a] = b,
                    b.dirtyRender = !0)
                },
                ignoreBuffer: function(a) {
                    this.ignoreBuffers.h[a] = !0
                },
                __class__: Pb
            };
            var ia = function(a, b, c, f) {
                this.arr = [];
                this.extraAttribsNamesAndDefaults = new p;
                this.useColorUniforms = !0;
                this.colorOffset = [0, 0, 0, 0];
                this.color = new Pa(-1);
                this.clip = [];
                this.hasCustomAttribValues = new p;
                this.hasCustomUVs = new ra;
                this.unclearedQuadsMap = new ra;
                this.unusedQuadsMap = new ra;
                this.unusedQuads = [];
                this.size = this.numQuads = 0;
                b = Ia.NORMAL;
                if (null == c)
                    c = Sb.getShader(b);
                else if (this.useColorUniforms = !1,
                null != f) {
                    this.extraAttribsNamesAndDefaults = f;
                    b = Object.keys(f.h);
                    f = b.length;
                    for (var h = 0; h < f; )
                        this.hasCustomAttribValues.h[b[h++]] = new ra
                }
                Pb.call(this, [], new Sc([],null,[]), c);
                this.set_texture(a);
                this.updateShaderAttribs()
            };
            g["lemongine.QuadPoolEntity"] = ia;
            ia.__name__ = "lemongine.QuadPoolEntity";
            ia.__super__ = Pb;
            ia.prototype = n(Pb.prototype, {
                updateShaderAttribs: function() {
                    this.setColor(this.color);
                    this.setColorOffset(this.colorOffset[0], this.colorOffset[1], this.colorOffset[2], this.colorOffset[3]);
                    this.setAttrib("texClip", this.clip);
                    for (var a = Object.keys(this.extraAttribsNamesAndDefaults.h), b = a.length, c = 0; c < b; ) {
                        var f = a[c++];
                        null == this.getAttrib(f) && this.setAttrib(f, [])
                    }
                    this.set_texture(this.texture)
                },
                setColor: function(a) {
                    this.color = a;
                    this.useColorUniforms && this.setUniform("color", [Q.toFloat(a.r) / Q.toFloat(255), Q.toFloat(a.g) / Q.toFloat(255), Q.toFloat(a.b) / Q.toFloat(255), Q.toFloat(a.a) / Q.toFloat(255)])
                },
                setColorOffset: function(a, b, c, f) {
                    null == f && (f = 0);
                    null == c && (c = 0);
                    null == b && (b = 0);
                    null == a && (a = 0);
                    this.colorOffset = [a, b, c, f];
                    this.useColorUniforms && this.setUniform("colorOffset", [a, b, c, f])
                },
                set_texture: function(a) {
                    null != a && (this.texture = a,
                    this.setTextureBuffer("texture", this.texture),
                    this.setUniform("texSize", [this.texture.width, this.texture.height]));
                    return a
                },
                addQuad: function(a, b, c, f, h, q, d, l) {
                    null == f && (f = !0);
                    null == b && (b = new W);
                    null == c && (c = null == this.texture ? new W : new W(Q.toFloat(this.texture.width),Q.toFloat(this.texture.height)));
                    if (f && 0 < this.unusedQuads.length)
                        return this.updateQuad(this.nearestConsecutiveEmpty(1), a, b, c, h, q, d, l);
                    null == q ? (null == a && (a = new va),
                    null != h ? T.pushAll(this.mesh.getVertices(), [a.x, a.y, a.z, a.x, a.y + h.y, a.z, a.x + h.x, a.y, a.z, a.x + h.x, a.y, a.z, a.x, a.y + h.y, a.z, a.x + h.x, a.y + h.y, a.z]) : T.pushAll(this.mesh.getVertices(), [a.x, a.y, a.z, a.x, a.y + c.y, a.z, a.x + c.x, a.y, a.z, a.x + c.x, a.y, a.z, a.x, a.y + c.y, a.z, a.x + c.x, a.y + c.y, a.z])) : T.pushAll(this.mesh.getVertices(), q);
                    null != d ? (this.hasCustomUVs.h[this.size] = !0,
                    T.pushAll(this.mesh.getUVs(), d)) : T.pushAll(this.mesh.getUVs(), ia.defaultUVs);
                    this.mesh.vertices.setDirty(!0);
                    this.mesh.uvs.setDirty(!0);
                    T.pushAll(this.clip, T.repeatArray([b.x, b.y, c.x, c.y], 6));
                    this.setAttrib("texClip", this.clip);
                    a = Object.keys(this.extraAttribsNamesAndDefaults.h);
                    b = a.length;
                    for (c = 0; c < b; )
                        f = a[c++],
                        null != l && Object.prototype.hasOwnProperty.call(l.h, f) ? (this.hasCustomAttribValues.h[f].h[this.size] = !0,
                        T.pushAll(this.getAttrib(f).value, l.h[f])) : (h = this.extraAttribsNamesAndDefaults.h[f],
                        T.pushAll(this.getAttrib(f).value, h)),
                        this.getAttrib(f).setDirty(!0);
                    this.numQuads++;
                    return this.size++
                },
                nearestConsecutiveEmpty: function(a, b) {
                    null == b && (b = 0);
                    null == a && (a = 2);
                    for (var c, f = 0, h = this.unusedQuads; f < h.length; ) {
                        var q = h[f];
                        ++f;
                        if (this.unusedQuadsMap.h.hasOwnProperty(q) && !(q < b)) {
                            c = !1;
                            for (var d = 1; d < a; ) {
                                var l = d++;
                                if (q + l >= this.size)
                                    return q;
                                if (!this.unusedQuadsMap.h.hasOwnProperty(q + l)) {
                                    c = !0;
                                    break
                                }
                            }
                            if (!c)
                                return q
                        }
                    }
                    return this.size
                },
                updateQuad: function(a, b, c, f, h, q, d, l) {
                    if (a >= this.size)
                        return this.addQuad(b, c, f, !1, h, q, d, l);
                    if (0 > a)
                        return this.addQuad(b, c, f, !0, h, q, d, l);
                    this.unusedQuadsMap.h.hasOwnProperty(a) && (this.numQuads++,
                    K.remove(this.unusedQuads, a),
                    this.unusedQuadsMap.remove(a),
                    this.unclearedQuadsMap.remove(a));
                    if (null != c || null != b || null != f || null != q || null != h)
                        null == f && (f = new W(this.getAttrib("texClip").value[24 * a + 2],this.getAttrib("texClip").value[24 * a + 3])),
                        null != c && (T.spliceInsert(this.clip, 24 * a, 24, T.repeatArray([c.x, c.y, f.x, f.y], 6)),
                        this.setAttrib("texClip", this.clip, !1, 24 * a, 24)),
                        null == q ? (null == b && (b = new va(this.mesh.vertices.value[18 * a],this.mesh.vertices.value[18 * a + 1],this.mesh.vertices.value[18 * a + 2])),
                        null != h ? (c = this.arr[3] = this.arr[0] = b.x,
                        this.arr[12] = c,
                        c = this.arr[7] = this.arr[1] = b.y,
                        this.arr[10] = c,
                        c = this.arr[9] = this.arr[6] = b.x + h.x,
                        this.arr[15] = c,
                        c = this.arr[13] = this.arr[4] = b.y + h.y) : (c = this.arr[3] = this.arr[0] = b.x,
                        this.arr[12] = c,
                        c = this.arr[7] = this.arr[1] = b.y,
                        this.arr[10] = c,
                        c = this.arr[9] = this.arr[6] = b.x + f.x,
                        this.arr[15] = c,
                        c = this.arr[13] = this.arr[4] = b.y + f.y),
                        this.arr[16] = c,
                        c = this.arr[14] = this.arr[11] = this.arr[8] = this.arr[5] = this.arr[2] = b.z,
                        this.arr[17] = c) : (this.arr[0] = q[0],
                        this.arr[1] = q[1],
                        this.arr[2] = q[2],
                        this.arr[3] = q[3],
                        this.arr[4] = q[4],
                        this.arr[5] = q[5],
                        this.arr[6] = q[6],
                        this.arr[7] = q[7],
                        this.arr[8] = q[8],
                        this.arr[9] = q[9],
                        this.arr[10] = q[10],
                        this.arr[11] = q[11],
                        this.arr[12] = q[12],
                        this.arr[13] = q[13],
                        this.arr[14] = q[14],
                        this.arr[15] = q[15],
                        this.arr[16] = q[16],
                        this.arr[17] = q[17]),
                        T.spliceInsert(this.mesh.vertices.value, 18 * a, 18, this.arr),
                        this.mesh.vertices.setDirty(!1, 18 * a, 18);
                    null != d ? (this.hasCustomUVs.h[a] = !0,
                    T.spliceInsert(this.mesh.uvs.value, 12 * a, 12, d),
                    this.mesh.uvs.setDirty(!1, 12 * a, 12)) : this.hasCustomUVs.h.hasOwnProperty(a) && (this.hasCustomUVs.remove(a),
                    T.spliceInsert(this.mesh.uvs.value, 12 * a, 12, ia.defaultUVs),
                    this.mesh.uvs.setDirty(!1, 12 * a, 12));
                    b = Object.keys(this.extraAttribsNamesAndDefaults.h);
                    f = b.length;
                    for (h = 0; h < f; )
                        d = b[h++],
                        null == l || null == l.h[d] ? this.hasCustomAttribValues.h[d].h.hasOwnProperty(a) && (this.hasCustomAttribValues.h[d].remove(a),
                        T.spliceInsert(this.getAttrib(d).value, a * this.extraAttribsNamesAndDefaults.h[d].length, this.extraAttribsNamesAndDefaults.h[d].length, this.extraAttribsNamesAndDefaults.h[d]),
                        this.getAttrib(d).setDirty(!1, a * this.extraAttribsNamesAndDefaults.h[d].length, this.extraAttribsNamesAndDefaults.h[d].length)) : (this.hasCustomAttribValues.h[d].h[a] = !0,
                        T.spliceInsert(this.getAttrib(d).value, a * l.h[d].length, l.h[d].length, l.h[d]),
                        this.getAttrib(d).setDirty(!1, a * l.h[d].length, l.h[d].length));
                    return a
                },
                removeQuad: function(a, b) {
                    null == b && (b = !0);
                    null == a && (a = 0);
                    0 > a || a >= this.size || (b ? this.updateQuad(a, new va, new W, new W) : this.unclearedQuadsMap.h[a] = !0,
                    this.unusedQuadsMap.h.hasOwnProperty(a) || (this.numQuads--,
                    Ed.insert(this.unusedQuads, a, function(a, b) {
                        return a - b
                    }),
                    this.unusedQuadsMap.h[a] = !0))
                },
                clearPool: function(a, b) {
                    null == b && (b = !1);
                    null == a && (a = !1);
                    this.numQuads = 0;
                    if (a) {
                        this.mesh.vertices.value.splice(0, this.mesh.vertices.value.length);
                        this.mesh.vertices.setDirty(!0);
                        this.mesh.getUVs().splice(0, this.mesh.getUVs().length);
                        this.mesh.uvs.setDirty(!0);
                        this.clip = [];
                        this.setAttrib("texClip", this.clip, !0);
                        b = Object.keys(this.extraAttribsNamesAndDefaults.h);
                        for (var c = b.length, f = 0; f < c; )
                            a = b[f++],
                            this.hasCustomAttribValues.h[a] = new ra,
                            this.setAttrib(a, []);
                        this.hasCustomUVs = new ra;
                        this.unusedQuads = [];
                        this.unusedQuadsMap = new ra;
                        this.unclearedQuadsMap = new ra;
                        this.size = 0
                    } else {
                        if (b) {
                            c = 0;
                            for (f = this.mesh.vertices.value.length; c < f; )
                                this.mesh.vertices.value[c++] = 0;
                            this.mesh.vertices.setDirty(!1, 0, this.mesh.vertices.value.length)
                        }
                        this.unusedQuads = [];
                        c = 0;
                        for (f = this.size; c < f; )
                            a = c++,
                            this.unusedQuads[a] = a,
                            this.unusedQuadsMap.h.hasOwnProperty(a) || (this.unusedQuadsMap.h[a] = !0,
                            b || (this.unclearedQuadsMap.h[a] = !0))
                    }
                },
                resetUnusedQuads: function() {
                    for (var a = this.unclearedQuadsMap.keys(); a.hasNext(); ) {
                        var b = a.next();
                        T.spliceInsert(this.clip, 24 * b, 24, T.repeatArray([0], 24));
                        T.spliceInsert(this.mesh.getVertices(), 18 * b, 18, T.repeatArray([0], 18));
                        this.unclearedQuadsMap.remove(b)
                    }
                    this.mesh.vertices.setDirty();
                    this.setAttrib("texClip", this.clip)
                },
                __class__: ia
            });
            var ed = function(a, b, c, f) {
                null == f && (f = zb.LEFT);
                null == b && (b = "");
                this.passwordCharacter = "*";
                this.lines = [];
                this.maxLineWidth = -1;
                this.calculatedWidth = this.calculatedHeight = 0;
                this.glyphAtQuad = new ra;
                this.charToQuad = [];
                ia.call(this, a.image, Ia.NORMAL, Tb.getShader());
                this.useColorUniforms = !0;
                this.set_mask(null);
                this.font = a;
                this.text = b;
                this.setColor(c);
                this.textAlignment = f;
                this.create();
                this.isTransparent = !0
            };
            g["lemongine.BitmapFontEntity"] = ed;
            ed.__name__ = "lemongine.BitmapFontEntity";
            ed.__super__ = ia;
            ed.prototype = n(ia.prototype, {
                setText: function(a) {
                    this.text != a && (this.text = a,
                    this.create())
                },
                insertText: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = -1);
                    -1 == b && (b = this.text.length);
                    -1 == c && (c = this.text.length - b);
                    a = K.substr(this.text, 0, b) + a + K.substr(this.text, b + c, null);
                    this.text != a && (b >= a.length ? (this.text = a,
                    this.create(b)) : 0 > b ? (this.text = a,
                    this.create()) : (this.text = a,
                    this.create(b),
                    this.resetUnusedQuads()))
                },
                indexAtPoint: function(a) {
                    if (0 == this.numQuads)
                        return 0;
                    var b = T.clamp(-1, this.lines.length, Math.floor((a.y - this.characterRectangle(0).y) / this.font.height)) | 0;
                    if (-1 == b)
                        return 0;
                    if (b == this.lines.length)
                        return this.text.length;
                    var c = this.lines[b];
                    b = (null != this.lines[b + 1] ? this.lines[b + 1] : this.text.length) - 1;
                    var f = this.characterRectangle(c).x + this.characterRectangle(c).width / 2 | 0;
                    if (a.x < f)
                        return c;
                    f = this.characterRectangle(b).x + this.characterRectangle(b).width / 2 | 0;
                    if (a.x >= f)
                        return " " == this.text.charAt(b) || "\n" == this.text.charAt(b) ? b : b + 1;
                    do {
                        f = Math.ceil((c + b) / 2);
                        var h = this.characterRectangle(f).x + this.characterRectangle(f).width / 2 | 0;
                        a.x >= h ? c = f : (b = f - 1,
                        this.characterRectangle(b),
                        this.characterRectangle(b))
                    } while (c < b);
                    return c + 1
                },
                internalCharAt: function(a) {
                    return this.isPassword ? this.passwordCharacter : this.text.charAt(a)
                },
                characterRectangle: function(a) {
                    if (0 == this.numQuads) {
                        if (0 == a)
                            return new ca(0,0,0,this.font.height);
                        var b = 0;
                        for (a >= this.text.length && (a = this.text.length - 1); 0 <= a - b && "\n" == this.internalCharAt(a - b); )
                            ++b;
                        return new ca(0,this.font.height * b,0,this.font.height)
                    }
                    if (a >= this.text.length) {
                        a = this.text.length - 1;
                        for (b = 0; 0 <= a - b && "\n" == this.internalCharAt(a - b); )
                            ++b;
                        var c = Math.min(this.numQuads - 1, this.charToQuad[a]) | 0;
                        if (0 < b)
                            return new ca(0,(this.mesh.vertices.getValue()[18 * (this.charToQuad[a] - 1) + 1] | 0) + this.font.height * b,0,this.font.height);
                        b = this.font.glyphs.h[this.glyphAtQuad.h[c]];
                        return new ca(this.mesh.vertices.getValue()[18 * c] + b.frontOffset + b.backOffset - 1 | 0,this.mesh.vertices.getValue()[18 * c + 1] | 0,0,this.font.height)
                    }
                    if ("\n" == this.internalCharAt(a)) {
                        for (b = 1; 0 <= a - b && "\n" == this.internalCharAt(a - b); )
                            ++b;
                        if (1 < b)
                            return new ca(0,(this.mesh.vertices.getValue()[18 * (this.charToQuad[a] - 1) + 1] | 0) + this.font.height * (b - 1),0,this.font.height);
                        b = this.font.glyphs.h[this.glyphAtQuad.h[Math.max(0, this.charToQuad[a] - 1) | 0]];
                        return new ca(this.mesh.vertices.getValue()[18 * (this.charToQuad[a] - 1)] + b.frontOffset + b.backOffset - 1 | 0,this.mesh.vertices.getValue()[18 * (this.charToQuad[a] - 1) + 1] | 0,0,this.font.height)
                    }
                    if (this.charToQuad[a] >= this.numQuads)
                        return b = this.font.glyphs.h[this.glyphAtQuad.h[this.charToQuad[a] - 1]],
                        new ca(this.mesh.vertices.getValue()[18 * (this.charToQuad[a] - 1)] + b.frontOffset + b.backOffset - 1 | 0,this.mesh.vertices.getValue()[18 * (this.charToQuad[a] - 1) + 1] | 0,0,this.font.height);
                    c = this.font.glyphs.h[this.glyphAtQuad.h[this.charToQuad[a]]];
                    return new ca(this.mesh.vertices.getValue()[18 * this.charToQuad[a]] | 0,this.mesh.vertices.getValue()[18 * this.charToQuad[a] + 1] | 0,c.backOffset,this.font.height)
                },
                previousWordBoundary: function(a) {
                    if (this.isPassword)
                        return 0;
                    a >= this.text.length && (a = this.text.length - 1);
                    --a;
                    if (0 >= a)
                        return 0;
                    do {
                        var b = K.substr(this.text, a - 2, 2);
                        if ((new pa("(?!^)\\b(?!$)","")).match(b))
                            return a - 1;
                        --a
                    } while (0 < a);
                    return a
                },
                nextWordBoundary: function(a) {
                    if (this.isPassword || a >= this.text.length)
                        return this.text.length;
                    if (0 > a)
                        return 0;
                    do {
                        var b = K.substr(this.text, a + 1, 2);
                        if ((new pa("(?!^)\\b(?!$)","")).match(b))
                            return a + 2;
                        ++a
                    } while (a <= this.text.length);
                    return a
                },
                getLineOfChar: function(a) {
                    return a > this.text.length - 1 && "\n" == this.internalCharAt(this.text.length - 1) ? this.lines.length : T.clamp(0, this.lines.length - 1, Math.floor(this.characterRectangle(a).y / this.font.height)) | 0
                },
                getPreviousNewline: function(a) {
                    return -1 == this.text.lastIndexOf("\n", a) ? 0 : a < this.text.length - 1 && "\n" == this.internalCharAt(this.text.length - 1) ? this.text.length : this.text.lastIndexOf("\n", a)
                },
                getNextNewline: function(a) {
                    return this.isPassword || -1 == this.text.indexOf("\n", a) ? this.text.length : this.text.indexOf("\n", a)
                },
                getCharAtLine: function(a) {
                    return a > this.lines.length - 1 ? this.text.length : this.lines[T.clamp(0, this.lines.length - 1, a) | 0]
                },
                recalculateLines: function() {
                    this.lines = [0];
                    if (!this.isPassword) {
                        var a = this.text.split("\r").join("\n").split("\n");
                        if (0 >= this.maxLineWidth)
                            for (var b = 0; b < a.length; )
                                this.lines.push(this.lines[this.lines.length - 1] + (a[b++].length + 1));
                        else {
                            var c = 0;
                            b = 0;
                            for (var f = a.length; b < f; ) {
                                var h = b++
                                  , q = 0;
                                for (h != a.length - 1 && (a[h] += "\n"); q < a[h].length; ) {
                                    for (var d = 0, l = 0; ; ) {
                                        var g = this.text.charAt(c + d);
                                        Object.prototype.hasOwnProperty.call(this.font.glyphs.h, g) && (l += this.font.glyphs.h[g].backOffset);
                                        if (l > this.maxLineWidth && 0 < d || q + d >= a[h].length)
                                            break;
                                        ++d
                                    }
                                    if (q + d < a[h].length)
                                        for (l = d,
                                        g = !1; 1 < l; ) {
                                            if (this.isPassword || " " != K.substr(a[h], q + l, 1))
                                                g = !0;
                                            else if (g) {
                                                d = l + 1;
                                                break
                                            }
                                            --l
                                        }
                                    q += d;
                                    c += d;
                                    this.lines.push(c)
                                }
                            }
                        }
                        this.lines.pop()
                    }
                },
                create: function(a) {
                    null == a && (a = 0);
                    -1 < this.maxLineWidth && (a = 0);
                    var b, c = 0, f = 0, h = new va, q = new W, d = new W;
                    var l = !0;
                    this.recalculateLines();
                    if (1 < a && this.textAlignment == zb.LEFT && 1 >= this.lines.length) {
                        a >= this.text.length - 1 && (a = this.text.length - 2);
                        var g = this.font.glyphs.h[this.glyphAtQuad.h[this.charToQuad[a] - 1]];
                        if (null != g) {
                            l = !1;
                            c = this.mesh.vertices.getValue()[18 * this.charToQuad[a - 1]] + g.frontOffset + g.backOffset | 0;
                            f = this.mesh.vertices.getValue()[18 * this.charToQuad[a - 1] + 1] | 0;
                            this.calculatedWidth = c;
                            g = this.charToQuad[a];
                            for (var p = this.numQuads; g < p; ) {
                                var y = g++;
                                this.removeQuad(y);
                                this.glyphAtQuad.remove(y)
                            }
                        }
                    }
                    l && (a = 0,
                    this.clearPool(),
                    this.glyphAtQuad.h = {},
                    this.calculatedWidth = 0);
                    this.charToQuad.splice(a, this.charToQuad.length - a);
                    g = 0;
                    for (p = this.lines.length; g < p; ) {
                        f = g++;
                        var m = this.lines[f];
                        l = this.lines.length > f + 1 ? this.lines[f + 1] : this.text.length;
                        0 < a ? m = a : c = 0;
                        f *= this.font.height;
                        y = b = 0;
                        if (this.textAlignment == zb.CENTER && 0 == c) {
                            for (y = l - 1; y >= m && "\n" == this.internalCharAt(y) || " " == this.internalCharAt(y); )
                                --y;
                            for (y < m && (y = l - 1); y >= m; ) {
                                var k = this.internalCharAt(y);
                                Object.prototype.hasOwnProperty.call(this.font.glyphs.h, k) && (b += this.font.glyphs.h[k].backOffset);
                                --y
                            }
                            y = 0 - Math.floor(b / 2)
                        }
                        for (k = l; m < k; ) {
                            var L = m++;
                            l = this.internalCharAt(L);
                            this.charToQuad[L] = this.numQuads;
                            Object.prototype.hasOwnProperty.call(this.font.glyphs.h, l) && (b = this.font.glyphs.h[l],
                            this.updateQuad(this.charToQuad[L], h.set(c - b.frontOffset + y, f), q.set(b.x, b.y), d.set(this.font.width - 1.01, this.font.height - .01)),
                            this.glyphAtQuad.h[this.charToQuad[L]] = l,
                            c += b.backOffset)
                        }
                        this.calculatedWidth = Math.max(this.calculatedWidth, c)
                    }
                    this.resetUnusedQuads();
                    this.calculatedWidth = Math.max(this.calculatedWidth, c);
                    this.calculatedHeight = f + this.font.height
                },
                set_mask: function(a) {
                    null == a || -1 == a.height ? (this.mask = null,
                    this.setUniform("mask", [-1, -1, -1, -1])) : (this.mask = a,
                    this.setUniform("mask", [a.x, a.y, a.width, a.height]));
                    return this.mask
                },
                __class__: ed
            });
            var cc = z["lemongine.CameraType"] = {
                __ename__: "lemongine.CameraType",
                __constructs__: null,
                PERSPECTIVE: {
                    _hx_name: "PERSPECTIVE",
                    _hx_index: 0,
                    __enum__: "lemongine.CameraType",
                    toString: m
                },
                ORTHOGRAPHIC: {
                    _hx_name: "ORTHOGRAPHIC",
                    _hx_index: 1,
                    __enum__: "lemongine.CameraType",
                    toString: m
                }
            };
            cc.__constructs__ = [cc.PERSPECTIVE, cc.ORTHOGRAPHIC];
            var Kc = function(a) {
                this.projectionMatrix = new Ua;
                this.cameraType = cc.PERSPECTIVE;
                this.aspect = this.orthographicScale = 1;
                this.fovAngle = 90;
                this.clipFar = 1E5;
                this.clipNear = .1;
                this.transform = new Ua;
                this.rotation = new va(0,0,0);
                this.position = new va(0,0,0);
                switch (a._hx_index) {
                case 0:
                    this.setPerspectiveMatrix();
                    break;
                case 1:
                    this.setOrthographicMatrix()
                }
            };
            g["lemongine.Camera"] = Kc;
            Kc.__name__ = "lemongine.Camera";
            Kc.prototype = {
                resize: function(a, b) {
                    if (this.cameraType == cc.PERSPECTIVE)
                        this.aspect != a / b && (this.aspect = a / b,
                        this.setPerspectiveMatrix(this.fovAngle));
                    else if (this.aspect != a / b || this.orthographicScale != b)
                        this.aspect = a / b,
                        this.setOrthographicMatrix(b)
                },
                setPerspectiveMatrix: function(a) {
                    null == a && (a = 90);
                    this.fovAngle = a;
                    this.cameraType = cc.PERSPECTIVE;
                    this.projectionMatrix.setPerspectiveMatrix(a, this.aspect, this.clipNear, this.clipFar)
                },
                setOrthographicMatrix: function(a) {
                    null == a && (a = 1);
                    this.cameraType = cc.ORTHOGRAPHIC;
                    this.orthographicScale = a;
                    this.projectionMatrix.setOrthographicMatrix(a, this.aspect, this.clipNear, this.clipFar)
                },
                setPosition: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = 0);
                    null == a && (a = 0);
                    this.position.set(a, b, c)
                },
                setRotation: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = 0);
                    null == a && (a = 0);
                    this.rotation.set(a, b, c)
                },
                lookAt: function(a, b) {
                    null == b && (b = 0);
                    a = a.clone().subtract(this.position).normalize();
                    this.rotation.x = Math.asin(-a.y);
                    this.rotation.y = Math.atan2(a.x, -a.z);
                    this.rotation.z = b
                },
                updateTransform: function() {
                    this.transform.reset().translate(-this.position.x, -this.position.y, -this.position.z).rotate(-this.rotation.y, new va(0,1,0)).rotate(-this.rotation.x, new va(1,0,0)).rotate(-this.rotation.z, new va(0,0,1))
                },
                getTransformValues: function() {
                    this.updateTransform();
                    return this.transform.values.slice()
                },
                __class__: Kc
            };
            var Pa = function(a) {
                null == a && (a = 0);
                this.hexUpdated = !1;
                this.fromHex(a)
            };
            g["lemongine.Color"] = Pa;
            Pa.__name__ = "lemongine.Color";
            Pa.ARBGtoRGBA = function(a) {
                return (a << 8) + (a >>> 24 & 255)
            }
            ;
            Pa.prototype = {
                fromHex: function(a) {
                    this.set_a(a >>> 24);
                    this.set_r(a >>> 16 & 255);
                    this.set_g(a >>> 8 & 255);
                    this.set_b(a & 255);
                    this._hex = a;
                    this.hexUpdated = !0;
                    return this
                },
                toFloatArray: function() {
                    return [Q.toFloat(this.r) / Q.toFloat(255), Q.toFloat(this.g) / Q.toFloat(255), Q.toFloat(this.b) / Q.toFloat(255), Q.toFloat(this.a) / Q.toFloat(255)]
                },
                equals: function(a) {
                    return null == a ? !1 : a.r == this.r && a.g == this.g && a.b == this.b ? a.a == this.a : !1
                },
                set_r: function(a) {
                    this.r = a;
                    this.hexUpdated = !1;
                    return a
                },
                set_g: function(a) {
                    this.g = a;
                    this.hexUpdated = !1;
                    return a
                },
                set_b: function(a) {
                    this.b = a;
                    this.hexUpdated = !1;
                    return a
                },
                set_a: function(a) {
                    this.a = a;
                    this.hexUpdated = !1;
                    return a
                },
                set_hex: function(a) {
                    this.fromHex(a);
                    return this._hex
                },
                __class__: Pa
            };
            var Db = function() {};
            g["lemongine.File"] = Db;
            Db.__name__ = "lemongine.File";
            Db.openBytes = function(a, b, c, f) {
                null == f && (f = !0);
                null == Db.inputElement && (Db.inputElement = window.document.createElement("input"),
                Db.inputElement.setAttribute("type", "file"));
                a = a.join(",.");
                0 < a.length && (a = "." + a);
                Db.inputElement.setAttribute("accept", a);
                Db.inputElement.onchange = function() {
                    Db.loadFile(Db.inputElement.files[0], b, c)
                }
                ;
                Db.inputElement.click()
            }
            ;
            Db.loadFile = function(a, b, c) {
                var f = new FileReader;
                f.onload = function(c) {
                    var f = c.target.result;
                    c = c.target.result.indexOf(",") + 1;
                    b(Aa.ofData(Gb.decode(f.substr(c)).b.bufferValue), a.name);
                    try {
                        Db.inputElement.value = "",
                        "" != Db.inputElement.value && (Db.inputElement.type = "text",
                        Db.inputElement.type = "file")
                    } catch (I) {}
                }
                ;
                f.onerror = f.onabort = function(a) {
                    null != c && c()
                }
                ;
                f.readAsDataURL(a)
            }
            ;
            Db.saveBytes = function(a, b, c, f, h) {
                null == h && (h = !0);
                h = new Fd;
                null != f && h.onCancel.add(f);
                h.onSave.add(function(a) {
                    null != c && c()
                });
                h.save(a, null != b ? K.substr(b, b.lastIndexOf(".") + 1, null) : null, b)
            }
            ;
            var wb = function() {};
            g["lemongine.Geom"] = wb;
            wb.__name__ = "lemongine.Geom";
            wb.createQuad = function(a, b, c, f) {
                null == f && (f = !1);
                null == c && (c = !1);
                null == b && (b = 1);
                null == a && (a = 1);
                a /= 2;
                b /= 2;
                c = c ? new Sc([-a, -b, 0, -a, b, 0, a, -b, 0, a, -b, 0, -a, b, 0, a, b, 0, a, -b, 0, a, b, 0, -a, -b, 0, -a, -b, 0, a, b, 0, -a, b, 0],null,[0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1]) : new Sc([-a, -b, 0, -a, b, 0, a, -b, 0, a, -b, 0, -a, b, 0, a, b, 0],null,[0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]);
                c.generateNormals();
                return f ? c.toIndexed() : c
            }
            ;
            wb.quadMatrixHelper = function(a, b, c, f) {
                null == c && (c = !1);
                null == wb.quadCorners && (wb.quadCorners = [new va, new va, new va, new va]);
                var h = b.apply(wb.quadCorners[0].set(a.x, a.y), !0)
                  , q = b.apply(wb.quadCorners[1].set(a.x + a.width, a.y), !0)
                  , d = b.apply(wb.quadCorners[2].set(a.x, a.y + a.height), !0);
                a = b.apply(wb.quadCorners[3].set(a.x + a.width, a.y + a.height), !0);
                null == f && (f = []);
                c ? (f[0] = q.x,
                f[1] = q.y,
                f[2] = 0,
                f[3] = a.x,
                f[4] = a.y,
                f[5] = 0,
                f[6] = h.x,
                f[7] = h.y,
                f[8] = 0,
                f[9] = h.x,
                f[10] = h.y,
                f[11] = 0,
                f[12] = a.x,
                f[13] = a.y,
                f[14] = 0,
                f[15] = d.x,
                f[16] = d.y) : (f[0] = h.x,
                f[1] = h.y,
                f[2] = 0,
                f[3] = d.x,
                f[4] = d.y,
                f[5] = 0,
                f[6] = q.x,
                f[7] = q.y,
                f[8] = 0,
                f[9] = q.x,
                f[10] = q.y,
                f[11] = 0,
                f[12] = d.x,
                f[13] = d.y,
                f[14] = 0,
                f[15] = a.x,
                f[16] = a.y);
                f[17] = 0;
                return f
            }
            ;
            var Ya = function() {};
            g["lemongine.Helpers"] = Ya;
            Ya.__name__ = "lemongine.Helpers";
            Ya.getQualifiedClassName = function(a) {
                return a instanceof Array ? "Array" : "string" == typeof a ? "String" : "number" == typeof a && (a | 0) === a ? "int" : "number" == typeof a ? "Number" : "boolean" == typeof a ? "Boolean" : "Object"
            }
            ;
            Ya.getTimer = function() {
                return Math.floor((new Date).getTime() / 1E3 * 1E3)
            }
            ;
            Ya.mappifyObjectsInMap = function(a) {
                for (var b = new p, c = 0, f = Y.fields(a); c < f.length; ) {
                    var h = f[c];
                    ++c;
                    if (null == Y.field(a, h))
                        b.h[h] = null;
                    else if ("Object" == Ya.getQualifiedClassName(Y.field(a, h))) {
                        var q = Ya.mappifyObjectsInMap(Y.field(a, h));
                        b.h[h] = q
                    } else
                        "Array" == Ya.getQualifiedClassName(Y.field(a, h)) ? (q = Ya.mappifyObjectsInArray(Y.field(a, h)),
                        b.h[h] = q) : b.h[h] = Y.field(a, h)
                }
                return b
            }
            ;
            Ya.mappifyObjectsInArray = function(a) {
                for (var b = [], c = 0, f = a.length; c < f; ) {
                    var h = c++;
                    null == a[h] ? b[h] = null : "Object" == Ya.getQualifiedClassName(a[h]) ? b[h] = Ya.mappifyObjectsInMap(a[h]) : "Array" == Ya.getQualifiedClassName(a[h]) ? b[h] = Ya.mappifyObjectsInArray(a[h]) : b[h] = a[h]
                }
                return b
            }
            ;
            Ya.objectifyObjectsInMap = function(a) {
                for (var b = {}, c = Object.keys(a.h), f = c.length, h = 0; h < f; ) {
                    var q = c[h++];
                    null == a.h[q] ? b[q] = null : "Object" == Ya.getQualifiedClassName(a.h[q]) ? b[q] = Ya.objectifyObjectsInMap(a.h[q]) : "Array" == Ya.getQualifiedClassName(a.h[q]) ? b[q] = Ya.objectifyObjectsInArray(a.h[q]) : b[q] = a.h[q]
                }
                return b
            }
            ;
            Ya.objectifyObjectsInArray = function(a) {
                for (var b = [], c = 0, f = a.length; c < f; ) {
                    var h = c++;
                    null == a[h] ? b[h] = null : "Object" == Ya.getQualifiedClassName(a[h]) ? b[h] = Ya.objectifyObjectsInMap(a[h]) : "Array" == Ya.getQualifiedClassName(a[h]) ? b[h] = Ya.objectifyObjectsInArray(a[h]) : b[h] = a[h]
                }
                return b
            }
            ;
            var hb = function(a, b, c, f) {
                null == f && (f = !1);
                null == c && (c = 0);
                null == b && (b = 0);
                null == a && (a = 0);
                this.filterEntityNeedsResize = !0;
                this.isCubemap = this.smoothing = this.isShaderPass = !1;
                this.width = this.height = 0;
                this.dirtyBuffer = this.dirtyRender = !0;
                this.imageLoaded = !1;
                this.premultiplied = !0;
                0 != a && (this.smoothing = f,
                this.setDimensions(Math.abs(a) | 0, Math.abs(b) | 0),
                a = this.width * this.height * 4,
                a = null != a ? new Uint8Array(a) : null,
                this.data = new Ja(new dc(a,this.width,this.height)),
                0 != c && this.fillRect(null, c, !0),
                this.imageLoaded = !0)
            };
            g["lemongine.Image"] = hb;
            hb.__name__ = "lemongine.Image";
            hb.getWhitePixel = function() {
                null == hb.whitePixel && (hb.whitePixel = new hb(1,1,-1),
                hb.whitePixel.set_premultiplied(!0));
                return hb.whitePixel
            }
            ;
            hb.prototype = {
                fromScene: function(a) {
                    this.fromGLTexture(a.get_width(), a.get_height(), a.get_glTexture());
                    return this
                },
                fromData: function(a, b) {
                    this.data = a;
                    this.dirtyRender = !0;
                    this.setDimensions(a.width, a.height);
                    null != b ? this.textureLocation = b : this.dirtyBuffer = !0;
                    this.imageLoaded = !0;
                    return this
                },
                fromGLTexture: function(a, b, c) {
                    this.setDimensions(a, b);
                    this.textureLocation = c;
                    this.dirtyBuffer = this.imageLoaded = !1;
                    return this
                },
                updateImageFromTexture: function() {
                    var a = A.gl.createFramebuffer();
                    A.gl.bindFramebuffer(A.gl.FRAMEBUFFER, a);
                    A.gl.framebufferTexture2D(A.gl.FRAMEBUFFER, A.gl.COLOR_ATTACHMENT0, A.gl.TEXTURE_2D, this.textureLocation, 0);
                    var b = this.width * this.height * 4;
                    b = null != b ? new Uint8Array(b) : null;
                    A.gl.readPixels(0, 0, this.width, this.height, A.gl.RGBA, A.gl.UNSIGNED_BYTE, b);
                    A.gl.deleteFramebuffer(a);
                    a = new Ja(new dc(b,this.width,this.height,32,0));
                    a.buffer.premultiplied = this.premultiplied;
                    this.fromData(a);
                    this.imageLoaded = !0;
                    return this
                },
                clone: function(a, b) {
                    null == a && (a = !1);
                    null == b && (b = new hb);
                    if (null == this.textureLocation)
                        if (a)
                            this.updateTextureBuffer();
                        else
                            return b.fromData(this.data.clone()),
                            b;
                    var c = new yb(1,1,cc.ORTHOGRAPHIC,Pa.clear);
                    c.setup2D(this.width, this.height, Pa.clear);
                    b.fromGLTexture(this.width, this.height, c.get_glTexture());
                    a ? c.draw2D(this) : c.draw2DFlipped(this);
                    c.render();
                    return b
                },
                setDimensions: function(a, b) {
                    null == b && (b = 0);
                    null == a && (a = 0);
                    if (this.width != a || this.height != b)
                        this.width = a,
                        this.height = b,
                        this.rectangle = new ca(0,0,Q.toFloat(a),Q.toFloat(b)),
                        this.limeRectangle = new Bc(0,0,Q.toFloat(a),Q.toFloat(b)),
                        this.dirtyBuffer = this.filterEntityNeedsResize = !0
                },
                updateImageIfNotLoaded: function() {
                    this.imageLoaded || null == this.textureLocation || this.updateImageFromTexture()
                },
                fillRect: function(a, b, c) {
                    null == c && (c = !0);
                    null == b && (b = 0);
                    this.updateImageIfNotLoaded();
                    c || (b = (b & 16777215) + -16777216);
                    a = null == a ? this.limeRectangle : a.toLimeRectangle();
                    this.data.fillRect(a, Pa.ARBGtoRGBA(b));
                    this.dirtyBuffer = this.dirtyRender = !0;
                    return this
                },
                setPixel: function(a, b, c, f) {
                    null == f && (f = !0);
                    this.updateImageIfNotLoaded();
                    f ? this.data.setPixel32(a, b, Pa.ARBGtoRGBA(c)) : this.data.setPixel(a, b, Pa.ARBGtoRGBA(c));
                    this.dirtyBuffer = this.dirtyRender = !0;
                    return this
                },
                getPixel: function(a, b) {
                    this.updateImageIfNotLoaded();
                    return this.data.getPixel(Math.floor(a), Math.floor(b), 1)
                },
                getPixels: function(a) {
                    this.updateImageIfNotLoaded();
                    null == a && (a = this.rectangle);
                    return this.data.getPixels(a.toLimeRectangle(), 1)
                },
                setPixels: function(a, b) {
                    null == b && (b = this.rectangle);
                    this.data.setPixels(b.toLimeRectangle(), qe.fromLimeBytes(a), 1);
                    this.dirtyBuffer = this.dirtyRender = !0;
                    return this
                },
                toEntity: function(a, b, c) {
                    null == c && (c = !1);
                    null == b && (b = !1);
                    null == a && (a = new ca(0,0,Q.toFloat(this.width),Q.toFloat(this.height)));
                    var f = Sb.getShader();
                    f = new Pb([],wb.createQuad(a.width, a.height),f);
                    f.setTextureBuffer("texture", this);
                    f.setAttrib("texClip", T.repeatArray([a.x, c ? a.height - a.y : a.y, a.width, (c ? -1 : 1) * a.height], 6));
                    f.setUniform("texSize", [this.width, this.height]);
                    b || f.transform.translate(a.width / 2, a.height / 2);
                    return f
                },
                getTextureBuffer: function() {
                    this.updateTextureBuffer();
                    return this.textureLocation
                },
                updateTextureBuffer: function() {
                    this.dirtyBuffer && (this.dirtyBuffer = !1,
                    this.data.set_premultiplied(this.premultiplied),
                    Da.convertToData(this.data),
                    null != this.textureLocation ? (A.gl.bindTexture(A.gl.TEXTURE_2D, this.textureLocation),
                    Qb.texImage2D(A.gl, A.gl.TEXTURE_2D, 0, A.gl.RGBA, this.data.buffer.width, this.data.buffer.height, 0, A.gl.RGBA, A.gl.UNSIGNED_BYTE, this.data.get_data())) : (this.textureLocation = A.gl.createTexture(),
                    A.gl.bindTexture(A.gl.TEXTURE_2D, this.textureLocation),
                    A.gl.texParameteri(A.gl.TEXTURE_2D, A.gl.TEXTURE_WRAP_S, A.gl.CLAMP_TO_EDGE),
                    A.gl.texParameteri(A.gl.TEXTURE_2D, A.gl.TEXTURE_WRAP_T, A.gl.CLAMP_TO_EDGE),
                    A.gl.texParameteri(A.gl.TEXTURE_2D, A.gl.TEXTURE_MAG_FILTER, this.smoothing ? A.gl.LINEAR : A.gl.NEAREST),
                    A.gl.texParameteri(A.gl.TEXTURE_2D, A.gl.TEXTURE_MIN_FILTER, this.smoothing ? A.gl.LINEAR : A.gl.NEAREST),
                    this.isShaderPass ? Qb.texImage2D(A.gl, A.gl.TEXTURE_2D, 0, ja.__cast(A.gl, WebGL2RenderingContext).RGBA32F, this.data.buffer.width, this.data.buffer.height, 0, A.gl.RGBA, A.gl.FLOAT, null) : Qb.texImage2D(A.gl, A.gl.TEXTURE_2D, 0, A.gl.RGBA, this.data.buffer.width, this.data.buffer.height, 0, A.gl.RGBA, A.gl.UNSIGNED_BYTE, this.data.get_data())))
                },
                set_premultiplied: function(a) {
                    this.data.set_premultiplied(a);
                    return this.premultiplied = a
                },
                destroy: function() {
                    null != this.textureLocation && A.gl.deleteTexture(this.textureLocation);
                    null != this.filterSceneImage && this.filterSceneImage.destroy();
                    null != this.filterSceneImageSecondPass && this.filterSceneImageSecondPass.destroy();
                    null != this.filterSceneImageFloat && this.filterSceneImageFloat.destroy()
                },
                __class__: hb
            };
            var va = function(a, b, c) {
                null == c && (c = 0);
                null == b && (b = 0);
                null == a && (a = 0);
                this.x = this.y = this.z = 0;
                this.set(a, b, c)
            };
            g["lemongine.Vector3"] = va;
            va.__name__ = "lemongine.Vector3";
            va.cross = function(a, b, c) {
                return null != c ? (c.set(a.y * b.z - a.z * b.y, a.z * b.x - a.x * b.z, a.x * b.y - a.y * b.x),
                c) : new va(a.y * b.z - a.z * b.y,a.z * b.x - a.x * b.z,a.x * b.y - a.y * b.x)
            }
            ;
            va.prototype = {
                set: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = 0);
                    null == a && (a = 0);
                    this.x = a;
                    this.y = b;
                    this.z = c;
                    return this
                },
                length: function() {
                    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z)
                },
                normalize: function() {
                    var a = this.length();
                    this.x /= a;
                    this.y /= a;
                    this.z /= a;
                    return this
                },
                subtract: function(a) {
                    this.x -= a.x;
                    this.y -= a.y;
                    this.z -= a.z;
                    return this
                },
                clone: function() {
                    return new va(this.x,this.y,this.z)
                },
                __class__: va
            };
            var Tc = function(a, b, c) {
                null == c && (c = -16777216);
                null == b && (b = 0);
                null == a && (a = 0);
                this.position = new va;
                this.backgroundColor = new Pa(-16777216);
                this.scenes = [];
                hb.call(this);
                this.backgroundColor.set_hex(c);
                this.isCubemap = this.imageLoaded = !0;
                this.textureLocation = A.gl.createTexture();
                A.gl.bindTexture(A.gl.TEXTURE_CUBE_MAP, this.textureLocation);
                Qb.texImage2D(A.gl, A.gl.TEXTURE_CUBE_MAP_POSITIVE_X, 0, A.gl.RGBA, Math.floor(a), Math.floor(b), 0, A.gl.RGBA, A.gl.UNSIGNED_BYTE, null);
                Qb.texImage2D(A.gl, A.gl.TEXTURE_CUBE_MAP_POSITIVE_X + 1, 0, A.gl.RGBA, Math.floor(a), Math.floor(b), 0, A.gl.RGBA, A.gl.UNSIGNED_BYTE, null);
                Qb.texImage2D(A.gl, A.gl.TEXTURE_CUBE_MAP_POSITIVE_X + 2, 0, A.gl.RGBA, Math.floor(a), Math.floor(b), 0, A.gl.RGBA, A.gl.UNSIGNED_BYTE, null);
                Qb.texImage2D(A.gl, A.gl.TEXTURE_CUBE_MAP_POSITIVE_X + 3, 0, A.gl.RGBA, Math.floor(a), Math.floor(b), 0, A.gl.RGBA, A.gl.UNSIGNED_BYTE, null);
                Qb.texImage2D(A.gl, A.gl.TEXTURE_CUBE_MAP_POSITIVE_X + 4, 0, A.gl.RGBA, Math.floor(a), Math.floor(b), 0, A.gl.RGBA, A.gl.UNSIGNED_BYTE, null);
                Qb.texImage2D(A.gl, A.gl.TEXTURE_CUBE_MAP_POSITIVE_X + 5, 0, A.gl.RGBA, Math.floor(a), Math.floor(b), 0, A.gl.RGBA, A.gl.UNSIGNED_BYTE, null);
                this.scenes[0] = new yb(Math.floor(a),Math.floor(b),null,new Pa(c));
                this.scenes[0].setupCubemap(this, A.gl.TEXTURE_CUBE_MAP_POSITIVE_X);
                this.scenes[1] = new yb(Math.floor(a),Math.floor(b),null,new Pa(c));
                this.scenes[1].setupCubemap(this, A.gl.TEXTURE_CUBE_MAP_POSITIVE_X + 1);
                this.scenes[2] = new yb(Math.floor(a),Math.floor(b),null,new Pa(c));
                this.scenes[2].setupCubemap(this, A.gl.TEXTURE_CUBE_MAP_POSITIVE_X + 2);
                this.scenes[3] = new yb(Math.floor(a),Math.floor(b),null,new Pa(c));
                this.scenes[3].setupCubemap(this, A.gl.TEXTURE_CUBE_MAP_POSITIVE_X + 3);
                this.scenes[4] = new yb(Math.floor(a),Math.floor(b),null,new Pa(c));
                this.scenes[4].setupCubemap(this, A.gl.TEXTURE_CUBE_MAP_POSITIVE_X + 4);
                this.scenes[5] = new yb(Math.floor(a),Math.floor(b),null,new Pa(c));
                this.scenes[5].setupCubemap(this, A.gl.TEXTURE_CUBE_MAP_POSITIVE_X + 5);
                A.gl.texParameteri(A.gl.TEXTURE_CUBE_MAP, A.gl.TEXTURE_MAG_FILTER, A.gl.LINEAR);
                A.gl.texParameteri(A.gl.TEXTURE_CUBE_MAP, A.gl.TEXTURE_MIN_FILTER, A.gl.LINEAR);
                this.initCameras()
            };
            g["lemongine.ImageCubemap"] = Tc;
            Tc.__name__ = "lemongine.ImageCubemap";
            Tc.__super__ = hb;
            Tc.prototype = n(hb.prototype, {
                initCameras: function() {
                    for (var a = 0; 6 > a; ) {
                        var b = a++
                          , c = this.scenes[b];
                        c.camera.setPerspectiveMatrix(90);
                        c.backgroundColor = this.backgroundColor;
                        c.camera.projectionMatrix.values[0] *= -1;
                        c.camera.setPosition(0, 0, 0);
                        c.camera.lookAt(Tc.lookatDirections[b]);
                        this.setPosition(this.position.x, this.position.y, this.position.z);
                        c.set_isBackFace(!1)
                    }
                },
                setPosition: function(a, b, c) {
                    this.scenes[0].camera.setPosition(a, b, c);
                    this.scenes[1].camera.setPosition(a, b, c);
                    this.scenes[2].camera.setPosition(a, b, c);
                    this.scenes[3].camera.setPosition(a, b, c);
                    this.scenes[4].camera.setPosition(a, b, c);
                    this.scenes[5].camera.setPosition(a, b, c)
                },
                updateTextureBuffer: function() {
                    this.dirtyBuffer = !1
                },
                __class__: Tc
            });
            var Ea = function(a, b, c) {
                null == c && (c = 1);
                this.mouseOnlyDraggingEnd = !1;
                this.mousePoint = new W;
                this.mouseDownPoint = new W;
                this.mouse = new W;
                this.mouseDown = !1;
                this.clickTime = -100;
                this.focused = this.isDoubleClick = this.isTripleClick = !1;
                this.cursorBlinkOffset = 0;
                this.cursorsDirty = !1;
                this.cursors = [];
                this.scrollPosition = new W(0,0);
                this.customTextInputParser = null;
                this.leftScrollPadding = 0;
                this.multiline = !1;
                this.fontScale = 1;
                this.size = new W(100,10);
                this.transform = new Ua;
                this.allowedRegex = new pa("[\n\r]","g");
                this.allowedCharacters = "";
                this.readonly = !1;
                this.maxLength = -1;
                this.textFieldEntity = a;
                this.size.set(b.x, b.y);
                this.fontScale = c;
                this.cursorEntity = new ia(hb.getWhitePixel(),null,Tb.getShader());
                this.cursorEntity.isTransparent = !0;
                this.cursorEntity.customBlendFunc = [A.gl.ONE_MINUS_DST_COLOR, A.gl.ZERO, A.gl.ONE, A.gl.ZERO];
                this.cursorEntity.layer = a.layer + 1;
                this.selectionEntity = new ia(hb.getWhitePixel(),null,Tb.getShader());
                this.selectionEntity.isTransparent = !0;
                this.selectionEntity.customBlendFunc = [A.gl.ONE_MINUS_DST_COLOR, A.gl.ZERO, A.gl.ONE, A.gl.ZERO];
                this.updateLayers();
                this.clearCursors()
            };
            g["lemongine.InputField"] = Ea;
            Ea.__name__ = "lemongine.InputField";
            Ea.regainFocus = function() {
                bc.delay(function() {
                    d.Instance.__window.__backend.setTextInputEnabled(null != Ea.focus)
                }, 0)
            }
            ;
            Ea.registerListeners = function() {
                d.Instance.addEventListener(Ha.ACTIVATE, Ea.regainFocus);
                d.Instance.addEventListener(Ha.TEXT_INPUT, Ea.textInputHook);
                d.Instance.addEventListener(Ha.KEY_DOWN, Ea.keyDownHook);
                d.Instance.addEventListener(Ha.KEY_DOWN_REPEAT, Ea.keyDownRepeatHook);
                d.Instance.addEventListener(Ha.MOUSE_DOWN, Ea.mouseDownHook);
                d.Instance.addEventListener(Ha.MOUSE_MOVE, Ea.mouseMoveHook);
                d.Instance.addEventListener(Ha.MOUSE_UP, Ea.mouseUpHook)
            }
            ;
            Ea.textInputHook = function(a) {
                a = a.split("\r\n").join("\n");
                null != Ea.focus && Ea.focus.textHandler(a)
            }
            ;
            Ea.keyDownHook = function(a, b) {
                null != Ea.focus && Ea.focus.keyDownHandler(a, b)
            }
            ;
            Ea.keyDownRepeatHook = function(a, b) {
                null != Ea.focus && Ea.focus.keyDownRepeatHandler(a, b)
            }
            ;
            Ea.mouseDownHook = function(a, b, c) {
                null != Ea.focus && Ea.focus.mouseDownHandler(a, b, c)
            }
            ;
            Ea.mouseMoveHook = function(a, b) {
                null != Ea.focus && Ea.focus.mouseMoveHandler(a, b)
            }
            ;
            Ea.mouseUpHook = function(a, b, c) {
                null != Ea.focus && Ea.focus.mouseUpHandler(a, b, c)
            }
            ;
            Ea.prototype = {
                updateLayers: function() {
                    this.cursorEntity.layer = this.textFieldEntity.layer + 1;
                    this.selectionEntity.layer = this.textFieldEntity.layer + 1
                },
                offsetX: function() {
                    return this.textFieldEntity.textAlignment == zb.LEFT ? 0 : this.textFieldEntity.textAlignment == zb.CENTER ? this.size.x / 2 | 0 : this.size.x | 0
                },
                update: function(a) {
                    this.textFieldEntity.transform.reset().translate(-this.scrollPosition.x, -this.scrollPosition.y).multiply(this.transform.values);
                    this.cursorEntity.transform.reset().translate(-this.scrollPosition.x, -this.scrollPosition.y).multiply(this.transform.values);
                    this.selectionEntity.transform.reset().translate(-this.scrollPosition.x, -this.scrollPosition.y).multiply(this.transform.values);
                    this.textFieldEntity.transform.translate(this.offsetX());
                    this.cursorEntity.transform.translate(this.offsetX());
                    this.selectionEntity.transform.translate(this.offsetX());
                    this.textFieldEntity.set_mask(new ca(this.scrollPosition.x - this.offsetX(),this.scrollPosition.y,this.size.x,this.size.y));
                    this.cursorEntity.setUniform("mask", this.textFieldEntity.mask.toArray());
                    this.selectionEntity.setUniform("mask", this.textFieldEntity.mask.toArray());
                    if (null != a && (a.draw(this.textFieldEntity),
                    this.cursorsDirty && this.updateCursors(),
                    this.focused)) {
                        if (this.readonly)
                            var b = !1;
                        else {
                            var c = d.Instance.tick - this.cursorBlinkOffset;
                            b = d.Instance.get_fps();
                            c = Q.toFloat(c) % Q.toFloat(b) | 0;
                            b = d.Instance.get_fps() / 2;
                            b = Q.toFloat(c) < b
                        }
                        b && a.draw(this.cursorEntity);
                        a.draw(this.selectionEntity)
                    }
                    this.focused && (this.containsPoint(this.mouse) ? d.Instance.cursor = Cb.TEXT : this.mouseDown && (a = this.screenPointToLocalPoint(this.mouse),
                    a.x < this.scrollPosition.x ? (--this.scrollPosition.x,
                    this.handleMouseMove(),
                    this.scrollToCursor()) : a.x > this.scrollPosition.x + this.size.x && (this.scrollPosition.x += 1,
                    this.handleMouseMove(),
                    this.scrollToCursor())))
                },
                deleteBackwards: function(a, b) {
                    null == b && (b = !1);
                    null == a && (a = !1);
                    for (var c = -1, f = null, h = [], q = this.get_text(), d = 0, l = this.cursors.length; d < l; ) {
                        var g = d++
                          , p = this.cursors[g];
                        if (p.start == p.end && 0 < p.start && !b) {
                            if (a) {
                                var y = this.textFieldEntity.previousWordBoundary(p.end);
                                q = K.substr(q, 0, y) + K.substr(q, p.start, null);
                                p.start = y
                            } else
                                q = K.substr(q, 0, this.first(p) - 1) + K.substr(q, this.first(p), null),
                                p.start--;
                            p.end = p.start
                        } else
                            q = K.substr(q, 0, this.first(p)) + K.substr(q, this.last(p), null),
                            p.start = p.end = this.first(p);
                        -1 == c && (c = this.first(p));
                        null != f && f.start == p.start && h.unshift(g);
                        f = p;
                        p.anchor = null
                    }
                    for (d = 0; d < h.length; )
                        this.cursors.splice(h[d++], 1);
                    this.cursorsDirty = !0;
                    this.textFieldEntity.insertText(K.substr(q, c, null), c, -1);
                    this.scrollToCursor()
                },
                deleteForwards: function(a) {
                    null == a && (a = !1);
                    for (var b = -1, c = null, f = [], h = this.get_text(), q = 0, d = this.cursors.length; q < d; ) {
                        var l = q++
                          , g = this.cursors[l];
                        if (g.start == g.end && g.end < this.get_text().length)
                            if (a) {
                                var p = this.textFieldEntity.nextWordBoundary(g.start);
                                h = K.substr(h, 0, g.start) + K.substr(h, p, null)
                            } else
                                h = K.substr(h, 0, g.start) + K.substr(h, g.start + 1, null);
                        else
                            h = K.substr(h, 0, this.first(g)) + K.substr(h, this.last(g), null),
                            g.start = g.end = this.first(g);
                        -1 == b && (b = this.first(g));
                        null != c && c.start == g.start && f.unshift(l);
                        c = g;
                        g.anchor = null
                    }
                    for (q = 0; q < f.length; )
                        this.cursors.splice(f[q++], 1);
                    this.cursorsDirty = !0;
                    this.textFieldEntity.insertText(K.substr(h, b, null), b, -1);
                    this.scrollToCursor()
                },
                moveSelections: function(a, b) {
                    null == b && (b = !1);
                    for (var c = [], f = -1, h = 0, q = this.cursors.length; h < q; ) {
                        var d = h++
                          , l = this.cursors[d];
                        l.end = b ? 0 < a ? T.clamp(0, this.get_text().length, this.textFieldEntity.nextWordBoundary(l.end)) | 0 : T.clamp(0, this.get_text().length, this.textFieldEntity.previousWordBoundary(l.end)) | 0 : T.clamp(0, this.get_text().length, l.end + a) | 0;
                        l.start == l.end && l.end == f && c.unshift(d);
                        f = l.end;
                        l.anchor = null
                    }
                    for (h = 0; h < c.length; )
                        this.cursors.splice(c[h++], 1);
                    this.cursorsDirty = !0;
                    this.scrollToCursor()
                },
                moveCursors: function(a, b) {
                    null == b && (b = !1);
                    for (var c = [], f = -1, h = 0, q = this.cursors.length; h < q; ) {
                        var d = h++
                          , l = this.cursors[d];
                        l.end = b ? 0 < a ? l.start = T.clamp(0, this.get_text().length, this.textFieldEntity.nextWordBoundary(l.end)) | 0 : l.start = T.clamp(0, this.get_text().length, this.textFieldEntity.previousWordBoundary(l.end)) | 0 : l.end != l.start ? 0 < a ? l.start = T.clamp(0, this.get_text().length, this.last(l)) | 0 : l.start = T.clamp(0, this.get_text().length, this.first(l)) | 0 : l.start = T.clamp(0, this.get_text().length, this.first(l) + a) | 0;
                        l.end == f && c.unshift(d);
                        f = l.end;
                        l.anchor = null
                    }
                    for (h = 0; h < c.length; )
                        this.cursors.splice(c[h++], 1);
                    this.cursorsDirty = !0;
                    this.scrollToCursor()
                },
                insertText: function(a) {
                    var b = 0
                      , c = -1
                      , f = null
                      , h = []
                      , q = this.get_text();
                    a = this.cleanText(a);
                    if (-1 < this.maxLength)
                        if (1 < this.cursors.length) {
                            for (var d = this.get_text().length, l = 0, g = this.cursors; l < g.length; ) {
                                var p = g[l];
                                ++l;
                                d += a.length - (this.last(p) - this.first(p))
                            }
                            if (d > this.maxLength)
                                return
                        } else
                            a = K.substr(a, 0, this.maxLength - this.get_text().length + (this.last(this.cursors[0]) - this.first(this.cursors[0])));
                    l = 0;
                    for (g = this.cursors.length; l < g; )
                        d = l++,
                        p = this.cursors[d],
                        -1 == c && (c = this.first(p)),
                        p.start += b,
                        p.end += b,
                        b = a.length - Math.abs(p.end - p.start) | 0,
                        q = K.substr(q, 0, this.first(p)) + a + K.substr(q, this.last(p), null),
                        p.start = p.end = this.first(p),
                        this.scrollToCursor(),
                        p.end += a.length,
                        p.start = p.end,
                        p.anchor = null,
                        "" == a && null != f && f.start == p.start && h.unshift(d),
                        f = p;
                    for (l = 0; l < h.length; )
                        this.cursors.splice(h[l++], 1);
                    this.cursorsDirty = !0;
                    0 > c && (c = 0);
                    this.textFieldEntity.insertText(K.substr(q, c, null), c, -1);
                    this.scrollToCursor()
                },
                first: function(a) {
                    return Math.min(a.start, a.end) | 0
                },
                last: function(a) {
                    return Math.max(a.start, a.end) | 0
                },
                textHandler: function(a) {
                    null == a || this.readonly || (null != this.customTextInputParser && (a = this.customTextInputParser(a)),
                    a = this.cleanText(a),
                    "" != a && this.insertText(a))
                },
                keyDownRepeatHandler: function(a, b) {
                    if (Fb.get_ctrlKey(b) || Fb.get_metaKey(b))
                        switch (a) {
                        case 8:
                            this.readonly || this.deleteBackwards(!0);
                            break;
                        case 127:
                            this.readonly || this.deleteForwards(!0);
                            break;
                        case 1073741903:
                            Fb.get_shiftKey(b) ? Fb.get_metaKey(b) ? (this.cursors = [{
                                start: this.cursors[0].start,
                                end: this.get_text().length,
                                anchor: null
                            }],
                            this.cursorsDirty = !0) : this.moveSelections(1, !0) : Fb.get_metaKey(b) ? (this.cursors = [{
                                start: this.get_text().length,
                                end: this.get_text().length,
                                anchor: null
                            }],
                            this.cursorsDirty = !0) : this.moveCursors(1, !0);
                            break;
                        case 1073741904:
                            Fb.get_shiftKey(b) ? Fb.get_metaKey(b) ? (this.cursors = [{
                                start: this.cursors[0].start,
                                end: 0,
                                anchor: null
                            }],
                            this.cursorsDirty = !0) : this.moveSelections(-1, !0) : Fb.get_metaKey(b) ? (this.cursors = [{
                                start: 0,
                                end: 0,
                                anchor: null
                            }],
                            this.cursorsDirty = !0) : this.moveCursors(-1, !0)
                        }
                    else
                        switch (a) {
                        case 8:
                            this.readonly || this.deleteBackwards();
                            break;
                        case 13:
                            this.multiline && this.insertText("\n");
                            break;
                        case 127:
                            this.readonly || this.deleteForwards();
                            break;
                        case 1073741903:
                            Fb.get_shiftKey(b) ? this.moveSelections(1) : this.moveCursors(1);
                            break;
                        case 1073741904:
                            Fb.get_shiftKey(b) ? this.moveSelections(-1) : this.moveCursors(-1);
                            break;
                        case 1073741905:
                            a = this.textFieldEntity.characterRectangle(this.cursors[0].end);
                            var c = this.cursors[0].anchor
                              , f = this.textFieldEntity.indexAtPoint(new W(null != c ? c : a.x,a.y + this.textFieldEntity.font.height));
                            this.cursors[0].end == f && (f = this.get_text().length);
                            Fb.get_shiftKey(b) ? this.setSelection(this.cursors[0].start, f) : this.setSelection(f, f);
                            this.cursors[0].anchor = null != c ? c : a.x;
                            break;
                        case 1073741906:
                            a = this.textFieldEntity.characterRectangle(this.cursors[0].end),
                            c = this.cursors[0].anchor,
                            f = this.textFieldEntity.indexAtPoint(new W(null != c ? c : a.x,a.y - this.textFieldEntity.font.height)),
                            this.cursors[0].end == f && (f = 0),
                            Fb.get_shiftKey(b) ? this.setSelection(this.cursors[0].start, f) : this.setSelection(f, f),
                            this.cursors[0].anchor = null != c ? c : a.x
                        }
                },
                keyDownHandler: function(a, b) {
                    if (Fb.get_ctrlKey(b) || Fb.get_metaKey(b))
                        switch (a) {
                        case 97:
                            Fb.get_shiftKey(b) ? this.setSelection(this.get_text().length, this.get_text().length) : this.selectAll();
                            break;
                        case 118:
                            Ea.regainFocus();
                            break;
                        case 99:
                        case 120:
                            b = "";
                            for (var c = 0, f = this.cursors; c < f.length; ) {
                                var h = f[c];
                                ++c;
                                h.start != h.end && (b += this.get_text().substring(this.first(h), this.last(h)))
                            }
                            "" != b && xb.set_text(b);
                            120 == a && (this.readonly || this.deleteBackwards(!1, !0));
                            Ea.regainFocus();
                            break;
                        case 1073741898:
                            Fb.get_shiftKey(b) ? (this.cursors = [{
                                start: this.cursors[0].start,
                                end: 0,
                                anchor: null
                            }],
                            this.cursorsDirty = !0) : this.setSelection(0, 0);
                            break;
                        case 1073741901:
                            Fb.get_shiftKey(b) ? (this.cursors = [{
                                start: this.cursors[0].start,
                                end: this.get_text().length,
                                anchor: null
                            }],
                            this.cursorsDirty = !0) : this.setSelection(this.get_text().length, this.get_text().length)
                        }
                    else
                        switch (a) {
                        case 1073741898:
                            a = this.textFieldEntity.getCharAtLine(this.textFieldEntity.getLineOfChar(this.cursors[0].end));
                            this.cursors[0].end == a && (a = this.textFieldEntity.getPreviousNewline(this.cursors[0].end - 1),
                            0 != a && ++a);
                            Fb.get_shiftKey(b) ? (this.cursors = [{
                                start: this.cursors[0].start,
                                end: a,
                                anchor: null
                            }],
                            this.cursorsDirty = !0) : this.setSelection(a, a);
                            break;
                        case 1073741901:
                            a = this.textFieldEntity.getCharAtLine(this.textFieldEntity.getLineOfChar(this.cursors[0].end) + 1),
                            this.cursors[0].end <= this.get_text().length - 1 && a == this.get_text().length && (a = this.get_text().length - 1),
                            this.cursors[0].end == a && (a = this.textFieldEntity.getNextNewline(this.cursors[0].end)),
                            Fb.get_shiftKey(b) ? (this.cursors = [{
                                start: this.cursors[0].start,
                                end: a,
                                anchor: null
                            }],
                            this.cursorsDirty = !0) : this.setSelection(a, a)
                        }
                },
                mouseDownHandler: function(a, b, c) {
                    0 == c && this.containsPoint(new W(a,b)) && (d.Instance.__window.__backend.setTextInputEnabled(!0),
                    this.mouseDown = !0,
                    this.mouse.set(a, b),
                    this.mousePoint = this.screenPointToLocalPoint(this.mouse),
                    0 == d.Instance.keyDown(1073742049) && (this.mouseDownPoint = this.mousePoint),
                    this.cursors.splice(1, this.cursors.length - 1),
                    this.cursors[0].end = this.indexAtPoint(this.mousePoint),
                    0 == d.Instance.keyDown(1073742049) && (this.cursors[0].start = this.cursors[0].end),
                    this.cursorsDirty = !0,
                    this.mouseOnlyDraggingEnd = Q.gt(d.Instance.keyDown(1073742049), 0),
                    .3 > (new Date).getTime() / 1E3 - this.clickTime ? this.isDoubleClick ? (this.isDoubleClick = !1,
                    this.isTripleClick = !0,
                    this.selectAll()) : (this.isDoubleClick = !0,
                    this.isTripleClick = !1,
                    this.mouseOnlyDraggingEnd || (this.cursors[0].start = this.textFieldEntity.previousWordBoundary(this.cursors[0].start + 1)),
                    this.cursors[0].end = this.textFieldEntity.nextWordBoundary(this.cursors[0].end - 1)) : this.isTripleClick = this.isDoubleClick = !1,
                    this.clickTime = (new Date).getTime() / 1E3)
                },
                mouseMoveHandler: function(a, b) {
                    this.mouse.set(a, b);
                    this.mouseDown && this.handleMouseMove()
                },
                handleMouseMove: function() {
                    this.mousePoint = this.screenPointToLocalPoint(new W(this.mouse.x,this.mouse.y));
                    if (this.isDoubleClick) {
                        this.cursorsDirty = !0;
                        var a = this.textFieldEntity
                          , b = this.indexAtPoint(this.mousePoint) - 1;
                        this.cursors[0].end = a.nextWordBoundary(b);
                        this.mouseOnlyDraggingEnd || (a = this.textFieldEntity.previousWordBoundary(this.indexAtPoint(this.mouseDownPoint) + 1),
                        this.cursors[0].end < a ? (a = this.textFieldEntity,
                        b = this.indexAtPoint(this.mousePoint),
                        this.cursors[0].end = a.previousWordBoundary(b),
                        a = this.textFieldEntity,
                        b = this.indexAtPoint(this.mouseDownPoint) - 1,
                        this.cursors[0].start = a.nextWordBoundary(b)) : (this.cursors[0].start = a,
                        a = Math.max(this.cursors[0].end, this.textFieldEntity.nextWordBoundary(this.indexAtPoint(this.mouseDownPoint) - 1)) | 0,
                        this.cursors[0].end = a))
                    } else
                        this.isTripleClick || (this.cursorsDirty = !0,
                        this.cursors[0].end = this.indexAtPoint(this.mousePoint))
                },
                mouseUpHandler: function(a, b, c) {
                    0 == c && (this.mouseDown = !1)
                },
                updateCursors: function() {
                    this.selectionEntity.clearPool();
                    this.cursorEntity.clearPool();
                    for (var a = 0, b = this.cursors; a < b.length; ) {
                        var c = b[a];
                        ++a;
                        var f;
                        if (c.start < c.end) {
                            var h = this.textFieldEntity.characterRectangle(c.start);
                            c = f = this.textFieldEntity.characterRectangle(c.end)
                        } else
                            f = this.textFieldEntity.characterRectangle(c.start),
                            c = h = this.textFieldEntity.characterRectangle(c.end);
                        if (f.y != h.y) {
                            var q = this.size.x - h.x;
                            this.selectionEntity.addQuad(new va(h.x,h.y,0), new W, new W, !0, new W(q,h.height));
                            this.selectionEntity.addQuad(new va(-this.offsetX(),h.get_bottom(),0), new W, new W, !0, new W(this.size.x,f.y - h.get_bottom()));
                            this.selectionEntity.addQuad(new va(-this.offsetX(),f.y,0), new W, new W, !0, new W(f.x + this.offsetX(),f.height))
                        } else
                            this.selectionEntity.addQuad(new va(h.x,h.y,0), new W, new W, !0, new W(f.x - h.x,f.get_bottom() - h.y));
                        this.cursorEntity.addQuad(new va(Math.max(-this.offsetX(), c.x),c.y,0), new W, new W, !0, new W(1,c.height))
                    }
                    this.selectionEntity.resetUnusedQuads();
                    this.cursorEntity.resetUnusedQuads();
                    this.cursorsDirty = !1
                },
                scrollToCursor: function() {
                    this.cursorBlinkOffset = d.Instance.tick;
                    for (var a = null, b = new ca, c = T.MAX_INT(), f = 0, h = this.cursors; f < h.length; ) {
                        var q = h[f];
                        ++f;
                        var l = this.textFieldEntity.characterRectangle(q.end)
                          , g = Math.max(this.scrollPosition.x - l.x, l.get_right() - (this.scrollPosition.x + this.size.x - 1)) | 0;
                        if (0 >= g)
                            break;
                        g < c && (c = g,
                        b = l,
                        a = q)
                    }
                    null != a && (b.x < this.scrollPosition.x ? this.scrollPosition.x = b.x : b.get_right() - this.size.x + 1 > this.scrollPosition.x && (a = b.get_right() - this.size.x,
                    this.scrollPosition.x = a + 1));
                    this.textFieldEntity.calculatedWidth + 1 > this.size.x && this.scrollPosition.x > this.textFieldEntity.calculatedWidth - this.size.x + 1 && (this.scrollPosition.x = this.textFieldEntity.calculatedWidth - this.size.x + 1);
                    if (this.scrollPosition.x < -this.leftScrollPadding || this.textFieldEntity.calculatedWidth + 1 <= this.size.x)
                        this.scrollPosition.x = -this.leftScrollPadding
                },
                setSelection: function(a, b) {
                    this.cursors = [{
                        start: a,
                        end: b,
                        anchor: null
                    }];
                    this.cursorsDirty = !0;
                    this.scrollToCursor();
                    return this.cursors[0]
                },
                selectAll: function() {
                    this.setSelection(0, this.get_text().length)
                },
                clearCursors: function() {
                    this.setSelection(this.get_text().length, this.get_text().length)
                },
                containsPoint: function(a) {
                    return T.pointInTransformedRectangle(new W(a.x + this.offsetX(),a.y), new ca(0,0,this.size.x,this.size.y), this.transform)
                },
                indexAtPoint: function(a) {
                    return this.textFieldEntity.indexAtPoint(new W(a.x,a.y))
                },
                screenPointToLocalPoint: function(a) {
                    a = this.transform.inverse().apply(new va(a.x - this.offsetX(),a.y));
                    return new W(a.x + this.scrollPosition.x,a.y + this.scrollPosition.y)
                },
                cleanText: function(a) {
                    a = this.textFieldEntity.font.cleanText(a);
                    return a.replace(this.allowedRegex.r, "")
                },
                get_text: function() {
                    return this.textFieldEntity.text
                },
                set_leftScrollPadding: function(a) {
                    this.scrollPosition.x == -this.leftScrollPadding && (this.scrollPosition.x = -a);
                    return this.leftScrollPadding = a
                },
                set_focused: function(a) {
                    a ? Ea.focus != this && (null != Ea.focus ? Ea.focus.set_focused(!1) : Ea.registerListeners(),
                    Ea.focus = this,
                    this.cursorBlinkOffset = d.Instance.tick,
                    Ea.regainFocus()) : Ea.focus == this && (Ea.focus = null,
                    Ea.regainFocus());
                    return this.focused = a
                },
                set_maxLength: function(a) {
                    -1 < a && this.get_text().length > a && (this.textFieldEntity.insertText("", a, -1),
                    this.clearCursors(),
                    this.scrollToCursor());
                    return this.maxLength = a
                },
                set_allowedCharacters: function(a) {
                    if (this.allowedCharacters == a)
                        return a;
                    this.allowedCharacters = a;
                    this.updateAllowedCharacters();
                    return a
                },
                updateAllowedCharacters: function() {
                    this.allowedRegex = "" == this.allowedCharacters ? this.multiline ? new pa("^","g") : new pa("[\n\r]","g") : new pa("[^" + this.allowedCharacters + "]","g");
                    var a = this.cleanText(this.get_text());
                    a != this.get_text() && (this.clearCursors(),
                    this.textFieldEntity.setText(a))
                },
                __class__: Ea
            };
            var Ha = z["lemongine.Event"] = {
                __ename__: "lemongine.Event",
                __constructs__: null,
                MOUSE_DOWN: {
                    _hx_name: "MOUSE_DOWN",
                    _hx_index: 0,
                    __enum__: "lemongine.Event",
                    toString: m
                },
                MOUSE_MOVE: {
                    _hx_name: "MOUSE_MOVE",
                    _hx_index: 1,
                    __enum__: "lemongine.Event",
                    toString: m
                },
                MOUSE_UP: {
                    _hx_name: "MOUSE_UP",
                    _hx_index: 2,
                    __enum__: "lemongine.Event",
                    toString: m
                },
                MOUSE_WHEEL: {
                    _hx_name: "MOUSE_WHEEL",
                    _hx_index: 3,
                    __enum__: "lemongine.Event",
                    toString: m
                },
                KEY_DOWN: {
                    _hx_name: "KEY_DOWN",
                    _hx_index: 4,
                    __enum__: "lemongine.Event",
                    toString: m
                },
                KEY_DOWN_REPEAT: {
                    _hx_name: "KEY_DOWN_REPEAT",
                    _hx_index: 5,
                    __enum__: "lemongine.Event",
                    toString: m
                },
                KEY_UP: {
                    _hx_name: "KEY_UP",
                    _hx_index: 6,
                    __enum__: "lemongine.Event",
                    toString: m
                },
                ACTIVATE: {
                    _hx_name: "ACTIVATE",
                    _hx_index: 7,
                    __enum__: "lemongine.Event",
                    toString: m
                },
                FOCUS_IN: {
                    _hx_name: "FOCUS_IN",
                    _hx_index: 8,
                    __enum__: "lemongine.Event",
                    toString: m
                },
                FOCUS_OUT: {
                    _hx_name: "FOCUS_OUT",
                    _hx_index: 9,
                    __enum__: "lemongine.Event",
                    toString: m
                },
                TEXT_INPUT: {
                    _hx_name: "TEXT_INPUT",
                    _hx_index: 10,
                    __enum__: "lemongine.Event",
                    toString: m
                },
                TOUCH_START: {
                    _hx_name: "TOUCH_START",
                    _hx_index: 11,
                    __enum__: "lemongine.Event",
                    toString: m
                },
                TOUCH_MOVE: {
                    _hx_name: "TOUCH_MOVE",
                    _hx_index: 12,
                    __enum__: "lemongine.Event",
                    toString: m
                },
                TOUCH_END: {
                    _hx_name: "TOUCH_END",
                    _hx_index: 13,
                    __enum__: "lemongine.Event",
                    toString: m
                },
                TICK: {
                    _hx_name: "TICK",
                    _hx_index: 14,
                    __enum__: "lemongine.Event",
                    toString: m
                }
            };
            Ha.__constructs__ = [Ha.MOUSE_DOWN, Ha.MOUSE_MOVE, Ha.MOUSE_UP, Ha.MOUSE_WHEEL, Ha.KEY_DOWN, Ha.KEY_DOWN_REPEAT, Ha.KEY_UP, Ha.ACTIVATE, Ha.FOCUS_IN, Ha.FOCUS_OUT, Ha.TEXT_INPUT, Ha.TOUCH_START, Ha.TOUCH_MOVE, Ha.TOUCH_END, Ha.TICK];
            var uc = function(a, b, c, f) {
                null == f && (f = !1);
                null == b && (b = "");
                null == a && (a = "save");
                this.dataToStoreInIndexedDB = this.callbackWhenLoaded = null;
                this.indexedDBStorageReady = !1;
                this.usingindexedDBStorage = !0;
                this.exceededQuota = !1;
                this.data = new p;
                this.fullPath = "";
                this.name = "save";
                this.name = a;
                this.fullPath = this.validatePath(b + "/" + a);
                this.callbackWhenLoaded = c;
                (this.usingindexedDBStorage = null != window.indexedDB && !f) ? this.initIndexedDB() : (f || ha.trace("Notice: Falling back to local storage.", {
                    fileName: "lemongine/LocalStorage.hx",
                    lineNumber: 56,
                    className: "lemongine.LocalStorage",
                    methodName: "new"
                }),
                this.initLocalStorage(),
                null == this.storage && ha.trace("Error: Storage is inaccessible!", {
                    fileName: "lemongine/LocalStorage.hx",
                    lineNumber: 58,
                    className: "lemongine.LocalStorage",
                    methodName: "new"
                }),
                this.load(),
                this.callFirstLoadCallback())
            };
            g["lemongine.LocalStorage"] = uc;
            uc.__name__ = "lemongine.LocalStorage";
            uc.prototype = {
                onExitCallback: function(a) {
                    this.save()
                },
                removeSaveOnExitListener: function() {
                    d.Instance.onExit.remove(t(this, this.onExitCallback))
                },
                callFirstLoadCallback: function() {
                    null != this.callbackWhenLoaded && (this.callbackWhenLoaded(this),
                    this.callbackWhenLoaded = null)
                },
                initIndexedDB: function() {
                    var a = this;
                    this.usingindexedDBStorage = !0;
                    this.indexedDBStorageReady = !1;
                    var b = window.indexedDB.open("lemongine", 1);
                    b.onerror = function() {
                        ha.trace("Notice: Falling back to local storage.", {
                            fileName: "lemongine/LocalStorage.hx",
                            lineNumber: 87,
                            className: "lemongine.LocalStorage",
                            methodName: "initIndexedDB"
                        });
                        a.usingindexedDBStorage = !1;
                        a.initLocalStorage();
                        null == a.storage && ha.trace("Error: Storage is inaccessible!", {
                            fileName: "lemongine/LocalStorage.hx",
                            lineNumber: 90,
                            className: "lemongine.LocalStorage",
                            methodName: "initIndexedDB"
                        });
                        a.load();
                        a.callFirstLoadCallback()
                    }
                    ;
                    b.onupgradeneeded = function(b) {
                        b.target.result.createObjectStore("saves", {
                            keyPath: "name"
                        }).transaction.oncomplete = function(b) {
                            null != a.dataToStoreInIndexedDB && (a.addDataToIndexedDB(a.dataToStoreInIndexedDB),
                            a.dataToStoreInIndexedDB = null)
                        }
                    }
                    ;
                    b.onsuccess = function() {
                        a.indexedDBStorage = b.result;
                        a.indexedDBStorageReady = !0;
                        a.initLocalStorage();
                        if (null != a.storage.getItem("lemongine:" + a.fullPath)) {
                            ha.trace("Notice: Save data migrated from local storage.", {
                                fileName: "lemongine/LocalStorage.hx",
                                lineNumber: 112,
                                className: "lemongine.LocalStorage",
                                methodName: "initIndexedDB"
                            });
                            var c = a.storage.getItem("lemongine:" + a.fullPath);
                            a.data = fb.run(c);
                            a.save();
                            a.storage.removeItem("lemongine:" + a.fullPath);
                            a.callFirstLoadCallback()
                        } else
                            null != a.storage.getItem("zanzlanz:null/" + a.fullPath) ? (ha.trace("Notice: Save data migrated from old storage.", {
                                fileName: "lemongine/LocalStorage.hx",
                                lineNumber: 118,
                                className: "lemongine.LocalStorage",
                                methodName: "initIndexedDB"
                            }),
                            c = a.storage.getItem("zanzlanz:null/" + a.fullPath),
                            a.data = fb.run(c),
                            a.save(),
                            a.storage.removeItem("zanzlanz:null/" + a.fullPath),
                            a.callFirstLoadCallback()) : a.load()
                    }
                },
                addDataToIndexedDB: function(a) {
                    var b = this;
                    if (this.indexedDBStorageReady) {
                        var c = this.indexedDBStorage.transaction(["saves"], "readwrite");
                        c.objectStore("saves").put({
                            name: "lemongine:" + this.fullPath,
                            data: a
                        });
                        c.oncomplete = function(a) {}
                        ;
                        c.onerror = function(a) {
                            null != b.quotaExceededCallback && b.quotaExceededCallback()
                        }
                    } else
                        this.dataToStoreInIndexedDB = a
                },
                getDataFromIndexedDB: function(a) {
                    var b = this;
                    this.indexedDBStorageReady || ha.trace("Error: IndexedDB not ready - needs to use callback instead.", {
                        fileName: "lemongine/LocalStorage.hx",
                        lineNumber: 146,
                        className: "lemongine.LocalStorage",
                        methodName: "getDataFromIndexedDB"
                    });
                    var c = this.indexedDBStorage.transaction(["saves"], "readwrite")
                      , f = c.objectStore("saves").get("lemongine:" + this.fullPath);
                    c.oncomplete = function(c) {
                        null != f.result ? (c = f.result.data,
                        null == c && (c = jb.run(new p)),
                        b.data = fb.run(c)) : b.data = new p;
                        null != a && a(b.data);
                        b.callFirstLoadCallback()
                    }
                    ;
                    c.onerror = function(c) {
                        null != a && a(b.data);
                        b.callFirstLoadCallback()
                    }
                },
                initLocalStorage: function() {
                    this.storage = Jc.getLocalStorage();
                    null == this.storage ? ha.trace("Error: Local storage is inaccessible for initialization.", {
                        fileName: "lemongine/LocalStorage.hx",
                        lineNumber: 174,
                        className: "lemongine.LocalStorage",
                        methodName: "initLocalStorage"
                    }) : null != this.storage.getItem("zanzlanz:null/" + this.fullPath) && (this.data = fb.run(this.storage.getItem("zanzlanz:null/" + this.fullPath)),
                    this.save(),
                    this.storage.removeItem("zanzlanz:null/" + this.fullPath))
                },
                validatePath: function(a) {
                    for (null != rb.get_applicationStorageDirectory() && (a = rb.get_applicationStorageDirectory() + "/" + a); -1 != a.indexOf("\\"); )
                        a = a.split("\\").join("/");
                    for (; -1 != a.indexOf("//"); )
                        a = a.split("//").join("/");
                    "/" == a.charAt(a.length - 1) && (a = K.substr(a, 0, a.length - 1));
                    "/" == a.charAt(0) && (a = K.substr(a, 1, null));
                    return a
                },
                save: function() {
                    if (this.usingindexedDBStorage || null != this.storage) {
                        var a = jb.run(this.data);
                        if (this.usingindexedDBStorage)
                            this.addDataToIndexedDB(a);
                        else
                            try {
                                this.storage.setItem("lemongine:" + this.fullPath, a),
                                this.exceededQuota = !1
                            } catch (b) {
                                ha.trace("Error: Local storage quota exceeded. Could not save data.", {
                                    fileName: "lemongine/LocalStorage.hx",
                                    lineNumber: 220,
                                    className: "lemongine.LocalStorage",
                                    methodName: "save"
                                }),
                                0 == this.exceededQuota && (this.exceededQuota = !0,
                                null != this.quotaExceededCallback && this.quotaExceededCallback())
                            }
                    } else
                        ha.trace("Error: Local storage is inaccessible for saving.", {
                            fileName: "lemongine/LocalStorage.hx",
                            lineNumber: 204,
                            className: "lemongine.LocalStorage",
                            methodName: "save"
                        })
                },
                load: function(a) {
                    if (!this.usingindexedDBStorage && null == this.storage)
                        return ha.trace("Error: Local storage is inaccessible for loading.", {
                            fileName: "lemongine/LocalStorage.hx",
                            lineNumber: 240,
                            className: "lemongine.LocalStorage",
                            methodName: "load"
                        }),
                        null;
                    d.Instance.onExit.has(t(this, this.onExitCallback)) || d.Instance.onExit.add(t(this, this.onExitCallback));
                    if (this.usingindexedDBStorage)
                        this.getDataFromIndexedDB(a);
                    else {
                        var b = this.storage.getItem("lemongine:" + this.fullPath);
                        null == b && (b = jb.run(new p));
                        this.data = fb.run(b);
                        this.callFirstLoadCallback();
                        null != a && a(this.data)
                    }
                    return this.data
                },
                destroy: function() {
                    this.removeSaveOnExitListener();
                    this.usingindexedDBStorage ? this.indexedDBStorage.transaction(["saves"], "readwrite").objectStore("saves").delete("lemongine:" + this.fullPath) : this.storage.removeItem("lemongine:" + this.fullPath);
                    return this
                },
                __class__: uc
            };
            var T = function() {};
            g["lemongine.Mathz"] = T;
            T.__name__ = "lemongine.Mathz";
            T.modulus = function(a, b) {
                a %= b;
                return 0 > a ? a + b : a
            }
            ;
            T.clamp = function(a, b, c) {
                return Math.max(a, Math.min(b, c))
            }
            ;
            T.distance = function(a, b) {
                return Math.sqrt(a * a + b * b)
            }
            ;
            T.sign = function(a) {
                return 0 <= a ? 1 : -1
            }
            ;
            T.MAX_INT = function() {
                return Number.MAX_SAFE_INTEGER || 9007199254740991
            }
            ;
            T.interpolateSmootherstep = function(a) {
                a = T.clamp(0, 1, a);
                return a * a * a * (a * (6 * a - 15) + 10)
            }
            ;
            T.pointInTriangle = function(a, b, c, f, h) {
                null == h && (h = !1);
                var q = (c.x - b.x) * (a.y - b.y) - (c.y - b.y) * (a.x - b.x);
                c = (f.x - c.x) * (a.y - c.y) - (f.y - c.y) * (a.x - c.x);
                a = (b.x - f.x) * (a.y - f.y) - (b.y - f.y) * (a.x - f.x);
                return h ? 0 <= q == 0 <= c ? 0 <= c == 0 <= a : !1 : 0 < q == 0 < c ? 0 < c == 0 < a : !1
            }
            ;
            T.pointInQuad = function(a, b, c, f, h) {
                return T.pointInTriangle(a, b, c, h, !0) ? !0 : T.pointInTriangle(a, c, f, h)
            }
            ;
            T.pointInTransformedRectangle = function(a, b, c) {
                var f = c.apply(new va(b.x,b.y))
                  , h = c.apply(new va(b.get_right(),b.y))
                  , q = c.apply(new va(b.get_right(),b.get_bottom()));
                b = c.apply(new va(b.x,b.get_bottom()));
                return T.pointInQuad(a, new W(f.x,f.y), new W(h.x,h.y), new W(q.x,q.y), new W(b.x,b.y))
            }
            ;
            T.repeatArray = function(a, b, c) {
                null == c && (c = !0);
                null == b && (b = 1);
                if (!c) {
                    var f = [];
                    c = 0;
                    for (b *= a.length; c < b; )
                        f.push(a[c++ % a.length]);
                    return f
                }
                if (0 >= b)
                    return a.splice(0, a.length),
                    a;
                f = a.length;
                c = 0;
                for (b = (b - 1) * f; c < b; )
                    a.push(a[c++ % f]);
                return a
            }
            ;
            T.pushAll = function(a, b) {
                for (var c = 0; c < b.length; )
                    a.push(b[c++]);
                return a
            }
            ;
            T.insertAll = function(a, b, c) {
                for (var f = 0; f < c.length; )
                    a.splice(b, 0, c[f++]),
                    ++b;
                return a
            }
            ;
            T.spliceInsert = function(a, b, c, f) {
                if (c == f.length)
                    for (var h = 0; h < c; )
                        a[h + b] = f[h],
                        ++h;
                else
                    a.splice(b, c),
                    T.insertAll(a, b, f);
                return a
            }
            ;
            var Ua = function(a) {
                this.values = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];
                null != a && this.set(a)
            };
            g["lemongine.Matrix4"] = Ua;
            Ua.__name__ = "lemongine.Matrix4";
            Ua.prototype = {
                reset: function() {
                    this.values[0] = Ua.identity.values[0];
                    this.values[1] = Ua.identity.values[1];
                    this.values[2] = Ua.identity.values[2];
                    this.values[3] = Ua.identity.values[3];
                    this.values[4] = Ua.identity.values[4];
                    this.values[5] = Ua.identity.values[5];
                    this.values[6] = Ua.identity.values[6];
                    this.values[7] = Ua.identity.values[7];
                    this.values[8] = Ua.identity.values[8];
                    this.values[9] = Ua.identity.values[9];
                    this.values[10] = Ua.identity.values[10];
                    this.values[11] = Ua.identity.values[11];
                    this.values[12] = Ua.identity.values[12];
                    this.values[13] = Ua.identity.values[13];
                    this.values[14] = Ua.identity.values[14];
                    this.values[15] = Ua.identity.values[15];
                    return this
                },
                rotate: function(a, b) {
                    b.normalize();
                    var c = Math.cos(a);
                    a = Math.sin(a);
                    var f = b.x
                      , h = b.y;
                    b = b.z;
                    return this.multiply([c + f * f * (1 - c), f * h * (1 - c) - b * a, f * b * (1 - c) + h * a, 0, h * f * (1 - c) + b * a, c + h * h * (1 - c), h * b * (1 - c) - f * a, 0, b * f * (1 - c) - h * a, b * h * (1 - c) + f * a, c + b * b * (1 - c), 0, 0, 0, 0, 1])
                },
                rotate2D: function(a, b) {
                    null == b && (b = !1);
                    var c = Math.cos(a);
                    a = Math.sin(a);
                    b = b ? -1 : 1;
                    return this.multiply([c, -b * a, 0, 0, b * a, c, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1])
                },
                translate: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = 0);
                    null == a && (a = 0);
                    return this.multiply([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, a, b, c, 1])
                },
                setPosition: function(a, b, c) {
                    null == c && (c = 1);
                    null == b && (b = 1);
                    null == a && (a = 1);
                    this.values[12] = a;
                    this.values[13] = b;
                    this.values[14] = c;
                    return this
                },
                scale: function(a, b, c) {
                    null == c && (c = 1);
                    null == b && (b = 1);
                    null == a && (a = 1);
                    return this.multiply([a, 0, 0, 0, 0, b, 0, 0, 0, 0, c, 0, 0, 0, 0, 1])
                },
                scale2D: function(a) {
                    null == a && (a = 1);
                    return this.multiply([a, 0, 0, 0, 0, a, 0, 0, 0, 0, a, 0, 0, 0, 0, 1])
                },
                shear: function(a, b, c, f, h, q) {
                    null == q && (q = 0);
                    null == h && (h = 0);
                    null == f && (f = 0);
                    null == c && (c = 0);
                    null == b && (b = 0);
                    null == a && (a = 0);
                    return this.multiply([1, c, h, 0, a, 1, q, 0, b, f, 1, 0, 0, 0, 0, 1])
                },
                shear2D: function(a, b) {
                    null == b && (b = 0);
                    null == a && (a = 0);
                    return this.shear(a, 0, b)
                },
                invert: function() {
                    var a = Ua.identity.values.slice()
                      , b = this.values
                      , c = b[9] * b[14] * b[7] - b[13] * b[10] * b[7] + b[13] * b[6] * b[11] - b[5] * b[14] * b[11] - b[9] * b[6] * b[15] + b[5] * b[10] * b[15]
                      , f = b[12] * b[10] * b[7] - b[8] * b[14] * b[7] - b[12] * b[6] * b[11] + b[4] * b[14] * b[11] + b[8] * b[6] * b[15] - b[4] * b[10] * b[15]
                      , h = b[8] * b[13] * b[7] - b[12] * b[9] * b[7] + b[12] * b[5] * b[11] - b[4] * b[13] * b[11] - b[8] * b[5] * b[15] + b[4] * b[9] * b[15]
                      , q = b[12] * b[9] * b[6] - b[8] * b[13] * b[6] - b[12] * b[5] * b[10] + b[4] * b[13] * b[10] + b[8] * b[5] * b[14] - b[4] * b[9] * b[14]
                      , d = b[0] * c + b[1] * f + b[2] * h + b[3] * q;
                    if (0 == d)
                        return ha.trace("Warning! Matrix can not be inverted.", {
                            fileName: "lemongine/Matrix4.hx",
                            lineNumber: 115,
                            className: "lemongine.Matrix4",
                            methodName: "invert"
                        }),
                        this.set(Ua.identity.values),
                        this;
                    d = 1 / d;
                    a[0] = c * d;
                    a[1] = (b[13] * b[10] * b[3] - b[9] * b[14] * b[3] - b[13] * b[2] * b[11] + b[1] * b[14] * b[11] + b[9] * b[2] * b[15] - b[1] * b[10] * b[15]) * d;
                    a[2] = (b[5] * b[14] * b[3] - b[13] * b[6] * b[3] + b[13] * b[2] * b[7] - b[1] * b[14] * b[7] - b[5] * b[2] * b[15] + b[1] * b[6] * b[15]) * d;
                    a[3] = (b[9] * b[6] * b[3] - b[5] * b[10] * b[3] - b[9] * b[2] * b[7] + b[1] * b[10] * b[7] + b[5] * b[2] * b[11] - b[1] * b[6] * b[11]) * d;
                    a[4] = f * d;
                    a[5] = (b[8] * b[14] * b[3] - b[12] * b[10] * b[3] + b[12] * b[2] * b[11] - b[0] * b[14] * b[11] - b[8] * b[2] * b[15] + b[0] * b[10] * b[15]) * d;
                    a[6] = (b[12] * b[6] * b[3] - b[4] * b[14] * b[3] - b[12] * b[2] * b[7] + b[0] * b[14] * b[7] + b[4] * b[2] * b[15] - b[0] * b[6] * b[15]) * d;
                    a[7] = (b[4] * b[10] * b[3] - b[8] * b[6] * b[3] + b[8] * b[2] * b[7] - b[0] * b[10] * b[7] - b[4] * b[2] * b[11] + b[0] * b[6] * b[11]) * d;
                    a[8] = h * d;
                    a[9] = (b[12] * b[9] * b[3] - b[8] * b[13] * b[3] - b[12] * b[1] * b[11] + b[0] * b[13] * b[11] + b[8] * b[1] * b[15] - b[0] * b[9] * b[15]) * d;
                    a[10] = (b[4] * b[13] * b[3] - b[12] * b[5] * b[3] + b[12] * b[1] * b[7] - b[0] * b[13] * b[7] - b[4] * b[1] * b[15] + b[0] * b[5] * b[15]) * d;
                    a[11] = (b[8] * b[5] * b[3] - b[4] * b[9] * b[3] - b[8] * b[1] * b[7] + b[0] * b[9] * b[7] + b[4] * b[1] * b[11] - b[0] * b[5] * b[11]) * d;
                    a[12] = q * d;
                    a[13] = (b[8] * b[13] * b[2] - b[12] * b[9] * b[2] + b[12] * b[1] * b[10] - b[0] * b[13] * b[10] - b[8] * b[1] * b[14] + b[0] * b[9] * b[14]) * d;
                    a[14] = (b[12] * b[5] * b[2] - b[4] * b[13] * b[2] - b[12] * b[1] * b[6] + b[0] * b[13] * b[6] + b[4] * b[1] * b[14] - b[0] * b[5] * b[14]) * d;
                    a[15] = (b[4] * b[9] * b[2] - b[8] * b[5] * b[2] + b[8] * b[1] * b[6] - b[0] * b[9] * b[6] - b[4] * b[1] * b[10] + b[0] * b[5] * b[10]) * d;
                    this.values[0] = a[0];
                    this.values[1] = a[1];
                    this.values[2] = a[2];
                    this.values[3] = a[3];
                    this.values[4] = a[4];
                    this.values[5] = a[5];
                    this.values[6] = a[6];
                    this.values[7] = a[7];
                    this.values[8] = a[8];
                    this.values[9] = a[9];
                    this.values[10] = a[10];
                    this.values[11] = a[11];
                    this.values[12] = a[12];
                    this.values[13] = a[13];
                    this.values[14] = a[14];
                    this.values[15] = a[15];
                    return this
                },
                inverse: function() {
                    return (new Ua(this.values)).invert()
                },
                multiply: function(a) {
                    var b = [];
                    b[0] = this.values[0] * a[0] + this.values[1] * a[4] + this.values[2] * a[8] + this.values[3] * a[12];
                    b[1] = this.values[0] * a[1] + this.values[1] * a[5] + this.values[2] * a[9] + this.values[3] * a[13];
                    b[2] = this.values[0] * a[2] + this.values[1] * a[6] + this.values[2] * a[10] + this.values[3] * a[14];
                    b[3] = this.values[0] * a[3] + this.values[1] * a[7] + this.values[2] * a[11] + this.values[3] * a[15];
                    b[4] = this.values[4] * a[0] + this.values[5] * a[4] + this.values[6] * a[8] + this.values[7] * a[12];
                    b[5] = this.values[4] * a[1] + this.values[5] * a[5] + this.values[6] * a[9] + this.values[7] * a[13];
                    b[6] = this.values[4] * a[2] + this.values[5] * a[6] + this.values[6] * a[10] + this.values[7] * a[14];
                    b[7] = this.values[4] * a[3] + this.values[5] * a[7] + this.values[6] * a[11] + this.values[7] * a[15];
                    b[8] = this.values[8] * a[0] + this.values[9] * a[4] + this.values[10] * a[8] + this.values[11] * a[12];
                    b[9] = this.values[8] * a[1] + this.values[9] * a[5] + this.values[10] * a[9] + this.values[11] * a[13];
                    b[10] = this.values[8] * a[2] + this.values[9] * a[6] + this.values[10] * a[10] + this.values[11] * a[14];
                    b[11] = this.values[8] * a[3] + this.values[9] * a[7] + this.values[10] * a[11] + this.values[11] * a[15];
                    b[12] = this.values[12] * a[0] + this.values[13] * a[4] + this.values[14] * a[8] + this.values[15] * a[12];
                    b[13] = this.values[12] * a[1] + this.values[13] * a[5] + this.values[14] * a[9] + this.values[15] * a[13];
                    b[14] = this.values[12] * a[2] + this.values[13] * a[6] + this.values[14] * a[10] + this.values[15] * a[14];
                    b[15] = this.values[12] * a[3] + this.values[13] * a[7] + this.values[14] * a[11] + this.values[15] * a[15];
                    this.values[0] = b[0];
                    this.values[1] = b[1];
                    this.values[2] = b[2];
                    this.values[3] = b[3];
                    this.values[4] = b[4];
                    this.values[5] = b[5];
                    this.values[6] = b[6];
                    this.values[7] = b[7];
                    this.values[8] = b[8];
                    this.values[9] = b[9];
                    this.values[10] = b[10];
                    this.values[11] = b[11];
                    this.values[12] = b[12];
                    this.values[13] = b[13];
                    this.values[14] = b[14];
                    this.values[15] = b[15];
                    return this
                },
                set: function(a) {
                    for (var b = 0; 16 > b; ) {
                        var c = b++;
                        this.values[c] = a.length < c ? 0 : a[c]
                    }
                    return this
                },
                getX: function() {
                    return this.values[12]
                },
                getY: function() {
                    return this.values[13]
                },
                getZ: function() {
                    return this.values[14]
                },
                setPerspectiveMatrix: function(a, b, c, f) {
                    null == f && (f = 1E3);
                    null == c && (c = .1);
                    null == b && (b = 1);
                    null == a && (a = 45);
                    a = 1 / Math.tan(a * Math.PI / 360);
                    this.set([a / b, 0, 0, 0, 0, -a, 0, 0, 0, 0, (c + f) / (c - f), -1, 0, 0, 2 * c * f / (c - f), 0]);
                    return this
                },
                setOrthographicMatrix: function(a, b, c, f) {
                    null == f && (f = 1E3);
                    null == c && (c = .1);
                    null == b && (b = 1);
                    null == a && (a = 400);
                    this.set([2 / (a * b), 0, 0, 0, 0, -2 / a, 0, 0, 0, 0, 2 / (f - c), 0, 0, 0, -(f + c) / (f - c), 1]);
                    return this
                },
                apply: function(a, b) {
                    null == b && (b = !0);
                    var c = a.x * this.values[1] + a.y * this.values[5] + a.z * this.values[9] + this.values[13]
                      , f = a.x * this.values[2] + a.y * this.values[6] + a.z * this.values[10] + this.values[14];
                    return b ? (a.x = a.x * this.values[0] + a.y * this.values[4] + a.z * this.values[8] + this.values[12],
                    a.y = c,
                    a.z = f,
                    a) : new va(a.x,a.y,a.z)
                },
                __class__: Ua
            };
            var Sc = function(a, b, c, f) {
                this.hasUVs = this.isIndexed = this.hasNormals = !1;
                this.set(a, b, c, f)
            };
            g["lemongine.Mesh"] = Sc;
            Sc.__name__ = "lemongine.Mesh";
            Sc.prototype = {
                set: function(a, b, c, f) {
                    this.isIndexed = this.hasUVs = this.hasNormals = !1;
                    this.setVertices(a);
                    null != b && (this.isIndexed = !0,
                    this.setIndices(b));
                    null != c && this.setUVs(c);
                    null != f && this.setNormals(f)
                },
                setUVs: function(a) {
                    this.hasUVs = !0;
                    null == this.uvs && (this.uvs = new oc("uv","float2"));
                    this.uvs.setValue(a);
                    return this.uvs.value
                },
                setVertices: function(a) {
                    null == this.vertices && (this.vertices = new oc("vertex","float3"));
                    this.vertices.setValue(a);
                    return this.vertices.value
                },
                setIndices: function(a) {
                    if (!this.isIndexed)
                        return ha.trace("Error: Mesh is not indexed.", {
                            fileName: "lemongine/Mesh.hx",
                            lineNumber: 62,
                            className: "lemongine.Mesh",
                            methodName: "setIndices"
                        }),
                        [];
                    null == this.indices && (this.indices = new oc("~index","uint3"));
                    this.indices.setValue(a);
                    return this.indices.value
                },
                setNormals: function(a) {
                    this.hasNormals = !0;
                    null == this.normals && (this.normals = new oc("normal","float3"));
                    this.normals.setValue(a);
                    return this.normals.value
                },
                getVertices: function() {
                    return this.vertices.value
                },
                getUVs: function() {
                    return this.uvs.value
                },
                getNormals: function() {
                    return this.normals.value
                },
                numVertices: function() {
                    return Math.floor(this.vertices.value.length / 3)
                },
                numIndices: function() {
                    return null == this.indices ? 0 : this.indices.value.length
                },
                toIndexed: function() {
                    if (this.isIndexed)
                        return ha.trace("Warning: Mesh is already indexed.", {
                            fileName: "lemongine/Mesh.hx",
                            lineNumber: 105,
                            className: "lemongine.Mesh",
                            methodName: "toIndexed"
                        }),
                        this;
                    for (var a = [], b = [], c, f = [], h = 0, q = Math.floor(this.vertices.value.length / 3); h < q; ) {
                        var d = h++;
                        c = !1;
                        for (var l = 0, g = Math.floor(a.length / 3); l < g; ) {
                            var p = l++;
                            if (a[3 * p] == this.vertices.value[3 * d] && a[3 * p + 1] == this.vertices.value[3 * d + 1] && a[3 * p + 2] == this.vertices.value[3 * d + 2] && (!this.hasUVs || b[2 * p] == this.uvs.value[2 * d] && b[2 * p + 1] == this.uvs.value[2 * d + 1])) {
                                f.push(p);
                                c = !0;
                                break
                            }
                        }
                        c || (a.push(this.vertices.value[3 * d]),
                        a.push(this.vertices.value[3 * d + 1]),
                        a.push(this.vertices.value[3 * d + 2]),
                        this.hasUVs && (b.push(this.uvs.value[2 * d]),
                        b.push(this.uvs.value[2 * d + 1])),
                        f.push(Math.floor(a.length / 3) - 1))
                    }
                    this.isIndexed = !0;
                    this.setIndices(f);
                    this.setVertices(a);
                    this.hasUVs && this.setUVs(b);
                    return this
                },
                generateNormals: function() {
                    if (this.isIndexed)
                        return ha.trace("Cannot generate normals on indexed mesh.", {
                            fileName: "lemongine/Mesh.hx",
                            lineNumber: 167,
                            className: "lemongine.Mesh",
                            methodName: "generateNormals"
                        }),
                        this.getNormals();
                    for (var a = [], b = new va, c = new va, f = new va, h = new va, q = 0, d = Math.floor(this.numVertices() / 3); q < d; ) {
                        var l = q++;
                        b.set(this.vertices.value[9 * l], this.vertices.value[9 * l + 1], this.vertices.value[9 * l + 2]);
                        c.set(this.vertices.value[9 * l + 3], this.vertices.value[9 * l + 4], this.vertices.value[9 * l + 5]);
                        f.set(this.vertices.value[9 * l + 6], this.vertices.value[9 * l + 7], this.vertices.value[9 * l + 8]);
                        va.cross(c.subtract(b), f.subtract(b), h).normalize();
                        a.push(h.x);
                        a.push(h.y);
                        a.push(h.z);
                        a.push(h.x);
                        a.push(h.y);
                        a.push(h.z);
                        a.push(h.x);
                        a.push(h.y);
                        a.push(h.z)
                    }
                    return this.setNormals(a)
                },
                __class__: Sc
            };
            var ca = function(a, b, c, f) {
                null == f && (f = 0);
                null == c && (c = 0);
                null == b && (b = 0);
                null == a && (a = 0);
                this.x = this.y = this.width = this.height = this.centerX = this.centerY = 0;
                this.x = a;
                this.y = b;
                this.set_width(c);
                this.set_height(f)
            };
            g["lemongine.Rectangle"] = ca;
            ca.__name__ = "lemongine.Rectangle";
            ca.prototype = {
                set: function(a, b, c, f) {
                    null == f && (f = 0);
                    null == c && (c = 0);
                    null == b && (b = 0);
                    null == a && (a = 0);
                    this.x = a;
                    this.y = b;
                    this.set_width(c);
                    this.set_height(f);
                    return this
                },
                contains: function(a, b) {
                    return a >= this.x && b >= this.y && a < this.x + this.width ? b < this.y + this.height : !1
                },
                intersects: function(a) {
                    return !(a.get_right() <= this.get_left() || a.get_left() >= this.get_right() || a.get_top() >= this.get_bottom() || a.get_bottom() <= this.get_top())
                },
                intersection: function(a) {
                    var b = Math.max(this.get_left(), a.get_left())
                      , c = Math.min(this.get_right(), a.get_right())
                      , f = Math.max(this.get_top(), a.get_top());
                    a = Math.min(this.get_bottom(), a.get_bottom());
                    return new ca(b,f,Math.max(0, c - b),Math.max(0, a - f))
                },
                get_position: function() {
                    null == this._position ? this._position = new W(this.x,this.y) : this._position.set(this.x, this.y);
                    return this._position
                },
                get_size: function() {
                    null == this._size ? this._size = new W(this.width,this.height) : this._size.set(this.width, this.height);
                    return this._size
                },
                toLimeRectangle: function() {
                    return new Bc(this.x,this.y,this.width,this.height)
                },
                toArray: function() {
                    return [this.x, this.y, this.width, this.height]
                },
                set_width: function(a) {
                    0 > a ? (this.x += a,
                    this.width = -a) : this.width = a;
                    return a
                },
                set_height: function(a) {
                    0 > a ? (this.y += a,
                    this.height = -a) : this.height = a;
                    return a
                },
                get_left: function() {
                    return this.x
                },
                get_right: function() {
                    return this.x + this.width
                },
                get_top: function() {
                    return this.y
                },
                get_bottom: function() {
                    return this.y + this.height
                },
                get_centerX: function() {
                    return this.x + .5 * this.width
                },
                get_centerY: function() {
                    return this.y + .5 * this.height
                },
                __class__: ca
            };
            var na = function() {};
            g["lemongine.Renderer"] = na;
            na.__name__ = "lemongine.Renderer";
            na.clear = function(a) {
                na.activate(a);
                na.setDepthMask(!0);
                A.gl.clear(A.gl.COLOR_BUFFER_BIT | A.gl.DEPTH_BUFFER_BIT);
                na.lastProgram = null;
                na.lastMesh = null;
                na.lastTextures = null
            }
            ;
            na.render = function(a, b) {
                for (var c = 0; c < b.length; ) {
                    var f = b[c];
                    ++c;
                    f.visible && na.renderEntity(f, a)
                }
            }
            ;
            na.renderEntity = function(a, b) {
                var c = a.shaderProgram == na.lastProgram
                  , f = !1
                  , h = !1;
                na.currentScene != b && na.activate(b);
                a.isTransparent && na.setDepthMask(!1);
                c && (a.mesh == na.lastMesh && null != a.mesh.vertices && 0 == a.mesh.vertices.dirtyBuffer && null != a.mesh.indices && 0 == a.mesh.indices.dirtyBuffer && (f = !0),
                na.buffersChanged(a.textureBuffers, na.lastTextures) || (h = !0));
                na.callCount++;
                a.render(na.currentScene, !c, !f, !h);
                na.lastProgram = a.shaderProgram;
                na.lastMesh = a.mesh;
                na.lastTextures = a.textureBuffers
            }
            ;
            na.buffersChanged = function(a, b) {
                for (var c = Object.keys(a.h), f = c.length, h = 0; h < f; ) {
                    var q = c[h++];
                    if (!Object.prototype.hasOwnProperty.call(b.h, q) || a.h[q] != b.h[q] || a.h[q].dirtyRender)
                        return !0
                }
                c = Object.keys(b.h);
                f = c.length;
                for (h = 0; h < f; )
                    if (!Object.prototype.hasOwnProperty.call(a.h, c[h++]))
                        return !0;
                return !1
            }
            ;
            na.resetCallCount = function() {
                na.callCount = 0
            }
            ;
            na.activate = function(a, b) {
                null == b && (b = !1);
                if (na.currentScene != a || b) {
                    na.currentScene = a;
                    if (a.isInternalScene())
                        A.gl.bindFramebuffer(A.gl.FRAMEBUFFER, null);
                    else if (a.firstActivation)
                        if (a.firstActivation = !1,
                        null != a.cubemap)
                            null != a.glRenderBuffer && A.gl.deleteRenderbuffer(a.glRenderBuffer),
                            null == a.glFrameBuffer && (a.glFrameBuffer = A.gl.createFramebuffer()),
                            a.glRenderBuffer = A.gl.createRenderbuffer(),
                            A.gl.bindRenderbuffer(A.gl.RENDERBUFFER, a.glRenderBuffer),
                            A.gl.bindFramebuffer(A.gl.FRAMEBUFFER, a.glFrameBuffer),
                            A.gl.renderbufferStorage(A.gl.RENDERBUFFER, A.gl.DEPTH_COMPONENT16, a.get_width(), a.get_height()),
                            A.gl.framebufferRenderbuffer(A.gl.FRAMEBUFFER, A.gl.DEPTH_ATTACHMENT, A.gl.RENDERBUFFER, a.glRenderBuffer),
                            A.gl.framebufferTexture2D(A.gl.FRAMEBUFFER, A.gl.COLOR_ATTACHMENT0, a.cubemapSide, a.cubemap.getTextureBuffer(), 0);
                        else {
                            null != a.get_glTexture() && A.gl.deleteTexture(a.get_glTexture());
                            null != a.glRenderBuffer && A.gl.deleteRenderbuffer(a.glRenderBuffer);
                            null == a.glFrameBuffer && (a.glFrameBuffer = A.gl.createFramebuffer());
                            b = A.gl.createTexture();
                            a.glRenderBuffer = A.gl.createRenderbuffer();
                            A.gl.bindRenderbuffer(A.gl.RENDERBUFFER, a.glRenderBuffer);
                            A.gl.bindFramebuffer(A.gl.FRAMEBUFFER, a.glFrameBuffer);
                            A.gl.renderbufferStorage(A.gl.RENDERBUFFER, A.gl.DEPTH_COMPONENT16, a.get_width(), a.get_height());
                            A.gl.framebufferRenderbuffer(A.gl.FRAMEBUFFER, A.gl.DEPTH_ATTACHMENT, A.gl.RENDERBUFFER, a.glRenderBuffer);
                            A.gl.bindTexture(A.gl.TEXTURE_2D, b);
                            A.gl.pixelStorei(A.gl.UNPACK_ALIGNMENT, 1);
                            var c = A.gl
                              , f = A.gl.TEXTURE_2D
                              , h = A.gl.RGBA
                              , q = a.get_width()
                              , d = a.get_height()
                              , l = A.gl.RGBA
                              , g = A.gl.UNSIGNED_BYTE
                              , p = a.get_width() * a.get_height() * 4 | 0;
                            p = null != p ? new Uint8Array(p) : null;
                            Qb.texImage2D(c, f, 0, h, q, d, 0, l, g, p);
                            A.gl.texParameteri(A.gl.TEXTURE_2D, A.gl.TEXTURE_WRAP_S, A.gl.CLAMP_TO_EDGE);
                            A.gl.texParameteri(A.gl.TEXTURE_2D, A.gl.TEXTURE_WRAP_T, A.gl.CLAMP_TO_EDGE);
                            A.gl.texParameteri(A.gl.TEXTURE_2D, A.gl.TEXTURE_MIN_FILTER, A.gl.NEAREST);
                            A.gl.texParameteri(A.gl.TEXTURE_2D, A.gl.TEXTURE_MAG_FILTER, A.gl.NEAREST);
                            null == a.get_glTexture() ? (a.set_glTexture(b),
                            A.gl.framebufferTexture2D(A.gl.FRAMEBUFFER, A.gl.COLOR_ATTACHMENT0, A.gl.TEXTURE_2D, a.get_glTexture(), 0)) : a.set_glTexture(b)
                        }
                    else
                        A.gl.bindFramebuffer(A.gl.FRAMEBUFFER, a.glFrameBuffer);
                    na.initialize()
                }
            }
            ;
            na.setViewport = function() {
                if (na.currentScene.isInternalScene()) {
                    var a = na.currentScene.get_width()
                      , b = na.currentScene.get_height();
                    if (0 < d.Instance.viewportScale)
                        var c = d.Instance.viewportScale;
                    else
                        c = Math.min(oa.current.__window.__width / na.currentScene.get_width(), oa.current.__window.__height / na.currentScene.get_height()),
                        d.Instance.viewportScaleSnap && (c = Math.floor(c));
                    d.Instance.__internal_scale = c;
                    A.gl.viewport((oa.current.__window.__width - a * c) / 2 | 0, (oa.current.__window.__height - b * c) / 2 | 0, a * c | 0, b * c | 0)
                } else
                    A.gl.viewport(0, 0, na.currentScene.get_width() | 0, na.currentScene.get_height() | 0)
            }
            ;
            na.initialize = function() {
                A.gl.clearColor(Q.toFloat(na.currentScene.backgroundColor.r) / Q.toFloat(255), Q.toFloat(na.currentScene.backgroundColor.g) / Q.toFloat(255), Q.toFloat(na.currentScene.backgroundColor.b) / Q.toFloat(255), Q.toFloat(na.currentScene.backgroundColor.a) / Q.toFloat(255));
                na.setCulling(na.currentScene.cull, na.currentScene.isBackFace);
                na.setViewport()
            }
            ;
            na.setDepthMask = function(a) {
                na.depthMask != a && (na.depthMask = a,
                A.gl.depthMask(a))
            }
            ;
            na.setDepthTest = function(a) {
                na.depthTest != a && (na.depthTest = a,
                na.depthTest ? A.gl.enable(A.gl.DEPTH_TEST) : A.gl.disable(A.gl.DEPTH_TEST))
            }
            ;
            na.setCulling = function(a, b) {
                na.culling != a && (na.culling = a,
                na.culling ? A.gl.enable(A.gl.CULL_FACE) : A.gl.disable(A.gl.CULL_FACE));
                null != b && na.cullFaceBack != b && (na.cullFaceBack = b,
                na.cullFaceBack ? A.gl.cullFace(A.gl.BACK) : A.gl.cullFace(A.gl.FRONT))
            }
            ;
            na.globalInitialize = function() {
                A.gl.depthFunc(A.gl.LEQUAL);
                A.gl.enable(A.gl.BLEND);
                A.gl.blendFunc(A.gl.SRC_ALPHA, A.gl.ONE_MINUS_SRC_ALPHA);
                na.setDepthTest(!0);
                na.setDepthMask(!0);
                na.setCulling(!0, !0)
            }
            ;
            var yb = function(a, b, c, f) {
                this.isImageDirty = !0;
                this.renderQueue = [];
                this.cull = this.isBackFace = this.firstActivation = this.isDirty = this.toClear = !0;
                this.camera = c == cc.PERSPECTIVE ? new Kc(cc.PERSPECTIVE) : new Kc(cc.ORTHOGRAPHIC);
                this.setDimensions(a, b);
                null == f && (f = new Pa(-16777216));
                this.backgroundColor = f
            };
            g["lemongine.Scene"] = yb;
            yb.__name__ = "lemongine.Scene";
            yb.prototype = {
                setup2D: function(a, b, c) {
                    this.backgroundColor = c;
                    this.camera.setOrthographicMatrix(b);
                    this.setDimensions(a, b);
                    this.camera.setPosition(a / 2, b / 2, -1);
                    this.camera.setRotation(0, 0, 0);
                    return this
                },
                setupCubemap: function(a, b) {
                    this.cubemap = a;
                    this.cubemapSide = b;
                    na.clear(this)
                },
                isInternalScene: function() {
                    return this == d.Instance.__internal_scene
                },
                isMainScene: function() {
                    return this == d.Instance.scene
                },
                clear: function() {
                    this.toClear = !0;
                    this.renderQueue.splice(0, this.renderQueue.length);
                    this.isDirty = this.isImageDirty = !0;
                    return this
                },
                draw: function(a, b) {
                    null == b && (b = !1);
                    Ed.insert(this.renderQueue, a, Pb.entitySortFunction, !0);
                    this.isDirty = this.isImageDirty = !0;
                    b && this.render()
                },
                render: function() {
                    1 == this.isDirty && (1 == this.toClear && (na.clear(this),
                    this.toClear = !1),
                    na.render(this, this.renderQueue),
                    this.renderQueue.splice(0, this.renderQueue.length),
                    this.isDirty = !1);
                    return this
                },
                toImage: function(a) {
                    this.render();
                    na.activate(this, !0);
                    var b = !1;
                    null == a ? (a = new ca(0,0,this.get_width(),this.get_height()),
                    b = !0) : (a = a.intersection(new ca(0,0,this.get_width(),this.get_height())),
                    0 == a.x && 0 == a.y && a.width == this.get_width() && a.height == this.get_height() && (b = !0));
                    a.y = this.get_height() - a.height - a.y;
                    var c = Math.floor(a.width) * Math.floor(a.height) * 4;
                    c = null != c ? new Uint8Array(c) : null;
                    A.gl.readPixels(Math.floor(a.x), Math.floor(a.y), Math.floor(a.width), Math.floor(a.height), A.gl.RGBA, A.gl.UNSIGNED_BYTE, c);
                    b ? (null == this._image && (this._image = new hb),
                    b = this._image,
                    this.isImageDirty = !1) : b = new hb;
                    a = new Ja(new dc(c,Math.floor(a.width),Math.floor(a.height),32,0));
                    a.buffer.premultiplied = !0;
                    return b.fromData(a)
                },
                setDimensions: function(a, b, c) {
                    null == c && (c = !1);
                    if (c || a != this.get_width() || b != this.get_height())
                        this.isInternalScene() ? (0 >= a && 0 >= b ? (a = oa.current.__window.__width,
                        b = oa.current.__window.__height) : 0 >= a ? a = b * oa.current.__window.__width / oa.current.__window.__height | 0 : 0 >= b && (b = a * oa.current.__window.__height / oa.current.__window.__width | 0),
                        this._width = a,
                        this._height = b,
                        this.camera.resize(a, b),
                        this.camera.setPosition(a / 2, b / 2, -1),
                        this.camera.setRotation(0, 0, 0)) : (this.isMainScene() && d.Instance.__internal_scene.setDimensions(a, b, !0),
                        this._width = a,
                        this._height = b,
                        this.camera.resize(a, b),
                        null != this.draw2DEntity && (this.draw2DEntity.camera.resize(a, b),
                        this.draw2DEntity.camera.setPosition(a / 2, b / 2, -1),
                        this.draw2DEntity.camera.setRotation(0, 0, 0)),
                        null != this.fillRectEntity && (this.fillRectEntity.camera.resize(a, b),
                        this.fillRectEntity.camera.setPosition(a / 2, b / 2, -1),
                        this.fillRectEntity.camera.setRotation(0, 0, 0)),
                        this.firstActivation = !0)
                },
                draw2D: function(a, b, c, f, h, q, d, l, g, p, y, m) {
                    null == m && (m = 0);
                    null == y && (y = !0);
                    null == p && (p = !0);
                    null == g && (g = 0);
                    null == l && (l = !1);
                    null == d && (d = 1);
                    null == f && (f = Ia.NORMAL);
                    null == b && (b = new W);
                    null == a && ha.trace("Warning: Attempted to draw null Image to scene", {
                        fileName: "lemongine/Scene.hx",
                        lineNumber: 185,
                        className: "lemongine.Scene",
                        methodName: "draw2D"
                    });
                    null == c && (c = new ca(0,0,Q.toFloat(a.width),Q.toFloat(a.height)));
                    if (!(b.x >= this.get_width() || b.y >= this.get_height() || 0 >= b.x + c.width * d || 0 >= b.y + c.height * d)) {
                        if (null == this.draw2DEntity)
                            this.draw2DEntity = new Pb([],wb.createQuad(),Sb.getShader(f)),
                            this.draw2DEntity.camera = new Kc(cc.ORTHOGRAPHIC),
                            this.draw2DEntity.camera.resize(this.get_width(), this.get_height()),
                            this.draw2DEntity.camera.setPosition(this.get_width() / 2, this.get_height() / 2, -1),
                            this.draw2DEntity.camera.setRotation(0, 0, 0);
                        else {
                            var I = Sb.getShader(f);
                            this.draw2DEntity.shaderProgram.id != I.id && (this.draw2DEntity.shaderProgram = I)
                        }
                        this.draw2DEntity.useCamera = !p;
                        this.draw2DEntity.setTextureBuffer("texture", a);
                        l ? this.draw2DEntity.setAttrib("texClip", T.repeatArray([c.x, c.y + c.height, c.width, -c.height], 6)) : this.draw2DEntity.setAttrib("texClip", T.repeatArray([c.x, c.y, c.width, c.height], 6));
                        this.draw2DEntity.setUniform("texSize", [a.width, a.height]);
                        null == h ? this.draw2DEntity.setUniform("color", [1, 1, 1, 1]) : this.draw2DEntity.setUniform("color", [Q.toFloat(h.r) / Q.toFloat(255), Q.toFloat(h.g) / Q.toFloat(255), Q.toFloat(h.b) / Q.toFloat(255), Q.toFloat(h.a) / Q.toFloat(255)]);
                        null == q ? this.draw2DEntity.setUniform("colorOffset", [0, 0, 0, 0]) : this.draw2DEntity.setUniform("colorOffset", [Q.toFloat(q.r) / Q.toFloat(255), Q.toFloat(q.g) / Q.toFloat(255), Q.toFloat(q.b) / Q.toFloat(255), Q.toFloat(q.a) / Q.toFloat(255)]);
                        this.draw2DEntity.transform.reset().scale(c.width * d, c.height * d);
                        0 != m && this.draw2DEntity.transform.rotate(m, new va(0,0,1));
                        this.draw2DEntity.transform.translate(c.width * d / 2, c.height * d / 2).translate(b.x, b.y, g);
                        f != Ia.NORMAL && f != Ia.ADD && (this.draw2DEntity.setUniform("texClipBG", [c.x + b.x, c.y - b.y + this.get_height(), c.width * d, -c.height * d]),
                        this.draw2DEntity.setUniform("texSizeBG", [this.get_width(), this.get_height()]),
                        this.draw2DEntity.setTextureBuffer("background", this.get_image()));
                        this.draw2DEntity.blendMode = f;
                        this.draw2DEntity.isTransparent = y ? !0 : !1;
                        this.draw(this.draw2DEntity, !0)
                    }
                },
                draw2DFlipped: function(a, b, c, f, h, q, d, l, g, p, y) {
                    null == y && (y = 0);
                    null == p && (p = !0);
                    null == g && (g = !0);
                    null == l && (l = 0);
                    null == d && (d = 1);
                    this.draw2D(a, b, c, f, h, q, d, !0, l, g, p, y)
                },
                fillRect: function(a, b, c, f) {
                    null == f && (f = !1);
                    null == c && (c = 0);
                    null == this.fillRectEntity && (this.fillRectEntity = new Pb([],wb.createQuad(1, 1, !1, !1),ec.getShader()),
                    this.fillRectEntity.isTransparent = !0,
                    this.fillRectEntity.camera = new Kc(cc.ORTHOGRAPHIC),
                    this.fillRectEntity.camera.resize(this.get_width(), this.get_height()),
                    this.fillRectEntity.camera.setPosition(this.get_width() / 2, this.get_height() / 2, -1),
                    this.fillRectEntity.camera.setRotation(0, 0, 0),
                    this.fillRectEntity.useCamera = !0);
                    null == a && (a = new ca(0,0,this.get_width(),this.get_height()));
                    this.fillRectEntity.setUniform("color", [Q.toFloat(b.r) / Q.toFloat(255), Q.toFloat(b.g) / Q.toFloat(255), Q.toFloat(b.b) / Q.toFloat(255), Q.toFloat(b.a) / Q.toFloat(255)]);
                    this.fillRectEntity.transform.reset().translate(.5, .5).scale(a.width, a.height).translate(a.x, a.y, c);
                    f ? (null == yb.replaceBlendFunc && (yb.replaceBlendFunc = [A.gl.ONE, A.gl.ZERO, A.gl.ONE, A.gl.ZERO]),
                    this.fillRectEntity.customBlendFunc = yb.replaceBlendFunc) : this.fillRectEntity.customBlendFunc = null;
                    this.draw(this.fillRectEntity, !0)
                },
                get_glTexture: function() {
                    null == this._glTexture && na.activate(this);
                    return this._glTexture
                },
                set_glTexture: function(a) {
                    null != this._glTexture && (A.gl.bindFramebuffer(A.gl.FRAMEBUFFER, this.glFrameBuffer),
                    A.gl.framebufferTexture2D(A.gl.FRAMEBUFFER, A.gl.COLOR_ATTACHMENT0, A.gl.TEXTURE_2D, a, 0));
                    return this._glTexture = a
                },
                get_width: function() {
                    return this._width
                },
                get_height: function() {
                    return this._height
                },
                set_isBackFace: function(a) {
                    this.isBackFace = a;
                    na.currentScene == this && na.setCulling(this.cull, a);
                    return a
                },
                get_image: function() {
                    this.isImageDirty && this.toImage();
                    return this._image
                },
                __class__: yb
            };
            var fc = function(a, b, c) {
                var f = new p;
                f.h.vertex = "";
                f.h.uv = "";
                f.h.normal = "";
                f.h.modelMatrix = "";
                f.h.viewMatrix = "";
                f.h.projectionMatrix = "";
                f.h.time = "";
                this.builtinBuffers = f;
                this.attribs = new p;
                this.uniforms = new p;
                this.textureBuffers = new p;
                this.id = a;
                this.setShaders(b, c)
            };
            g["lemongine.ShaderProgram"] = fc;
            fc.__name__ = "lemongine.ShaderProgram";
            fc.prototype = {
                useProgram: function() {
                    A.gl.useProgram(this.program);
                    this.lastCamera = null;
                    this.updateProjectionMatrix(na.currentScene.camera)
                },
                updateProjectionMatrix: function(a) {
                    this.lastCamera != a && this.hasBuiltin("projectionMatrix") && this.setUniform(this.builtinBuffers.h.projectionMatrix, a.projectionMatrix.values, "matrix4")
                },
                setShaders: function(a, b) {
                    this.fragmentShaderRaw = a;
                    this.vertexShaderRaw = b;
                    this.fragmentShader = this.createShader(this.fragmentShaderRaw, A.gl.FRAGMENT_SHADER);
                    this.vertexShader = this.createShader(this.vertexShaderRaw, A.gl.VERTEX_SHADER);
                    this.program = A.gl.createProgram();
                    A.gl.attachShader(this.program, this.vertexShader);
                    A.gl.attachShader(this.program, this.fragmentShader);
                    A.gl.linkProgram(this.program)
                },
                setBuiltInBuffers: function(a, b, c, f, h, q, d) {
                    null == d && (d = "");
                    null == q && (q = "");
                    null == h && (h = "");
                    null == f && (f = "");
                    null == c && (c = "");
                    null == b && (b = "");
                    null == a && (a = "");
                    "" != a && (this.builtinBuffers.h.vertex = a,
                    this.setAttrib(a, "float"));
                    "" != h && (this.builtinBuffers.h.uv = h,
                    this.setAttrib(h, "float", 2));
                    "" != q && (this.builtinBuffers.h.normal = q,
                    this.setAttrib(q, "float", 3));
                    "" != b && (this.builtinBuffers.h.modelMatrix = b,
                    this.setUniform(b, null, "matrix4"));
                    "" != c && (this.builtinBuffers.h.viewMatrix = c,
                    this.setUniform(c, null, "matrix4"));
                    "" != f && (this.builtinBuffers.h.projectionMatrix = f,
                    this.setUniform(f, null, "matrix4"));
                    "" != d && (this.builtinBuffers.h.time = d,
                    this.setUniform(d, null, "float"))
                },
                setUniform: function(a, b, c) {
                    if (Object.prototype.hasOwnProperty.call(this.uniforms.h, a))
                        this.uniforms.h[a].value = b,
                        this.uniforms.h[a].set = !0;
                    else {
                        null == c && ha.trace("Uniform '" + a + "' doesn't exist on '" + this.id + "'!", {
                            fileName: "lemongine/ShaderProgram.hx",
                            lineNumber: 115,
                            className: "lemongine.ShaderProgram",
                            methodName: "setUniform"
                        });
                        var f = this.uniforms;
                        b = {
                            location: A.gl.getUniformLocation(this.program, a),
                            name: a,
                            type: c,
                            value: b,
                            set: null != b
                        };
                        f.h[a] = b
                    }
                    return this.uniforms.h[a].location
                },
                setAttrib: function(a, b, c, f, h) {
                    null == h && (h = 0);
                    null == f && (f = 0);
                    null == c && (c = 3);
                    null == b && (b = "");
                    if (!Object.prototype.hasOwnProperty.call(this.attribs.h, a)) {
                        "" == b && ha.trace("Attrib '" + a + "' doesn't exist on '" + this.id + "'!", {
                            fileName: "lemongine/ShaderProgram.hx",
                            lineNumber: 141,
                            className: "lemongine.ShaderProgram",
                            methodName: "setAttrib"
                        });
                        var q = this.attribs;
                        b = oc.createForShader(a, this, b, c, f, h);
                        q.h[a] = b
                    }
                    return this.attribs.h[a].location
                },
                hasBuiltin: function(a) {
                    return "" != this.builtinBuffers.h[a]
                },
                getBuiltin: function(a) {
                    return this.hasBuiltin(a) ? this.builtinBuffers.h[a] : null
                },
                createShader: function(a, b) {
                    var c = A.gl.createShader(b);
                    A.gl.shaderSource(c, a);
                    A.gl.compileShader(c);
                    0 == A.gl.getShaderParameter(c, A.gl.COMPILE_STATUS) && (a = A.gl.getShaderInfoLog(c),
                    b == A.gl.FRAGMENT_SHADER ? ha.trace("Fragment shader error in '" + this.id + "': " + a, {
                        fileName: "lemongine/ShaderProgram.hx",
                        lineNumber: 183,
                        className: "lemongine.ShaderProgram",
                        methodName: "createShader"
                    }) : b == A.gl.VERTEX_SHADER && ha.trace("Vertex shader error in '" + this.id + "': " + a, {
                        fileName: "lemongine/ShaderProgram.hx",
                        lineNumber: 184,
                        className: "lemongine.ShaderProgram",
                        methodName: "createShader"
                    }));
                    return c
                },
                __class__: fc
            };
            var Ed = function() {};
            g["lemongine.Sort"] = Ed;
            Ed.__name__ = "lemongine.Sort";
            Ed.insert = function(a, b, c, f) {
                null == f && (f = !1);
                if (0 == a.length)
                    a.push(b);
                else {
                    null == c && (c = function(a, b) {
                        return a - b
                    }
                    );
                    for (var h = 0, q = a.length - 1; ; ) {
                        var d = Math.floor((q + h) / 2)
                          , l = c(b, a[d]);
                        if (0 >= q - h) {
                            0 <= l ? a.splice(d + 1, 0, b) : a.splice(d, 0, b);
                            break
                        }
                        if (f || 0 != l)
                            0 <= l ? h = d + 1 : q = d;
                        else {
                            a.splice(d + 1, 0, b);
                            break
                        }
                    }
                }
            }
            ;
            var gc = function() {};
            g["lemongine.Web"] = gc;
            gc.__name__ = "lemongine.Web";
            gc.open = function(a) {
                rb.openURL(a, "_blank")
            }
            ;
            gc.send = function(a, b, c, f, h) {
                null == b && (b = !0);
                a = new Ac(a);
                if (null != c)
                    for (var q = Object.keys(c.h), d = q.length, l = 0; l < d; ) {
                        var g = q[l++];
                        a.addParameter(g, c.h[g])
                    }
                a.onError = function(a) {
                    null != h && h(a)
                }
                ;
                a.onData = function(a) {
                    null != f && f(a)
                }
                ;
                a.request(b)
            }
            ;
            gc.parseVariables = function(a) {
                for (var b = new p, c = a.split("&"), f = 0; f < c.length; )
                    if (a = c[f],
                    ++f,
                    "" != a)
                        if (-1 == a.indexOf("=")) {
                            var h = decodeURIComponent(a.split("+").join(" "));
                            b.h[h] = ""
                        } else
                            h = K.substr(a, 0, a.indexOf("=")),
                            a = K.substr(a, a.indexOf("=") + 1, null),
                            h = decodeURIComponent(h.split("+").join(" ")),
                            a = decodeURIComponent(a.split("+").join(" ")),
                            b.h[h] = a;
                return b
            }
            ;
            var oc = function(a, b, c) {
                this.dataOffset = this.dataStride = 0;
                this.dataCount = 3;
                this.dirtyStart = this.dirtyEnd = -1;
                this.dirtyBuffer = this.dirtyLength = !0;
                this.name = a;
                this.value = [];
                this.type = b;
                this.buffer = Uc.context.createBuffer()
            };
            g["lemongine.pieces.Attrib"] = oc;
            oc.__name__ = "lemongine.pieces.Attrib";
            oc.createForShader = function(a, b, c, f, h, q) {
                null == q && (q = 0);
                null == h && (h = 0);
                null == f && (f = 3);
                var d = new oc(a,c,!1);
                d.location = A.gl.getAttribLocation(b.program, a);
                -1 == d.location && ha.trace("Warning! Attribute '" + a + "' couldn't be found in shader!", {
                    fileName: "lemongine/pieces/Attrib.hx",
                    lineNumber: 95,
                    className: "lemongine.pieces.Attrib",
                    methodName: "createForShader"
                });
                d.name = a;
                d.type = c;
                d.dataCount = f;
                d.dataStride = h;
                d.dataOffset = q;
                return d
            }
            ;
            oc.prototype = {
                setValue: function(a, b, c, f) {
                    null == f && (f = -1);
                    null == c && (c = -1);
                    null == b && (b = !0);
                    this.value = a;
                    this.setDirty(b, c, f);
                    return this
                },
                getValue: function() {
                    return this.value
                },
                setDirty: function(a, b, c) {
                    null == c && (c = -1);
                    null == b && (b = -1);
                    null == a && (a = !0);
                    0 == this.dirtyBuffer ? (this.dirtyBuffer = !0,
                    1 == a ? this.dirtyLength = !0 : (this.dirtyLength = !1,
                    this.dirtyStart = b,
                    this.dirtyEnd = b + c)) : -1 != this.dirtyStart && (1 == a ? this.dirtyLength = !0 : 0 == this.dirtyLength && -1 != this.dirtyStart && (this.dirtyStart = Math.floor(Math.min(this.dirtyStart, b)),
                    this.dirtyEnd = Math.floor(Math.max(this.dirtyEnd, b + c))))
                },
                __class__: oc
            };
            var Dd = function(a, b, c, f, h) {
                this.glyph = a;
                this.x = b;
                this.y = c;
                this.frontOffset = f;
                this.backOffset = h
            };
            g["lemongine.pieces.BitmapFontGlyph"] = Dd;
            Dd.__name__ = "lemongine.pieces.BitmapFontGlyph";
            Dd.prototype = {
                __class__: Dd
            };
            var hd = function() {};
            g["lemongine.screens.BaseScreen"] = hd;
            hd.__name__ = "lemongine.screens.BaseScreen";
            hd.prototype = {
                loadAssets: function() {},
                initialize: function() {
                    return !0
                },
                run: function() {
                    return !0
                },
                __class__: hd
            };
            var dd = function() {
                this.wasPaused = !1;
                this.tick = 0;
                this.splashPixel = new W(4,4);
                this.splashStartTime = 0;
                this.splashArray = [];
                this.splashLookup = new ra;
                this.splashSoundPlayed = !1
            };
            g["lemongine.screens.SplashScreen"] = dd;
            dd.__name__ = "lemongine.screens.SplashScreen";
            dd.__super__ = hd;
            dd.prototype = n(hd.prototype, {
                loadAssets: function() {
                    this.splashImage = xa.loadImage("assets/images/zanzlanz.png");
                    this.splashSound = xa.loadSound("assets/sfx/zanzlanz-splash.ogg")
                },
                initialize: function() {
                    this.scene = new yb(d.Instance.scene.get_width(),d.Instance.scene.get_height());
                    this.scene.setup2D(this.scene.get_width(), this.scene.get_height(), (new Pa).fromHex(-16777216));
                    this.splashQuadPool = new ia(this.splashImage);
                    var a = Math.floor(Math.max(1, this.scene.get_width() / 320));
                    this.splashQuadPool.transform.translate(-140, -30, 0).scale(a, a).translate(this.scene.get_width() / 2, this.scene.get_height() / 2);
                    for (a = 0; 70 > a; )
                        for (var b = a++, c = 0; 18 > c; )
                            this.splashQuadPool.addQuad(new va(4 * b,4 * c++,0), null, new W);
                    this.splashQuadPool.addQuad(new va(58,2,0), null, new W);
                    this.splashQuadPool.addQuad(new va(112,2,0), null, new W);
                    this.splashQuadPool.addQuad(new va(174,2,0), null, new W);
                    for (a = 0; 14 > a; )
                        b = a++,
                        c = this.splashImage.getPixel(4 * b, 0),
                        this.splashLookup.h[c] = b,
                        this.splashArray[b] = new W(4 * b,1),
                        this.splashArray[b + 14] = new W(4 * b,5),
                        this.splashArray[b + 28] = new W(4 * b,9);
                    this.splashStartTime = (new Date).getTime() / 1E3;
                    return !0
                },
                run: function() {
                    if (1 == d.Instance.enginePaused)
                        return this.splashSoundPlayed ? (this.splashSound.stop(),
                        this.splashStartTime = (new Date).getTime() / 1E3 - this.tick / 30) : this.splashStartTime = (new Date).getTime() / 1E3,
                        this.wasPaused = !0,
                        !1;
                    this.wasPaused && (this.wasPaused = !1,
                    this.splashSoundPlayed && this.splashSound.play(.6, 0, (new Date).getTime() / 1E3 - this.splashStartTime));
                    this.tick = 30 * ((new Date).getTime() / 1E3 - this.splashStartTime) + 14;
                    var a = Math.max(0, Math.min(38, this.tick - 40)) + Math.max(0, this.tick - 106);
                    0 <= this.tick && 0 == this.splashSoundPlayed && d.Instance.firstInteraction && (this.splashSoundPlayed = !0,
                    this.splashSound.play(.6, 0, (new Date).getTime() / 1E3 - this.splashStartTime));
                    if (40 <= this.tick)
                        for (var b = 0; 70 > b; )
                            for (var c = b++, f = 0; 18 > f; ) {
                                var h = f++
                                  , q = this.splashLookup
                                  , l = this.splashImage.getPixel(c, h + 13);
                                q = q.h[l];
                                l = this.splashLookup;
                                var g = this.splashImage.getPixel(c, h + 31);
                                l = l.h[g];
                                -.7 < Math.sin(-a / 20 + (h + 5) / 200 + c / 200) ? this.splashQuadPool.updateQuad(c + 70 * h, new va(4 * c,4 * h,0), this.splashArray[Math.max(0, Math.min(13, Math.floor(Q.toFloat(l) + Math.max(0, 13 + 15 * Math.sin(-a / 20 + (h + 5) / 200 + c / 200))))) + 28], this.splashPixel) : 60 < this.tick && 35 > c && 4 > Math.abs(c + 2 * (h + 5) - 4 * (this.tick - 60) - 8) || 75 < this.tick && 35 <= c && 4 > Math.abs(c + 2 * (h + 5) - 4 * (this.tick - 75) - 30) ? this.splashQuadPool.updateQuad(c + 70 * h, new va(4 * c,4 * h,0), this.splashArray[Math.max(0, Math.min(13, Math.floor(Q.toFloat(q) + Math.max(0, 20 + 20 * Math.sin(-a / 20 + (h + 5) / 200 + c / 200))))) + 14], this.splashPixel) : (l = 3 * Math.sin(Math.floor(this.tick / 2) + 1E3 * Math.sin(.5 * c) + 100 * Math.sin(.24 * h)) + .5,
                                l *= .001 * Math.pow(this.tick - 90, 2),
                                this.splashQuadPool.updateQuad(c + 70 * h, new va(4 * c,4 * h,0), this.splashArray[Math.max(0, Math.min(13, Math.floor(Q.toFloat(q) + l)))], this.splashPixel))
                            }
                    10 < this.tick && 114 > this.tick ? this.splashQuadPool.updateQuad(1260, null, new W(70,40 - 10 * Math.floor(4 * this.splashFadeInOut(this.tick, 10, 10, 103, 15))), new W(54,10)) : this.splashQuadPool.updateQuad(1260, null, new W(0,0), new W(0,0));
                    20 < this.tick && 116 > this.tick ? this.splashQuadPool.updateQuad(1261, null, new W(124,40 - 10 * Math.floor(4 * this.splashFadeInOut(this.tick, 20, 10, 105, 15))), new W(62,10)) : this.splashQuadPool.updateQuad(1261, null, new W(0,0), new W(0,0));
                    30 < this.tick && 118 > this.tick ? this.splashQuadPool.updateQuad(1262, null, new W(186,40 - 10 * Math.floor(4 * this.splashFadeInOut(this.tick, 30, 10, 107, 15))), new W(50,10)) : this.splashQuadPool.updateQuad(1262, null, new W(0,0), new W(0,0));
                    if (135 <= this.tick)
                        return this.splashStartTime = (new Date).getTime() / 1E3,
                        this.splashSoundPlayed = !1,
                        !0;
                    this.scene.draw(this.splashQuadPool);
                    return !1
                },
                splashFadeInOut: function(a, b, c, f, h) {
                    return a < b ? 0 : a < b + c ? (a - b) / c : a < f ? 1 : a < f + h ? (f + h - a) / h : 0
                },
                __class__: dd
            });
            var ec = function() {};
            g["lemongine.shader.BasicColor"] = ec;
            ec.__name__ = "lemongine.shader.BasicColor";
            ec.getShader = function() {
                null == ec.shader && (ec.shader = new fc("lemongine.shader.BasicColor",ec.getFragmentShader(),ec.getVertexShader()),
                ec.shader.setBuiltInBuffers("vertexPosition", "modelMatrix", "cameraMatrix", "projectionMatrix"),
                ec.shader.setUniform("color", [1, 1, 1, 1], "float4"));
                return ec.shader
            }
            ;
            ec.getFragmentShader = function() {
                return "precision mediump float;\r\n\t\t\tuniform vec4 color;\r\n\t\t\t\r\n\t\t\tvoid main() {\r\n\t\t\t\tgl_FragColor = vec4(color);\r\n\t\t\t}\r\n\t\t\t"
            }
            ;
            ec.getVertexShader = function() {
                return "precision mediump float;\r\n\t\t\tattribute vec3 vertexPosition;\r\n\t\t\t\r\n\t\t\tuniform mat4 projectionMatrix;\r\n\t\t\tuniform mat4 cameraMatrix;\r\n\t\t\tuniform mat4 modelMatrix;\r\n\t\t\t\r\n\t\t\tvoid main () {\r\n\t\t\t\tgl_Position = projectionMatrix * cameraMatrix * modelMatrix * vec4(vertexPosition, 1.0);\r\n\t\t\t}\r\n\t\t\t"
            }
            ;
            var Tb = function() {};
            g["lemongine.shader.BasicFont"] = Tb;
            Tb.__name__ = "lemongine.shader.BasicFont";
            Tb.getShader = function(a) {
                if (null == a || a == Ia.ADD)
                    a = Ia.NORMAL;
                if (!Tb.shaders.exists(a)) {
                    var b = new fc("lemongine.shader.BasicFont." + z[a.__enum__].__constructs__[a._hx_index]._hx_name,Tb.getFragmentShader(a),Tb.getVertexShader());
                    b.setBuiltInBuffers("vertexPosition", "modelMatrix", "cameraMatrix", "projectionMatrix", "uvPosition");
                    b.setAttrib("texClip", "float", 4);
                    b.setUniform("texSize", [0, 0], "float2");
                    b.setUniform("color", [1, 1, 1, 1], "float4");
                    b.setUniform("colorOffset", [0, 0, 0, 0], "float4");
                    b.setUniform("mask", [-1, -1, -1, -1], "float4");
                    a != Ia.NORMAL && (b.setUniform("texClipBG", [0, 0, 0, 0], "float4"),
                    b.setUniform("texSizeBG", [0, 0], "float2"));
                    Tb.shaders.set(a, b)
                }
                return Tb.shaders.get(a)
            }
            ;
            Tb.getFragmentShader = function(a) {
                var b = "precision mediump float;\r\n\t\t\tvarying vec2 uvPositionF;\r\n\t\t\tvarying vec4 texClipF;\r\n\t\t\tvarying vec3 vertexPositionF;\r\n\t\t\t\r\n\t\t\tuniform sampler2D texture;\r\n\t\t\tuniform vec2 texSize;\r\n\t\t\tuniform vec4 colorOffset;\r\n\t\t\tuniform vec4 color;\r\n\t\t\tuniform vec4 mask;\r\n\t\t";
                if (a == Ia.NORMAL)
                    b += "\r\n\t\t\t\tvoid main () {\r\n\t\t\t\t\tvec4 src = texture2D(texture, mod((uvPositionF * texClipF.zw + texClipF.xy) / texSize.xy, 1.0));\r\n\t\t\t\t\t\r\n\t\t\t\t\tsrc.rgb /= src.a;\r\n\t\t\t\t\tsrc.rgba *= color;\r\n\t\t\t\t\tsrc.rgb *= src.a;\r\n\r\n\t\t\t\t\tif(mask.z != -1.0 &&\r\n\t\t\t\t\t\t(  vertexPositionF.x < mask.x\r\n\t\t\t\t\t\t|| vertexPositionF.y < mask.y\r\n\t\t\t\t\t\t|| vertexPositionF.x >= mask.x+mask.z\r\n\t\t\t\t\t\t|| vertexPositionF.y >= mask.y+mask.w )) {\r\n\t\t\t\t\t\tdiscard;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tgl_FragColor = clamp(colorOffset + src, 0.0, 1.0);\r\n\t\t\t\t}\r\n\t\t\t";
                else {
                    b += "\r\n\t\t\t\tuniform sampler2D background;\r\n\t\t\t\t\r\n\t\t\t\tuniform vec2 texSizeBG;\r\n\t\t\t\tuniform vec4 texClipBG;\r\n\t\t\t\t\r\n\t\t\t\tvoid main () {\r\n\t\t\t\t\tvec4 src1 = texture2D(texture, mod((uvPositionF * texClipF.zw + texClipF.xy) / texSize.xy, 1.0));\r\n\t\t\t\t\tvec4 dst1 = texture2D(background, mod((uvPositionF * texClipBG.zw + texClipBG.xy) / texSizeBG.xy, 1.0));\r\n\t\t\t\t\t\r\n\t\t\t\t\tvec3 src = src1.rgb;\r\n\t\t\t\t\tvec3 dst = dst1.rgb;\r\n\r\n\t\t\t\t\tif(mask.z != -1.0 &&\r\n\t\t\t\t\t\t(  vertexPositionF.x < mask.x\r\n\t\t\t\t\t\t|| vertexPositionF.y < mask.y\r\n\t\t\t\t\t\t|| vertexPositionF.x >= mask.x+mask.w\r\n\t\t\t\t\t\t|| vertexPositionF.y >= mask.y+mask.z )\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\tdiscard;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tvec4 mixedColor = vec4(";
                    switch (a._hx_index) {
                    case 1:
                        b += "src + dst";
                        break;
                    case 2:
                        b += "src * dst";
                        break;
                    case 3:
                        b += "src - dst";
                        break;
                    case 4:
                        b += "min(src, dst)";
                        break;
                    case 5:
                        b += "vec3((src.x == 0.0) ? 0.0 : (1.0 - ((1.0 - dst.x) / src.x)),\r\n\t\t\t\t\t\t\t\t\t\t  (src.y == 0.0) ? 0.0 : (1.0 - ((1.0 - dst.y) / src.y)),\r\n\t\t\t\t\t\t\t\t\t\t  (src.z == 0.0) ? 0.0 : (1.0 - ((1.0 - dst.z) / src.z)))";
                        break;
                    case 6:
                        b += "(src + dst) - 1.0";
                        break;
                    case 7:
                        b += "max(src, dst)";
                        break;
                    case 8:
                        b += "(src + dst) - (src * dst)";
                        break;
                    case 9:
                        b += "vec3((src.x == 1.0) ? 1.0 : min(1.0, dst.x / (1.0 - src.x)),\r\n\t\t\t\t\t\t\t\t\t\t  (src.y == 1.0) ? 1.0 : min(1.0, dst.y / (1.0 - src.y)),\r\n\t\t\t\t\t\t\t\t\t\t  (src.z == 1.0) ? 1.0 : min(1.0, dst.z / (1.0 - src.z)))";
                        break;
                    case 10:
                        b += "vec3((dst.x <= 0.5) ? (2.0 * src.x * dst.x) : (1.0 - 2.0 * (1.0 - dst.x) * (1.0 - src.x)),\r\n\t\t\t\t\t\t\t\t\t\t  (dst.y <= 0.5) ? (2.0 * src.y * dst.y) : (1.0 - 2.0 * (1.0 - dst.y) * (1.0 - src.y)),\r\n\t\t\t\t\t\t\t\t\t\t  (dst.z <= 0.5) ? (2.0 * src.z * dst.z) : (1.0 - 2.0 * (1.0 - dst.z) * (1.0 - src.z)))";
                        break;
                    case 11:
                        b += "vec3((src.x <= 0.5) ? (dst.x - (1.0 - 2.0 * src.x) * dst.x * (1.0 - dst.x)) : (((src.x > 0.5) && (dst.x <= 0.25)) ? (dst.x + (2.0 * src.x - 1.0) * (4.0 * dst.x * (4.0 * dst.x + 1.0) * (dst.x - 1.0) + 7.0 * dst.x)) : (dst.x + (2.0 * src.x - 1.0) * (sqrt(dst.x) - dst.x))),\r\n\t\t\t\t\t\t\t\t\t\t  (src.y <= 0.5) ? (dst.y - (1.0 - 2.0 * src.y) * dst.y * (1.0 - dst.y)) : (((src.y > 0.5) && (dst.y <= 0.25)) ? (dst.y + (2.0 * src.y - 1.0) * (4.0 * dst.y * (4.0 * dst.y + 1.0) * (dst.y - 1.0) + 7.0 * dst.y)) : (dst.y + (2.0 * src.y - 1.0) * (sqrt(dst.y) - dst.y))),\r\n\t\t\t\t\t\t\t\t\t\t  (src.z <= 0.5) ? (dst.z - (1.0 - 2.0 * src.z) * dst.z * (1.0 - dst.z)) : (((src.z > 0.5) && (dst.z <= 0.25)) ? (dst.z + (2.0 * src.z - 1.0) * (4.0 * dst.z * (4.0 * dst.z + 1.0) * (dst.z - 1.0) + 7.0 * dst.z)) : (dst.z + (2.0 * src.z - 1.0) * (sqrt(dst.z) - dst.z))))";
                        break;
                    case 12:
                        b += "vec3((src.x <= 0.5) ? (2.0 * src.x * dst.x) : (1.0 - 2.0 * (1.0 - src.x) * (1.0 - dst.x)),\r\n\t\t\t\t\t\t\t\t\t\t  (src.y <= 0.5) ? (2.0 * src.y * dst.y) : (1.0 - 2.0 * (1.0 - src.y) * (1.0 - dst.y)),\r\n\t\t\t\t\t\t\t\t\t\t  (src.z <= 0.5) ? (2.0 * src.z * dst.z) : (1.0 - 2.0 * (1.0 - src.z) * (1.0 - dst.z)))";
                        break;
                    case 13:
                        b += "vec3((src.x <= 0.5) ? (1.0 - (1.0 - dst.x) / (2.0 * src.x)) : (dst.x / (2.0 * (1.0 - src.x))),\r\n\t\t\t\t\t\t\t\t\t\t  (src.y <= 0.5) ? (1.0 - (1.0 - dst.y) / (2.0 * src.y)) : (dst.y / (2.0 * (1.0 - src.y))),\r\n\t\t\t\t\t\t\t\t\t\t  (src.z <= 0.5) ? (1.0 - (1.0 - dst.z) / (2.0 * src.z)) : (dst.z / (2.0 * (1.0 - src.z))))";
                        break;
                    case 14:
                        b += "2.0 * src + dst - 1.0";
                        break;
                    case 15:
                        b += "vec3((src.x > 0.5) ? max(dst.x, 2.0 * (src.x - 0.5)) : min(dst.x, 2.0 * src.x),\r\n\t\t\t\t\t\t\t\t\t\t  (src.x > 0.5) ? max(dst.y, 2.0 * (src.y - 0.5)) : min(dst.y, 2.0 * src.y),\r\n\t\t\t\t\t\t\t\t\t\t  (src.z > 0.5) ? max(dst.z, 2.0 * (src.z - 0.5)) : min(dst.z, 2.0 * src.z))";
                        break;
                    case 16:
                        b += "abs(dst - src)";
                        break;
                    case 17:
                        b += "src + dst - 2.0 * src * dst";
                        break;
                    default:
                        b = "src"
                    }
                    b += ", src1.a);\r\n\t\t\t\t\r\n\t\t\t\tgl_FragColor = clamp(colorOffset + color*mixedColor, 0.0, 1.0);\r\n\t\t\t}\r\n\t\t\t"
                }
                return b
            }
            ;
            Tb.getVertexShader = function() {
                return "precision mediump float;\r\n\t\t\tattribute vec3 vertexPosition;\r\n\t\t\tattribute vec2 uvPosition;\r\n\t\t\tattribute vec4 texClip;\r\n\t\t\t\r\n\t\t\tvarying vec4 texClipF;\r\n\t\t\tvarying vec2 uvPositionF;\r\n\t\t\tvarying vec3 vertexPositionF;\r\n\t\t\t\r\n\t\t\tuniform mat4 projectionMatrix;\r\n\t\t\tuniform mat4 cameraMatrix;\r\n\t\t\tuniform mat4 modelMatrix;\r\n\t\t\t\r\n\t\t\tvoid main () {\r\n\t\t\t\tuvPositionF = uvPosition;\r\n\t\t\t\ttexClipF = texClip;\r\n\t\t\t\tvertexPositionF = vertexPosition;\r\n\t\t\t\t\r\n\t\t\t\tgl_Position = projectionMatrix * cameraMatrix * modelMatrix * vec4(vertexPosition, 1.0);\r\n\t\t\t}\r\n\t\t\t"
            }
            ;
            var Ia = z["lemongine.shader.BlendMode"] = {
                __ename__: "lemongine.shader.BlendMode",
                __constructs__: null,
                NORMAL: {
                    _hx_name: "NORMAL",
                    _hx_index: 0,
                    __enum__: "lemongine.shader.BlendMode",
                    toString: m
                },
                ADD: {
                    _hx_name: "ADD",
                    _hx_index: 1,
                    __enum__: "lemongine.shader.BlendMode",
                    toString: m
                },
                MULTIPLY: {
                    _hx_name: "MULTIPLY",
                    _hx_index: 2,
                    __enum__: "lemongine.shader.BlendMode",
                    toString: m
                },
                SUBTRACT: {
                    _hx_name: "SUBTRACT",
                    _hx_index: 3,
                    __enum__: "lemongine.shader.BlendMode",
                    toString: m
                },
                DARKEN: {
                    _hx_name: "DARKEN",
                    _hx_index: 4,
                    __enum__: "lemongine.shader.BlendMode",
                    toString: m
                },
                COLOR_BURN: {
                    _hx_name: "COLOR_BURN",
                    _hx_index: 5,
                    __enum__: "lemongine.shader.BlendMode",
                    toString: m
                },
                LINEAR_BURN: {
                    _hx_name: "LINEAR_BURN",
                    _hx_index: 6,
                    __enum__: "lemongine.shader.BlendMode",
                    toString: m
                },
                LIGHTEN: {
                    _hx_name: "LIGHTEN",
                    _hx_index: 7,
                    __enum__: "lemongine.shader.BlendMode",
                    toString: m
                },
                SCREEN: {
                    _hx_name: "SCREEN",
                    _hx_index: 8,
                    __enum__: "lemongine.shader.BlendMode",
                    toString: m
                },
                COLOR_DODGE: {
                    _hx_name: "COLOR_DODGE",
                    _hx_index: 9,
                    __enum__: "lemongine.shader.BlendMode",
                    toString: m
                },
                OVERLAY: {
                    _hx_name: "OVERLAY",
                    _hx_index: 10,
                    __enum__: "lemongine.shader.BlendMode",
                    toString: m
                },
                SOFT_LIGHT: {
                    _hx_name: "SOFT_LIGHT",
                    _hx_index: 11,
                    __enum__: "lemongine.shader.BlendMode",
                    toString: m
                },
                HARD_LIGHT: {
                    _hx_name: "HARD_LIGHT",
                    _hx_index: 12,
                    __enum__: "lemongine.shader.BlendMode",
                    toString: m
                },
                VIVID_LIGHT: {
                    _hx_name: "VIVID_LIGHT",
                    _hx_index: 13,
                    __enum__: "lemongine.shader.BlendMode",
                    toString: m
                },
                LINEAR_LIGHT: {
                    _hx_name: "LINEAR_LIGHT",
                    _hx_index: 14,
                    __enum__: "lemongine.shader.BlendMode",
                    toString: m
                },
                PIN_LIGHT: {
                    _hx_name: "PIN_LIGHT",
                    _hx_index: 15,
                    __enum__: "lemongine.shader.BlendMode",
                    toString: m
                },
                DIFFERENCE: {
                    _hx_name: "DIFFERENCE",
                    _hx_index: 16,
                    __enum__: "lemongine.shader.BlendMode",
                    toString: m
                },
                EXCLUSION: {
                    _hx_name: "EXCLUSION",
                    _hx_index: 17,
                    __enum__: "lemongine.shader.BlendMode",
                    toString: m
                }
            };
            Ia.__constructs__ = [Ia.NORMAL, Ia.ADD, Ia.MULTIPLY, Ia.SUBTRACT, Ia.DARKEN, Ia.COLOR_BURN, Ia.LINEAR_BURN, Ia.LIGHTEN, Ia.SCREEN, Ia.COLOR_DODGE, Ia.OVERLAY, Ia.SOFT_LIGHT, Ia.HARD_LIGHT, Ia.VIVID_LIGHT, Ia.LINEAR_LIGHT, Ia.PIN_LIGHT, Ia.DIFFERENCE, Ia.EXCLUSION];
            var Sb = function() {};
            g["lemongine.shader.BasicTexture"] = Sb;
            Sb.__name__ = "lemongine.shader.BasicTexture";
            Sb.getShader = function(a) {
                if (null == a || a == Ia.ADD)
                    a = Ia.NORMAL;
                if (!Sb.shaders.exists(a)) {
                    var b = new fc("lemongine.shader.BasicTexture." + z[a.__enum__].__constructs__[a._hx_index]._hx_name,Sb.getFragmentShader(a),Sb.getVertexShader());
                    b.setBuiltInBuffers("vertexPosition", "modelMatrix", "cameraMatrix", "projectionMatrix", "uvPosition");
                    b.setAttrib("texClip", "float", 4);
                    b.setUniform("texSize", [0, 0], "float2");
                    b.setUniform("color", [1, 1, 1, 1], "float4");
                    b.setUniform("colorOffset", [0, 0, 0, 0], "float4");
                    a != Ia.NORMAL && (b.setUniform("texClipBG", [0, 0, 0, 0], "float4"),
                    b.setUniform("texSizeBG", [0, 0], "float2"));
                    Sb.shaders.set(a, b)
                }
                return Sb.shaders.get(a)
            }
            ;
            Sb.getFragmentShader = function(a) {
                var b = "precision mediump float;\r\n\t\t\tvarying vec2 uvPositionF;\r\n\t\t\tvarying vec4 texClipF;\r\n\t\t\t\r\n\t\t\tuniform sampler2D texture;\r\n\t\t\tuniform vec2 texSize;\r\n\t\t\tuniform vec4 colorOffset;\r\n\t\t\tuniform vec4 color;\r\n\t\t";
                if (a == Ia.NORMAL)
                    b += "\r\n\t\t\t\tvoid main () {\r\n\t\t\t\t\tvec4 src = texture2D(texture, mod((uvPositionF * texClipF.zw + texClipF.xy) / texSize.xy, 1.0));\r\n\t\t\t\t\t\r\n\t\t\t\t\tsrc.rgb /= src.a;\r\n\t\t\t\t\tsrc.rgba *= color;\r\n\t\t\t\t\tsrc.rgb *= src.a;\r\n\t\t\t\t\t\r\n\t\t\t\t\tgl_FragColor = clamp(colorOffset + src, 0.0, 1.0);\r\n\t\t\t\t}\r\n\t\t\t";
                else {
                    b += "\r\n\t\t\t\tuniform sampler2D background;\r\n\t\t\t\t\r\n\t\t\t\tuniform vec2 texSizeBG;\r\n\t\t\t\tuniform vec4 texClipBG;\r\n\t\t\t\t\r\n\t\t\t\tvoid main () {\r\n\t\t\t\t\tvec4 src1 = texture2D(texture, mod((uvPositionF * texClipF.zw + texClipF.xy) / texSize.xy, 1.0));\r\n\t\t\t\t\tvec4 dst1 = texture2D(background, mod((uvPositionF * texClipBG.zw + texClipBG.xy) / texSizeBG.xy, 1.0));\r\n\t\t\t\t\t\r\n\t\t\t\t\tvec3 src = src1.rgb;\r\n\t\t\t\t\tvec3 dst = dst1.rgb;\r\n\t\t\t\t\t\r\n\t\t\t\t\tvec4 mixedColor = vec4(";
                    switch (a._hx_index) {
                    case 1:
                        b += "src + dst";
                        break;
                    case 2:
                        b += "src * dst";
                        break;
                    case 3:
                        b += "src - dst";
                        break;
                    case 4:
                        b += "min(src, dst)";
                        break;
                    case 5:
                        b += "vec3((src.x == 0.0) ? 0.0 : (1.0 - ((1.0 - dst.x) / src.x)),\r\n\t\t\t\t\t\t\t\t\t\t  (src.y == 0.0) ? 0.0 : (1.0 - ((1.0 - dst.y) / src.y)),\r\n\t\t\t\t\t\t\t\t\t\t  (src.z == 0.0) ? 0.0 : (1.0 - ((1.0 - dst.z) / src.z)))";
                        break;
                    case 6:
                        b += "(src + dst) - 1.0";
                        break;
                    case 7:
                        b += "max(src, dst)";
                        break;
                    case 8:
                        b += "(src + dst) - (src * dst)";
                        break;
                    case 9:
                        b += "vec3((src.x == 1.0) ? 1.0 : min(1.0, dst.x / (1.0 - src.x)),\r\n\t\t\t\t\t\t\t\t\t\t  (src.y == 1.0) ? 1.0 : min(1.0, dst.y / (1.0 - src.y)),\r\n\t\t\t\t\t\t\t\t\t\t  (src.z == 1.0) ? 1.0 : min(1.0, dst.z / (1.0 - src.z)))";
                        break;
                    case 10:
                        b += "vec3((dst.x <= 0.5) ? (2.0 * src.x * dst.x) : (1.0 - 2.0 * (1.0 - dst.x) * (1.0 - src.x)),\r\n\t\t\t\t\t\t\t\t\t\t  (dst.y <= 0.5) ? (2.0 * src.y * dst.y) : (1.0 - 2.0 * (1.0 - dst.y) * (1.0 - src.y)),\r\n\t\t\t\t\t\t\t\t\t\t  (dst.z <= 0.5) ? (2.0 * src.z * dst.z) : (1.0 - 2.0 * (1.0 - dst.z) * (1.0 - src.z)))";
                        break;
                    case 11:
                        b += "vec3((src.x <= 0.5) ? (dst.x - (1.0 - 2.0 * src.x) * dst.x * (1.0 - dst.x)) : (((src.x > 0.5) && (dst.x <= 0.25)) ? (dst.x + (2.0 * src.x - 1.0) * (4.0 * dst.x * (4.0 * dst.x + 1.0) * (dst.x - 1.0) + 7.0 * dst.x)) : (dst.x + (2.0 * src.x - 1.0) * (sqrt(dst.x) - dst.x))),\r\n\t\t\t\t\t\t\t\t\t\t  (src.y <= 0.5) ? (dst.y - (1.0 - 2.0 * src.y) * dst.y * (1.0 - dst.y)) : (((src.y > 0.5) && (dst.y <= 0.25)) ? (dst.y + (2.0 * src.y - 1.0) * (4.0 * dst.y * (4.0 * dst.y + 1.0) * (dst.y - 1.0) + 7.0 * dst.y)) : (dst.y + (2.0 * src.y - 1.0) * (sqrt(dst.y) - dst.y))),\r\n\t\t\t\t\t\t\t\t\t\t  (src.z <= 0.5) ? (dst.z - (1.0 - 2.0 * src.z) * dst.z * (1.0 - dst.z)) : (((src.z > 0.5) && (dst.z <= 0.25)) ? (dst.z + (2.0 * src.z - 1.0) * (4.0 * dst.z * (4.0 * dst.z + 1.0) * (dst.z - 1.0) + 7.0 * dst.z)) : (dst.z + (2.0 * src.z - 1.0) * (sqrt(dst.z) - dst.z))))";
                        break;
                    case 12:
                        b += "vec3((src.x <= 0.5) ? (2.0 * src.x * dst.x) : (1.0 - 2.0 * (1.0 - src.x) * (1.0 - dst.x)),\r\n\t\t\t\t\t\t\t\t\t\t  (src.y <= 0.5) ? (2.0 * src.y * dst.y) : (1.0 - 2.0 * (1.0 - src.y) * (1.0 - dst.y)),\r\n\t\t\t\t\t\t\t\t\t\t  (src.z <= 0.5) ? (2.0 * src.z * dst.z) : (1.0 - 2.0 * (1.0 - src.z) * (1.0 - dst.z)))";
                        break;
                    case 13:
                        b += "vec3((src.x <= 0.5) ? (1.0 - (1.0 - dst.x) / (2.0 * src.x)) : (dst.x / (2.0 * (1.0 - src.x))),\r\n\t\t\t\t\t\t\t\t\t\t  (src.y <= 0.5) ? (1.0 - (1.0 - dst.y) / (2.0 * src.y)) : (dst.y / (2.0 * (1.0 - src.y))),\r\n\t\t\t\t\t\t\t\t\t\t  (src.z <= 0.5) ? (1.0 - (1.0 - dst.z) / (2.0 * src.z)) : (dst.z / (2.0 * (1.0 - src.z))))";
                        break;
                    case 14:
                        b += "2.0 * src + dst - 1.0";
                        break;
                    case 15:
                        b += "vec3((src.x > 0.5) ? max(dst.x, 2.0 * (src.x - 0.5)) : min(dst.x, 2.0 * src.x),\r\n\t\t\t\t\t\t\t\t\t\t  (src.x > 0.5) ? max(dst.y, 2.0 * (src.y - 0.5)) : min(dst.y, 2.0 * src.y),\r\n\t\t\t\t\t\t\t\t\t\t  (src.z > 0.5) ? max(dst.z, 2.0 * (src.z - 0.5)) : min(dst.z, 2.0 * src.z))";
                        break;
                    case 16:
                        b += "abs(dst - src)";
                        break;
                    case 17:
                        b += "src + dst - 2.0 * src * dst";
                        break;
                    default:
                        b = "src"
                    }
                    b += ", src1.a);\r\n\t\t\t\t\r\n\t\t\t\tgl_FragColor = clamp(colorOffset + color*mixedColor, 0.0, 1.0);\r\n\t\t\t}\r\n\t\t\t"
                }
                return b
            }
            ;
            Sb.getVertexShader = function() {
                return "precision mediump float;\r\n\t\t\tattribute vec3 vertexPosition;\r\n\t\t\tattribute vec2 uvPosition;\r\n\t\t\tattribute vec4 texClip;\r\n\t\t\t\r\n\t\t\tvarying vec4 texClipF;\r\n\t\t\tvarying vec2 uvPositionF;\r\n\t\t\t\r\n\t\t\tuniform mat4 projectionMatrix;\r\n\t\t\tuniform mat4 cameraMatrix;\r\n\t\t\tuniform mat4 modelMatrix;\r\n\t\t\t\r\n\t\t\tvoid main () {\r\n\t\t\t\tuvPositionF = uvPosition;\r\n\t\t\t\ttexClipF = texClip;\r\n\t\t\t\t\r\n\t\t\t\tgl_Position = projectionMatrix * cameraMatrix * modelMatrix * vec4(vertexPosition, 1.0);\r\n\t\t\t}\r\n\t\t\t"
            }
            ;
            var Wb = function() {};
            g["lemongine.shader.BasicTextureSingle"] = Wb;
            Wb.__name__ = "lemongine.shader.BasicTextureSingle";
            Wb.getShader = function(a) {
                if (null == a || a == Ia.ADD)
                    a = Ia.NORMAL;
                if (!Wb.shaders.exists(a)) {
                    var b = new fc("lemongine.shader.BasicTexture." + z[a.__enum__].__constructs__[a._hx_index]._hx_name,Wb.getFragmentShader(a),Wb.getVertexShader());
                    b.setBuiltInBuffers("vertexPosition", "modelMatrix", "cameraMatrix", "projectionMatrix", "uvPosition");
                    b.setUniform("texClip", [0, 0, 0, 0], "float4");
                    b.setUniform("texSize", [0, 0], "float2");
                    b.setUniform("color", [1, 1, 1, 1], "float4");
                    b.setUniform("colorOffset", [0, 0, 0, 0], "float4");
                    b.setUniform("wrap", [1, 1], "float2");
                    a != Ia.NORMAL && (b.setUniform("texClipBG", [0, 0, 0, 0], "float4"),
                    b.setUniform("texSizeBG", [0, 0], "float2"));
                    Wb.shaders.set(a, b)
                }
                return Wb.shaders.get(a)
            }
            ;
            Wb.setupEntity = function(a, b, c, f, h, q, d, l, g, p) {
                null == d && (d = !0);
                null == q && (q = !0);
                a.setTextureBuffer("texture", b);
                null != c ? a.setUniform("texClip", [c.x, c.y, c.width, c.height]) : a.setUniform("texClip", [0, 0, b.width, b.height]);
                a.setUniform("texSize", [b.width, b.height]);
                null != f ? a.setUniform("color", f.toFloatArray()) : a.setUniform("color", [1, 1, 1, 1]);
                null != h ? a.setUniform("colorOffset", h.toFloatArray()) : a.setUniform("colorOffset", [0, 0, 0, 0]);
                a.setUniform("wrap", [q ? 1 : 0, d ? 1 : 0]);
                null != l && (a.setTextureBuffer("background", b),
                null != g ? a.setUniform("texClipBG", [g.x, g.y, g.width, g.height]) : a.setUniform("texClipBG", [0, 0, l.width, l.height]),
                a.setUniform("texSizeBG", [l.width, l.height]))
            }
            ;
            Wb.getFragmentShader = function(a) {
                var b = "precision mediump float;\r\n\t\t\tvarying vec2 uvPositionF;\r\n\t\t\t\r\n\t\t\tuniform sampler2D texture;\r\n\t\t\tuniform vec2 texSize;\r\n\t\t\tuniform vec4 colorOffset;\r\n\t\t\tuniform vec4 color;\r\n\t\t\tuniform vec4 texClip;\r\n\t\t\tuniform vec2 wrap;\r\n\t\t";
                if (a == Ia.NORMAL)
                    b += "\r\n\t\t\t\tvoid main () {\r\n\t\t\t\t\tvec2 val = (uvPositionF * texClip.zw + texClip.xy) / texSize.xy;\r\n\t\t\t\t\tvec4 src = texture2D(texture, mod(val, 1.0)*wrap + clamp(val, 0.0, 1.0)*(1.0-wrap));\r\n\t\t\t\t\t\r\n\t\t\t\t\tsrc.rgb /= src.a;\r\n\t\t\t\t\tsrc.rgba *= color;\r\n\t\t\t\t\tsrc.rgb *= src.a;\r\n\t\t\t\t\t\r\n\t\t\t\t\tgl_FragColor = clamp(colorOffset + src, 0.0, 1.0);\r\n\t\t\t\t}\r\n\t\t\t";
                else {
                    b += "\r\n\t\t\t\tuniform sampler2D background;\r\n\t\t\t\t\r\n\t\t\t\tuniform vec2 texSizeBG;\r\n\t\t\t\tuniform vec4 texClipBG;\r\n\t\t\t\t\r\n\t\t\t\tvoid main () {\r\n\t\t\t\t\tvec4 src1 = texture2D(texture, mod((uvPositionF * texClip.zw + texClip.xy) / texSize.xy, 1.0));\r\n\t\t\t\t\tvec4 dst1 = texture2D(background, mod((uvPositionF * texClipBG.zw + texClipBG.xy) / texSizeBG.xy, 1.0));\r\n\t\t\t\t\t\r\n\t\t\t\t\tvec3 src = src1.rgb;\r\n\t\t\t\t\tvec3 dst = dst1.rgb;\r\n\t\t\t\t\t\r\n\t\t\t\t\tvec4 mixedColor = vec4(";
                    switch (a._hx_index) {
                    case 1:
                        b += "src + dst";
                        break;
                    case 2:
                        b += "src * dst";
                        break;
                    case 3:
                        b += "src - dst";
                        break;
                    case 4:
                        b += "min(src, dst)";
                        break;
                    case 5:
                        b += "vec3((src.x == 0.0) ? 0.0 : (1.0 - ((1.0 - dst.x) / src.x)),\r\n\t\t\t\t\t\t\t\t\t\t  (src.y == 0.0) ? 0.0 : (1.0 - ((1.0 - dst.y) / src.y)),\r\n\t\t\t\t\t\t\t\t\t\t  (src.z == 0.0) ? 0.0 : (1.0 - ((1.0 - dst.z) / src.z)))";
                        break;
                    case 6:
                        b += "(src + dst) - 1.0";
                        break;
                    case 7:
                        b += "max(src, dst)";
                        break;
                    case 8:
                        b += "(src + dst) - (src * dst)";
                        break;
                    case 9:
                        b += "vec3((src.x == 1.0) ? 1.0 : min(1.0, dst.x / (1.0 - src.x)),\r\n\t\t\t\t\t\t\t\t\t\t  (src.y == 1.0) ? 1.0 : min(1.0, dst.y / (1.0 - src.y)),\r\n\t\t\t\t\t\t\t\t\t\t  (src.z == 1.0) ? 1.0 : min(1.0, dst.z / (1.0 - src.z)))";
                        break;
                    case 10:
                        b += "vec3((dst.x <= 0.5) ? (2.0 * src.x * dst.x) : (1.0 - 2.0 * (1.0 - dst.x) * (1.0 - src.x)),\r\n\t\t\t\t\t\t\t\t\t\t  (dst.y <= 0.5) ? (2.0 * src.y * dst.y) : (1.0 - 2.0 * (1.0 - dst.y) * (1.0 - src.y)),\r\n\t\t\t\t\t\t\t\t\t\t  (dst.z <= 0.5) ? (2.0 * src.z * dst.z) : (1.0 - 2.0 * (1.0 - dst.z) * (1.0 - src.z)))";
                        break;
                    case 11:
                        b += "vec3((src.x <= 0.5) ? (dst.x - (1.0 - 2.0 * src.x) * dst.x * (1.0 - dst.x)) : (((src.x > 0.5) && (dst.x <= 0.25)) ? (dst.x + (2.0 * src.x - 1.0) * (4.0 * dst.x * (4.0 * dst.x + 1.0) * (dst.x - 1.0) + 7.0 * dst.x)) : (dst.x + (2.0 * src.x - 1.0) * (sqrt(dst.x) - dst.x))),\r\n\t\t\t\t\t\t\t\t\t\t  (src.y <= 0.5) ? (dst.y - (1.0 - 2.0 * src.y) * dst.y * (1.0 - dst.y)) : (((src.y > 0.5) && (dst.y <= 0.25)) ? (dst.y + (2.0 * src.y - 1.0) * (4.0 * dst.y * (4.0 * dst.y + 1.0) * (dst.y - 1.0) + 7.0 * dst.y)) : (dst.y + (2.0 * src.y - 1.0) * (sqrt(dst.y) - dst.y))),\r\n\t\t\t\t\t\t\t\t\t\t  (src.z <= 0.5) ? (dst.z - (1.0 - 2.0 * src.z) * dst.z * (1.0 - dst.z)) : (((src.z > 0.5) && (dst.z <= 0.25)) ? (dst.z + (2.0 * src.z - 1.0) * (4.0 * dst.z * (4.0 * dst.z + 1.0) * (dst.z - 1.0) + 7.0 * dst.z)) : (dst.z + (2.0 * src.z - 1.0) * (sqrt(dst.z) - dst.z))))";
                        break;
                    case 12:
                        b += "vec3((src.x <= 0.5) ? (2.0 * src.x * dst.x) : (1.0 - 2.0 * (1.0 - src.x) * (1.0 - dst.x)),\r\n\t\t\t\t\t\t\t\t\t\t  (src.y <= 0.5) ? (2.0 * src.y * dst.y) : (1.0 - 2.0 * (1.0 - src.y) * (1.0 - dst.y)),\r\n\t\t\t\t\t\t\t\t\t\t  (src.z <= 0.5) ? (2.0 * src.z * dst.z) : (1.0 - 2.0 * (1.0 - src.z) * (1.0 - dst.z)))";
                        break;
                    case 13:
                        b += "vec3((src.x <= 0.5) ? (1.0 - (1.0 - dst.x) / (2.0 * src.x)) : (dst.x / (2.0 * (1.0 - src.x))),\r\n\t\t\t\t\t\t\t\t\t\t  (src.y <= 0.5) ? (1.0 - (1.0 - dst.y) / (2.0 * src.y)) : (dst.y / (2.0 * (1.0 - src.y))),\r\n\t\t\t\t\t\t\t\t\t\t  (src.z <= 0.5) ? (1.0 - (1.0 - dst.z) / (2.0 * src.z)) : (dst.z / (2.0 * (1.0 - src.z))))";
                        break;
                    case 14:
                        b += "2.0 * src + dst - 1.0";
                        break;
                    case 15:
                        b += "vec3((src.x > 0.5) ? max(dst.x, 2.0 * (src.x - 0.5)) : min(dst.x, 2.0 * src.x),\r\n\t\t\t\t\t\t\t\t\t\t  (src.x > 0.5) ? max(dst.y, 2.0 * (src.y - 0.5)) : min(dst.y, 2.0 * src.y),\r\n\t\t\t\t\t\t\t\t\t\t  (src.z > 0.5) ? max(dst.z, 2.0 * (src.z - 0.5)) : min(dst.z, 2.0 * src.z))";
                        break;
                    case 16:
                        b += "abs(dst - src)";
                        break;
                    case 17:
                        b += "src + dst - 2.0 * src * dst";
                        break;
                    default:
                        b = "src"
                    }
                    b += ", src1.a);\r\n\t\t\t\t\r\n\t\t\t\tgl_FragColor = clamp(colorOffset + color*mixedColor, 0.0, 1.0);\r\n\t\t\t}\r\n\t\t\t"
                }
                return b
            }
            ;
            Wb.getVertexShader = function() {
                return "precision mediump float;\r\n\t\t\tattribute vec3 vertexPosition;\r\n\t\t\tattribute vec2 uvPosition;\r\n\r\n\t\t\tvarying vec2 uvPositionF;\r\n\t\t\t\r\n\t\t\tuniform mat4 projectionMatrix;\r\n\t\t\tuniform mat4 cameraMatrix;\r\n\t\t\tuniform mat4 modelMatrix;\r\n\t\t\t\r\n\t\t\tvoid main () {\r\n\t\t\t\tuvPositionF = uvPosition;\r\n\t\t\t\t\r\n\t\t\t\tgl_Position = projectionMatrix * cameraMatrix * modelMatrix * vec4(vertexPosition, 1.0);\r\n\t\t\t}\r\n\t\t\t"
            }
            ;
            var hc = function() {};
            g["lemongine.shader.BasicVertexColor"] = hc;
            hc.__name__ = "lemongine.shader.BasicVertexColor";
            hc.getShader = function() {
                null == hc.shader && (hc.shader = new fc("lemongine.shader.BasicVertexColor",hc.getFragmentShader(),hc.getVertexShader()),
                hc.shader.setBuiltInBuffers("vertexPosition", "modelMatrix", "cameraMatrix", "projectionMatrix"),
                hc.shader.setAttrib("color", "float", 4));
                return hc.shader
            }
            ;
            hc.getFragmentShader = function() {
                return "precision mediump float;\r\n\t\t\tvarying vec4 colorF;\r\n\t\t\t\r\n\t\t\tvoid main() {\r\n\t\t\t\tgl_FragColor = vec4(colorF);\r\n\t\t\t}\r\n\t\t\t"
            }
            ;
            hc.getVertexShader = function() {
                return "precision mediump float;\r\n\t\t\tattribute vec3 vertexPosition;\r\n\t\t\t\r\n\t\t\tattribute vec4 color;\r\n\t\t\tvarying vec4 colorF;\r\n\t\t\t\r\n\t\t\tuniform mat4 projectionMatrix;\r\n\t\t\tuniform mat4 cameraMatrix;\r\n\t\t\tuniform mat4 modelMatrix;\r\n\t\t\t\r\n\t\t\tvoid main () {\r\n\t\t\t\tcolorF = color;\r\n\t\t\t\t\r\n\t\t\t\tgl_Position = projectionMatrix * cameraMatrix * modelMatrix * vec4(vertexPosition, 1.0);\r\n\t\t\t}\r\n\t\t\t"
            }
            ;
            var sd = function() {
                this.connected = !0;
                this.buttons = [];
                this.axes = []
            };
            g["lime._internal.backend.html5.GameDeviceData"] = sd;
            sd.__name__ = "lime._internal.backend.html5.GameDeviceData";
            sd.prototype = {
                __class__: sd
            };
            var qa = function() {
                this.validStatus0 = (new pa("Tizen","gi")).match(window.navigator.userAgent)
            };
            g["lime._internal.backend.html5.HTML5HTTPRequest"] = qa;
            qa.__name__ = "lime._internal.backend.html5.HTML5HTTPRequest";
            qa.loadImage = function(a) {
                var b = new Ib;
                qa.activeRequests < qa.requestLimit ? (qa.activeRequests++,
                qa.__loadImage(a, b, 0)) : qa.requestQueue.add({
                    instance: null,
                    uri: a,
                    promise: b,
                    type: "IMAGE",
                    options: 0
                });
                return b.future
            }
            ;
            qa.loadImageFromBytes = function(a, b) {
                var c = URL.createObjectURL(new Blob([a.b.bufferValue],{
                    type: b
                }));
                return null != c ? (a = new Ib,
                qa.activeRequests < qa.requestLimit ? (qa.activeRequests++,
                qa.__loadImage(c, a, 1)) : qa.requestQueue.add({
                    instance: null,
                    uri: c,
                    promise: a,
                    type: "IMAGE",
                    options: 1
                }),
                a.future) : qa.loadImage("data:" + b + ";base64," + pc.encode(a))
            }
            ;
            qa.processQueue = function() {
                if (qa.activeRequests < qa.requestLimit && 0 < qa.requestQueue.length) {
                    qa.activeRequests++;
                    var a = qa.requestQueue.pop();
                    switch (a.type) {
                    case "BINARY":
                        a.instance.__loadData(a.uri, a.promise);
                        break;
                    case "IMAGE":
                        qa.__loadImage(a.uri, a.promise, a.options);
                        break;
                    case "TEXT":
                        a.instance.__loadText(a.uri, a.promise);
                        break;
                    default:
                        qa.activeRequests--
                    }
                }
            }
            ;
            qa.__fixHostname = function(a) {
                return null == a ? "" : a
            }
            ;
            qa.__fixPort = function(a, b) {
                if (null == a || "" == a)
                    switch (b) {
                    case "ftp:":
                        return "21";
                    case "gopher:":
                        return "70";
                    case "http:":
                        return "80";
                    case "https:":
                        return "443";
                    case "ws:":
                        return "80";
                    case "wss:":
                        return "443";
                    default:
                        return ""
                    }
                return a
            }
            ;
            qa.__fixProtocol = function(a) {
                return null == a || "" == a ? "http:" : a
            }
            ;
            qa.__isInMemoryURI = function(a) {
                return ta.startsWith(a, "data:") ? !0 : ta.startsWith(a, "blob:")
            }
            ;
            qa.__isSameOrigin = function(a) {
                if (null == a || "" == a || qa.__isInMemoryURI(a))
                    return !0;
                null == qa.originElement && (qa.originElement = window.document.createElement("a"),
                qa.originHostname = qa.__fixHostname(r.location.hostname),
                qa.originProtocol = qa.__fixProtocol(r.location.protocol),
                qa.originPort = qa.__fixPort(r.location.port, qa.originProtocol));
                var b = qa.originElement;
                b.href = a;
                "" == b.hostname && (b.href = b.href);
                a = qa.__fixHostname(b.hostname);
                var c = qa.__fixProtocol(b.protocol);
                b = qa.__fixPort(b.port, c);
                return "file:" == c || "" != a && a != qa.originHostname ? !1 : "" == b || b == qa.originPort
            }
            ;
            qa.__loadImage = function(a, b, c) {
                var f = new window.Image;
                qa.__isSameOrigin(a) || (f.crossOrigin = "Anonymous");
                null == qa.supportsImageProgress && (qa.supportsImageProgress = "onprogress"in f);
                if (qa.supportsImageProgress || qa.__isInMemoryURI(a))
                    f.addEventListener("load", function(h) {
                        qa.__revokeBlobURI(a, c);
                        h = new dc(null,f.width,f.height);
                        h.__srcImage = f;
                        qa.activeRequests--;
                        qa.processQueue();
                        b.complete(new Ja(h))
                    }, !1),
                    f.addEventListener("progress", function(a) {
                        b.progress(a.loaded, a.total)
                    }, !1),
                    f.addEventListener("error", function(f) {
                        qa.__revokeBlobURI(a, c);
                        qa.activeRequests--;
                        qa.processQueue();
                        b.error(new Lc(f.detail,null))
                    }, !1),
                    f.src = a;
                else {
                    var h = new XMLHttpRequest;
                    h.onload = function(a) {
                        qa.activeRequests--;
                        qa.processQueue();
                        (new Ja).__fromBytes(Aa.ofData(h.response), function(a) {
                            b.complete(a)
                        })
                    }
                    ;
                    h.onerror = function(a) {
                        b.error(new Lc(a.message,null))
                    }
                    ;
                    h.onprogress = function(a) {
                        a.lengthComputable && b.progress(a.loaded, a.total)
                    }
                    ;
                    h.open("GET", a, !0);
                    h.responseType = "arraybuffer";
                    h.overrideMimeType("text/plain; charset=x-user-defined");
                    h.send(null)
                }
            }
            ;
            qa.__revokeBlobURI = function(a, b) {
                0 != (b & 1) && URL.revokeObjectURL(a)
            }
            ;
            qa.prototype = {
                init: function(a) {
                    this.parent = a
                },
                load: function(a, b, c) {
                    this.request = new XMLHttpRequest;
                    "POST" == this.parent.method ? this.request.upload.addEventListener("progress", b, !1) : this.request.addEventListener("progress", b, !1);
                    this.request.onreadystatechange = c;
                    b = "";
                    if (null == this.parent.data) {
                        c = Object.keys(this.parent.formData.h);
                        for (var f = c.length, h = 0; h < f; ) {
                            var q = c[h++];
                            0 < b.length && (b += "&");
                            var d = this.parent.formData.h[q];
                            if (-1 < q.indexOf("[]") && d instanceof Array) {
                                var l = [];
                                for (d = w(d); d.hasNext(); ) {
                                    var g = d.next();
                                    l.push(encodeURIComponent(g))
                                }
                                l = l.join("&amp;" + q + "=");
                                b += encodeURIComponent(q) + "=" + l
                            } else
                                l = encodeURIComponent(q) + "=",
                                q = H.string(d),
                                b += l + encodeURIComponent(q)
                        }
                        "GET" == this.parent.method && "" != b && (a = -1 < a.indexOf("?") ? a + ("&" + b) : a + ("?" + b),
                        b = "")
                    }
                    this.request.open(H.string(this.parent.method), a, !0);
                    0 < this.parent.timeout && (this.request.timeout = this.parent.timeout);
                    this.binary && (this.request.responseType = "arraybuffer");
                    a = null;
                    l = 0;
                    for (c = this.parent.headers; l < c.length; )
                        f = c[l],
                        ++l,
                        "Content-Type" == f.name ? a = f.value : this.request.setRequestHeader(f.name, f.value);
                    null != this.parent.contentType && (a = this.parent.contentType);
                    null == a && (null != this.parent.data ? a = "application/octet-stream" : "" != b && (a = "application/x-www-form-urlencoded"));
                    null != a && this.request.setRequestHeader("Content-Type", a);
                    this.parent.withCredentials && (this.request.withCredentials = !0);
                    null != this.parent.data ? this.request.send(this.parent.data.b.bufferValue) : this.request.send(b)
                },
                loadData: function(a) {
                    var b = new Ib;
                    qa.activeRequests < qa.requestLimit ? (qa.activeRequests++,
                    this.__loadData(a, b)) : qa.requestQueue.add({
                        instance: this,
                        uri: a,
                        promise: b,
                        type: "BINARY",
                        options: 0
                    });
                    return b.future
                },
                loadText: function(a) {
                    var b = new Ib;
                    qa.activeRequests < qa.requestLimit ? (qa.activeRequests++,
                    this.__loadText(a, b)) : qa.requestQueue.add({
                        instance: this,
                        uri: a,
                        promise: b,
                        type: "TEXT",
                        options: 0
                    });
                    return b.future
                },
                processResponse: function() {
                    if (this.parent.enableResponseHeaders) {
                        this.parent.responseHeaders = [];
                        for (var a, b, c = 0, f = this.request.getAllResponseHeaders().split("\n"); c < f.length; )
                            b = f[c],
                            ++c,
                            a = ta.trim(K.substr(b, 0, b.indexOf(":"))),
                            b = ta.trim(K.substr(b, b.indexOf(":") + 1, null)),
                            "" != a && this.parent.responseHeaders.push(new Gd(a,b))
                    }
                    this.parent.responseStatus = this.request.status
                },
                __loadData: function(a, b) {
                    var c = this;
                    this.binary = !0;
                    this.load(a, function(a) {
                        b.progress(a.loaded, a.total)
                    }, function(a) {
                        4 == c.request.readyState && (a = null,
                        "" == c.request.responseType ? null != c.request.responseText && (a = Aa.ofString(c.request.responseText)) : null != c.request.response && (a = Aa.ofData(c.request.response)),
                        null != c.request.status && (200 <= c.request.status && 400 > c.request.status || c.validStatus0 && 0 == c.request.status) ? (c.processResponse(),
                        b.complete(a)) : (c.processResponse(),
                        b.error(new Lc(c.request.status,a))),
                        c.request = null,
                        qa.activeRequests--,
                        qa.processQueue())
                    })
                },
                __loadText: function(a, b) {
                    var c = this;
                    this.binary = !1;
                    this.load(a, function(a) {
                        b.progress(a.loaded, a.total)
                    }, function(a) {
                        4 == c.request.readyState && (null != c.request.status && (200 <= c.request.status && 400 > c.request.status || c.validStatus0 && 0 == c.request.status) ? (c.processResponse(),
                        b.complete(c.request.responseText)) : (c.processResponse(),
                        b.error(new Lc(c.request.status,c.request.responseText))),
                        c.request = null,
                        qa.activeRequests--,
                        qa.processQueue())
                    })
                },
                __class__: qa
            };
            var Mc = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_Dynamic_Void"] = Mc;
            Mc.__name__ = "lime.app._Event_Dynamic_Void";
            Mc.prototype = {
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var f = 0, h = this.__priorities.length; f < h; ) {
                        var q = f++;
                        if (c > this.__priorities[q]) {
                            this.__listeners.splice(q, 0, a);
                            this.__priorities.splice(q, 0, c);
                            this.__repeat.splice(q, 0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                remove: function(a) {
                    for (var b = this.__listeners.length; 0 <= --b; )
                        this.__listeners[b] == a && (this.__listeners.splice(b, 1),
                        this.__priorities.splice(b, 1),
                        this.__repeat.splice(b, 1))
                },
                dispatch: function(a) {
                    this.canceled = !1;
                    for (var b = this.__listeners, c = this.__repeat, f = 0; f < b.length && (b[f](a),
                    c[f] ? ++f : this.remove(b[f]),
                    !this.canceled); )
                        ;
                },
                __class__: Mc
            };
            var id = {
                disablePreserveClasses: function(a) {
                    null != a && a instanceof Object && 1 != Y.field(a, "__skipPrototype__") && !(null != a.byteLength && null != a.byteOffset && null != a.buffer && a.buffer instanceof ArrayBuffer) && (a.__skipPrototype__ = !0)
                },
                preserveClasses: function(a) {
                    if (null != a && a instanceof Object && 1 != Y.field(a, "__skipPrototype__") && !(null != a.byteLength && null != a.byteOffset && null != a.buffer && a.buffer instanceof ArrayBuffer) && !Object.prototype.hasOwnProperty.call(a, "__prototype__")) {
                        if (!(a instanceof Array)) {
                            try {
                                a.__prototype__ = null != a.__class__ ? a.__class__.__name__ : null
                            } catch (c) {
                                return
                            }
                            "function" == typeof a.toString && Y.deleteField(a, "toString")
                        }
                        var b = 0;
                        for (a = Object.values(a); b < a.length; )
                            id.preserveClasses(a[b++])
                    }
                },
                restoreClasses: function(a, b) {
                    null == b && (b = 2147483647 * Math.random() | 0,
                    Y.field(a, "__restoreFlag__") == b && ++b);
                    if (null != a && a instanceof Object && 1 != Y.field(a, "__skipPrototype__") && !(null != a.byteLength && null != a.byteOffset && null != a.buffer && a.buffer instanceof ArrayBuffer) && Y.field(a, "__restoreFlag__") != b) {
                        try {
                            a.__restoreFlag__ = b
                        } catch (f) {
                            return
                        }
                        if (null != Y.field(a, "__prototype__"))
                            try {
                                Object.setPrototypeOf(a, g[Y.field(a, "__prototype__")].prototype)
                            } catch (f) {}
                        var c = 0;
                        for (a = Object.values(a); c < a.length; )
                            id.restoreClasses(a[c++], b)
                    }
                }
            }
              , ic = {
                toFunction: function(a) {
                    if (null != a.func)
                        return a.func;
                    if (null != a.classPath && null != a.functionName)
                        return a.func = g[a.classPath][a.functionName],
                        a.func;
                    if (null != a.sourceCode)
                        return a.func = (new Function("return " + a.sourceCode))(),
                        a.func;
                    throw ea.thrown("Object is not a valid WorkFunction: " + H.string(a));
                },
                makePortable: function(a, b) {
                    if (null != a.func) {
                        if (null != a.classPath || null != a.functionName) {
                            if ((g[a.classPath] && g[a.classPath][a.functionName]) != a.func)
                                throw ea.thrown("Could not make " + a.functionName + " portable. Either " + a.functionName + " isn't static, or " + a.classPath + " is something other than a class.");
                            a.func = null;
                            return !0
                        }
                        a.sourceCode = a.func.toString();
                        if (0 > a.sourceCode.indexOf("[native code]"))
                            return a.func = null,
                            !0;
                        a.sourceCode = null;
                        throw ea.thrown("Only static class functions can be made portable. Set -Dlime-warn-portability to see which line caused this.");
                    }
                    return null == a.func
                }
            }
              , Fa = function(a, b) {
                this.__href = a;
                null != b && (this.__worker = b,
                this.__worker.onmessage = t(this, this.dispatchMessage),
                this.onMessage = new Mc);
                id.disablePreserveClasses(this)
            };
            g["lime._internal.backend.html5.HTML5Thread"] = Fa;
            Fa.__name__ = "lime._internal.backend.html5.HTML5Thread";
            Fa.create = function(a) {
                var b = new URL(Fa.__current.__href);
                b.pathname = K.substr(b.pathname, 0, b.pathname.lastIndexOf("/") + 1) + oa.current.meta.h.file + ".js";
                0 < b.hash.length && (b.hash += "_");
                b.hash += Fa.__workerCount;
                Fa.__workerCount++;
                ic.makePortable(a);
                b = new Fa(b.href,new Worker(b.href));
                b.sendMessage(a);
                return b
            }
            ;
            Fa.returnMessage = function(a, b, c) {
                null == c && (c = !0);
                Fa.__isWorker && (c && id.preserveClasses(a),
                r.postMessage(a, b))
            }
            ;
            Fa.prototype = {
                sendMessage: function(a, b, c) {
                    null == c && (c = !0);
                    null != this.__worker ? (c && id.preserveClasses(a),
                    this.__worker.postMessage(a, b)) : Fa.__messages.add(a)
                },
                dispatchMessage: function(a) {
                    a = a.data;
                    id.restoreClasses(a);
                    null != this.onMessage && this.onMessage.dispatch(a);
                    Fa.__resolveMethods.isEmpty() ? Fa.__messages.add(a) : Fa.__resolveMethods.pop()(a)
                },
                destroy: function() {
                    if (null != this.__worker)
                        this.__worker.terminate();
                    else if (Fa.__isWorker)
                        try {
                            r.close()
                        } catch (a) {}
                },
                __class__: Fa
            };
            var ua = function(a) {
                this.imeCompositionActive = !1;
                this.unusedTouchesPool = new Mb;
                this.scale = 1;
                this.currentTouches = new ra;
                this.parent = a;
                this.cursor = Cb.DEFAULT;
                this.cacheMouseY = this.cacheMouseX = 0;
                var b = a.__attributes;
                Object.prototype.hasOwnProperty.call(b, "context") || (b.context = {});
                this.renderType = b.context.type;
                Object.prototype.hasOwnProperty.call(b, "element") && (a.element = b.element);
                var c = a.element;
                Object.prototype.hasOwnProperty.call(b, "allowHighDPI") && b.allowHighDPI && "dom" != this.renderType && (this.scale = window.devicePixelRatio);
                a.__scale = this.scale;
                this.setWidth = Object.prototype.hasOwnProperty.call(b, "width") ? b.width : 0;
                this.setHeight = Object.prototype.hasOwnProperty.call(b, "height") ? b.height : 0;
                a.__width = this.setWidth;
                a.__height = this.setHeight;
                a.id = ua.windowID++;
                c instanceof HTMLCanvasElement ? this.canvas = c : "dom" == this.renderType ? this.div = window.document.createElement("div") : this.canvas = window.document.createElement("canvas");
                if (null != this.canvas) {
                    var f = this.canvas.style;
                    f.setProperty("-webkit-transform", "translateZ(0)", null);
                    f.setProperty("transform", "translateZ(0)", null)
                } else
                    null != this.div && (f = this.div.style,
                    f.setProperty("-webkit-transform", "translate3D(0,0,0)", null),
                    f.setProperty("transform", "translate3D(0,0,0)", null),
                    f.position = "relative",
                    f.overflow = "hidden",
                    f.setProperty("-webkit-user-select", "none", null),
                    f.setProperty("-moz-user-select", "none", null),
                    f.setProperty("-ms-user-select", "none", null),
                    f.setProperty("-o-user-select", "none", null));
                0 == a.__width && 0 == a.__height && (null != c ? (a.__width = c.clientWidth,
                a.__height = c.clientHeight) : (a.__width = window.innerWidth,
                a.__height = window.innerHeight),
                this.cacheElementWidth = a.__width,
                this.cacheElementHeight = a.__height,
                this.resizeElement = !0);
                null != this.canvas ? (this.canvas.width = Math.round(a.__width * this.scale),
                this.canvas.height = Math.round(a.__height * this.scale),
                this.canvas.style.width = a.__width + "px",
                this.canvas.style.height = a.__height + "px") : (this.div.style.width = a.__width + "px",
                this.div.style.height = a.__height + "px");
                if (Object.prototype.hasOwnProperty.call(b, "resizable") && b.resizable || !Object.prototype.hasOwnProperty.call(b, "width") && 0 == this.setWidth && 0 == this.setHeight)
                    a.__resizable = !0;
                this.updateSize();
                if (null != c) {
                    null != this.canvas ? c != this.canvas && c.appendChild(this.canvas) : c.appendChild(this.div);
                    b = "mousedown mouseenter mouseleave mousemove mouseup wheel".split(" ");
                    for (f = 0; f < b.length; )
                        c.addEventListener(b[f++], t(this, this.handleMouseEvent), !0);
                    c.addEventListener("contextmenu", t(this, this.handleContextMenuEvent), !0);
                    c.addEventListener("dragstart", t(this, this.handleDragEvent), !0);
                    c.addEventListener("dragover", t(this, this.handleDragEvent), !0);
                    c.addEventListener("drop", t(this, this.handleDragEvent), !0);
                    c.addEventListener("touchstart", t(this, this.handleTouchEvent), !0);
                    c.addEventListener("touchmove", t(this, this.handleTouchEvent), !0);
                    c.addEventListener("touchend", t(this, this.handleTouchEvent), !0);
                    c.addEventListener("touchcancel", t(this, this.handleTouchEvent), !0);
                    c.addEventListener("gamepadconnected", t(this, this.handleGamepadEvent), !0);
                    c.addEventListener("gamepaddisconnected", t(this, this.handleGamepadEvent), !0)
                }
                this.createContext();
                "webgl" == a.context.type && (this.canvas.addEventListener("webglcontextlost", t(this, this.handleContextEvent), !1),
                this.canvas.addEventListener("webglcontextrestored", t(this, this.handleContextEvent), !1))
            };
            g["lime._internal.backend.html5.HTML5Window"] = ua;
            ua.__name__ = "lime._internal.backend.html5.HTML5Window";
            ua.prototype = {
                close: function() {
                    var a = this.parent.element;
                    if (null != a) {
                        null != this.canvas ? (a != this.canvas && a.removeChild(this.canvas),
                        this.canvas = null) : null != this.div && (a.removeChild(this.div),
                        this.div = null);
                        for (var b = "mousedown mouseenter mouseleave mousemove mouseup wheel".split(" "), c = 0; c < b.length; )
                            a.removeEventListener(b[c++], t(this, this.handleMouseEvent), !0);
                        a.removeEventListener("contextmenu", t(this, this.handleContextMenuEvent), !0);
                        a.removeEventListener("dragstart", t(this, this.handleDragEvent), !0);
                        a.removeEventListener("dragover", t(this, this.handleDragEvent), !0);
                        a.removeEventListener("drop", t(this, this.handleDragEvent), !0);
                        a.removeEventListener("touchstart", t(this, this.handleTouchEvent), !0);
                        a.removeEventListener("touchmove", t(this, this.handleTouchEvent), !0);
                        a.removeEventListener("touchend", t(this, this.handleTouchEvent), !0);
                        a.removeEventListener("touchcancel", t(this, this.handleTouchEvent), !0);
                        a.removeEventListener("gamepadconnected", t(this, this.handleGamepadEvent), !0);
                        a.removeEventListener("gamepaddisconnected", t(this, this.handleGamepadEvent), !0)
                    }
                    this.parent.application.__removeWindow(this.parent)
                },
                createContext: function() {
                    var a = new Hd
                      , b = this.parent.__attributes.context;
                    a.window = this.parent;
                    a.attributes = b;
                    if (null != this.div)
                        a.dom = this.div,
                        a.type = "dom",
                        a.version = "";
                    else if (null != this.canvas) {
                        var c = null
                          , f = "canvas" == this.renderType
                          , h = "opengl" == this.renderType || "opengles" == this.renderType || "webgl" == this.renderType
                          , q = !Object.prototype.hasOwnProperty.call(b, "version") || "1" != b.version
                          , d = !1;
                        if (h || !f && (!Object.prototype.hasOwnProperty.call(b, "hardware") || b.hardware)) {
                            f = Object.prototype.hasOwnProperty.call(b, "background") && null == b.background;
                            h = Object.prototype.hasOwnProperty.call(b, "colorDepth") ? b.colorDepth : 16;
                            var l = Object.prototype.hasOwnProperty.call(b, "antialiasing") && 0 < b.antialiasing
                              , g = Object.prototype.hasOwnProperty.call(b, "depth") ? b.depth : !0
                              , p = Object.prototype.hasOwnProperty.call(b, "stencil") && b.stencil;
                            b = Object.prototype.hasOwnProperty.call(b, "preserveDrawingBuffer") && b.preserveDrawingBuffer;
                            b = {
                                alpha: f || 16 < h,
                                antialias: l,
                                depth: g,
                                premultipliedAlpha: !0,
                                stencil: p,
                                preserveDrawingBuffer: b,
                                failIfMajorPerformanceCaveat: !1
                            };
                            f = ["webgl", "experimental-webgl"];
                            q && f.unshift("webgl2");
                            for (q = 0; q < f.length && (h = f[q],
                            ++q,
                            c = this.canvas.getContext(h, b),
                            null != c && "webgl2" == h && (d = !0),
                            null == c); )
                                ;
                        }
                        null == c ? (a.canvas2D = this.canvas.getContext("2d"),
                        a.type = "canvas",
                        a.version = "") : (a.webgl = Qb.fromWebGL2RenderContext(c),
                        d && (a.webgl2 = c),
                        null == Uc.context && (Uc.context = c,
                        Uc.type = "webgl",
                        Uc.version = d ? 2 : 1),
                        a.type = "webgl",
                        a.version = d ? "2" : "1")
                    }
                    this.parent.context = a
                },
                focusTextInput: function() {
                    var a = this;
                    this.__focusPending || (this.__focusPending = !0,
                    bc.delay(function() {
                        a.__focusPending = !1;
                        a.textInputEnabled && ua.textInput.focus()
                    }, 20))
                },
                getFrameRate: function() {
                    return null == this.parent.application ? 0 : 0 > this.parent.application.__backend.framePeriod ? 60 : 1E3 == this.parent.application.__backend.framePeriod ? 0 : 1E3 / this.parent.application.__backend.framePeriod
                },
                handleContextEvent: function(a) {
                    switch (a.type) {
                    case "webglcontextlost":
                        a.cancelable && a.preventDefault();
                        this.parent.context = null;
                        this.parent.onRenderContextLost.dispatch();
                        break;
                    case "webglcontextrestored":
                        this.createContext(),
                        this.parent.onRenderContextRestored.dispatch(this.parent.context)
                    }
                },
                handleContextMenuEvent: function(a) {
                    (this.parent.onMouseUp.canceled || this.parent.onMouseDown.canceled) && a.cancelable && a.preventDefault()
                },
                handleCutOrCopyEvent: function(a) {
                    var b = xb.get_text();
                    null == b && (b = "");
                    a.clipboardData.setData("text/plain", b);
                    a.cancelable && a.preventDefault()
                },
                handleDragEvent: function(a) {
                    switch (a.type) {
                    case "dragover":
                        return a.preventDefault(),
                        !1;
                    case "dragstart":
                        if ("img" == ja.__cast(a.target, HTMLElement).nodeName.toLowerCase() && a.cancelable)
                            return a.preventDefault(),
                            !1;
                        break;
                    case "drop":
                        if (null != a.dataTransfer && 0 < a.dataTransfer.files.length)
                            return this.parent.onDropFile.dispatch(a.dataTransfer.files),
                            a.preventDefault(),
                            !1
                    }
                    return !0
                },
                handleFocusEvent: function(a) {
                    this.textInputEnabled && (null == a.relatedTarget || this.isDescendent(a.relatedTarget)) && this.focusTextInput()
                },
                handleFullscreenEvent: function(a) {
                    if (null != (document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement || document.msFullscreenElement))
                        this.isFullscreen = !0,
                        this.parent.__fullscreen = !0,
                        this.requestedFullscreen && (this.requestedFullscreen = !1,
                        this.parent.onFullscreen.dispatch());
                    else {
                        this.isFullscreen = !1;
                        this.parent.__fullscreen = !1;
                        this.parent.onRestore.dispatch();
                        a = ["fullscreenchange", "mozfullscreenchange", "webkitfullscreenchange", "MSFullscreenChange"];
                        for (var b = ["fullscreenerror", "mozfullscreenerror", "webkitfullscreenerror", "MSFullscreenError"], c = 0, f = a.length; c < f; ) {
                            var h = c++;
                            window.document.removeEventListener(a[h], t(this, this.handleFullscreenEvent), !1);
                            window.document.removeEventListener(b[h], t(this, this.handleFullscreenEvent), !1)
                        }
                    }
                },
                handleGamepadEvent: function(a) {
                    switch (a.type) {
                    case "gamepadconnected":
                        ob.__connect(a.gamepad.index);
                        "standard" == a.gamepad.mapping && sb.__connect(a.gamepad.index);
                        break;
                    case "gamepaddisconnected":
                        ob.__disconnect(a.gamepad.index),
                        sb.__disconnect(a.gamepad.index)
                    }
                },
                handleInputEvent: function(a) {
                    this.imeCompositionActive || ua.textInput.value == ua.dummyCharacter || (a = ta.replace(ua.textInput.value, ua.dummyCharacter, ""),
                    0 < a.length && this.parent.onTextInput.dispatch(a),
                    ua.textInput.value = ua.dummyCharacter)
                },
                handleMouseEvent: function(a) {
                    if ("wheel" != a.type) {
                        if (null != this.parent.element)
                            if (null != this.canvas) {
                                var b = this.canvas.getBoundingClientRect();
                                var c = this.parent.__width / b.width * (a.clientX - b.left);
                                b = this.parent.__height / b.height * (a.clientY - b.top)
                            } else
                                null != this.div ? (b = this.div.getBoundingClientRect(),
                                c = a.clientX - b.left,
                                b = a.clientY - b.top) : (b = this.parent.element.getBoundingClientRect(),
                                c = this.parent.__width / b.width * (a.clientX - b.left),
                                b = this.parent.__height / b.height * (a.clientY - b.top));
                        else
                            c = a.clientX,
                            b = a.clientY;
                        switch (a.type) {
                        case "mousedown":
                            a.currentTarget == this.parent.element && window.addEventListener("mouseup", t(this, this.handleMouseEvent));
                            this.parent.clickCount = a.detail;
                            this.parent.onMouseDown.dispatch(c, b, a.button);
                            this.parent.clickCount = 0;
                            this.parent.onMouseDown.canceled && a.cancelable && a.preventDefault();
                            break;
                        case "mouseenter":
                            a.target == this.parent.element && (this.parent.onEnter.dispatch(),
                            this.parent.onEnter.canceled && a.cancelable && a.preventDefault());
                            break;
                        case "mouseleave":
                            a.target == this.parent.element && (this.parent.onLeave.dispatch(),
                            this.parent.onLeave.canceled && a.cancelable && a.preventDefault());
                            break;
                        case "mousemove":
                            if (c != this.cacheMouseX || b != this.cacheMouseY)
                                this.parent.onMouseMove.dispatch(c, b),
                                this.parent.onMouseMoveRelative.dispatch(c - this.cacheMouseX, b - this.cacheMouseY),
                                (this.parent.onMouseMove.canceled || this.parent.onMouseMoveRelative.canceled) && a.cancelable && a.preventDefault();
                            break;
                        case "mouseup":
                            window.removeEventListener("mouseup", t(this, this.handleMouseEvent)),
                            a.currentTarget == this.parent.element && a.stopPropagation(),
                            this.parent.clickCount = a.detail,
                            this.parent.onMouseUp.dispatch(c, b, a.button),
                            this.parent.clickCount = 0,
                            this.parent.onMouseUp.canceled && a.cancelable && a.preventDefault()
                        }
                        this.cacheMouseX = c;
                        this.cacheMouseY = b
                    } else {
                        switch (a.deltaMode) {
                        case 0:
                            c = Fc.PIXELS;
                            break;
                        case 1:
                            c = Fc.LINES;
                            break;
                        case 2:
                            c = Fc.PAGES;
                            break;
                        default:
                            c = Fc.UNKNOWN
                        }
                        this.parent.onMouseWheel.dispatch(a.deltaX, -a.deltaY, c);
                        this.parent.onMouseWheel.canceled && a.cancelable && a.preventDefault()
                    }
                },
                handlePasteEvent: function(a) {
                    if (-1 < a.clipboardData.types.indexOf("text/plain")) {
                        var b = a.clipboardData.getData("text/plain");
                        xb.set_text(b);
                        this.textInputEnabled && this.parent.onTextInput.dispatch(b);
                        a.cancelable && a.preventDefault()
                    }
                },
                handleResizeEvent: function(a) {
                    this.primaryTouch = null;
                    this.updateSize()
                },
                handleTouchEvent: function(a) {
                    a.cancelable && a.preventDefault();
                    var b = null;
                    null != this.parent.element && (b = null != this.canvas ? this.canvas.getBoundingClientRect() : null != this.div ? this.div.getBoundingClientRect() : this.parent.element.getBoundingClientRect());
                    var c = this.setWidth
                      , f = this.setHeight;
                    if (0 == c || 0 == f)
                        null != b ? (c = b.width,
                        f = b.height) : f = c = 1;
                    for (var h, d, l, g, p, y = 0, m = a.changedTouches; y < m.length; ) {
                        var k = m[y];
                        ++y;
                        null != b ? (d = c / b.width * (k.clientX - b.left),
                        l = f / b.height * (k.clientY - b.top)) : (d = k.clientX,
                        l = k.clientY);
                        if ("touchstart" == a.type)
                            h = this.unusedTouchesPool.pop(),
                            null == h ? h = new ub(d / c,l / f,k.identifier,0,0,k.force,this.parent.id) : (h.x = d / c,
                            h.y = l / f,
                            h.id = k.identifier,
                            h.dx = 0,
                            h.dy = 0,
                            h.pressure = k.force,
                            h.device = this.parent.id),
                            this.currentTouches.h[k.identifier] = h,
                            ub.onStart.dispatch(h),
                            null == this.primaryTouch && (this.primaryTouch = h),
                            h == this.primaryTouch && this.parent.onMouseDown.dispatch(d, l, 0);
                        else if (h = this.currentTouches.h[k.identifier],
                        null != h)
                            switch (g = h.x,
                            p = h.y,
                            h.x = d / c,
                            h.y = l / f,
                            h.dx = h.x - g,
                            h.dy = h.y - p,
                            h.pressure = k.force,
                            a.type) {
                            case "touchcancel":
                                ub.onCancel.dispatch(h);
                                this.currentTouches.remove(k.identifier);
                                this.unusedTouchesPool.add(h);
                                h == this.primaryTouch && (this.primaryTouch = null);
                                break;
                            case "touchend":
                                ub.onEnd.dispatch(h);
                                this.currentTouches.remove(k.identifier);
                                this.unusedTouchesPool.add(h);
                                h == this.primaryTouch && (this.parent.onMouseUp.dispatch(d, l, 0),
                                this.primaryTouch = null);
                                break;
                            case "touchmove":
                                ub.onMove.dispatch(h),
                                h == this.primaryTouch && this.parent.onMouseMove.dispatch(d, l)
                            }
                    }
                },
                isDescendent: function(a) {
                    if (a == this.parent.element)
                        return !0;
                    for (; null != a; ) {
                        if (a.parentNode == this.parent.element)
                            return !0;
                        a = a.parentNode
                    }
                    return !1
                },
                setClipboard: function(a) {
                    null == ua.textArea && (ua.textArea = window.document.createElement("textarea"),
                    ua.textArea.style.height = "0px",
                    ua.textArea.style.left = "-100px",
                    ua.textArea.style.opacity = "0",
                    ua.textArea.style.position = "fixed",
                    ua.textArea.style.top = "-100px",
                    ua.textArea.style.width = "0px",
                    window.document.body.appendChild(ua.textArea));
                    ua.textArea.value = a;
                    ua.textArea.focus();
                    ua.textArea.select();
                    window.document.queryCommandEnabled("copy") && window.document.execCommand("copy");
                    this.textInputEnabled && this.focusTextInput()
                },
                setCursor: function(a) {
                    if (this.cursor != a) {
                        if (null == a)
                            this.parent.element.style.cursor = "none";
                        else {
                            switch (a._hx_index) {
                            case 0:
                                var b = "default";
                                break;
                            case 1:
                                b = "crosshair";
                                break;
                            case 3:
                                b = "move";
                                break;
                            case 4:
                                b = "pointer";
                                break;
                            case 5:
                                b = "nesw-resize";
                                break;
                            case 6:
                                b = "ns-resize";
                                break;
                            case 7:
                                b = "nwse-resize";
                                break;
                            case 8:
                                b = "ew-resize";
                                break;
                            case 9:
                                b = "text";
                                break;
                            case 10:
                                b = "wait";
                                break;
                            case 11:
                                b = "wait";
                                break;
                            default:
                                b = "auto"
                            }
                            this.parent.element.style.cursor = b
                        }
                        this.cursor = a
                    }
                    return this.cursor
                },
                setFrameRate: function(a) {
                    null != this.parent.application && (60 <= a ? this.parent == this.parent.application.__window && (this.parent.application.__backend.framePeriod = -1) : 0 < a ? this.parent == this.parent.application.__window && (this.parent.application.__backend.framePeriod = 1E3 / a) : this.parent == this.parent.application.__window && (this.parent.application.__backend.framePeriod = 1E3));
                    return a
                },
                setFullscreen: function(a) {
                    a ? this.requestedFullscreen || this.isFullscreen || (this.requestedFullscreen = !0,
                    (B = this.parent.element,
                    t(B, B.requestFullscreen)) ? (document.addEventListener("fullscreenchange", t(this, this.handleFullscreenEvent), !1),
                    document.addEventListener("fullscreenerror", t(this, this.handleFullscreenEvent), !1),
                    this.parent.element.requestFullscreen()) : this.parent.element.mozRequestFullScreen ? (document.addEventListener("mozfullscreenchange", t(this, this.handleFullscreenEvent), !1),
                    document.addEventListener("mozfullscreenerror", t(this, this.handleFullscreenEvent), !1),
                    this.parent.element.mozRequestFullScreen()) : this.parent.element.webkitRequestFullscreen ? (document.addEventListener("webkitfullscreenchange", t(this, this.handleFullscreenEvent), !1),
                    document.addEventListener("webkitfullscreenerror", t(this, this.handleFullscreenEvent), !1),
                    this.parent.element.webkitRequestFullscreen()) : this.parent.element.msRequestFullscreen && (document.addEventListener("MSFullscreenChange", t(this, this.handleFullscreenEvent), !1),
                    document.addEventListener("MSFullscreenError", t(this, this.handleFullscreenEvent), !1),
                    this.parent.element.msRequestFullscreen())) : this.isFullscreen && (this.requestedFullscreen = !1,
                    document.exitFullscreen ? document.exitFullscreen() : document.mozCancelFullScreen ? document.mozCancelFullScreen() : document.webkitExitFullscreen ? document.webkitExitFullscreen() : document.msExitFullscreen && document.msExitFullscreen());
                    return a
                },
                setMaximized: function(a) {
                    return !1
                },
                setTextInputEnabled: function(a) {
                    if (a) {
                        if (null == ua.textInput) {
                            ua.textInput = window.document.createElement("input");
                            var b = 0 <= r.navigator.userAgent.indexOf("Android") ? "password" : "text";
                            ua.textInput.type = b;
                            ua.textInput.style.position = "absolute";
                            ua.textInput.style.opacity = "0";
                            ua.textInput.style.color = "transparent";
                            ua.textInput.value = ua.dummyCharacter;
                            ua.textInput.autocapitalize = "off";
                            ua.textInput.autocorrect = "off";
                            ua.textInput.autocomplete = "off";
                            ua.textInput.style.left = "0px";
                            ua.textInput.style.top = "50%";
                            (new pa("(iPad|iPhone|iPod).*OS 8_","gi")).match(window.navigator.userAgent) ? (ua.textInput.style.fontSize = "0px",
                            ua.textInput.style.width = "0px",
                            ua.textInput.style.height = "0px") : (ua.textInput.style.width = "1px",
                            ua.textInput.style.height = "1px");
                            ua.textInput.style.pointerEvents = "none";
                            ua.textInput.style.zIndex = "-10000000"
                        }
                        null == ua.textInput.parentNode && this.parent.element.appendChild(ua.textInput);
                        this.textInputEnabled || (ua.textInput.addEventListener("input", t(this, this.handleInputEvent), !0),
                        ua.textInput.addEventListener("blur", t(this, this.handleFocusEvent), !0),
                        ua.textInput.addEventListener("cut", t(this, this.handleCutOrCopyEvent), !0),
                        ua.textInput.addEventListener("copy", t(this, this.handleCutOrCopyEvent), !0),
                        ua.textInput.addEventListener("paste", t(this, this.handlePasteEvent), !0),
                        ua.textInput.addEventListener("compositionstart", t(this, this.handleCompositionstartEvent), !0),
                        ua.textInput.addEventListener("compositionend", t(this, this.handleCompositionendEvent), !0));
                        ua.textInput.focus();
                        ua.textInput.select()
                    } else
                        null != ua.textInput && (ua.textInput.blur(),
                        ua.textInput.removeEventListener("input", t(this, this.handleInputEvent), !0),
                        ua.textInput.removeEventListener("blur", t(this, this.handleFocusEvent), !0),
                        ua.textInput.removeEventListener("cut", t(this, this.handleCutOrCopyEvent), !0),
                        ua.textInput.removeEventListener("copy", t(this, this.handleCutOrCopyEvent), !0),
                        ua.textInput.removeEventListener("paste", t(this, this.handlePasteEvent), !0),
                        ua.textInput.removeEventListener("compositionstart", t(this, this.handleCompositionstartEvent), !0),
                        ua.textInput.removeEventListener("compositionend", t(this, this.handleCompositionendEvent), !0));
                    return this.textInputEnabled = a
                },
                handleCompositionstartEvent: function(a) {
                    this.imeCompositionActive = !0
                },
                handleCompositionendEvent: function(a) {
                    this.imeCompositionActive = !1;
                    this.handleInputEvent(a)
                },
                updateSize: function() {
                    if (this.parent.__resizable) {
                        if (null != this.parent.element) {
                            var a = this.parent.element.clientWidth;
                            var b = this.parent.element.clientHeight
                        } else
                            a = window.innerWidth,
                            b = window.innerHeight;
                        if (a != this.cacheElementWidth || b != this.cacheElementHeight) {
                            this.cacheElementWidth = a;
                            this.cacheElementHeight = b;
                            var c = this.resizeElement || 0 == this.setWidth && 0 == this.setHeight;
                            if (null != this.parent.element && (null == this.div || null != this.div && c))
                                if (c) {
                                    if (this.parent.__width != a || this.parent.__height != b)
                                        this.parent.__width = a,
                                        this.parent.__height = b,
                                        null != this.canvas ? this.parent.element != this.canvas && (this.canvas.width = Math.round(a * this.scale),
                                        this.canvas.height = Math.round(b * this.scale),
                                        this.canvas.style.width = a + "px",
                                        this.canvas.style.height = b + "px") : (this.div.style.width = a + "px",
                                        this.div.style.height = b + "px"),
                                        this.parent.onResize.dispatch(a, b)
                                } else {
                                    c = 0 != this.setWidth ? a / this.setWidth : 1;
                                    var f = 0 != this.setHeight ? b / this.setHeight : 1
                                      , h = a
                                      , d = b
                                      , l = 0
                                      , g = 0;
                                    c < f ? (d = Math.floor(this.setHeight * c),
                                    g = Math.floor((b - d) / 2)) : (h = Math.floor(this.setWidth * f),
                                    l = Math.floor((a - h) / 2));
                                    null != this.canvas ? this.parent.element != this.canvas && (this.canvas.style.width = h + "px",
                                    this.canvas.style.height = d + "px",
                                    this.canvas.style.marginLeft = l + "px",
                                    this.canvas.style.marginTop = g + "px") : (this.div.style.width = h + "px",
                                    this.div.style.height = d + "px",
                                    this.div.style.marginLeft = l + "px",
                                    this.div.style.marginTop = g + "px")
                                }
                        }
                    }
                },
                __class__: ua
            };
            var be = function() {};
            g["lime._internal.format.BMP"] = be;
            be.__name__ = "lime._internal.format.BMP";
            be.encode = function(a, b) {
                if (a.get_premultiplied() || 0 != a.get_format())
                    a = a.clone(),
                    a.set_premultiplied(!1),
                    a.set_format(0);
                null == b && (b = Gc.RGB);
                var c = 14
                  , f = 40
                  , h = a.width * a.height * 4;
                if (null != b)
                    switch (b._hx_index) {
                    case 0:
                        h = (3 * a.width + 3 * a.width % 4) * a.height;
                        break;
                    case 1:
                        f = 108;
                        break;
                    case 2:
                        c = 0,
                        h += a.width * a.height
                    }
                var d = new Aa(new ArrayBuffer(c + f + h))
                  , l = 0;
                0 < c && (d.b[0] = 66,
                d.b[1] = 77,
                d.setInt32(2, d.length),
                d.setUInt16(6, 0),
                d.setUInt16(8, 0),
                d.setInt32(10, c + f),
                l = 14);
                d.setInt32(l, f);
                l += 4;
                d.setInt32(l, a.width);
                l += 4;
                d.setInt32(l, b == Gc.ICO ? 2 * a.height : a.height);
                l += 4;
                d.setUInt16(l, 1);
                l += 2;
                d.setUInt16(l, b == Gc.RGB ? 24 : 32);
                l += 2;
                d.setInt32(l, b == Gc.BITFIELD ? 3 : 0);
                l += 4;
                d.setInt32(l, h);
                l += 4;
                d.setInt32(l, 11824);
                l += 4;
                d.setInt32(l, 11824);
                l += 4;
                d.setInt32(l, 0);
                l += 4;
                d.setInt32(l, 0);
                l += 4;
                if (b == Gc.BITFIELD)
                    for (d.setInt32(l, 16711680),
                    l += 4,
                    d.setInt32(l, 65280),
                    l += 4,
                    d.setInt32(l, 255),
                    l += 4,
                    d.setInt32(l, -16777216),
                    l += 4,
                    d.b[l++] = 32,
                    d.b[l++] = 110,
                    d.b[l++] = 105,
                    d.b[l++] = 87,
                    c = 0; 48 > c; )
                        ++c,
                        d.b[l++] = 0;
                f = a.getPixels(new Bc(0,0,a.width,a.height), 1);
                var g;
                if (null != b)
                    switch (b._hx_index) {
                    case 0:
                        c = 0;
                        for (b = a.height; c < b; ) {
                            h = 4 * (a.height - 1 - c++) * a.width;
                            for (var p = 0, y = a.width; p < y; ) {
                                ++p;
                                ++h;
                                var m = f.b[h++];
                                var k = f.b[h++];
                                var L = f.b[h++];
                                d.b[l++] = L & 255;
                                d.b[l++] = k & 255;
                                d.b[l++] = m & 255
                            }
                            h = 0;
                            for (g = 3 * a.width % 4; h < g; )
                                ++h,
                                d.b[l++] = 0
                        }
                        break;
                    case 1:
                        c = 0;
                        for (b = a.height; c < b; )
                            for (h = 4 * (a.height - 1 - c++) * a.width,
                            p = 0,
                            y = a.width; p < y; )
                                ++p,
                                g = f.b[h++],
                                m = f.b[h++],
                                k = f.b[h++],
                                L = f.b[h++],
                                d.b[l++] = L & 255,
                                d.b[l++] = k & 255,
                                d.b[l++] = m & 255,
                                d.b[l++] = g & 255;
                        break;
                    case 2:
                        var v = new Aa(new ArrayBuffer(a.width * a.height))
                          , u = 0;
                        c = 0;
                        for (b = a.height; c < b; )
                            for (h = 4 * (a.height - 1 - c++) * a.width,
                            p = 0,
                            y = a.width; p < y; )
                                ++p,
                                g = f.b[h++],
                                m = f.b[h++],
                                k = f.b[h++],
                                L = f.b[h++],
                                d.b[l++] = L & 255,
                                d.b[l++] = k & 255,
                                d.b[l++] = m & 255,
                                d.b[l++] = g & 255,
                                v.b[u++] = 0;
                        d.blit(l, v, 0, a.width * a.height)
                    }
                return d
            }
            ;
            var Gc = z["lime._internal.format.BMPType"] = {
                __ename__: "lime._internal.format.BMPType",
                __constructs__: null,
                RGB: {
                    _hx_name: "RGB",
                    _hx_index: 0,
                    __enum__: "lime._internal.format.BMPType",
                    toString: m
                },
                BITFIELD: {
                    _hx_name: "BITFIELD",
                    _hx_index: 1,
                    __enum__: "lime._internal.format.BMPType",
                    toString: m
                },
                ICO: {
                    _hx_name: "ICO",
                    _hx_index: 2,
                    __enum__: "lime._internal.format.BMPType",
                    toString: m
                }
            };
            Gc.__constructs__ = [Gc.RGB, Gc.BITFIELD, Gc.ICO];
            var pc = function() {};
            g["lime._internal.format.Base64"] = pc;
            pc.__name__ = "lime._internal.format.Base64";
            pc.encode = function(a) {
                var b = []
                  , c = pc.DICTIONARY
                  , f = pc.EXTENDED_DICTIONARY
                  , h = a.length
                  , d = Math.floor(h / 3)
                  , l = 2 * d;
                b.length = 2 * Math.ceil(h / 3);
                for (var g = 0, p = 0, y; p < l; )
                    y = a.b[g] << 16 | a.b[g + 1] << 8 | a.b[g + 2],
                    b[p] = f[y >> 12 & 4095],
                    b[p + 1] = f[y & 4095],
                    g += 3,
                    p += 2;
                switch (h - 3 * d) {
                case 1:
                    y = a.b[g] << 16;
                    b[p] = f[y >> 12 & 4095];
                    b[p + 1] = "==";
                    break;
                case 2:
                    y = a.b[g] << 16 | a.b[g + 1] << 8,
                    b[p] = f[y >> 12 & 4095],
                    b[p + 1] = c[y >> 6 & 63] + "="
                }
                return b.join("")
            }
            ;
            var ce = function() {};
            g["lime._internal.format.Deflate"] = ce;
            ce.__name__ = "lime._internal.format.Deflate";
            ce.decompress = function(a) {
                a = pako.inflateRaw(a.b.bufferValue);
                return Aa.ofData(a)
            }
            ;
            var de = function() {};
            g["lime._internal.format.GZip"] = de;
            de.__name__ = "lime._internal.format.GZip";
            de.decompress = function(a) {
                a = pako.ungzip(a.b.bufferValue);
                return Aa.ofData(a)
            }
            ;
            var ee = function() {};
            g["lime._internal.format.JPEG"] = ee;
            ee.__name__ = "lime._internal.format.JPEG";
            ee.encode = function(a, b) {
                if (a.get_premultiplied() || 0 != a.get_format())
                    a = a.clone(),
                    a.set_premultiplied(!1),
                    a.set_format(0);
                Da.convertToCanvas(a, !1);
                if (null != a.buffer.__srcCanvas) {
                    a = a.buffer.__srcCanvas.toDataURL("image/jpeg", b / 100);
                    a = window.atob(a.split(";base64,")[1]);
                    b = new Aa(new ArrayBuffer(a.length));
                    for (var c = 0, f = a.length; c < f; ) {
                        var h = c++;
                        b.b[h] = K.cca(a, h) & 255
                    }
                    return b
                }
                return null
            }
            ;
            var fe = function() {};
            g["lime._internal.format.LZMA"] = fe;
            fe.__name__ = "lime._internal.format.LZMA";
            fe.decompress = function(a) {
                var b = LZMA.decompress;
                a = a.b.bufferValue;
                a = null != a ? new Uint8Array(a,0) : null;
                b = b(a);
                return "string" == typeof b ? Aa.ofString(b) : Aa.ofData(b)
            }
            ;
            var Id = function() {};
            g["lime._internal.format.PNG"] = Id;
            Id.__name__ = "lime._internal.format.PNG";
            Id.encode = function(a) {
                if (a.get_premultiplied() || 0 != a.get_format())
                    a = a.clone(),
                    a.set_premultiplied(!1),
                    a.set_format(0);
                Da.convertToCanvas(a, !1);
                if (null != a.buffer.__srcCanvas) {
                    a = a.buffer.__srcCanvas.toDataURL("image/png");
                    a = window.atob(a.split(";base64,")[1]);
                    for (var b = new Aa(new ArrayBuffer(a.length)), c = 0, f = a.length; c < f; ) {
                        var h = c++;
                        b.b[h] = K.cca(a, h) & 255
                    }
                    return b
                }
                return null
            }
            ;
            var ge = function() {};
            g["lime._internal.format.Zlib"] = ge;
            ge.__name__ = "lime._internal.format.Zlib";
            ge.decompress = function(a) {
                a = pako.inflate(a.b.bufferValue);
                return Aa.ofData(a)
            }
            ;
            var Da = function() {};
            g["lime._internal.graphics.ImageCanvasUtil"] = Da;
            Da.__name__ = "lime._internal.graphics.ImageCanvasUtil";
            Da.convertToCanvas = function(a, b) {
                null == b && (b = !1);
                var c = a.buffer;
                null != c.__srcImage ? (null == c.__srcCanvas && (Da.createCanvas(a, c.__srcImage.width, c.__srcImage.height),
                c.__srcContext.drawImage(c.__srcImage, 0, 0)),
                c.__srcImage = null) : null == c.__srcCanvas && null != c.data ? (a.set_transparent(!0),
                Da.createCanvas(a, c.width, c.height),
                Da.createImageData(a),
                c.__srcContext.putImageData(c.__srcImageData, 0, 0)) : a.type == jc.DATA && null != c.__srcImageData && a.dirty && (c.__srcContext.putImageData(c.__srcImageData, 0, 0),
                a.dirty = !1);
                b ? (c.data = null,
                c.__srcImageData = null) : null == c.data && null != c.__srcImageData && (c.data = c.__srcImageData.data);
                a.type = jc.CANVAS
            }
            ;
            Da.convertToData = function(a, b) {
                null == b && (b = !1);
                var c = a.buffer;
                null != c.__srcImage && Da.convertToCanvas(a);
                if (null != c.__srcCanvas && null == c.data)
                    Da.createImageData(a),
                    a.type == jc.CANVAS && (a.dirty = !1);
                else if (a.type == jc.CANVAS && null != c.__srcCanvas && a.dirty) {
                    if (null == c.__srcImageData)
                        Da.createImageData(a);
                    else {
                        c.__srcImageData = c.__srcContext.getImageData(0, 0, c.width, c.height);
                        var f = c.__srcImageData.data.buffer;
                        f = null != f ? new Uint8Array(f) : null;
                        c.data = f
                    }
                    a.dirty = !1
                }
                b && (a.buffer.__srcCanvas = null,
                a.buffer.__srcContext = null);
                a.type = jc.DATA
            }
            ;
            Da.createCanvas = function(a, b, c) {
                var f = a.buffer;
                null == f.__srcCanvas && (f.__srcCanvas = window.document.createElement("canvas"),
                f.__srcCanvas.width = b,
                f.__srcCanvas.height = c,
                a.get_transparent() ? f.__srcContext = f.__srcCanvas.getContext("2d") : (a.get_transparent() || f.__srcCanvas.setAttribute("moz-opaque", "true"),
                f.__srcContext = f.__srcCanvas.getContext("2d", {
                    alpha: !1
                })))
            }
            ;
            Da.createImageData = function(a) {
                a = a.buffer;
                if (null == a.__srcImageData) {
                    null == a.data ? a.__srcImageData = a.__srcContext.getImageData(0, 0, a.width, a.height) : (a.__srcImageData = a.__srcContext.createImageData(a.width, a.height),
                    a.__srcImageData.data.set(a.data));
                    var b = a.__srcImageData.data.buffer;
                    b = null != b ? new Uint8Array(b) : null;
                    a.data = b
                }
            }
            ;
            Da.fillRect = function(a, b, c, f) {
                Da.convertToCanvas(a);
                if (1 == f) {
                    f = c >> 16 & 255;
                    var h = c >> 8 & 255;
                    var d = c & 255;
                    c = a.get_transparent() ? c >> 24 & 255 : 255
                } else
                    f = c >> 24 & 255,
                    h = c >> 16 & 255,
                    d = c >> 8 & 255,
                    c = a.get_transparent() ? c & 255 : 255;
                0 == b.x && 0 == b.y && b.width == a.width && b.height == a.height && a.get_transparent() && 0 == c ? a.buffer.__srcCanvas.width = a.buffer.width : (255 > c && a.buffer.__srcContext.clearRect(b.x + a.offsetX, b.y + a.offsetY, b.width + a.offsetX, b.height + a.offsetY),
                0 < c && (a.buffer.__srcContext.fillStyle = "rgba(" + f + ", " + h + ", " + d + ", " + c / 255 + ")",
                a.buffer.__srcContext.fillRect(b.x + a.offsetX, b.y + a.offsetY, b.width + a.offsetX, b.height + a.offsetY)),
                a.dirty = !0,
                a.version++)
            }
            ;
            Da.getPixel = function(a, b, c, f) {
                Da.convertToData(a);
                return nb.getPixel(a, b, c, f)
            }
            ;
            Da.getPixels = function(a, b, c) {
                Da.convertToData(a);
                return nb.getPixels(a, b, c)
            }
            ;
            Da.setPixel = function(a, b, c, f, h) {
                Da.convertToData(a);
                nb.setPixel(a, b, c, f, h)
            }
            ;
            Da.setPixel32 = function(a, b, c, f, h) {
                Da.convertToData(a);
                nb.setPixel32(a, b, c, f, h)
            }
            ;
            Da.setPixels = function(a, b, c, f, h) {
                Da.convertToData(a);
                nb.setPixels(a, b, c, f, h)
            }
            ;
            var nb = function() {};
            g["lime._internal.graphics.ImageDataUtil"] = nb;
            nb.__name__ = "lime._internal.graphics.ImageDataUtil";
            nb.fillRect = function(a, b, c, f) {
                switch (f) {
                case 1:
                    c = (c >>> 16 & 255) << 24 | (c >>> 8 & 255) << 16 | (c & 255) << 8 | c >>> 24 & 255;
                    break;
                case 2:
                    c = (c >>> 8 & 255) << 24 | (c >>> 16 & 255) << 16 | (c >>> 24 & 255) << 8 | c & 255
                }
                a.get_transparent() || (c = (c >>> 24 & 255) << 24 | (c >>> 16 & 255) << 16 | (c >>> 8 & 255) << 8 | 255);
                var h = a.buffer.data;
                if (null != h) {
                    f = a.buffer.format;
                    a.buffer.premultiplied && (0 == (c & 255) ? 0 != c && (c = 0) : 255 != (c & 255) && (ya.a16 = ya.__alpha16[c & 255],
                    c = ((c >>> 24 & 255) * ya.a16 >> 16 & 255) << 24 | ((c >>> 16 & 255) * ya.a16 >> 16 & 255) << 16 | ((c >>> 8 & 255) * ya.a16 >> 16 & 255) << 8 | c & 255));
                    b = new Vc(a,b);
                    for (var d, l = 0, g = b.height; l < g; ) {
                        d = b.byteOffset + b.stride * l++;
                        for (var p = 0, y = b.width; p < y; ) {
                            var m = d + 4 * p++
                              , k = f;
                            null == f && (k = 0);
                            switch (k) {
                            case 0:
                                h[m] = c >>> 24 & 255;
                                h[m + 1] = c >>> 16 & 255;
                                h[m + 2] = c >>> 8 & 255;
                                h[m + 3] = c & 255;
                                break;
                            case 1:
                                h[m] = c & 255;
                                h[m + 1] = c >>> 24 & 255;
                                h[m + 2] = c >>> 16 & 255;
                                h[m + 3] = c >>> 8 & 255;
                                break;
                            case 2:
                                h[m] = c >>> 8 & 255,
                                h[m + 1] = c >>> 16 & 255,
                                h[m + 2] = c >>> 24 & 255,
                                h[m + 3] = c & 255
                            }
                        }
                    }
                    a.dirty = !0;
                    a.version++
                }
            }
            ;
            nb.getPixel = function(a, b, c, f) {
                var h = 0
                  , d = a.buffer.data;
                b = 4 * (c + a.offsetY) * a.buffer.width + 4 * (b + a.offsetX);
                c = a.buffer.format;
                a = a.buffer.premultiplied;
                null == a && (a = !1);
                null == c && (c = 0);
                switch (c) {
                case 0:
                    h = (d[b] & 255) << 24 | (d[b + 1] & 255) << 16 | (d[b + 2] & 255) << 8 | d[b + 3] & 255;
                    break;
                case 1:
                    h = (d[b + 1] & 255) << 24 | (d[b + 2] & 255) << 16 | (d[b + 3] & 255) << 8 | d[b] & 255;
                    break;
                case 2:
                    h = (d[b + 2] & 255) << 24 | (d[b + 1] & 255) << 16 | (d[b] & 255) << 8 | d[b + 3] & 255
                }
                a && 0 != (h & 255) && 255 != (h & 255) && (ya.unmult = 255 / (h & 255),
                h = (ya.__clamp[Math.round((h >>> 24 & 255) * ya.unmult)] & 255) << 24 | (ya.__clamp[Math.round((h >>> 16 & 255) * ya.unmult)] & 255) << 16 | (ya.__clamp[Math.round((h >>> 8 & 255) * ya.unmult)] & 255) << 8 | h & 255);
                h = (h >>> 24 & 255) << 24 | (h >>> 16 & 255) << 16 | (h >>> 8 & 255) << 8 | 0;
                switch (f) {
                case 1:
                    return (h & 255) << 24 | (h >>> 24 & 255) << 16 | (h >>> 16 & 255) << 8 | h >>> 8 & 255;
                case 2:
                    return (h >>> 8 & 255) << 24 | (h >>> 16 & 255) << 16 | (h >>> 24 & 255) << 8 | h & 255;
                default:
                    return h
                }
            }
            ;
            nb.getPixels = function(a, b, c) {
                if (null == a.buffer.data)
                    return null;
                var f = new Aa(new ArrayBuffer(4 * (b.width * b.height | 0)))
                  , h = a.buffer.data
                  , d = a.buffer.format
                  , l = a.buffer.premultiplied;
                a = new Vc(a,b);
                for (var g, p = g = 0, y = 0, m = a.height; y < m; ) {
                    b = a.byteOffset + a.stride * y++;
                    for (var k = 0, L = a.width; k < L; ) {
                        ++k;
                        var v = d
                          , u = l;
                        null == l && (u = !1);
                        null == d && (v = 0);
                        switch (v) {
                        case 0:
                            g = (h[b] & 255) << 24 | (h[b + 1] & 255) << 16 | (h[b + 2] & 255) << 8 | h[b + 3] & 255;
                            break;
                        case 1:
                            g = (h[b + 1] & 255) << 24 | (h[b + 2] & 255) << 16 | (h[b + 3] & 255) << 8 | h[b] & 255;
                            break;
                        case 2:
                            g = (h[b + 2] & 255) << 24 | (h[b + 1] & 255) << 16 | (h[b] & 255) << 8 | h[b + 3] & 255
                        }
                        u && 0 != (g & 255) && 255 != (g & 255) && (ya.unmult = 255 / (g & 255),
                        g = (ya.__clamp[Math.round((g >>> 24 & 255) * ya.unmult)] & 255) << 24 | (ya.__clamp[Math.round((g >>> 16 & 255) * ya.unmult)] & 255) << 16 | (ya.__clamp[Math.round((g >>> 8 & 255) * ya.unmult)] & 255) << 8 | g & 255);
                        switch (c) {
                        case 1:
                            g = (g & 255) << 24 | (g >>> 24 & 255) << 16 | (g >>> 16 & 255) << 8 | g >>> 8 & 255;
                            break;
                        case 2:
                            g = (g >>> 8 & 255) << 24 | (g >>> 16 & 255) << 16 | (g >>> 24 & 255) << 8 | g & 255
                        }
                        f.b[p++] = g >>> 24 & 255;
                        f.b[p++] = g >>> 16 & 255;
                        f.b[p++] = g >>> 8 & 255;
                        f.b[p++] = g & 255;
                        b += 4
                    }
                }
                return f
            }
            ;
            nb.multiplyAlpha = function(a) {
                var b = a.buffer.data;
                if (null != b && a.buffer.transparent) {
                    for (var c = a.buffer.format, f = b.length / 4 | 0, h = 0, d = 0; d < f; ) {
                        var l = d++
                          , g = 4 * l
                          , p = c;
                        null == c && (p = 0);
                        switch (p) {
                        case 0:
                            h = (b[g] & 255) << 24 | (b[g + 1] & 255) << 16 | (b[g + 2] & 255) << 8 | b[g + 3] & 255;
                            break;
                        case 1:
                            h = (b[g + 1] & 255) << 24 | (b[g + 2] & 255) << 16 | (b[g + 3] & 255) << 8 | b[g] & 255;
                            break;
                        case 2:
                            h = (b[g + 2] & 255) << 24 | (b[g + 1] & 255) << 16 | (b[g] & 255) << 8 | b[g + 3] & 255
                        }
                        l *= 4;
                        g = c;
                        null == c && (g = 0);
                        0 == (h & 255) ? 0 != h && (h = 0) : 255 != (h & 255) && (ya.a16 = ya.__alpha16[h & 255],
                        h = ((h >>> 24 & 255) * ya.a16 >> 16 & 255) << 24 | ((h >>> 16 & 255) * ya.a16 >> 16 & 255) << 16 | ((h >>> 8 & 255) * ya.a16 >> 16 & 255) << 8 | h & 255);
                        switch (g) {
                        case 0:
                            b[l] = h >>> 24 & 255;
                            b[l + 1] = h >>> 16 & 255;
                            b[l + 2] = h >>> 8 & 255;
                            b[l + 3] = h & 255;
                            break;
                        case 1:
                            b[l] = h & 255;
                            b[l + 1] = h >>> 24 & 255;
                            b[l + 2] = h >>> 16 & 255;
                            b[l + 3] = h >>> 8 & 255;
                            break;
                        case 2:
                            b[l] = h >>> 8 & 255,
                            b[l + 1] = h >>> 16 & 255,
                            b[l + 2] = h >>> 24 & 255,
                            b[l + 3] = h & 255
                        }
                    }
                    a.buffer.premultiplied = !0;
                    a.dirty = !0;
                    a.version++
                }
            }
            ;
            nb.setFormat = function(a, b) {
                var c = a.buffer.data;
                if (null != c) {
                    var f = c.length / 4 | 0;
                    switch (a.get_format()) {
                    case 0:
                        var h = 0;
                        var d = 1;
                        var l = 2;
                        var g = 3;
                        break;
                    case 1:
                        h = 1;
                        d = 2;
                        l = 3;
                        g = 0;
                        break;
                    case 2:
                        h = 2,
                        d = 1,
                        l = 0,
                        g = 3
                    }
                    switch (b) {
                    case 0:
                        var p = 0;
                        var y = 1;
                        var m = 2;
                        var k = 3;
                        break;
                    case 1:
                        p = 1;
                        y = 2;
                        m = 3;
                        k = 0;
                        break;
                    case 2:
                        p = 2,
                        y = 1,
                        m = 0,
                        k = 3
                    }
                    for (var L = 0; L < f; ) {
                        var v = 4 * L++;
                        var u = c[v + h];
                        var O = c[v + d];
                        var z = c[v + l];
                        var B = c[v + g];
                        c[v + p] = u;
                        c[v + y] = O;
                        c[v + m] = z;
                        c[v + k] = B
                    }
                    a.buffer.format = b;
                    a.dirty = !0;
                    a.version++
                }
            }
            ;
            nb.setPixel = function(a, b, c, f, h) {
                switch (h) {
                case 1:
                    f = (f >>> 16 & 255) << 24 | (f >>> 8 & 255) << 16 | (f & 255) << 8 | f >>> 24 & 255;
                    break;
                case 2:
                    f = (f >>> 8 & 255) << 24 | (f >>> 16 & 255) << 16 | (f >>> 24 & 255) << 8 | f & 255
                }
                var d = 0
                  , l = a.buffer.data
                  , g = 4 * (c + a.offsetY) * a.buffer.width + 4 * (b + a.offsetX);
                h = a.buffer.format;
                var p = a.buffer.premultiplied;
                null == p && (p = !1);
                null == h && (h = 0);
                switch (h) {
                case 0:
                    d = (l[g] & 255) << 24 | (l[g + 1] & 255) << 16 | (l[g + 2] & 255) << 8 | l[g + 3] & 255;
                    break;
                case 1:
                    d = (l[g + 1] & 255) << 24 | (l[g + 2] & 255) << 16 | (l[g + 3] & 255) << 8 | l[g] & 255;
                    break;
                case 2:
                    d = (l[g + 2] & 255) << 24 | (l[g + 1] & 255) << 16 | (l[g] & 255) << 8 | l[g + 3] & 255
                }
                p && 0 != (d & 255) && 255 != (d & 255) && (ya.unmult = 255 / (d & 255),
                d = (ya.__clamp[Math.round((d >>> 24 & 255) * ya.unmult)] & 255) << 24 | (ya.__clamp[Math.round((d >>> 16 & 255) * ya.unmult)] & 255) << 16 | (ya.__clamp[Math.round((d >>> 8 & 255) * ya.unmult)] & 255) << 8 | d & 255);
                f = (f >>> 24 & 255) << 24 | (f >>> 16 & 255) << 16 | (f >>> 8 & 255) << 8 | d & 255;
                l = a.buffer.data;
                g = 4 * (c + a.offsetY) * a.buffer.width + 4 * (b + a.offsetX);
                h = a.buffer.format;
                p = a.buffer.premultiplied;
                null == p && (p = !1);
                null == h && (h = 0);
                p && (0 == (f & 255) ? 0 != f && (f = 0) : 255 != (f & 255) && (ya.a16 = ya.__alpha16[f & 255],
                f = ((f >>> 24 & 255) * ya.a16 >> 16 & 255) << 24 | ((f >>> 16 & 255) * ya.a16 >> 16 & 255) << 16 | ((f >>> 8 & 255) * ya.a16 >> 16 & 255) << 8 | f & 255));
                switch (h) {
                case 0:
                    l[g] = f >>> 24 & 255;
                    l[g + 1] = f >>> 16 & 255;
                    l[g + 2] = f >>> 8 & 255;
                    l[g + 3] = f & 255;
                    break;
                case 1:
                    l[g] = f & 255;
                    l[g + 1] = f >>> 24 & 255;
                    l[g + 2] = f >>> 16 & 255;
                    l[g + 3] = f >>> 8 & 255;
                    break;
                case 2:
                    l[g] = f >>> 8 & 255,
                    l[g + 1] = f >>> 16 & 255,
                    l[g + 2] = f >>> 24 & 255,
                    l[g + 3] = f & 255
                }
                a.dirty = !0;
                a.version++
            }
            ;
            nb.setPixel32 = function(a, b, c, f, h) {
                switch (h) {
                case 1:
                    f = (f >>> 16 & 255) << 24 | (f >>> 8 & 255) << 16 | (f & 255) << 8 | f >>> 24 & 255;
                    break;
                case 2:
                    f = (f >>> 8 & 255) << 24 | (f >>> 16 & 255) << 16 | (f >>> 24 & 255) << 8 | f & 255
                }
                a.get_transparent() || (f = (f >>> 24 & 255) << 24 | (f >>> 16 & 255) << 16 | (f >>> 8 & 255) << 8 | 255);
                var d = a.buffer.data;
                b = 4 * (c + a.offsetY) * a.buffer.width + 4 * (b + a.offsetX);
                h = a.buffer.format;
                c = a.buffer.premultiplied;
                null == c && (c = !1);
                null == h && (h = 0);
                c && (0 == (f & 255) ? 0 != f && (f = 0) : 255 != (f & 255) && (ya.a16 = ya.__alpha16[f & 255],
                f = ((f >>> 24 & 255) * ya.a16 >> 16 & 255) << 24 | ((f >>> 16 & 255) * ya.a16 >> 16 & 255) << 16 | ((f >>> 8 & 255) * ya.a16 >> 16 & 255) << 8 | f & 255));
                switch (h) {
                case 0:
                    d[b] = f >>> 24 & 255;
                    d[b + 1] = f >>> 16 & 255;
                    d[b + 2] = f >>> 8 & 255;
                    d[b + 3] = f & 255;
                    break;
                case 1:
                    d[b] = f & 255;
                    d[b + 1] = f >>> 24 & 255;
                    d[b + 2] = f >>> 16 & 255;
                    d[b + 3] = f >>> 8 & 255;
                    break;
                case 2:
                    d[b] = f >>> 8 & 255,
                    d[b + 1] = f >>> 16 & 255,
                    d[b + 2] = f >>> 24 & 255,
                    d[b + 3] = f & 255
                }
                a.dirty = !0;
                a.version++
            }
            ;
            nb.setPixels = function(a, b, c, f, h) {
                if (null != a.buffer.data) {
                    var d = a.buffer.data
                      , l = a.buffer.format
                      , g = a.buffer.premultiplied;
                    b = new Vc(a,b);
                    var p = a.get_transparent()
                      , y = c.bytes;
                    c = c.offset;
                    for (var m = h != Jd.BIG_ENDIAN, k = 0, L = b.height; k < L; ) {
                        h = b.byteOffset + b.stride * k++;
                        for (var v = 0, u = b.width; v < u; ) {
                            var O = v++;
                            var z = m ? y.getInt32(c) : y.b[c + 3] | y.b[c + 2] << 8 | y.b[c + 1] << 16 | y.b[c] << 24;
                            c += 4;
                            switch (f) {
                            case 1:
                                z = (z >>> 16 & 255) << 24 | (z >>> 8 & 255) << 16 | (z & 255) << 8 | z >>> 24 & 255;
                                break;
                            case 2:
                                z = (z >>> 8 & 255) << 24 | (z >>> 16 & 255) << 16 | (z >>> 24 & 255) << 8 | z & 255
                            }
                            p || (z = (z >>> 24 & 255) << 24 | (z >>> 16 & 255) << 16 | (z >>> 8 & 255) << 8 | 255);
                            O = h + 4 * O;
                            var B = l
                              , r = g;
                            null == g && (r = !1);
                            null == l && (B = 0);
                            r && (0 == (z & 255) ? 0 != z && (z = 0) : 255 != (z & 255) && (ya.a16 = ya.__alpha16[z & 255],
                            z = ((z >>> 24 & 255) * ya.a16 >> 16 & 255) << 24 | ((z >>> 16 & 255) * ya.a16 >> 16 & 255) << 16 | ((z >>> 8 & 255) * ya.a16 >> 16 & 255) << 8 | z & 255));
                            switch (B) {
                            case 0:
                                d[O] = z >>> 24 & 255;
                                d[O + 1] = z >>> 16 & 255;
                                d[O + 2] = z >>> 8 & 255;
                                d[O + 3] = z & 255;
                                break;
                            case 1:
                                d[O] = z & 255;
                                d[O + 1] = z >>> 24 & 255;
                                d[O + 2] = z >>> 16 & 255;
                                d[O + 3] = z >>> 8 & 255;
                                break;
                            case 2:
                                d[O] = z >>> 8 & 255,
                                d[O + 1] = z >>> 16 & 255,
                                d[O + 2] = z >>> 24 & 255,
                                d[O + 3] = z & 255
                            }
                        }
                    }
                    a.dirty = !0;
                    a.version++
                }
            }
            ;
            nb.unmultiplyAlpha = function(a) {
                var b = a.buffer.data;
                if (null != b) {
                    for (var c = a.buffer.format, f = b.length / 4 | 0, h = 0, d = 0; d < f; ) {
                        var l = d++
                          , g = 4 * l
                          , p = c;
                        null == c && (p = 0);
                        switch (p) {
                        case 0:
                            h = (b[g] & 255) << 24 | (b[g + 1] & 255) << 16 | (b[g + 2] & 255) << 8 | b[g + 3] & 255;
                            break;
                        case 1:
                            h = (b[g + 1] & 255) << 24 | (b[g + 2] & 255) << 16 | (b[g + 3] & 255) << 8 | b[g] & 255;
                            break;
                        case 2:
                            h = (b[g + 2] & 255) << 24 | (b[g + 1] & 255) << 16 | (b[g] & 255) << 8 | b[g + 3] & 255
                        }
                        0 != (h & 255) && 255 != (h & 255) && (ya.unmult = 255 / (h & 255),
                        h = (ya.__clamp[Math.round((h >>> 24 & 255) * ya.unmult)] & 255) << 24 | (ya.__clamp[Math.round((h >>> 16 & 255) * ya.unmult)] & 255) << 16 | (ya.__clamp[Math.round((h >>> 8 & 255) * ya.unmult)] & 255) << 8 | h & 255);
                        l *= 4;
                        g = c;
                        null == c && (g = 0);
                        switch (g) {
                        case 0:
                            b[l] = h >>> 24 & 255;
                            b[l + 1] = h >>> 16 & 255;
                            b[l + 2] = h >>> 8 & 255;
                            b[l + 3] = h & 255;
                            break;
                        case 1:
                            b[l] = h & 255;
                            b[l + 1] = h >>> 24 & 255;
                            b[l + 2] = h >>> 16 & 255;
                            b[l + 3] = h >>> 8 & 255;
                            break;
                        case 2:
                            b[l] = h >>> 8 & 255,
                            b[l + 1] = h >>> 16 & 255,
                            b[l + 2] = h >>> 24 & 255,
                            b[l + 3] = h & 255
                        }
                    }
                    a.buffer.premultiplied = !1;
                    a.dirty = !0;
                    a.version++
                }
            }
            ;
            var Vc = function(a, b) {
                this.image = a;
                null == b ? this.rect = a.get_rect() : (0 > b.x && (b.x = 0),
                0 > b.y && (b.y = 0),
                b.x + b.width > a.width && (b.width = a.width - b.x),
                b.y + b.height > a.height && (b.height = a.height - b.y),
                0 > b.width && (b.width = 0),
                0 > b.height && (b.height = 0),
                this.rect = b);
                this.stride = a.buffer.get_stride();
                this.__update()
            };
            g["lime._internal.graphics._ImageDataUtil.ImageDataView"] = Vc;
            Vc.__name__ = "lime._internal.graphics._ImageDataUtil.ImageDataView";
            Vc.prototype = {
                __update: function() {
                    this.x = Math.ceil(this.rect.x);
                    this.y = Math.ceil(this.rect.y);
                    this.width = Math.floor(this.rect.width);
                    this.height = Math.floor(this.rect.height);
                    this.byteOffset = this.stride * (this.y + this.image.offsetY) + 4 * (this.x + this.image.offsetX)
                },
                __class__: Vc
            };
            var Ba = function(a, b) {
                null == b && (b = !1);
                if (null != a) {
                    var c = new Ib;
                    c.future = this;
                    b && ic.makePortable(a);
                    Ga.run({
                        func: Ba.dispatchWorkFunction,
                        classPath: "lime.app.Future",
                        functionName: "dispatchWorkFunction"
                    }, a, c, b && !0, !0)
                }
            };
            g["lime.app.Future"] = Ba;
            Ba.__name__ = "lime.app.Future";
            Ba.withError = function(a) {
                var b = new Ba;
                b.isError = !0;
                b.error = a;
                return b
            }
            ;
            Ba.withValue = function(a) {
                var b = new Ba;
                b.isComplete = !0;
                b.value = a;
                return b
            }
            ;
            Ba.dispatchWorkFunction = function(a) {
                return ic.toFunction(a)()
            }
            ;
            Ba.prototype = {
                onComplete: function(a) {
                    null != a && (this.isComplete ? a(this.value) : this.isError || (null == this.__completeListeners && (this.__completeListeners = []),
                    this.__completeListeners.push(a)));
                    return this
                },
                onError: function(a) {
                    null != a && (this.isError ? a(this.error) : this.isComplete || (null == this.__errorListeners && (this.__errorListeners = []),
                    this.__errorListeners.push(a)));
                    return this
                },
                onProgress: function(a) {
                    null != a && (null == this.__progressListeners && (this.__progressListeners = []),
                    this.__progressListeners.push(a));
                    return this
                },
                then: function(a) {
                    if (this.isComplete)
                        return a(this.value);
                    if (this.isError) {
                        var b = new Ba;
                        b.isError = !0;
                        b.error = this.error;
                        return b
                    }
                    var c = new Ib;
                    this.onError(t(c, c.error));
                    this.onProgress(t(c, c.progress));
                    this.onComplete(function(b) {
                        b = a(b);
                        b.onError(t(c, c.error));
                        b.onComplete(t(c, c.complete))
                    });
                    return c.future
                },
                __class__: Ba
            };
            var Ga = function() {};
            g["lime.app.FutureWork"] = Ga;
            Ga.__name__ = "lime.app.FutureWork";
            Ga.getPool = function(a) {
                if (1 == a)
                    return null == Ga.multiThreadPool && (Ga.multiThreadPool = new Ra(Ga.minThreads,Ga.maxThreads,!0),
                    Ga.multiThreadPool.onComplete.add(Ga.multiThreadPool_onComplete),
                    Ga.multiThreadPool.onError.add(Ga.multiThreadPool_onError)),
                    Ga.multiThreadPool;
                null == Ga.singleThreadPool && (Ga.singleThreadPool = new Ra(Ga.minThreads,Ga.maxThreads,!1),
                Ga.singleThreadPool.onComplete.add(Ga.singleThreadPool_onComplete),
                Ga.singleThreadPool.onError.add(Ga.singleThreadPool_onError));
                return Ga.singleThreadPool
            }
            ;
            Ga.run = function(a, b, c, f, h) {
                null == h && (h = !1);
                null == f && (f = !0);
                b = {
                    work: a,
                    state: b,
                    promise: c,
                    legacyCode: h
                };
                1 == f && (ic.makePortable(a),
                b.promise = null);
                a = Ga.getPool(f).run({
                    func: Ga.threadPool_doWork,
                    classPath: "lime.app.FutureWork",
                    functionName: "threadPool_doWork"
                }, b);
                1 == f && (Ga.promises.h[a] = {
                    complete: t(c, c.complete),
                    error: t(c, c.error)
                })
            }
            ;
            Ga.threadPool_doWork = function(a, b) {
                try {
                    var c = ic.toFunction(a.work)(a.state);
                    if (null != c || a.legacyCode)
                        ic.makePortable(a.work),
                        b.sendComplete(c)
                } catch (f) {
                    c = ea.caught(f).unwrap(),
                    ic.makePortable(a.work),
                    b.sendError(c)
                }
            }
            ;
            Ga.singleThreadPool_onComplete = function(a) {
                Ga.singleThreadPool.__activeJob.value.state.promise.complete(a)
            }
            ;
            Ga.singleThreadPool_onError = function(a) {
                Ga.singleThreadPool.__activeJob.value.state.promise.error(a)
            }
            ;
            Ga.multiThreadPool_onComplete = function(a) {
                var b = Ga.promises.h[Ga.multiThreadPool.__activeJob.value.id];
                Ga.promises.remove(Ga.multiThreadPool.__activeJob.value.id);
                b.complete(a)
            }
            ;
            Ga.multiThreadPool_onError = function(a) {
                var b = Ga.promises.h[Ga.multiThreadPool.__activeJob.value.id];
                Ga.promises.remove(Ga.multiThreadPool.__activeJob.value.id);
                b.error(a)
            }
            ;
            var Ib = function() {
                this.future = new Ba
            };
            g["lime.app.Promise"] = Ib;
            Ib.__name__ = "lime.app.Promise";
            Ib.prototype = {
                complete: function(a) {
                    if (!this.future.isError && (this.future.isComplete = !0,
                    this.future.value = a,
                    null != this.future.__completeListeners)) {
                        for (var b = 0, c = this.future.__completeListeners; b < c.length; )
                            c[b++](a);
                        this.future.__completeListeners = null
                    }
                    return this
                },
                completeWith: function(a) {
                    a.onComplete(t(this, this.complete));
                    a.onError(t(this, this.error));
                    a.onProgress(t(this, this.progress));
                    return this
                },
                error: function(a) {
                    if (!this.future.isComplete && (this.future.isError = !0,
                    this.future.error = a,
                    null != this.future.__errorListeners)) {
                        for (var b = 0, c = this.future.__errorListeners; b < c.length; )
                            c[b++](a);
                        this.future.__errorListeners = null
                    }
                    return this
                },
                progress: function(a, b) {
                    if (!this.future.isError && !this.future.isComplete && null != this.future.__progressListeners)
                        for (var c = 0, f = this.future.__progressListeners; c < f.length; )
                            f[c++](a, b);
                    return this
                },
                __class__: Ib
            };
            var Kd = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_Float_Float_Float_Void"] = Kd;
            Kd.__name__ = "lime.app._Event_Float_Float_Float_Void";
            Kd.prototype = {
                remove: function(a) {
                    for (var b = this.__listeners.length; 0 <= --b; )
                        this.__listeners[b] == a && (this.__listeners.splice(b, 1),
                        this.__priorities.splice(b, 1),
                        this.__repeat.splice(b, 1))
                },
                dispatch: function(a, b, c) {
                    this.canceled = !1;
                    for (var f = this.__listeners, h = this.__repeat, d = 0; d < f.length && (f[d](a, b, c),
                    h[d] ? ++d : this.remove(f[d]),
                    !this.canceled); )
                        ;
                },
                __class__: Kd
            };
            var Ld = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_Float_Float_Int_Void"] = Ld;
            Ld.__name__ = "lime.app._Event_Float_Float_Int_Void";
            Ld.prototype = {
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var f = 0, h = this.__priorities.length; f < h; ) {
                        var d = f++;
                        if (c > this.__priorities[d]) {
                            this.__listeners.splice(d, 0, a);
                            this.__priorities.splice(d, 0, c);
                            this.__repeat.splice(d, 0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                cancel: function() {
                    this.canceled = !0
                },
                remove: function(a) {
                    for (var b = this.__listeners.length; 0 <= --b; )
                        this.__listeners[b] == a && (this.__listeners.splice(b, 1),
                        this.__priorities.splice(b, 1),
                        this.__repeat.splice(b, 1))
                },
                dispatch: function(a, b, c) {
                    this.canceled = !1;
                    for (var f = this.__listeners, h = this.__repeat, d = 0; d < f.length && (f[d](a, b, c),
                    h[d] ? ++d : this.remove(f[d]),
                    !this.canceled); )
                        ;
                },
                __class__: Ld
            };
            var Wc = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_Float_Float_Void"] = Wc;
            Wc.__name__ = "lime.app._Event_Float_Float_Void";
            Wc.prototype = {
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var f = 0, h = this.__priorities.length; f < h; ) {
                        var d = f++;
                        if (c > this.__priorities[d]) {
                            this.__listeners.splice(d, 0, a);
                            this.__priorities.splice(d, 0, c);
                            this.__repeat.splice(d, 0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                remove: function(a) {
                    for (var b = this.__listeners.length; 0 <= --b; )
                        this.__listeners[b] == a && (this.__listeners.splice(b, 1),
                        this.__priorities.splice(b, 1),
                        this.__repeat.splice(b, 1))
                },
                dispatch: function(a, b) {
                    this.canceled = !1;
                    for (var c = this.__listeners, f = this.__repeat, h = 0; h < c.length && (c[h](a, b),
                    f[h] ? ++h : this.remove(c[h]),
                    !this.canceled); )
                        ;
                },
                __class__: Wc
            };
            var Md = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_Float_Float_lime_ui_MouseButton_Void"] = Md;
            Md.__name__ = "lime.app._Event_Float_Float_lime_ui_MouseButton_Void";
            Md.prototype = {
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var f = 0, h = this.__priorities.length; f < h; ) {
                        var d = f++;
                        if (c > this.__priorities[d]) {
                            this.__listeners.splice(d, 0, a);
                            this.__priorities.splice(d, 0, c);
                            this.__repeat.splice(d, 0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                remove: function(a) {
                    for (var b = this.__listeners.length; 0 <= --b; )
                        this.__listeners[b] == a && (this.__listeners.splice(b, 1),
                        this.__priorities.splice(b, 1),
                        this.__repeat.splice(b, 1))
                },
                dispatch: function(a, b, c) {
                    this.canceled = !1;
                    for (var f = this.__listeners, h = this.__repeat, d = 0; d < f.length && (f[d](a, b, c),
                    h[d] ? ++d : this.remove(f[d]),
                    !this.canceled); )
                        ;
                },
                __class__: Md
            };
            var Nd = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_Float_Float_lime_ui_MouseWheelMode_Void"] = Nd;
            Nd.__name__ = "lime.app._Event_Float_Float_lime_ui_MouseWheelMode_Void";
            Nd.prototype = {
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var f = 0, h = this.__priorities.length; f < h; ) {
                        var d = f++;
                        if (c > this.__priorities[d]) {
                            this.__listeners.splice(d, 0, a);
                            this.__priorities.splice(d, 0, c);
                            this.__repeat.splice(d, 0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                remove: function(a) {
                    for (var b = this.__listeners.length; 0 <= --b; )
                        this.__listeners[b] == a && (this.__listeners.splice(b, 1),
                        this.__priorities.splice(b, 1),
                        this.__repeat.splice(b, 1))
                },
                dispatch: function(a, b, c) {
                    this.canceled = !1;
                    for (var f = this.__listeners, h = this.__repeat, d = 0; d < f.length && (f[d](a, b, c),
                    h[d] ? ++d : this.remove(f[d]),
                    !this.canceled); )
                        ;
                },
                __class__: Nd
            };
            var Od = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_Int_Float_Void"] = Od;
            Od.__name__ = "lime.app._Event_Int_Float_Void";
            Od.prototype = {
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var f = 0, h = this.__priorities.length; f < h; ) {
                        var d = f++;
                        if (c > this.__priorities[d]) {
                            this.__listeners.splice(d, 0, a);
                            this.__priorities.splice(d, 0, c);
                            this.__repeat.splice(d, 0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                remove: function(a) {
                    for (var b = this.__listeners.length; 0 <= --b; )
                        this.__listeners[b] == a && (this.__listeners.splice(b, 1),
                        this.__priorities.splice(b, 1),
                        this.__repeat.splice(b, 1))
                },
                dispatch: function(a, b) {
                    this.canceled = !1;
                    for (var c = this.__listeners, f = this.__repeat, h = 0; h < c.length && (c[h](a, b),
                    f[h] ? ++h : this.remove(c[h]),
                    !this.canceled); )
                        ;
                },
                __class__: Od
            };
            var jd = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_Int_Int_Void"] = jd;
            jd.__name__ = "lime.app._Event_Int_Int_Void";
            jd.prototype = {
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var f = 0, h = this.__priorities.length; f < h; ) {
                        var d = f++;
                        if (c > this.__priorities[d]) {
                            this.__listeners.splice(d, 0, a);
                            this.__priorities.splice(d, 0, c);
                            this.__repeat.splice(d, 0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                remove: function(a) {
                    for (var b = this.__listeners.length; 0 <= --b; )
                        this.__listeners[b] == a && (this.__listeners.splice(b, 1),
                        this.__priorities.splice(b, 1),
                        this.__repeat.splice(b, 1))
                },
                dispatch: function(a, b) {
                    this.canceled = !1;
                    for (var c = this.__listeners, f = this.__repeat, h = 0; h < c.length && (c[h](a, b),
                    f[h] ? ++h : this.remove(c[h]),
                    !this.canceled); )
                        ;
                },
                __class__: jd
            };
            var Cc = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_Int_Void"] = Cc;
            Cc.__name__ = "lime.app._Event_Int_Void";
            Cc.prototype = {
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var f = 0, h = this.__priorities.length; f < h; ) {
                        var d = f++;
                        if (c > this.__priorities[d]) {
                            this.__listeners.splice(d, 0, a);
                            this.__priorities.splice(d, 0, c);
                            this.__repeat.splice(d, 0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                has: function(a) {
                    for (var b = 0, c = this.__listeners; b < c.length; )
                        if (c[b++] == a)
                            return !0;
                    return !1
                },
                remove: function(a) {
                    for (var b = this.__listeners.length; 0 <= --b; )
                        this.__listeners[b] == a && (this.__listeners.splice(b, 1),
                        this.__priorities.splice(b, 1),
                        this.__repeat.splice(b, 1))
                },
                dispatch: function(a) {
                    this.canceled = !1;
                    for (var b = this.__listeners, c = this.__repeat, f = 0; f < b.length && (b[f](a),
                    c[f] ? ++f : this.remove(b[f]),
                    !this.canceled); )
                        ;
                },
                __class__: Cc
            };
            var Pd = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_Int_lime_ui_JoystickHatPosition_Void"] = Pd;
            Pd.__name__ = "lime.app._Event_Int_lime_ui_JoystickHatPosition_Void";
            Pd.prototype = {
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var f = 0, h = this.__priorities.length; f < h; ) {
                        var d = f++;
                        if (c > this.__priorities[d]) {
                            this.__listeners.splice(d, 0, a);
                            this.__priorities.splice(d, 0, c);
                            this.__repeat.splice(d, 0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                __class__: Pd
            };
            var Qd = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_String_Int_Int_Void"] = Qd;
            Qd.__name__ = "lime.app._Event_String_Int_Int_Void";
            Qd.prototype = {
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var f = 0, h = this.__priorities.length; f < h; ) {
                        var d = f++;
                        if (c > this.__priorities[d]) {
                            this.__listeners.splice(d, 0, a);
                            this.__priorities.splice(d, 0, c);
                            this.__repeat.splice(d, 0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                __class__: Qd
            };
            var Xc = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_String_Void"] = Xc;
            Xc.__name__ = "lime.app._Event_String_Void";
            Xc.prototype = {
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var f = 0, h = this.__priorities.length; f < h; ) {
                        var d = f++;
                        if (c > this.__priorities[d]) {
                            this.__listeners.splice(d, 0, a);
                            this.__priorities.splice(d, 0, c);
                            this.__repeat.splice(d, 0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                remove: function(a) {
                    for (var b = this.__listeners.length; 0 <= --b; )
                        this.__listeners[b] == a && (this.__listeners.splice(b, 1),
                        this.__priorities.splice(b, 1),
                        this.__repeat.splice(b, 1))
                },
                dispatch: function(a) {
                    this.canceled = !1;
                    for (var b = this.__listeners, c = this.__repeat, f = 0; f < b.length && (b[f](a),
                    c[f] ? ++f : this.remove(b[f]),
                    !this.canceled); )
                        ;
                },
                __class__: Xc
            };
            var lb = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_Void_Void"] = lb;
            lb.__name__ = "lime.app._Event_Void_Void";
            lb.prototype = {
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var f = 0, h = this.__priorities.length; f < h; ) {
                        var d = f++;
                        if (c > this.__priorities[d]) {
                            this.__listeners.splice(d, 0, a);
                            this.__priorities.splice(d, 0, c);
                            this.__repeat.splice(d, 0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                remove: function(a) {
                    for (var b = this.__listeners.length; 0 <= --b; )
                        this.__listeners[b] == a && (this.__listeners.splice(b, 1),
                        this.__priorities.splice(b, 1),
                        this.__repeat.splice(b, 1))
                },
                dispatch: function() {
                    this.canceled = !1;
                    for (var a = this.__listeners, b = this.__repeat, c = 0; c < a.length && (a[c](),
                    b[c] ? ++c : this.remove(a[c]),
                    !this.canceled); )
                        ;
                },
                __class__: lb
            };
            var kd = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_lime_graphics_RenderContext_Void"] = kd;
            kd.__name__ = "lime.app._Event_lime_graphics_RenderContext_Void";
            kd.prototype = {
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var f = 0, h = this.__priorities.length; f < h; ) {
                        var d = f++;
                        if (c > this.__priorities[d]) {
                            this.__listeners.splice(d, 0, a);
                            this.__priorities.splice(d, 0, c);
                            this.__repeat.splice(d, 0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                remove: function(a) {
                    for (var b = this.__listeners.length; 0 <= --b; )
                        this.__listeners[b] == a && (this.__listeners.splice(b, 1),
                        this.__priorities.splice(b, 1),
                        this.__repeat.splice(b, 1))
                },
                dispatch: function(a) {
                    this.canceled = !1;
                    for (var b = this.__listeners, c = this.__repeat, f = 0; f < b.length && (b[f](a),
                    c[f] ? ++f : this.remove(b[f]),
                    !this.canceled); )
                        ;
                },
                __class__: kd
            };
            var Rd = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_lime_system_State_Void"] = Rd;
            Rd.__name__ = "lime.app._Event_lime_system_State_Void";
            Rd.prototype = {
                remove: function(a) {
                    for (var b = this.__listeners.length; 0 <= --b; )
                        this.__listeners[b] == a && (this.__listeners.splice(b, 1),
                        this.__priorities.splice(b, 1),
                        this.__repeat.splice(b, 1))
                },
                dispatch: function(a) {
                    this.canceled = !1;
                    for (var b = this.__listeners, c = this.__repeat, f = 0; f < b.length && (b[f](a),
                    c[f] ? ++f : this.remove(b[f]),
                    !this.canceled); )
                        ;
                },
                __class__: Rd
            };
            var Sd = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_lime_ui_GamepadAxis_Float_Void"] = Sd;
            Sd.__name__ = "lime.app._Event_lime_ui_GamepadAxis_Float_Void";
            Sd.prototype = {
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var f = 0, h = this.__priorities.length; f < h; ) {
                        var d = f++;
                        if (c > this.__priorities[d]) {
                            this.__listeners.splice(d, 0, a);
                            this.__priorities.splice(d, 0, c);
                            this.__repeat.splice(d, 0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                remove: function(a) {
                    for (var b = this.__listeners.length; 0 <= --b; )
                        this.__listeners[b] == a && (this.__listeners.splice(b, 1),
                        this.__priorities.splice(b, 1),
                        this.__repeat.splice(b, 1))
                },
                dispatch: function(a, b) {
                    this.canceled = !1;
                    for (var c = this.__listeners, f = this.__repeat, h = 0; h < c.length && (c[h](a, b),
                    f[h] ? ++h : this.remove(c[h]),
                    !this.canceled); )
                        ;
                },
                __class__: Sd
            };
            var ld = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_lime_ui_GamepadButton_Void"] = ld;
            ld.__name__ = "lime.app._Event_lime_ui_GamepadButton_Void";
            ld.prototype = {
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var f = 0, h = this.__priorities.length; f < h; ) {
                        var d = f++;
                        if (c > this.__priorities[d]) {
                            this.__listeners.splice(d, 0, a);
                            this.__priorities.splice(d, 0, c);
                            this.__repeat.splice(d, 0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                remove: function(a) {
                    for (var b = this.__listeners.length; 0 <= --b; )
                        this.__listeners[b] == a && (this.__listeners.splice(b, 1),
                        this.__priorities.splice(b, 1),
                        this.__repeat.splice(b, 1))
                },
                dispatch: function(a) {
                    this.canceled = !1;
                    for (var b = this.__listeners, c = this.__repeat, f = 0; f < b.length && (b[f](a),
                    c[f] ? ++f : this.remove(b[f]),
                    !this.canceled); )
                        ;
                },
                __class__: ld
            };
            var Td = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_lime_ui_Gamepad_Void"] = Td;
            Td.__name__ = "lime.app._Event_lime_ui_Gamepad_Void";
            Td.prototype = {
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var f = 0, h = this.__priorities.length; f < h; ) {
                        var d = f++;
                        if (c > this.__priorities[d]) {
                            this.__listeners.splice(d, 0, a);
                            this.__priorities.splice(d, 0, c);
                            this.__repeat.splice(d, 0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                remove: function(a) {
                    for (var b = this.__listeners.length; 0 <= --b; )
                        this.__listeners[b] == a && (this.__listeners.splice(b, 1),
                        this.__priorities.splice(b, 1),
                        this.__repeat.splice(b, 1))
                },
                dispatch: function(a) {
                    this.canceled = !1;
                    for (var b = this.__listeners, c = this.__repeat, f = 0; f < b.length && (b[f](a),
                    c[f] ? ++f : this.remove(b[f]),
                    !this.canceled); )
                        ;
                },
                __class__: Td
            };
            var Ud = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_lime_ui_Joystick_Void"] = Ud;
            Ud.__name__ = "lime.app._Event_lime_ui_Joystick_Void";
            Ud.prototype = {
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var f = 0, h = this.__priorities.length; f < h; ) {
                        var d = f++;
                        if (c > this.__priorities[d]) {
                            this.__listeners.splice(d, 0, a);
                            this.__priorities.splice(d, 0, c);
                            this.__repeat.splice(d, 0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                remove: function(a) {
                    for (var b = this.__listeners.length; 0 <= --b; )
                        this.__listeners[b] == a && (this.__listeners.splice(b, 1),
                        this.__priorities.splice(b, 1),
                        this.__repeat.splice(b, 1))
                },
                dispatch: function(a) {
                    this.canceled = !1;
                    for (var b = this.__listeners, c = this.__repeat, f = 0; f < b.length && (b[f](a),
                    c[f] ? ++f : this.remove(b[f]),
                    !this.canceled); )
                        ;
                },
                __class__: Ud
            };
            var md = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void"] = md;
            md.__name__ = "lime.app._Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void";
            md.prototype = {
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var f = 0, h = this.__priorities.length; f < h; ) {
                        var d = f++;
                        if (c > this.__priorities[d]) {
                            this.__listeners.splice(d, 0, a);
                            this.__priorities.splice(d, 0, c);
                            this.__repeat.splice(d, 0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                cancel: function() {
                    this.canceled = !0
                },
                remove: function(a) {
                    for (var b = this.__listeners.length; 0 <= --b; )
                        this.__listeners[b] == a && (this.__listeners.splice(b, 1),
                        this.__priorities.splice(b, 1),
                        this.__repeat.splice(b, 1))
                },
                dispatch: function(a, b) {
                    this.canceled = !1;
                    for (var c = this.__listeners, f = this.__repeat, h = 0; h < c.length && (c[h](a, b),
                    f[h] ? ++h : this.remove(c[h]),
                    !this.canceled); )
                        ;
                },
                __class__: md
            };
            var Nc = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_lime_ui_Touch_Void"] = Nc;
            Nc.__name__ = "lime.app._Event_lime_ui_Touch_Void";
            Nc.prototype = {
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var f = 0, h = this.__priorities.length; f < h; ) {
                        var d = f++;
                        if (c > this.__priorities[d]) {
                            this.__listeners.splice(d, 0, a);
                            this.__priorities.splice(d, 0, c);
                            this.__repeat.splice(d, 0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                remove: function(a) {
                    for (var b = this.__listeners.length; 0 <= --b; )
                        this.__listeners[b] == a && (this.__listeners.splice(b, 1),
                        this.__priorities.splice(b, 1),
                        this.__repeat.splice(b, 1))
                },
                dispatch: function(a) {
                    this.canceled = !1;
                    for (var b = this.__listeners, c = this.__repeat, f = 0; f < b.length && (b[f](a),
                    c[f] ? ++f : this.remove(b[f]),
                    !this.canceled); )
                        ;
                },
                __class__: Nc
            };
            var ud = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_lime_ui_Window_Void"] = ud;
            ud.__name__ = "lime.app._Event_lime_ui_Window_Void";
            ud.prototype = {
                remove: function(a) {
                    for (var b = this.__listeners.length; 0 <= --b; )
                        this.__listeners[b] == a && (this.__listeners.splice(b, 1),
                        this.__priorities.splice(b, 1),
                        this.__repeat.splice(b, 1))
                },
                dispatch: function(a) {
                    this.canceled = !1;
                    for (var b = this.__listeners, c = this.__repeat, f = 0; f < b.length && (b[f](a),
                    c[f] ? ++f : this.remove(b[f]),
                    !this.canceled); )
                        ;
                },
                __class__: ud
            };
            var Ja = function(a, b, c, f, h, d, l) {
                null == h && (h = -1);
                null == f && (f = -1);
                null == c && (c = 0);
                null == b && (b = 0);
                this.offsetX = b;
                this.offsetY = c;
                this.width = f;
                this.height = h;
                this.version = 0;
                null == l && (l = jc.CANVAS,
                null != Fa.__current.__worker || Fa.__isWorker) && (l = jc.DATA);
                this.type = l;
                if (null == a) {
                    if (0 < f && 0 < h)
                        switch (this.type._hx_index) {
                        case 0:
                            this.buffer = new dc(null,f,h);
                            Da.createCanvas(this, f, h);
                            null != d && 0 != d && this.fillRect(new Bc(0,0,f,h), d);
                            break;
                        case 1:
                            a = f * h * 4,
                            a = null != a ? new Uint8Array(a) : null,
                            this.buffer = new dc(a,f,h),
                            null != d && 0 != d && this.fillRect(new Bc(0,0,f,h), d)
                        }
                } else
                    this.__fromImageBuffer(a)
            };
            g["lime.graphics.Image"] = Ja;
            Ja.__name__ = "lime.graphics.Image";
            Ja.fromBytes = function(a) {
                if (null == a)
                    return null;
                var b = new Ja;
                return b.__fromBytes(a) ? b : null
            }
            ;
            Ja.fromFile = function(a) {
                if (null == a)
                    return null;
                var b = new Ja;
                return b.__fromFile(a) ? b : null
            }
            ;
            Ja.loadFromBase64 = function(a, b) {
                return null == a || null == b ? Ba.withValue(null) : qa.loadImage("data:" + b + ";base64," + a)
            }
            ;
            Ja.loadFromBytes = function(a) {
                if (null == a)
                    return Ba.withValue(null);
                if (Ja.__isPNG(a))
                    var b = "image/png";
                else if (Ja.__isJPG(a))
                    b = "image/jpeg";
                else if (Ja.__isGIF(a))
                    b = "image/gif";
                else if (Ja.__isWebP(a))
                    b = "image/webp";
                else
                    return Ba.withValue(null);
                return qa.loadImageFromBytes(a, b)
            }
            ;
            Ja.loadFromFile = function(a) {
                return null == a ? Ba.withValue(null) : qa.loadImage(a)
            }
            ;
            Ja.__isGIF = function(a) {
                if (null == a || 6 > a.length)
                    return !1;
                a = a.getString(0, 6);
                return "GIF87a" != a ? "GIF89a" == a : !0
            }
            ;
            Ja.__isJPG = function(a) {
                return null == a || 4 > a.length ? !1 : 255 == a.b[0] && 216 == a.b[1] && 255 == a.b[a.length - 2] ? 217 == a.b[a.length - 1] : !1
            }
            ;
            Ja.__isPNG = function(a) {
                return null == a || 8 > a.length ? !1 : 137 == a.b[0] && 80 == a.b[1] && 78 == a.b[2] && 71 == a.b[3] && 13 == a.b[4] && 10 == a.b[5] && 26 == a.b[6] ? 10 == a.b[7] : !1
            }
            ;
            Ja.__isWebP = function(a) {
                return null == a || 16 > a.length ? !1 : "RIFF" == a.getString(0, 4) ? "WEBP" == a.getString(8, 4) : !1
            }
            ;
            Ja.prototype = {
                clone: function() {
                    if (null != this.buffer) {
                        this.type == jc.CANVAS ? Da.convertToCanvas(this) : Da.convertToData(this);
                        var a = new Ja(this.buffer.clone(),this.offsetX,this.offsetY,this.width,this.height,null,this.type);
                        a.version = this.version;
                        return a
                    }
                    return new Ja(null,this.offsetX,this.offsetY,this.width,this.height,null,this.type)
                },
                encode: function(a, b) {
                    null == b && (b = 90);
                    if (null == a)
                        return Id.encode(this);
                    switch (a._hx_index) {
                    case 0:
                        return be.encode(this);
                    case 1:
                        return ee.encode(this, b);
                    case 2:
                        return Id.encode(this)
                    }
                },
                fillRect: function(a, b, c) {
                    a = this.__clipRect(a);
                    if (null != this.buffer && null != a)
                        switch (this.type._hx_index) {
                        case 0:
                            Da.fillRect(this, a, b, c);
                            break;
                        case 1:
                            Da.convertToData(this);
                            if (0 == this.buffer.data.length)
                                break;
                            nb.fillRect(this, a, b, c);
                            break;
                        case 2:
                            a.offset(this.offsetX, this.offsetY);
                            if (null == c)
                                b = (b & 255) << 24 | (b >>> 24 & 255) << 16 | (b >>> 16 & 255) << 8 | b >>> 8 & 255;
                            else
                                switch (c) {
                                case 1:
                                    break;
                                case 2:
                                    b = (b & 255) << 24 | (b >>> 8 & 255) << 16 | (b >>> 16 & 255) << 8 | b >>> 24 & 255;
                                    break;
                                default:
                                    b = (b & 255) << 24 | (b >>> 24 & 255) << 16 | (b >>> 16 & 255) << 8 | b >>> 8 & 255
                                }
                            this.buffer.__srcBitmapData.fillRect(a.__toFlashRectangle(), b)
                        }
                },
                getPixel: function(a, b, c) {
                    if (null == this.buffer || 0 > a || 0 > b || a >= this.width || b >= this.height)
                        return 0;
                    switch (this.type._hx_index) {
                    case 0:
                        return Da.getPixel(this, a, b, c);
                    case 1:
                        return Da.convertToData(this),
                        nb.getPixel(this, a, b, c);
                    case 2:
                        a = this.buffer.__srcBitmapData.getPixel(a + this.offsetX, b + this.offsetY);
                        if (null == c)
                            return (a >>> 16 & 255) << 24 | (a >>> 8 & 255) << 16 | (a & 255) << 8 | a >>> 24 & 255;
                        switch (c) {
                        case 1:
                            return a;
                        case 2:
                            return (a & 255) << 24 | (a >>> 8 & 255) << 16 | (a >>> 16 & 255) << 8 | a >>> 24 & 255;
                        default:
                            return (a >>> 16 & 255) << 24 | (a >>> 8 & 255) << 16 | (a & 255) << 8 | a >>> 24 & 255
                        }
                    default:
                        return 0
                    }
                },
                getPixels: function(a, b) {
                    if (null == this.buffer)
                        return null;
                    switch (this.type._hx_index) {
                    case 0:
                        return Da.getPixels(this, a, b);
                    case 1:
                        return Da.convertToData(this),
                        nb.getPixels(this, a, b);
                    case 2:
                        return null;
                    default:
                        return null
                    }
                },
                setPixel: function(a, b, c, f) {
                    if (!(null == this.buffer || 0 > a || 0 > b || a >= this.width || b >= this.height))
                        switch (this.type._hx_index) {
                        case 0:
                            Da.setPixel(this, a, b, c, f);
                            break;
                        case 1:
                            Da.convertToData(this);
                            nb.setPixel(this, a, b, c, f);
                            break;
                        case 2:
                            if (null == f)
                                c = (c & 255) << 24 | (c >>> 24 & 255) << 16 | (c >>> 16 & 255) << 8 | c >>> 8 & 255;
                            else
                                switch (f) {
                                case 1:
                                    break;
                                case 2:
                                    c = (c & 255) << 24 | (c >>> 8 & 255) << 16 | (c >>> 16 & 255) << 8 | c >>> 24 & 255;
                                    break;
                                default:
                                    c = (c & 255) << 24 | (c >>> 24 & 255) << 16 | (c >>> 16 & 255) << 8 | c >>> 8 & 255
                                }
                            this.buffer.__srcBitmapData.setPixel(a + this.offsetX, b + this.offsetX, c)
                        }
                },
                setPixel32: function(a, b, c, f) {
                    if (!(null == this.buffer || 0 > a || 0 > b || a >= this.width || b >= this.height))
                        switch (this.type._hx_index) {
                        case 0:
                            Da.setPixel32(this, a, b, c, f);
                            break;
                        case 1:
                            Da.convertToData(this);
                            nb.setPixel32(this, a, b, c, f);
                            break;
                        case 2:
                            if (null == f)
                                c = (c & 255) << 24 | (c >>> 24 & 255) << 16 | (c >>> 16 & 255) << 8 | c >>> 8 & 255;
                            else
                                switch (f) {
                                case 1:
                                    break;
                                case 2:
                                    c = (c & 255) << 24 | (c >>> 8 & 255) << 16 | (c >>> 16 & 255) << 8 | c >>> 24 & 255;
                                    break;
                                default:
                                    c = (c & 255) << 24 | (c >>> 24 & 255) << 16 | (c >>> 16 & 255) << 8 | c >>> 8 & 255
                                }
                            this.buffer.__srcBitmapData.setPixel32(a + this.offsetX, b + this.offsetY, c)
                        }
                },
                setPixels: function(a, b, c, f) {
                    a = this.__clipRect(a);
                    if (null != this.buffer && null != a)
                        switch (null == f && (f = Jd.BIG_ENDIAN),
                        this.type._hx_index) {
                        case 0:
                            Da.setPixels(this, a, b, c, f);
                            break;
                        case 1:
                            Da.convertToData(this),
                            nb.setPixels(this, a, b, c, f)
                        }
                },
                __clipRect: function(a) {
                    return null == a || 0 > a.x && (a.width -= -a.x,
                    a.x = 0,
                    0 >= a.x + a.width) || 0 > a.y && (a.height -= -a.y,
                    a.y = 0,
                    0 >= a.y + a.height) || a.x + a.width >= this.width && (a.width -= a.x + a.width - this.width,
                    0 >= a.width) || a.y + a.height >= this.height && (a.height -= a.y + a.height - this.height,
                    0 >= a.height) ? null : a
                },
                __fromBase64: function(a, b, c) {
                    var f = this
                      , h = new window.Image;
                    h.addEventListener("load", function(a) {
                        f.buffer = new dc(null,h.width,h.height);
                        f.buffer.__srcImage = h;
                        f.offsetX = 0;
                        f.offsetY = 0;
                        f.width = f.buffer.width;
                        f.height = f.buffer.height;
                        null != c && c(f)
                    }, !1);
                    h.src = "data:" + b + ";base64," + a
                },
                __fromBytes: function(a, b) {
                    if (Ja.__isPNG(a))
                        var c = "image/png";
                    else if (Ja.__isJPG(a))
                        c = "image/jpeg";
                    else if (Ja.__isGIF(a))
                        c = "image/gif";
                    else
                        return !1;
                    this.__fromBase64(pc.encode(a), c, b);
                    return !0
                },
                __fromFile: function(a, b, c) {
                    var f = this
                      , h = new window.Image;
                    qa.__isSameOrigin(a) || (h.crossOrigin = "Anonymous");
                    h.onload = function(a) {
                        f.buffer = new dc(null,h.width,h.height);
                        f.buffer.__srcImage = h;
                        f.width = h.width;
                        f.height = h.height;
                        null != b && b(f)
                    }
                    ;
                    h.onerror = function(a) {
                        null != c && c()
                    }
                    ;
                    h.src = a;
                    return !0
                },
                __fromImageBuffer: function(a) {
                    this.buffer = a;
                    null != a && (-1 == this.width && (this.width = a.width),
                    -1 == this.height && (this.height = a.height))
                },
                get_data: function() {
                    null == this.buffer.data && 0 < this.buffer.width && 0 < this.buffer.height && Da.convertToData(this);
                    return this.buffer.data
                },
                get_format: function() {
                    return this.buffer.format
                },
                set_format: function(a) {
                    this.buffer.format != a && 1 == this.type._hx_index && nb.setFormat(this, a);
                    return this.buffer.format = a
                },
                get_premultiplied: function() {
                    return this.buffer.premultiplied
                },
                set_premultiplied: function(a) {
                    if (a && !this.buffer.premultiplied)
                        switch (this.type._hx_index) {
                        case 0:
                        case 1:
                            Da.convertToData(this),
                            nb.multiplyAlpha(this)
                        }
                    else
                        !a && this.buffer.premultiplied && 1 == this.type._hx_index && (Da.convertToData(this),
                        nb.unmultiplyAlpha(this));
                    return a
                },
                get_rect: function() {
                    return new Bc(0,0,this.width,this.height)
                },
                get_transparent: function() {
                    return null == this.buffer ? !1 : this.buffer.transparent
                },
                set_transparent: function(a) {
                    return null == this.buffer ? !1 : this.buffer.transparent = a
                },
                __class__: Ja
            };
            var dc = function(a, b, c, f, h) {
                null == f && (f = 32);
                null == c && (c = 0);
                null == b && (b = 0);
                this.data = a;
                this.width = b;
                this.height = c;
                this.bitsPerPixel = f;
                this.format = null == h ? 0 : h;
                this.premultiplied = !1;
                this.transparent = !0
            };
            g["lime.graphics.ImageBuffer"] = dc;
            dc.__name__ = "lime.graphics.ImageBuffer";
            dc.prototype = {
                clone: function() {
                    var a = new dc(this.data,this.width,this.height,this.bitsPerPixel);
                    if (null != this.data) {
                        var b = this.data.byteLength;
                        b = null != b ? new Uint8Array(b) : null;
                        a.data = b;
                        b = this.data;
                        b = null != b ? new Uint8Array(b) : null;
                        a.data.set(b)
                    } else
                        null != this.__srcImageData ? (a.__srcCanvas = window.document.createElement("canvas"),
                        a.__srcContext = a.__srcCanvas.getContext("2d"),
                        a.__srcCanvas.width = this.__srcImageData.width,
                        a.__srcCanvas.height = this.__srcImageData.height,
                        a.__srcImageData = a.__srcContext.createImageData(this.__srcImageData.width, this.__srcImageData.height),
                        b = new Uint8ClampedArray(this.__srcImageData.data),
                        a.__srcImageData.data.set(b)) : null != this.__srcCanvas ? (a.__srcCanvas = window.document.createElement("canvas"),
                        a.__srcContext = a.__srcCanvas.getContext("2d"),
                        a.__srcCanvas.width = this.__srcCanvas.width,
                        a.__srcCanvas.height = this.__srcCanvas.height,
                        a.__srcContext.drawImage(this.__srcCanvas, 0, 0)) : a.__srcImage = this.__srcImage;
                    a.bitsPerPixel = this.bitsPerPixel;
                    a.format = this.format;
                    a.premultiplied = this.premultiplied;
                    a.transparent = this.transparent;
                    return a
                },
                get_stride: function() {
                    return this.width * (this.bitsPerPixel / 8 | 0)
                },
                __class__: dc
            };
            var yd = z["lime.graphics.ImageFileFormat"] = {
                __ename__: "lime.graphics.ImageFileFormat",
                __constructs__: null,
                BMP: {
                    _hx_name: "BMP",
                    _hx_index: 0,
                    __enum__: "lime.graphics.ImageFileFormat",
                    toString: m
                },
                JPEG: {
                    _hx_name: "JPEG",
                    _hx_index: 1,
                    __enum__: "lime.graphics.ImageFileFormat",
                    toString: m
                },
                PNG: {
                    _hx_name: "PNG",
                    _hx_index: 2,
                    __enum__: "lime.graphics.ImageFileFormat",
                    toString: m
                }
            };
            yd.__constructs__ = [yd.BMP, yd.JPEG, yd.PNG];
            var jc = z["lime.graphics.ImageType"] = {
                __ename__: "lime.graphics.ImageType",
                __constructs__: null,
                CANVAS: {
                    _hx_name: "CANVAS",
                    _hx_index: 0,
                    __enum__: "lime.graphics.ImageType",
                    toString: m
                },
                DATA: {
                    _hx_name: "DATA",
                    _hx_index: 1,
                    __enum__: "lime.graphics.ImageType",
                    toString: m
                },
                FLASH: {
                    _hx_name: "FLASH",
                    _hx_index: 2,
                    __enum__: "lime.graphics.ImageType",
                    toString: m
                },
                CUSTOM: {
                    _hx_name: "CUSTOM",
                    _hx_index: 3,
                    __enum__: "lime.graphics.ImageType",
                    toString: m
                }
            };
            jc.__constructs__ = [jc.CANVAS, jc.DATA, jc.FLASH, jc.CUSTOM];
            var Hd = function() {};
            g["lime.graphics.RenderContext"] = Hd;
            Hd.__name__ = "lime.graphics.RenderContext";
            Hd.prototype = {
                __class__: Hd
            };
            var pe = {
                uniform2fv: function(a, b, c, f, h) {
                    null != f ? a.uniform2fv(b, c, f, h) : a.uniform2fv(b, c)
                }
            }
              , Qb = {
                bufferData: function(a, b, c, f) {
                    a.bufferData(b, c, f)
                },
                texImage2D: function(a, b, c, f, h, d, l, g, p, y) {
                    null != g ? a.texImage2D(b, c, f, h, d, l, g, p, y) : a.texImage2D(b, c, f, h, d, l)
                },
                uniformMatrix4fv: function(a, b, c, f) {
                    a.uniformMatrix4fv(b, c, f)
                },
                fromWebGL2RenderContext: function(a) {
                    return a
                }
            }
              , Uc = function() {};
            g["lime.graphics.opengl.GL"] = Uc;
            Uc.__name__ = "lime.graphics.opengl.GL";
            var ya = {}
              , Bc = function(a, b, c, f) {
                null == f && (f = 0);
                null == c && (c = 0);
                null == b && (b = 0);
                null == a && (a = 0);
                this.x = a;
                this.y = b;
                this.width = c;
                this.height = f
            };
            g["lime.math.Rectangle"] = Bc;
            Bc.__name__ = "lime.math.Rectangle";
            Bc.prototype = {
                offset: function(a, b) {
                    this.x += a;
                    this.y += b
                },
                __toFlashRectangle: function() {
                    return null
                },
                __class__: Bc
            };
            var mb = function() {};
            g["lime.media.AudioBuffer"] = mb;
            mb.__name__ = "lime.media.AudioBuffer";
            mb.fromBytes = function(a) {
                if (null == a)
                    return null;
                var b = new mb;
                b.set_src(new Howl({
                    src: ["data:" + mb.__getCodec(a) + ";base64," + pc.encode(a)],
                    html5: !0,
                    preload: !1
                }));
                return b
            }
            ;
            mb.fromFile = function(a) {
                if (null == a)
                    return null;
                var b = new mb;
                b.__srcHowl = new Howl({
                    src: [a],
                    preload: !1
                });
                return b
            }
            ;
            mb.fromFiles = function(a) {
                var b = new mb;
                b.__srcHowl = new Howl({
                    src: a,
                    preload: !1
                });
                return b
            }
            ;
            mb.loadFromFile = function(a) {
                var b = new Ib
                  , c = mb.fromFile(a);
                null != c ? null != c && (c.__srcHowl.on("load", function() {
                    b.complete(c)
                }),
                c.__srcHowl.on("loaderror", function(a, c) {
                    b.error(c)
                }),
                c.__srcHowl.load()) : b.error(null);
                return b.future
            }
            ;
            mb.loadFromFiles = function(a) {
                var b = new Ib
                  , c = mb.fromFiles(a);
                null != c ? (c.__srcHowl.on("load", function() {
                    b.complete(c)
                }),
                c.__srcHowl.on("loaderror", function() {
                    b.error(null)
                }),
                c.__srcHowl.load()) : b.error(null);
                return b.future
            }
            ;
            mb.__getCodec = function(a) {
                switch (a.getString(0, 4)) {
                case "OggS":
                    return "audio/ogg";
                case "RIFF":
                    if ("WAVE" == a.getString(8, 4))
                        return "audio/wav";
                    var b = a.b[1]
                      , c = a.b[2];
                    switch (a.b[0]) {
                    case 73:
                        if (68 == b && 51 == c)
                            return "audio/mp3";
                        break;
                    case 255:
                        switch (b) {
                        case 243:
                        case 250:
                        case 251:
                            return "audio/mp3"
                        }
                    }
                    break;
                case "fLaC":
                    return "audio/flac";
                default:
                    switch (b = a.b[1],
                    c = a.b[2],
                    a.b[0]) {
                    case 73:
                        if (68 == b && 51 == c)
                            return "audio/mp3";
                        break;
                    case 255:
                        switch (b) {
                        case 243:
                        case 250:
                        case 251:
                            return "audio/mp3"
                        }
                    }
                }
                Xa.error("Unsupported sound format", {
                    fileName: "lime/media/AudioBuffer.hx",
                    lineNumber: 362,
                    className: "lime.media.AudioBuffer",
                    methodName: "__getCodec"
                });
                return null
            }
            ;
            mb.prototype = {
                get_src: function() {
                    return this.__srcHowl
                },
                set_src: function(a) {
                    return this.__srcHowl = a
                },
                __class__: mb
            };
            var Wd = function(a) {
                if ("custom" != a) {
                    if (null == a || "web" == a)
                        try {
                            window.AudioContext = window.AudioContext || window.webkitAudioContext,
                            this.web = new window.AudioContext,
                            this.type = "web"
                        } catch (b) {}
                    null == this.web && "web" != a && (this.html5 = new Vd,
                    this.type = "html5")
                } else
                    this.type = "custom"
            };
            g["lime.media.AudioContext"] = Wd;
            Wd.__name__ = "lime.media.AudioContext";
            Wd.prototype = {
                __class__: Wd
            };
            var Ic = function() {};
            g["lime.media.AudioManager"] = Ic;
            Ic.__name__ = "lime.media.AudioManager";
            Ic.init = function(a) {
                if (null == Ic.context) {
                    if (null == a && (Ic.context = new Wd,
                    a = Ic.context,
                    "openal" == a.type)) {
                        var b = a.openal
                          , c = b.createContext(b.openDevice());
                        b.makeContextCurrent(c);
                        b.processContext(c)
                    }
                    Ic.context = a
                }
            }
            ;
            var Vd = function() {};
            g["lime.media.HTML5AudioContext"] = Vd;
            Vd.__name__ = "lime.media.HTML5AudioContext";
            Vd.prototype = {
                __class__: Vd
            };
            var he = function() {};
            g["lime.media.OpenALAudioContext"] = he;
            he.__name__ = "lime.media.OpenALAudioContext";
            he.prototype = {
                createContext: function(a, b) {
                    return Oc.createContext(a, b)
                },
                makeContextCurrent: function(a) {
                    return Oc.makeContextCurrent(a)
                },
                openDevice: function(a) {
                    return Oc.openDevice(a)
                },
                processContext: function(a) {},
                __class__: he
            };
            var Oc = function() {};
            g["lime.media.openal.ALC"] = Oc;
            Oc.__name__ = "lime.media.openal.ALC";
            Oc.createContext = function(a, b) {
                return null
            }
            ;
            Oc.makeContextCurrent = function(a) {
                return !1
            }
            ;
            Oc.openDevice = function(a) {
                return null
            }
            ;
            var nd = function() {};
            g["lime.net._IHTTPRequest"] = nd;
            nd.__name__ = "lime.net._IHTTPRequest";
            nd.__isInterface__ = !0;
            nd.prototype = {
                __class__: nd
            };
            var qc = function(a) {
                this.uri = a;
                this.contentType = "application/x-www-form-urlencoded";
                this.followRedirects = !0;
                this.enableResponseHeaders = !1;
                this.formData = new p;
                this.headers = [];
                this.method = "GET";
                this.timeout = 3E4;
                this.withCredentials = !1;
                this.manageCookies = !0;
                this.__backend = new qa;
                this.__backend.init(this)
            };
            g["lime.net._HTTPRequest.AbstractHTTPRequest"] = qc;
            qc.__name__ = "lime.net._HTTPRequest.AbstractHTTPRequest";
            qc.__interfaces__ = [nd];
            qc.prototype = {
                __class__: qc
            };
            var Yc = function(a) {
                qc.call(this, a)
            };
            g["lime.net._HTTPRequest_Bytes"] = Yc;
            Yc.__name__ = "lime.net._HTTPRequest_Bytes";
            Yc.__super__ = qc;
            Yc.prototype = n(qc.prototype, {
                fromBytes: function(a) {
                    return a
                },
                load: function(a) {
                    var b = this;
                    null != a && (this.uri = a);
                    var c = new Ib;
                    a = this.__backend.loadData(this.uri);
                    a.onProgress(t(c, c.progress));
                    a.onError(function(a) {
                        b.responseData = a.responseData;
                        c.error(a.error)
                    });
                    a.onComplete(function(a) {
                        b.responseData = b.fromBytes(a);
                        c.complete(b.responseData)
                    });
                    return c.future
                },
                __class__: Yc
            });
            var od = function(a) {
                qc.call(this, a)
            };
            g["lime.net._HTTPRequest_String"] = od;
            od.__name__ = "lime.net._HTTPRequest_String";
            od.__super__ = qc;
            od.prototype = n(qc.prototype, {
                load: function(a) {
                    var b = this;
                    null != a && (this.uri = a);
                    var c = new Ib;
                    a = this.__backend.loadText(this.uri);
                    a.onProgress(t(c, c.progress));
                    a.onError(function(a) {
                        b.responseData = a.responseData;
                        c.error(a.error)
                    });
                    a.onComplete(function(a) {
                        b.responseData = a;
                        c.complete(b.responseData)
                    });
                    return c.future
                },
                __class__: od
            });
            var Lc = function(a, b) {
                this.error = a;
                this.responseData = b
            };
            g["lime.net._HTTPRequestErrorResponse"] = Lc;
            Lc.__name__ = "lime.net._HTTPRequestErrorResponse";
            Lc.prototype = {
                __class__: Lc
            };
            var Gd = function(a, b) {
                null == b && (b = "");
                this.name = a;
                this.value = b
            };
            g["lime.net.HTTPRequestHeader"] = Gd;
            Gd.__name__ = "lime.net.HTTPRequestHeader";
            Gd.prototype = {
                __class__: Gd
            };
            var pd = function(a) {
                qc.call(this, a)
            };
            g["lime.net._HTTPRequest_lime_utils_Bytes"] = pd;
            pd.__name__ = "lime.net._HTTPRequest_lime_utils_Bytes";
            pd.__super__ = Yc;
            pd.prototype = n(Yc.prototype, {
                fromBytes: function(a) {
                    return bb.fromBytes(a)
                },
                __class__: pd
            });
            var xb = function() {};
            g["lime.system.Clipboard"] = xb;
            xb.__name__ = "lime.system.Clipboard";
            xb.__update = function() {
                var a = xb._text;
                xb._text = a;
                xb.__updated = !0;
                xb._text != a && xb.onUpdate.dispatch()
            }
            ;
            xb.get_text = function() {
                xb.__update();
                return xb._text
            }
            ;
            xb.set_text = function(a) {
                var b = xb._text;
                xb._text = a;
                var c = oa.current.__window;
                null != c && c.__backend.setClipboard(a);
                xb._text != b && xb.onUpdate.dispatch();
                return a
            }
            ;
            var Jd = z["lime.system.Endian"] = {
                __ename__: "lime.system.Endian",
                __constructs__: null,
                LITTLE_ENDIAN: {
                    _hx_name: "LITTLE_ENDIAN",
                    _hx_index: 0,
                    __enum__: "lime.system.Endian",
                    toString: m
                },
                BIG_ENDIAN: {
                    _hx_name: "BIG_ENDIAN",
                    _hx_index: 1,
                    __enum__: "lime.system.Endian",
                    toString: m
                }
            };
            Jd.__constructs__ = [Jd.LITTLE_ENDIAN, Jd.BIG_ENDIAN];
            var tc = function(a, b) {
                this.onUpdate = new Kd;
                this.type = a;
                this.id = b
            };
            g["lime.system.Sensor"] = tc;
            tc.__name__ = "lime.system.Sensor";
            tc.registerSensor = function(a, b) {
                a = new tc(a,b);
                tc.sensors.push(a);
                return tc.sensorByID.h[b] = a
            }
            ;
            tc.prototype = {
                __class__: tc
            };
            var ie = z["lime.system.SensorType"] = {
                __ename__: "lime.system.SensorType",
                __constructs__: null,
                ACCELEROMETER: {
                    _hx_name: "ACCELEROMETER",
                    _hx_index: 0,
                    __enum__: "lime.system.SensorType",
                    toString: m
                }
            };
            ie.__constructs__ = [ie.ACCELEROMETER];
            var rb = function() {};
            g["lime.system.System"] = rb;
            rb.__name__ = "lime.system.System";
            rb.embed = k.lime.embed = function(a, b, c, f, h) {
                if (null != rb.__applicationEntryPoint && Object.prototype.hasOwnProperty.call(rb.__applicationEntryPoint.h, a)) {
                    var d = "string" == typeof b ? window.document.getElementById(b) : null == b ? window.document.createElement("div") : b;
                    null == d ? window.console.log("[lime.embed] ERROR: Cannot find target element: " + H.string(b)) : (null == c && (c = 0),
                    null == f && (f = 0),
                    null == h && (h = {}),
                    Object.prototype.hasOwnProperty.call(h, "background") && "string" == typeof h.background && (b = ta.replace(H.string(h.background), "#", ""),
                    -1 < b.indexOf("0x") ? h.background = H.parseInt(b) : h.background = H.parseInt("0x" + b)),
                    h.element = d,
                    h.width = c,
                    h.height = f,
                    rb.__applicationEntryPoint.h[a](h))
                }
            }
            ;
            rb.exit = function(a) {
                var b = oa.current;
                if (null != b && (b.onExit.dispatch(a),
                b.onExit.canceled))
                    return;
                null != b && null != b.__window && b.__window.close()
            }
            ;
            rb.openURL = function(a, b) {
                null == b && (b = "_blank");
                null != a && window.open(a, b)
            }
            ;
            rb.__getDirectory = function(a) {
                return null
            }
            ;
            rb.__registerEntryPoint = function(a, b) {
                null == rb.__applicationEntryPoint && (rb.__applicationEntryPoint = new p);
                rb.__applicationEntryPoint.h[a] = b
            }
            ;
            rb.get_applicationStorageDirectory = function() {
                null == rb.__applicationStorageDirectory && (rb.__applicationStorageDirectory = rb.__getDirectory(1));
                return rb.__applicationStorageDirectory
            }
            ;
            var Hc = function(a) {
                this.__activeJob = new Zc;
                this.__jobComplete = new Zc;
                this.__jobOutput = new Mb;
                this.workIterations = new Zc;
                this.workIterations.value = 0;
                this.__jobComplete.value = !1;
                this.__mode = null != a && a
            };
            g["lime.system.WorkOutput"] = Hc;
            Hc.__name__ = "lime.system.WorkOutput";
            Hc.prototype = {
                sendComplete: function(a, b) {
                    this.__jobComplete.value || (this.__jobComplete.value = !0,
                    1 == this.__mode ? (ic.makePortable(this.__activeJob.value.doWork),
                    Fa.returnMessage(new rc("COMPLETE",a,this.__activeJob.value), b)) : this.__jobOutput.add(new rc("COMPLETE",a,this.__activeJob.value)))
                },
                sendError: function(a, b) {
                    this.__jobComplete.value || (this.__jobComplete.value = !0,
                    1 == this.__mode ? (ic.makePortable(this.__activeJob.value.doWork),
                    Fa.returnMessage(new rc("ERROR",a,this.__activeJob.value), b)) : this.__jobOutput.add(new rc("ERROR",a,this.__activeJob.value)))
                },
                createThread: function(a) {
                    var b = this;
                    a = Fa.create(a);
                    a.onMessage.add(function(a) {
                        b.__jobOutput.add(a)
                    });
                    return a
                },
                __class__: Hc
            };
            var Ra = function(a, b, c) {
                null == b && (b = 1);
                null == a && (a = 0);
                this.__jobQueue = new qd;
                this.__idleThreads = new Mb;
                this.__activeThreads = new ra;
                this.workPriority = 1;
                this.onRun = new Rd;
                this.onProgress = new Mc;
                this.onError = new Mc;
                this.onComplete = new Mc;
                this.canceled = this.completed = !1;
                Hc.call(this, c);
                this.__activeJobs = new qd(this);
                this.minThreads = a;
                this.maxThreads = b
            };
            g["lime.system.ThreadPool"] = Ra;
            Ra.__name__ = "lime.system.ThreadPool";
            Ra.__executeThread = function() {
                (function() {
                    var a, b, c, f, h, d;
                    return $jscomp.asyncExecutePromiseGeneratorProgram(function(l) {
                        switch (l.nextAddress) {
                        case 1:
                            a = new Hc(!0),
                            b = null;
                        case 2:
                            if (null != b) {
                                l.jumpTo(4);
                                break
                            }
                        case 5:
                            return Fa.__messages.isEmpty() ? l.yield(new Promise(function(a, b) {
                                Fa.__resolveMethods.add(a)
                            }
                            ), 11) : l.yield((new Promise(function(a, b) {
                                r.setTimeout(a)
                            }
                            )).then(function(a) {
                                return Fa.__messages.pop()
                            }), 10);
                        case 10:
                            c = l.yieldResult;
                            l.jumpTo(9);
                            break;
                        case 11:
                            c = l.yieldResult;
                        case 9:
                            b = c;
                            if (!(b instanceof rc)) {
                                l.jumpTo(5);
                                break
                            }
                            a.__jobComplete.value = !1;
                            a.workIterations.value = 0;
                        case 4:
                            if ("EXIT" == b.event)
                                return Fa.__current.destroy(),
                                l.return();
                            if ("WORK" != b.event || null == b.job) {
                                b = null;
                                l.jumpTo(2);
                                break
                            }
                            a.__activeJob.value = b.job;
                            f = null;
                            l.setCatchFinallyBlocks(12);
                        case 14:
                            if (a.__jobComplete.value) {
                                h = !1;
                                l.jumpTo(16);
                                break
                            }
                            return l.yield((new Promise(function(a, b) {
                                r.setTimeout(a)
                            }
                            )).then(function(a) {
                                return Fa.__messages.pop()
                            }), 17);
                        case 17:
                            f = l.yieldResult,
                            h = null == f;
                        case 16:
                            if (!h) {
                                l.jumpTo(15);
                                break
                            }
                            a.workIterations.value++;
                            ic.toFunction(b.job.doWork)(b.job.state, a);
                            l.jumpTo(14);
                            break;
                        case 15:
                            l.leaveTryBlock(13);
                            break;
                        case 12:
                            d = l.enterCatchBlock(),
                            a.sendError(ea.caught(d));
                        case 13:
                            a.__activeJob.value = null,
                            null == f || a.__jobComplete.value ? b = null : f instanceof rc && (b = f,
                            a.__jobComplete.value = !1,
                            a.workIterations.value = 0),
                            l.jumpTo(2)
                        }
                    })
                }
                )()
            }
            ;
            Ra.__super__ = Hc;
            Ra.prototype = n(Hc.prototype, {
                run: function(a, b) {
                    if (Fa.__current != Ra.__mainThread)
                        throw ea.thrown("Call run() only from the main thread.");
                    if (null == a) {
                        if (null == this.__doWork)
                            throw ea.thrown("run() requires doWork argument.");
                        a = this.__doWork
                    }
                    null == b && (b = {});
                    a = new $c(a,b);
                    b = this.__jobQueue;
                    b.__jobs.push(a);
                    null != b.pool && 1 != b.__addingWorkPriority && Fa.__current == Ra.__mainThread && (Ra.__totalWorkPriority += b.pool.workPriority,
                    b.__addingWorkPriority = !0);
                    this.canceled = this.completed = !1;
                    oa.current.onUpdate.has(t(this, this.__update)) || oa.current.onUpdate.add(t(this, this.__update));
                    return a.id
                },
                __update: function(a) {
                    if (Fa.__current == Ra.__mainThread) {
                        for (; 0 < this.__jobQueue.__jobs.length && this.__activeJobs.__jobs.length < this.maxThreads; ) {
                            var b = this.__jobQueue;
                            a = b.__jobs.pop();
                            var c = 0 < b.__jobs.length;
                            null != b.pool && b.__addingWorkPriority != c && Fa.__current == Ra.__mainThread && (Ra.__totalWorkPriority = c ? Ra.__totalWorkPriority + b.pool.workPriority : Ra.__totalWorkPriority - b.pool.workPriority,
                            b.__addingWorkPriority = c);
                            a.startTime = (new Date).getTime() / 1E3;
                            c = this.__activeJobs;
                            c.__jobs.push(a);
                            null != c.pool && 1 != c.__addingWorkPriority && Fa.__current == Ra.__mainThread && (Ra.__totalWorkPriority += c.pool.workPriority,
                            c.__addingWorkPriority = !0);
                            1 == this.__mode && (ic.makePortable(a.doWork),
                            c = this.__idleThreads.isEmpty() ? this.createThread({
                                func: Ra.__executeThread,
                                classPath: "lime.system.ThreadPool",
                                functionName: "__executeThread"
                            }) : this.__idleThreads.pop(),
                            this.__activeThreads.h[a.id] = c,
                            c.sendMessage(new rc("WORK",null,a)))
                        }
                        if (0 == this.__mode && 0 < this.__activeJobs.__jobs.length) {
                            b = this.__activeJobs;
                            b.__index++;
                            b.__index >= b.__jobs.length && (b.__index = 0);
                            this.__activeJob.value = b.__jobs[b.__index];
                            a = this.__activeJob.value.state;
                            this.__jobComplete.value = !1;
                            this.workIterations.value = 0;
                            c = this.workPriority * Ra.workLoad / (Ra.__totalWorkPriority * oa.current.__window.__backend.getFrameRate());
                            b = (new Date).getTime() / 1E3;
                            var f = 0;
                            try {
                                do
                                    this.workIterations.value++,
                                    ic.toFunction(this.__activeJob.value.doWork)(a, this),
                                    f = (new Date).getTime() / 1E3 - b;
                                while (!this.__jobComplete.value && f < c)
                            } catch (h) {
                                this.sendError(ea.caught(h))
                            }
                            this.__activeJob.value.duration += f;
                            this.__activeJob.value = null
                        }
                        for (; ; ) {
                            a = this.__jobOutput.pop();
                            if (null == a)
                                break;
                            if (null != this.__activeJobs.getByID(a.job.id)) {
                                c = this.__activeJobs.getByID(a.job.id);
                                this.__activeJob.value = c;
                                1 == this.__mode && (c = (new Date).getTime() / 1E3,
                                this.__activeJob.value.duration = c - this.__activeJob.value.startTime);
                                switch (a.event) {
                                case "COMPLETE":
                                case "ERROR":
                                    "COMPLETE" == a.event ? this.onComplete.dispatch(a.message) : this.onError.dispatch(a.message);
                                    this.__activeJobs.remove(this.__activeJob.value);
                                    1 == this.__mode && (c = this.__activeThreads.h[this.__activeJob.value.id],
                                    this.__activeThreads.remove(this.__activeJob.value.id),
                                    this.__activeJobs.__jobs.length + this.__idleThreads.length > this.maxThreads || 0 == this.__jobQueue.__jobs.length && this.__activeJobs.__jobs.length + this.__idleThreads.length > this.minThreads ? c.sendMessage(new rc("EXIT",null,null)) : this.__idleThreads.push(c));
                                    this.completed = "COMPLETE" == a.event && 0 == this.__activeJobs.__jobs.length && 0 == this.__jobQueue.__jobs.length;
                                    break;
                                case "PROGRESS":
                                    this.onProgress.dispatch(a.message);
                                    break;
                                case "WORK":
                                    this.onRun.dispatch(a.message)
                                }
                                this.__activeJob.value = null
                            }
                        }
                        this.completed && oa.current.onUpdate.remove(t(this, this.__update))
                    }
                },
                createThread: function(a) {
                    return Hc.prototype.createThread.call(this, a)
                },
                __class__: Ra
            });
            var qd = function(a) {
                this.__jobs = [];
                this.__index = 0;
                this.pool = a;
                this.__addingWorkPriority = !1
            };
            g["lime.system.JobList"] = qd;
            qd.__name__ = "lime.system.JobList";
            qd.prototype = {
                hasNext: function() {
                    return 0 < this.__jobs.length
                },
                next: function() {
                    this.__index++;
                    this.__index >= this.__jobs.length && (this.__index = 0);
                    return this.__jobs[this.__index]
                },
                remove: function(a) {
                    if (K.remove(this.__jobs, a))
                        return a = 0 < this.__jobs.length,
                        null != this.pool && this.__addingWorkPriority != a && Fa.__current == Ra.__mainThread && (Ra.__totalWorkPriority = a ? Ra.__totalWorkPriority + this.pool.workPriority : Ra.__totalWorkPriority - this.pool.workPriority,
                        this.__addingWorkPriority = a),
                        !0;
                    K.remove(this.__jobs, this.getByID(a.id)) ? (a = 0 < this.__jobs.length,
                    null != this.pool && this.__addingWorkPriority != a && Fa.__current == Ra.__mainThread && (Ra.__totalWorkPriority = a ? Ra.__totalWorkPriority + this.pool.workPriority : Ra.__totalWorkPriority - this.pool.workPriority,
                    this.__addingWorkPriority = a),
                    a = !0) : a = !1;
                    return a ? !0 : !1
                },
                getByID: function(a) {
                    for (var b = 0, c = this.__jobs; b < c.length; ) {
                        var f = c[b];
                        ++b;
                        if (f.id == a)
                            return f
                    }
                    return null
                },
                __class__: qd
            };
            var $c = function(a, b) {
                this.duration = this.startTime = 0;
                this.id = $c.nextID++;
                this.doWork = a;
                this.state = b
            };
            g["lime.system.JobData"] = $c;
            $c.__name__ = "lime.system.JobData";
            $c.prototype = {
                __class__: $c
            };
            var rc = function(a, b, c) {
                this.event = a;
                this.message = b;
                this.job = c
            };
            g["lime.system.ThreadEvent"] = rc;
            rc.__name__ = "lime.system.ThreadEvent";
            rc.prototype = {
                __class__: rc
            };
            var Zc = function() {};
            g["lime.system.Tls"] = Zc;
            Zc.__name__ = "lime.system.Tls";
            Zc.prototype = {
                __class__: Zc
            };
            var Xb = function(a) {
                null != a && (this.name = a);
                this.__init || (void 0 == this.ascender && (this.ascender = 0),
                void 0 == this.descender && (this.descender = 0),
                void 0 == this.height && (this.height = 0),
                void 0 == this.numGlyphs && (this.numGlyphs = 0),
                void 0 == this.underlinePosition && (this.underlinePosition = 0),
                void 0 == this.underlineThickness && (this.underlineThickness = 0),
                void 0 == this.unitsPerEM && (this.unitsPerEM = 0),
                null != this.__fontID ? la.isLocal(this.__fontID) && this.__fromBytes(la.getBytes(this.__fontID)) : null != this.__fontPath && this.__fromFile(this.__fontPath))
            };
            g["lime.text.Font"] = Xb;
            Xb.__name__ = "lime.text.Font";
            Xb.fromFile = function(a) {
                if (null == a)
                    return null;
                var b = new Xb;
                b.__fromFile(a);
                return b
            }
            ;
            Xb.loadFromName = function(a) {
                return (new Xb).__loadFromName(a)
            }
            ;
            Xb.__measureFontNode = function(a) {
                var b = window.document.createElement("span");
                b.setAttribute("aria-hidden", "true");
                var c = window.document.createTextNode("BESbswy");
                b.appendChild(c);
                c = b.style;
                c.display = "block";
                c.position = "absolute";
                c.top = "-9999px";
                c.left = "-9999px";
                c.fontSize = "300px";
                c.width = "auto";
                c.height = "auto";
                c.lineHeight = "normal";
                c.margin = "0";
                c.padding = "0";
                c.fontVariant = "normal";
                c.whiteSpace = "nowrap";
                c.fontFamily = a;
                window.document.body.appendChild(b);
                return b
            }
            ;
            Xb.prototype = {
                __fromBytes: function(a) {
                    this.__fontPath = null
                },
                __fromFile: function(a) {
                    this.__fontPath = a
                },
                __loadFromName: function(a) {
                    var b = this
                      , c = new Ib;
                    this.name = a;
                    var f = r.navigator.userAgent.toLowerCase()
                      , h = 0 <= f.indexOf(" safari/") && 0 > f.indexOf(" chrome/");
                    f = (new pa("(iPhone|iPod|iPad).*AppleWebKit(?!.*Version)","i")).match(f);
                    if (!h && !f && window.document.fonts && (B = window.document.fonts,
                    t(B, B.load)))
                        window.document.fonts.load("1em '" + a + "'").then(function(a) {
                            c.complete(b)
                        }, function(f) {
                            Xa.warn('Could not load web font "' + a + '"', {
                                fileName: "lime/text/Font.hx",
                                lineNumber: 513,
                                className: "lime.text.Font",
                                methodName: "__loadFromName"
                            });
                            c.complete(b)
                        });
                    else {
                        var d = Xb.__measureFontNode("'" + a + "', sans-serif"), l = Xb.__measureFontNode("'" + a + "', serif"), g = d.offsetWidth, p = l.offsetWidth, y = -1, m = 0, k, L;
                        y = window.setInterval(function() {
                            m += 1;
                            k = d.offsetWidth != g || l.offsetWidth != p;
                            L = 3E3 <= 50 * m;
                            if (k || L)
                                window.clearInterval(y),
                                d.parentNode.removeChild(d),
                                l.parentNode.removeChild(l),
                                l = d = null,
                                L && Xa.warn('Could not load web font "' + a + '"', {
                                    fileName: "lime/text/Font.hx",
                                    lineNumber: 548,
                                    className: "lime.text.Font",
                                    methodName: "__loadFromName"
                                }),
                                c.complete(b)
                        }, 50)
                    }
                    return c.future
                },
                __class__: Xb
            };
            var Fd = function() {
                this.onSave = new Xc;
                this.onCancel = new lb
            };
            g["lime.ui.FileDialog"] = Fd;
            Fd.__name__ = "lime.ui.FileDialog";
            Fd.prototype = {
                save: function(a, b, c, f, h) {
                    null == h && (h = "application/octet-stream");
                    if (null == a)
                        return this.onCancel.dispatch(),
                        !1;
                    b = "";
                    Ja.__isPNG(a) ? (h = "image/png",
                    b = ".png") : Ja.__isJPG(a) ? (h = "image/jpeg",
                    b = ".jpg") : Ja.__isGIF(a) ? (h = "image/gif",
                    b = ".gif") : Ja.__isWebP(a) && (h = "image/webp",
                    b = ".webp");
                    c = null != c ? vb.withoutDirectory(c) : "download" + b;
                    b = a.b.bufferValue;
                    b = b.slice(0, a.length);
                    window.saveAs(new Blob([b],{
                        type: h
                    }), c, !0);
                    this.onSave.dispatch(c);
                    return !0
                },
                __class__: Fd
            };
            var sb = function(a) {
                this.onDisconnect = new lb;
                this.onButtonUp = new ld;
                this.onButtonDown = new ld;
                this.onAxisMove = new Sd;
                this.id = a;
                this.connected = !0
            };
            g["lime.ui.Gamepad"] = sb;
            sb.__name__ = "lime.ui.Gamepad";
            sb.__connect = function(a) {
                if (!sb.devices.h.hasOwnProperty(a)) {
                    var b = new sb(a);
                    sb.devices.h[a] = b;
                    sb.onConnect.dispatch(b)
                }
            }
            ;
            sb.__disconnect = function(a) {
                var b = sb.devices.h[a];
                null != b && (b.connected = !1);
                sb.devices.remove(a);
                null != b && b.onDisconnect.dispatch()
            }
            ;
            sb.prototype = {
                __class__: sb
            };
            var ob = function(a) {
                this.onHatMove = new Pd;
                this.onDisconnect = new lb;
                this.onButtonUp = new Cc;
                this.onButtonDown = new Cc;
                this.onAxisMove = new Od;
                this.id = a;
                this.connected = !0
            };
            g["lime.ui.Joystick"] = ob;
            ob.__name__ = "lime.ui.Joystick";
            ob.__connect = function(a) {
                if (!ob.devices.h.hasOwnProperty(a)) {
                    var b = new ob(a);
                    ob.devices.h[a] = b;
                    ob.onConnect.dispatch(b)
                }
            }
            ;
            ob.__disconnect = function(a) {
                var b = ob.devices.h[a];
                null != b && (b.connected = !1);
                ob.devices.remove(a);
                null != b && b.onDisconnect.dispatch()
            }
            ;
            ob.__getDeviceData = function() {
                var a = null;
                try {
                    a = navigator.getGamepads ? navigator.getGamepads() : navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : null
                } catch (b) {}
                return a
            }
            ;
            ob.prototype = {
                __class__: ob
            };
            var Fb = {
                get_ctrlKey: function(a) {
                    return 0 >= (a & 64) ? 0 < (a & 128) : !0
                },
                get_metaKey: function(a) {
                    return 0 >= (a & 1024) ? 0 < (a & 2048) : !0
                },
                get_shiftKey: function(a) {
                    return 0 >= (a & 1) ? 0 < (a & 2) : !0
                }
            }
              , Cb = z["lime.ui.MouseCursor"] = {
                __ename__: "lime.ui.MouseCursor",
                __constructs__: null,
                ARROW: {
                    _hx_name: "ARROW",
                    _hx_index: 0,
                    __enum__: "lime.ui.MouseCursor",
                    toString: m
                },
                CROSSHAIR: {
                    _hx_name: "CROSSHAIR",
                    _hx_index: 1,
                    __enum__: "lime.ui.MouseCursor",
                    toString: m
                },
                DEFAULT: {
                    _hx_name: "DEFAULT",
                    _hx_index: 2,
                    __enum__: "lime.ui.MouseCursor",
                    toString: m
                },
                MOVE: {
                    _hx_name: "MOVE",
                    _hx_index: 3,
                    __enum__: "lime.ui.MouseCursor",
                    toString: m
                },
                POINTER: {
                    _hx_name: "POINTER",
                    _hx_index: 4,
                    __enum__: "lime.ui.MouseCursor",
                    toString: m
                },
                RESIZE_NESW: {
                    _hx_name: "RESIZE_NESW",
                    _hx_index: 5,
                    __enum__: "lime.ui.MouseCursor",
                    toString: m
                },
                RESIZE_NS: {
                    _hx_name: "RESIZE_NS",
                    _hx_index: 6,
                    __enum__: "lime.ui.MouseCursor",
                    toString: m
                },
                RESIZE_NWSE: {
                    _hx_name: "RESIZE_NWSE",
                    _hx_index: 7,
                    __enum__: "lime.ui.MouseCursor",
                    toString: m
                },
                RESIZE_WE: {
                    _hx_name: "RESIZE_WE",
                    _hx_index: 8,
                    __enum__: "lime.ui.MouseCursor",
                    toString: m
                },
                TEXT: {
                    _hx_name: "TEXT",
                    _hx_index: 9,
                    __enum__: "lime.ui.MouseCursor",
                    toString: m
                },
                WAIT: {
                    _hx_name: "WAIT",
                    _hx_index: 10,
                    __enum__: "lime.ui.MouseCursor",
                    toString: m
                },
                WAIT_ARROW: {
                    _hx_name: "WAIT_ARROW",
                    _hx_index: 11,
                    __enum__: "lime.ui.MouseCursor",
                    toString: m
                },
                CUSTOM: {
                    _hx_name: "CUSTOM",
                    _hx_index: 12,
                    __enum__: "lime.ui.MouseCursor",
                    toString: m
                }
            };
            Cb.__constructs__ = [Cb.ARROW, Cb.CROSSHAIR, Cb.DEFAULT, Cb.MOVE, Cb.POINTER, Cb.RESIZE_NESW, Cb.RESIZE_NS, Cb.RESIZE_NWSE, Cb.RESIZE_WE, Cb.TEXT, Cb.WAIT, Cb.WAIT_ARROW, Cb.CUSTOM];
            var Fc = z["lime.ui.MouseWheelMode"] = {
                __ename__: "lime.ui.MouseWheelMode",
                __constructs__: null,
                PIXELS: {
                    _hx_name: "PIXELS",
                    _hx_index: 0,
                    __enum__: "lime.ui.MouseWheelMode",
                    toString: m
                },
                LINES: {
                    _hx_name: "LINES",
                    _hx_index: 1,
                    __enum__: "lime.ui.MouseWheelMode",
                    toString: m
                },
                PAGES: {
                    _hx_name: "PAGES",
                    _hx_index: 2,
                    __enum__: "lime.ui.MouseWheelMode",
                    toString: m
                },
                UNKNOWN: {
                    _hx_name: "UNKNOWN",
                    _hx_index: 3,
                    __enum__: "lime.ui.MouseWheelMode",
                    toString: m
                }
            };
            Fc.__constructs__ = [Fc.PIXELS, Fc.LINES, Fc.PAGES, Fc.UNKNOWN];
            var ub = function(a, b, c, f, h, d, l) {
                this.x = a;
                this.y = b;
                this.id = c;
                this.dx = f;
                this.dy = h;
                this.pressure = d;
                this.device = l
            };
            g["lime.ui.Touch"] = ub;
            ub.__name__ = "lime.ui.Touch";
            ub.prototype = {
                __class__: ub
            };
            var wd = function(a, b) {
                this.clickCount = 0;
                this.onTextInput = new Xc;
                this.onTextEdit = new Qd;
                this.onRestore = new lb;
                this.onResize = new jd;
                this.onRenderContextRestored = new kd;
                this.onRenderContextLost = new lb;
                this.onRender = new kd;
                this.onMove = new Wc;
                this.onMouseWheel = new Nd;
                this.onMouseUp = new Ld;
                this.onMouseMoveRelative = new Wc;
                this.onMouseMove = new Wc;
                this.onMouseDown = new Md;
                this.onMinimize = new lb;
                this.onMaximize = new lb;
                this.onLeave = new lb;
                this.onKeyUp = new md;
                this.onKeyDown = new md;
                this.onFullscreen = new lb;
                this.onFocusOut = new lb;
                this.onFocusIn = new lb;
                this.onExpose = new lb;
                this.onEnter = new lb;
                this.onDropFile = new Xc;
                this.onDeactivate = new lb;
                this.onClose = new lb;
                this.onActivate = new lb;
                this.application = a;
                this.__attributes = null != b ? b : {};
                Object.prototype.hasOwnProperty.call(this.__attributes, "parameters") && (this.parameters = this.__attributes.parameters);
                this.__height = this.__width = 0;
                this.__fullscreen = !1;
                this.__scale = 1;
                this.__y = this.__x = 0;
                this.__title = Object.prototype.hasOwnProperty.call(this.__attributes, "title") ? this.__attributes.title : "";
                this.id = -1;
                this.__backend = new ua(this)
            };
            g["lime.ui.Window"] = wd;
            wd.__name__ = "lime.ui.Window";
            wd.prototype = {
                close: function() {
                    this.__backend.close()
                },
                set_cursor: function(a) {
                    return this.__backend.setCursor(a)
                },
                set_fullscreen: function(a) {
                    return this.__fullscreen = this.__backend.setFullscreen(a)
                },
                __class__: wd
            };
            var kc = function() {
                this.data = new p;
                this.paths = []
            };
            g["lime.utils.AssetBundle"] = kc;
            kc.__name__ = "lime.utils.AssetBundle";
            kc.fromBytes = function(a) {
                return kc.__extractBundle(new mc(a))
            }
            ;
            kc.loadFromBytes = function(a) {
                return Ba.withValue(kc.fromBytes(a))
            }
            ;
            kc.loadFromFile = function(a) {
                return bb.loadFromFile(a).then(kc.loadFromBytes)
            }
            ;
            kc.__extractBundle = function(a) {
                var b = Qc.readZip(a);
                a = new kc;
                for (b = b.h; null != b; ) {
                    var c = b.item;
                    b = b.next;
                    if (c.compressed) {
                        var f = a.data
                          , h = c.fileName
                          , d = bb.decompress(c.data, Jb.DEFLATE);
                        f.h[h] = d
                    } else
                        a.data.h[c.fileName] = c.data;
                    a.paths.push(c.fileName)
                }
                return a
            }
            ;
            kc.prototype = {
                __class__: kc
            };
            var Xd = function() {
                this.enabled = !0;
                this.audio = new p;
                this.font = new p;
                this.image = new p;
                this.version = 664581
            };
            g["lime.utils.AssetCache"] = Xd;
            Xd.__name__ = "lime.utils.AssetCache";
            Xd.prototype = {
                exists: function(a, b) {
                    return ("IMAGE" == b || null == b) && Object.prototype.hasOwnProperty.call(this.image.h, a) || ("FONT" == b || null == b) && Object.prototype.hasOwnProperty.call(this.font.h, a) || ("SOUND" == b || "MUSIC" == b || null == b) && Object.prototype.hasOwnProperty.call(this.audio.h, a) ? !0 : !1
                },
                set: function(a, b, c) {
                    switch (b) {
                    case "FONT":
                        this.font.h[a] = c;
                        break;
                    case "IMAGE":
                        if (!(c instanceof Ja))
                            throw ea.thrown("Cannot cache non-Image asset: " + H.string(c) + " as Image");
                        this.image.h[a] = c;
                        break;
                    case "MUSIC":
                    case "SOUND":
                        if (!(c instanceof mb))
                            throw ea.thrown("Cannot cache non-AudioBuffer asset: " + H.string(c) + " as AudioBuffer");
                        this.audio.h[a] = c;
                        break;
                    default:
                        throw ea.thrown(b + " assets are not cachable");
                    }
                },
                clear: function(a) {
                    if (null == a)
                        this.audio = new p,
                        this.font = new p,
                        this.image = new p;
                    else {
                        for (var b = Object.keys(this.audio.h), c = b.length, f = 0; f < c; ) {
                            var h = b[f++];
                            if (ta.startsWith(h, a)) {
                                var d = this.audio;
                                Object.prototype.hasOwnProperty.call(d.h, h) && delete d.h[h]
                            }
                        }
                        b = Object.keys(this.font.h);
                        c = b.length;
                        for (f = 0; f < c; )
                            h = b[f++],
                            ta.startsWith(h, a) && (d = this.font,
                            Object.prototype.hasOwnProperty.call(d.h, h) && delete d.h[h]);
                        b = Object.keys(this.image.h);
                        c = b.length;
                        for (f = 0; f < c; )
                            h = b[f++],
                            ta.startsWith(h, a) && (d = this.image,
                            Object.prototype.hasOwnProperty.call(d.h, h) && delete d.h[h])
                    }
                },
                __class__: Xd
            };
            var ab = function() {
                this.types = new p;
                this.sizes = new p;
                this.preload = new p;
                this.paths = new p;
                this.pathGroups = new p;
                this.classTypes = new p;
                this.cachedText = new p;
                this.cachedImages = new p;
                this.cachedFonts = new p;
                this.cachedBytes = new p;
                this.cachedAudioBuffers = new p;
                this.onChange = new lb;
                this.bytesTotal = this.bytesLoaded = 0
            };
            g["lime.utils.AssetLibrary"] = ab;
            ab.__name__ = "lime.utils.AssetLibrary";
            ab.fromBundle = function(a) {
                if (Object.prototype.hasOwnProperty.call(a.data.h, "library.json")) {
                    var b = eb.fromBytes(a.data.h["library.json"]);
                    if (null != b) {
                        if (null == b.libraryType)
                            var c = new ab;
                        else if (c = g[b.libraryType],
                        null != c)
                            c = v.createInstance(c, b.libraryArgs);
                        else
                            return Xa.warn("Could not find library type: " + b.libraryType, {
                                fileName: "lime/utils/AssetLibrary.hx",
                                lineNumber: 122,
                                className: "lime.utils.AssetLibrary",
                                methodName: "fromBundle"
                            }),
                            null;
                        c.__fromBundle(a, b);
                        return c
                    }
                } else
                    return c = new ab,
                    c.__fromBundle(a),
                    c;
                return null
            }
            ;
            ab.fromManifest = function(a) {
                if (null == a)
                    return null;
                if (null == a.libraryType)
                    var b = new ab;
                else if (b = g[a.libraryType],
                null != b)
                    b = v.createInstance(b, a.libraryArgs);
                else
                    return Xa.warn("Could not find library type: " + a.libraryType, {
                        fileName: "lime/utils/AssetLibrary.hx",
                        lineNumber: 160,
                        className: "lime.utils.AssetLibrary",
                        methodName: "fromManifest"
                    }),
                    null;
                b.__fromManifest(a);
                return b
            }
            ;
            ab.loadFromBytes = function(a, b) {
                return eb.loadFromBytes(a, b).then(function(a) {
                    return ab.loadFromManifest(a)
                })
            }
            ;
            ab.loadFromFile = function(a, b) {
                return eb.loadFromFile(a, b).then(function(a) {
                    return ab.loadFromManifest(a)
                })
            }
            ;
            ab.loadFromManifest = function(a) {
                a = ab.fromManifest(a);
                return null != a ? a.load() : Ba.withError("Could not load asset manifest")
            }
            ;
            ab.prototype = {
                exists: function(a, b) {
                    b = null != b ? ja.__cast(b, String) : null;
                    a = this.types.h[a];
                    return null == a || a != b && ("SOUND" != b && "MUSIC" != b || "MUSIC" != a && "SOUND" != a) && "BINARY" != b && null != b && ("BINARY" != a || "TEXT" != b) ? !1 : !0
                },
                getAsset: function(a, b) {
                    switch (b) {
                    case "BINARY":
                        return this.getBytes(a);
                    case "FONT":
                        return this.getFont(a);
                    case "IMAGE":
                        return this.getImage(a);
                    case "MUSIC":
                    case "SOUND":
                        return this.getAudioBuffer(a);
                    case "TEMPLATE":
                        throw ea.thrown("Not sure how to get template: " + a);
                    case "TEXT":
                        return this.getText(a);
                    default:
                        throw ea.thrown("Unknown asset type: " + b);
                    }
                },
                getAudioBuffer: function(a) {
                    return Object.prototype.hasOwnProperty.call(this.cachedAudioBuffers.h, a) ? this.cachedAudioBuffers.h[a] : Object.prototype.hasOwnProperty.call(this.classTypes.h, a) ? mb.fromBytes(ja.__cast(v.createInstance(this.classTypes.h[a], []), Aa)) : mb.fromFile(this.getPath(a))
                },
                getBytes: function(a) {
                    if (Object.prototype.hasOwnProperty.call(this.cachedBytes.h, a))
                        return this.cachedBytes.h[a];
                    if (Object.prototype.hasOwnProperty.call(this.cachedText.h, a)) {
                        var b = bb.ofString(this.cachedText.h[a]);
                        return this.cachedBytes.h[a] = b
                    }
                    return Object.prototype.hasOwnProperty.call(this.classTypes.h, a) ? ja.__cast(v.createInstance(this.classTypes.h[a], []), Aa) : bb.fromFile(this.getPath(a))
                },
                getFont: function(a) {
                    return Object.prototype.hasOwnProperty.call(this.cachedFonts.h, a) ? this.cachedFonts.h[a] : Object.prototype.hasOwnProperty.call(this.classTypes.h, a) ? ja.__cast(v.createInstance(this.classTypes.h[a], []), Xb) : Xb.fromFile(this.getPath(a))
                },
                getImage: function(a) {
                    return Object.prototype.hasOwnProperty.call(this.cachedImages.h, a) ? this.cachedImages.h[a] : Object.prototype.hasOwnProperty.call(this.classTypes.h, a) ? ja.__cast(v.createInstance(this.classTypes.h[a], []), Ja) : Ja.fromFile(this.getPath(a))
                },
                getPath: function(a) {
                    return Object.prototype.hasOwnProperty.call(this.paths.h, a) ? this.paths.h[a] : Object.prototype.hasOwnProperty.call(this.pathGroups.h, a) ? this.pathGroups.h[a][0] : null
                },
                getText: function(a) {
                    if (Object.prototype.hasOwnProperty.call(this.cachedText.h, a))
                        return this.cachedText.h[a];
                    a = this.getBytes(a);
                    return null == a ? null : a.getString(0, a.length)
                },
                isLocal: function(a, b) {
                    if (Object.prototype.hasOwnProperty.call(this.classTypes.h, a))
                        return !0;
                    b = ja.__cast(b, String);
                    if (null == b)
                        return Object.prototype.hasOwnProperty.call(this.cachedBytes.h, a) || Object.prototype.hasOwnProperty.call(this.cachedText.h, a) || Object.prototype.hasOwnProperty.call(this.cachedImages.h, a) || Object.prototype.hasOwnProperty.call(this.cachedAudioBuffers.h, a) ? !0 : Object.prototype.hasOwnProperty.call(this.cachedFonts.h, a);
                    switch (b) {
                    case "FONT":
                        return Object.prototype.hasOwnProperty.call(this.cachedFonts.h, a);
                    case "IMAGE":
                        return Object.prototype.hasOwnProperty.call(this.cachedImages.h, a);
                    case "MUSIC":
                    case "SOUND":
                        return Object.prototype.hasOwnProperty.call(this.cachedAudioBuffers.h, a);
                    default:
                        return Object.prototype.hasOwnProperty.call(this.cachedBytes.h, a) ? !0 : Object.prototype.hasOwnProperty.call(this.cachedText.h, a)
                    }
                },
                loadAsset: function(a, b) {
                    switch (b) {
                    case "BINARY":
                        return this.loadBytes(a);
                    case "FONT":
                        return this.loadFont(a);
                    case "IMAGE":
                        return this.loadImage(a);
                    case "MUSIC":
                    case "SOUND":
                        return this.loadAudioBuffer(a);
                    case "TEMPLATE":
                        throw ea.thrown("Not sure how to load template: " + a);
                    case "TEXT":
                        return this.loadText(a);
                    default:
                        throw ea.thrown("Unknown asset type: " + b);
                    }
                },
                load: function() {
                    if (this.loaded)
                        return Ba.withValue(this);
                    if (null == this.promise) {
                        this.promise = new Ib;
                        this.bytesLoadedCache = new p;
                        this.assetsLoaded = 0;
                        this.assetsTotal = 1;
                        for (var a = Object.keys(this.preload.h), b = a.length, c = 0; c < b; ) {
                            var f = a[c++];
                            if (this.preload.h[f]) {
                                Xa.verbose("Preloading asset: " + f + " [" + this.types.h[f] + "]", {
                                    fileName: "lime/utils/AssetLibrary.hx",
                                    lineNumber: 408,
                                    className: "lime.utils.AssetLibrary",
                                    methodName: "load"
                                });
                                var h = this.types.h[f];
                                if (null != h)
                                    switch (h) {
                                    case "BINARY":
                                        this.assetsTotal++;
                                        h = this.loadBytes(f);
                                        h.onProgress(function(a, b) {
                                            return function(c, f) {
                                                b[0].load_onProgress(a[0], c, f)
                                            }
                                        }([f], [this]));
                                        h.onError(function(a, b) {
                                            return function(c) {
                                                b[0].load_onError(a[0], c)
                                            }
                                        }([f], [this]));
                                        h.onComplete(function(a, b) {
                                            return function(c) {
                                                b[0].loadBytes_onComplete(a[0], c)
                                            }
                                        }([f], [this]));
                                        break;
                                    case "FONT":
                                        this.assetsTotal++;
                                        h = this.loadFont(f);
                                        h.onProgress(function(a, b) {
                                            return function(c, f) {
                                                b[0].load_onProgress(a[0], c, f)
                                            }
                                        }([f], [this]));
                                        h.onError(function(a, b) {
                                            return function(c) {
                                                b[0].load_onError(a[0], c)
                                            }
                                        }([f], [this]));
                                        h.onComplete(function(a, b) {
                                            return function(c) {
                                                b[0].loadFont_onComplete(a[0], c)
                                            }
                                        }([f], [this]));
                                        break;
                                    case "IMAGE":
                                        this.assetsTotal++;
                                        h = this.loadImage(f);
                                        h.onProgress(function(a, b) {
                                            return function(c, f) {
                                                b[0].load_onProgress(a[0], c, f)
                                            }
                                        }([f], [this]));
                                        h.onError(function(a, b) {
                                            return function(c) {
                                                b[0].load_onError(a[0], c)
                                            }
                                        }([f], [this]));
                                        h.onComplete(function(a, b) {
                                            return function(c) {
                                                b[0].loadImage_onComplete(a[0], c)
                                            }
                                        }([f], [this]));
                                        break;
                                    case "MUSIC":
                                    case "SOUND":
                                        this.assetsTotal++;
                                        h = this.loadAudioBuffer(f);
                                        h.onProgress(function(a, b) {
                                            return function(c, f) {
                                                b[0].load_onProgress(a[0], c, f)
                                            }
                                        }([f], [this]));
                                        h.onError(function(a, b) {
                                            return function(c) {
                                                b[0].loadAudioBuffer_onError(a[0], c)
                                            }
                                        }([f], [this]));
                                        h.onComplete(function(a, b) {
                                            return function(c) {
                                                b[0].loadAudioBuffer_onComplete(a[0], c)
                                            }
                                        }([f], [this]));
                                        break;
                                    case "TEXT":
                                        this.assetsTotal++,
                                        h = this.loadText(f),
                                        h.onProgress(function(a, b) {
                                            return function(c, f) {
                                                b[0].load_onProgress(a[0], c, f)
                                            }
                                        }([f], [this])),
                                        h.onError(function(a, b) {
                                            return function(c) {
                                                b[0].load_onError(a[0], c)
                                            }
                                        }([f], [this])),
                                        h.onComplete(function(a, b) {
                                            return function(c) {
                                                b[0].loadText_onComplete(a[0], c)
                                            }
                                        }([f], [this]))
                                    }
                            }
                        }
                        this.__assetLoaded(null)
                    }
                    return this.promise.future
                },
                loadAudioBuffer: function(a) {
                    return Object.prototype.hasOwnProperty.call(this.cachedAudioBuffers.h, a) ? Ba.withValue(this.cachedAudioBuffers.h[a]) : Object.prototype.hasOwnProperty.call(this.classTypes.h, a) ? Ba.withValue(mb.fromBytes(ja.__cast(v.createInstance(this.classTypes.h[a], []), Aa))) : Object.prototype.hasOwnProperty.call(this.pathGroups.h, a) ? mb.loadFromFiles(this.pathGroups.h[a]) : mb.loadFromFile(this.paths.h[a])
                },
                loadBytes: function(a) {
                    return Object.prototype.hasOwnProperty.call(this.cachedBytes.h, a) ? Ba.withValue(this.cachedBytes.h[a]) : Object.prototype.hasOwnProperty.call(this.classTypes.h, a) ? Ba.withValue(v.createInstance(this.classTypes.h[a], [])) : bb.loadFromFile(this.getPath(a))
                },
                loadFont: function(a) {
                    return Object.prototype.hasOwnProperty.call(this.cachedFonts.h, a) ? Ba.withValue(this.cachedFonts.h[a]) : Object.prototype.hasOwnProperty.call(this.classTypes.h, a) ? (a = v.createInstance(this.classTypes.h[a], []),
                    a.__loadFromName(a.name)) : Xb.loadFromName(this.getPath(a))
                },
                loadImage: function(a) {
                    var b = this;
                    return Object.prototype.hasOwnProperty.call(this.cachedImages.h, a) ? Ba.withValue(this.cachedImages.h[a]) : Object.prototype.hasOwnProperty.call(this.classTypes.h, a) ? Ba.withValue(v.createInstance(this.classTypes.h[a], [])) : Object.prototype.hasOwnProperty.call(this.cachedBytes.h, a) ? Ja.loadFromBytes(this.cachedBytes.h[a]).then(function(c) {
                        var f = b.cachedBytes;
                        Object.prototype.hasOwnProperty.call(f.h, a) && delete f.h[a];
                        b.cachedImages.h[a] = c;
                        return Ba.withValue(c)
                    }) : Ja.loadFromFile(this.getPath(a))
                },
                loadText: function(a) {
                    if (Object.prototype.hasOwnProperty.call(this.cachedText.h, a))
                        return Ba.withValue(this.cachedText.h[a]);
                    if (Object.prototype.hasOwnProperty.call(this.cachedBytes.h, a) || Object.prototype.hasOwnProperty.call(this.classTypes.h, a)) {
                        var b = this.getBytes(a);
                        if (null == b)
                            return Ba.withValue(null);
                        b = b.getString(0, b.length);
                        this.cachedText.h[a] = b;
                        return Ba.withValue(b)
                    }
                    return (new od).load(this.getPath(a))
                },
                unload: function() {
                    this.cachedBytes.h = Object.create(null);
                    this.cachedFonts.h = Object.create(null);
                    this.cachedImages.h = Object.create(null);
                    this.cachedAudioBuffers.h = Object.create(null);
                    this.cachedText.h = Object.create(null)
                },
                __assetLoaded: function(a) {
                    this.assetsLoaded++;
                    null != a && Xa.verbose("Loaded asset: " + a + " [" + this.types.h[a] + "] (" + (this.assetsLoaded - 1) + "/" + (this.assetsTotal - 1) + ")", {
                        fileName: "lime/utils/AssetLibrary.hx",
                        lineNumber: 637,
                        className: "lime.utils.AssetLibrary",
                        methodName: "__assetLoaded"
                    });
                    if (null != a) {
                        var b = Object.prototype.hasOwnProperty.call(this.sizes.h, a) ? this.sizes.h[a] : 0;
                        if (Object.prototype.hasOwnProperty.call(this.bytesLoadedCache.h, a)) {
                            var c = this.bytesLoadedCache.h[a];
                            c < b && (this.bytesLoaded += b - c)
                        } else
                            this.bytesLoaded += b;
                        this.bytesLoadedCache.h[a] = b
                    }
                    this.assetsLoaded < this.assetsTotal ? this.promise.progress(this.bytesLoaded, this.bytesTotal) : (this.loaded = !0,
                    this.promise.progress(this.bytesTotal, this.bytesTotal),
                    this.promise.complete(this))
                },
                __cacheBreak: function(a) {
                    return la.__cacheBreak(a)
                },
                __fromBundle: function(a, b) {
                    if (null != b) {
                        var c = 0;
                        for (b = b.assets; c < b.length; ) {
                            var f = b[c];
                            ++c;
                            var h = Object.prototype.hasOwnProperty.call(f, "id") ? f.id : f.path;
                            var d = a.data.h[f.path];
                            if (Object.prototype.hasOwnProperty.call(f, "type")) {
                                var l = f.type;
                                "TEXT" == l ? this.cachedText.h[h] = null != d ? H.string(d) : null : this.cachedBytes.h[h] = d;
                                this.types.h[h] = f.type
                            } else
                                this.cachedBytes.h[h] = d,
                                this.types.h[h] = "BINARY"
                        }
                    } else
                        for (c = 0,
                        b = a.paths; c < b.length; )
                            h = b[c],
                            ++c,
                            this.cachedBytes.h[h] = a.data.h[h],
                            this.types.h[h] = "BINARY"
                },
                __fromManifest: function(a) {
                    var b = 2 <= a.version
                      , c = a.rootPath;
                    null == c && (c = "");
                    "" != c && (c += "/");
                    for (var f = 0, h = a.assets; f < h.length; ) {
                        var d = h[f];
                        ++f;
                        var l = b && Object.prototype.hasOwnProperty.call(d, "size") ? d.size : 100;
                        var p = Object.prototype.hasOwnProperty.call(d, "id") ? d.id : d.path;
                        if (Object.prototype.hasOwnProperty.call(d, "path")) {
                            var y = this.paths;
                            var m = this.__cacheBreak(this.__resolvePath(c + H.string(Y.field(d, "path"))));
                            y.h[p] = m
                        }
                        if (Object.prototype.hasOwnProperty.call(d, "pathGroup")) {
                            y = Y.field(d, "pathGroup");
                            m = 0;
                            for (var k = y.length; m < k; ) {
                                var L = m++;
                                y[L] = this.__cacheBreak(this.__resolvePath(c + y[L]))
                            }
                            this.pathGroups.h[p] = y
                        }
                        this.sizes.h[p] = l;
                        this.types.h[p] = d.type;
                        Object.prototype.hasOwnProperty.call(d, "preload") && (this.preload.h[p] = Y.field(d, "preload"));
                        Object.prototype.hasOwnProperty.call(d, "className") && (l = Y.field(d, "className"),
                        l = g[l],
                        this.classTypes.h[p] = l)
                    }
                    f = this.bytesTotal = 0;
                    for (h = a.assets; f < h.length; )
                        d = h[f],
                        ++f,
                        p = Object.prototype.hasOwnProperty.call(d, "id") ? d.id : d.path,
                        Object.prototype.hasOwnProperty.call(this.preload.h, p) && this.preload.h[p] && Object.prototype.hasOwnProperty.call(this.sizes.h, p) && (this.bytesTotal += this.sizes.h[p])
                },
                __resolvePath: function(a) {
                    a = ta.replace(a, "\\", "/");
                    var b = a.indexOf(":");
                    ta.startsWith(a, "http") && 0 < b ? (b += 3,
                    a = K.substr(a, 0, b) + ta.replace(K.substr(a, b, null), "//", "/")) : a = ta.replace(a, "//", "/");
                    if (-1 < a.indexOf("./")) {
                        a = a.split("/");
                        b = [];
                        for (var c = 0, f = a.length; c < f; ) {
                            var h = c++;
                            ".." == a[h] ? 0 == h || ".." == b[h - 1] ? b.push("..") : b.pop() : "." == a[h] ? 0 == h && b.push(".") : b.push(a[h])
                        }
                        a = b.join("/")
                    }
                    return a
                },
                loadAudioBuffer_onComplete: function(a, b) {
                    this.cachedAudioBuffers.h[a] = b;
                    if (Object.prototype.hasOwnProperty.call(this.pathGroups.h, a))
                        for (var c = this.pathGroups.h[a], f = Object.keys(this.pathGroups.h), h = f.length, d = 0; d < h; ) {
                            var l = f[d++];
                            if (l != a)
                                for (var g = 0; g < c.length; )
                                    if (-1 < this.pathGroups.h[l].indexOf(c[g++])) {
                                        this.cachedAudioBuffers.h[l] = b;
                                        break
                                    }
                        }
                    this.__assetLoaded(a)
                },
                loadAudioBuffer_onError: function(a, b) {
                    null != b && "" != b ? Xa.warn('Could not load "' + a + '": ' + H.string(b), {
                        fileName: "lime/utils/AssetLibrary.hx",
                        lineNumber: 883,
                        className: "lime.utils.AssetLibrary",
                        methodName: "loadAudioBuffer_onError"
                    }) : Xa.warn('Could not load "' + a + '"', {
                        fileName: "lime/utils/AssetLibrary.hx",
                        lineNumber: 887,
                        className: "lime.utils.AssetLibrary",
                        methodName: "loadAudioBuffer_onError"
                    });
                    this.loadAudioBuffer_onComplete(a, new mb)
                },
                loadBytes_onComplete: function(a, b) {
                    this.cachedBytes.h[a] = b;
                    this.__assetLoaded(a)
                },
                loadFont_onComplete: function(a, b) {
                    this.cachedFonts.h[a] = b;
                    this.__assetLoaded(a)
                },
                loadImage_onComplete: function(a, b) {
                    this.cachedImages.h[a] = b;
                    this.__assetLoaded(a)
                },
                loadText_onComplete: function(a, b) {
                    this.cachedText.h[a] = b;
                    this.__assetLoaded(a)
                },
                load_onError: function(a, b) {
                    null != b && "" != b ? this.promise.error('Error loading asset "' + a + '": ' + H.string(b)) : this.promise.error('Error loading asset "' + a + '"')
                },
                load_onProgress: function(a, b, c) {
                    if (0 < b) {
                        var f = this.sizes.h[a];
                        0 < c ? (b /= c,
                        1 < b && (b = 1),
                        b = Math.floor(b * f)) : b > f && (b = f);
                        Object.prototype.hasOwnProperty.call(this.bytesLoadedCache.h, a) ? (f = this.bytesLoadedCache.h[a],
                        b != f && (this.bytesLoaded += b - f)) : this.bytesLoaded += b;
                        this.bytesLoadedCache.h[a] = b;
                        this.promise.progress(this.bytesLoaded, this.bytesTotal)
                    }
                },
                __class__: ab
            };
            var eb = function() {
                this.assets = [];
                this.libraryArgs = [];
                this.version = 2
            };
            g["lime.utils.AssetManifest"] = eb;
            eb.__name__ = "lime.utils.AssetManifest";
            eb.fromBytes = function(a, b) {
                return null != a ? eb.parse(a.getString(0, a.length), b) : null
            }
            ;
            eb.fromFile = function(a, b) {
                a = eb.__resolvePath(a);
                b = eb.__resolveRootPath(b, a);
                return null == a ? null : eb.fromBytes(bb.fromFile(a), b)
            }
            ;
            eb.loadFromBytes = function(a, b) {
                return Ba.withValue(eb.fromBytes(a, b))
            }
            ;
            eb.loadFromFile = function(a, b) {
                a = eb.__resolvePath(a);
                b = eb.__resolveRootPath(b, a);
                return null == a ? null : bb.loadFromFile(a).then(function(a) {
                    return Ba.withValue(eb.fromBytes(a, b))
                })
            }
            ;
            eb.parse = function(a, b) {
                if (null == a || "" == a)
                    return null;
                a = JSON.parse(a);
                var c = new eb;
                Object.prototype.hasOwnProperty.call(a, "name") && (c.name = a.name);
                Object.prototype.hasOwnProperty.call(a, "libraryType") && (c.libraryType = a.libraryType);
                Object.prototype.hasOwnProperty.call(a, "libraryArgs") && (c.libraryArgs = a.libraryArgs);
                if (Object.prototype.hasOwnProperty.call(a, "assets")) {
                    var f = a.assets;
                    Object.prototype.hasOwnProperty.call(a, "version") && 2 >= a.version ? c.assets = fb.run(f) : c.assets = f
                }
                Object.prototype.hasOwnProperty.call(a, "rootPath") && (c.rootPath = a.rootPath);
                null != b && "" != b && (c.rootPath = null == c.rootPath || "" == c.rootPath ? b : b + "/" + c.rootPath);
                return c
            }
            ;
            eb.__resolvePath = function(a) {
                if (null == a)
                    return null;
                var b = a.indexOf("?");
                var c = -1 < b ? K.substr(a, 0, b) : a;
                for (c = ta.replace(c, "\\", "/"); ta.endsWith(c, "/"); )
                    c = K.substr(c, 0, c.length - 1);
                return ta.endsWith(c, ".bundle") ? -1 < b ? c + "/library.json" + K.substr(a, b, null) : c + "/library.json" : a
            }
            ;
            eb.__resolveRootPath = function(a, b) {
                if (null != a)
                    return a;
                a = b.indexOf("?");
                a = -1 < a ? K.substr(b, 0, a) : b;
                for (a = ta.replace(a, "\\", "/"); ta.endsWith(a, "/"); ) {
                    if ("/" == a)
                        return a;
                    a = K.substr(a, 0, a.length - 1)
                }
                return ta.endsWith(a, ".bundle") ? a : vb.directory(a)
            }
            ;
            eb.prototype = {
                __class__: eb
            };
            var la = function() {};
            g["lime.utils.Assets"] = la;
            la.__name__ = "lime.utils.Assets";
            la.getAsset = function(a, b, c) {
                if (c && la.cache.enabled)
                    switch (b) {
                    case "FONT":
                        var f = la.cache.font.h[a];
                        if (null != f)
                            return f;
                        break;
                    case "IMAGE":
                        f = la.cache.image.h[a];
                        if (la.isValidImage(f))
                            return f;
                        break;
                    case "MUSIC":
                    case "SOUND":
                        f = la.cache.audio.h[a];
                        if (la.isValidAudio(f))
                            return f;
                        break;
                    case "TEMPLATE":
                        throw ea.thrown("Not sure how to get template: " + a);
                    case "BINARY":
                    case "TEXT":
                        c = !1;
                        break;
                    default:
                        return null
                    }
                var h = a.indexOf(":");
                f = a.substring(0, h);
                h = a.substring(h + 1);
                var d = la.getLibrary(f);
                if (null != d)
                    if (d.exists(h, b)) {
                        if (d.isLocal(h, b))
                            return f = d.getAsset(h, b),
                            c && la.cache.enabled && la.cache.set(a, b, f),
                            f;
                        Xa.error(b + ' asset "' + a + '" exists, but only asynchronously', {
                            fileName: "lime/utils/Assets.hx",
                            lineNumber: 133,
                            className: "lime.utils.Assets",
                            methodName: "getAsset"
                        })
                    } else
                        Xa.error("There is no " + b + ' asset with an ID of "' + a + '"', {
                            fileName: "lime/utils/Assets.hx",
                            lineNumber: 138,
                            className: "lime.utils.Assets",
                            methodName: "getAsset"
                        });
                else
                    Xa.error(la.__libraryNotFound(f), {
                        fileName: "lime/utils/Assets.hx",
                        lineNumber: 143,
                        className: "lime.utils.Assets",
                        methodName: "getAsset"
                    });
                return null
            }
            ;
            la.getBytes = function(a) {
                return la.getAsset(a, "BINARY", !1)
            }
            ;
            la.getLibrary = function(a) {
                if (null == a || "" == a)
                    a = "default";
                return la.libraries.h[a]
            }
            ;
            la.getText = function(a) {
                return la.getAsset(a, "TEXT", !1)
            }
            ;
            la.isLocal = function(a, b, c) {
                null == c && (c = !0);
                if (c && la.cache.enabled && la.cache.exists(a, b))
                    return !0;
                c = a.indexOf(":");
                var f = la.getLibrary(a.substring(0, c));
                return null != f ? f.isLocal(a.substring(c + 1), b) : !1
            }
            ;
            la.isValidAudio = function(a) {
                return null != a
            }
            ;
            la.isValidImage = function(a) {
                return null != a ? null != a.buffer : !1
            }
            ;
            la.loadAsset = function(a, b, c) {
                if (c && la.cache.enabled)
                    switch (b) {
                    case "FONT":
                        var f = la.cache.font.h[a];
                        if (null != f)
                            return Ba.withValue(f);
                        break;
                    case "IMAGE":
                        f = la.cache.image.h[a];
                        if (la.isValidImage(f))
                            return Ba.withValue(f);
                        break;
                    case "MUSIC":
                    case "SOUND":
                        f = la.cache.audio.h[a];
                        if (la.isValidAudio(f))
                            return Ba.withValue(f);
                        break;
                    case "TEMPLATE":
                        throw ea.thrown("Not sure how to get template: " + a);
                    case "BINARY":
                    case "TEXT":
                        c = !1;
                        break;
                    default:
                        return null
                    }
                var h = a.indexOf(":");
                f = a.substring(0, h);
                h = a.substring(h + 1);
                var d = la.getLibrary(f);
                if (null != d) {
                    if (d.exists(h, b)) {
                        f = d.loadAsset(h, b);
                        if (c && la.cache.enabled)
                            f.onComplete(function(c) {
                                la.cache.set(a, b, c)
                            });
                        return f
                    }
                    return Ba.withError("There is no " + b + ' asset with an ID of "' + a + '"')
                }
                return Ba.withError(la.__libraryNotFound(f))
            }
            ;
            la.loadAudioBuffer = function(a, b) {
                null == b && (b = !0);
                return la.loadAsset(a, "SOUND", b)
            }
            ;
            la.loadImage = function(a, b) {
                null == b && (b = !0);
                return la.loadAsset(a, "IMAGE", b)
            }
            ;
            la.loadLibrary = function(a) {
                var b = new Ib
                  , c = la.getLibrary(a);
                if (null != c)
                    return c.load();
                c = a;
                var f = null;
                if (Object.prototype.hasOwnProperty.call(la.bundlePaths.h, a))
                    kc.loadFromFile(la.bundlePaths.h[a]).onComplete(function(c) {
                        null == c ? b.error('Cannot load bundle for library "' + a + '"') : (c = ab.fromBundle(c),
                        null == c ? b.error('Cannot open library "' + a + '"') : (la.libraries.h[a] = c,
                        c.onChange.add((B = la.onChange,
                        t(B, B.dispatch))),
                        b.completeWith(c.load())))
                    }).onError(function(c) {
                        b.error('There is no asset library with an ID of "' + a + '"')
                    });
                else
                    Object.prototype.hasOwnProperty.call(la.libraryPaths.h, a) ? (c = la.libraryPaths.h[a],
                    f = vb.directory(c)) : (ta.endsWith(c, ".bundle") ? (f = c,
                    c += "/library.json") : f = vb.directory(c),
                    c = la.__cacheBreak(c)),
                    eb.loadFromFile(c, f).onComplete(function(c) {
                        null == c ? b.error('Cannot parse asset manifest for library "' + a + '"') : (c = ab.fromManifest(c),
                        null == c ? b.error('Cannot open library "' + a + '"') : (la.libraries.h[a] = c,
                        c.onChange.add((B = la.onChange,
                        t(B, B.dispatch))),
                        b.completeWith(c.load())))
                    }).onError(function(c) {
                        b.error('There is no asset library with an ID of "' + a + '"')
                    });
                return b.future
            }
            ;
            la.registerLibrary = function(a, b) {
                if (null == a || "" == a)
                    a = "default";
                if (Object.prototype.hasOwnProperty.call(la.libraries.h, a)) {
                    if (la.libraries.h[a] == b)
                        return;
                    la.unloadLibrary(a)
                }
                null != b && b.onChange.add(la.library_onChange);
                la.libraries.h[a] = b
            }
            ;
            la.unloadLibrary = function(a) {
                la.removeLibrary(a, !0)
            }
            ;
            la.removeLibrary = function(a, b) {
                null == b && (b = !0);
                if (null == a || "" == a)
                    a = "default";
                var c = la.libraries.h[a];
                null != c && (la.cache.clear(a + ":"),
                c.onChange.remove(la.library_onChange),
                b && c.unload());
                b = la.libraries;
                Object.prototype.hasOwnProperty.call(b.h, a) && delete b.h[a]
            }
            ;
            la.__cacheBreak = function(a) {
                0 < la.cache.version && (a = -1 < a.indexOf("?") ? a + ("&" + la.cache.version) : a + ("?" + la.cache.version));
                return a
            }
            ;
            la.__libraryNotFound = function(a) {
                if (null == a || "" == a)
                    a = "default";
                return null == oa.current || null == oa.current.__preloader || oa.current.__preloader.complete ? 'There is no asset library named "' + a + '"' : 'There is no asset library named "' + a + '", or it is not yet preloaded'
            }
            ;
            la.library_onChange = function() {
                la.cache.clear();
                la.onChange.dispatch()
            }
            ;
            var qe = {
                fromLimeBytes: function(a) {
                    return new Yd(a,0)
                }
            }
              , Yd = function(a, b) {
                this.bytes = a;
                this.offset = b
            };
            g["lime.utils.BytePointerData"] = Yd;
            Yd.__name__ = "lime.utils.BytePointerData";
            Yd.prototype = {
                __class__: Yd
            };
            var bb = {
                _new: function(a, b) {
                    return new Aa(b)
                },
                alloc: function(a) {
                    return new Aa(new ArrayBuffer(a))
                },
                decompress: function(a, b) {
                    switch (b._hx_index) {
                    case 0:
                        return ce.decompress(a);
                    case 1:
                        return de.decompress(a);
                    case 2:
                        return fe.decompress(a);
                    case 3:
                        return ge.decompress(a)
                    }
                },
                fromBytes: function(a) {
                    return null == a ? null : bb._new(a.length, a.b.bufferValue)
                },
                fromFile: function(a) {
                    return null
                },
                loadFromFile: function(a) {
                    return (new pd).load(a)
                },
                ofString: function(a) {
                    a = Aa.ofString(a);
                    return bb._new(a.length, a.b.bufferValue)
                }
            }
              , Jb = z["lime.utils.CompressionAlgorithm"] = {
                __ename__: "lime.utils.CompressionAlgorithm",
                __constructs__: null,
                DEFLATE: {
                    _hx_name: "DEFLATE",
                    _hx_index: 0,
                    __enum__: "lime.utils.CompressionAlgorithm",
                    toString: m
                },
                GZIP: {
                    _hx_name: "GZIP",
                    _hx_index: 1,
                    __enum__: "lime.utils.CompressionAlgorithm",
                    toString: m
                },
                LZMA: {
                    _hx_name: "LZMA",
                    _hx_index: 2,
                    __enum__: "lime.utils.CompressionAlgorithm",
                    toString: m
                },
                ZLIB: {
                    _hx_name: "ZLIB",
                    _hx_index: 3,
                    __enum__: "lime.utils.CompressionAlgorithm",
                    toString: m
                }
            };
            Jb.__constructs__ = [Jb.DEFLATE, Jb.GZIP, Jb.LZMA, Jb.ZLIB];
            var Xa = function() {};
            g["lime.utils.Log"] = Xa;
            Xa.__name__ = "lime.utils.Log";
            Xa.error = function(a, b) {
                if (1 <= Xa.level) {
                    a = "[" + b.className + "] ERROR: " + H.string(a);
                    if (Xa.throwErrors)
                        throw ea.thrown(a);
                    console.error(a)
                }
            }
            ;
            Xa.verbose = function(a, b) {
                5 <= Xa.level && (a = "[" + b.className + "] " + H.string(a),
                console.log(a))
            }
            ;
            Xa.warn = function(a, b) {
                2 <= Xa.level && console.warn("[" + b.className + "] WARNING: " + H.string(a))
            }
            ;
            var lc = function(a, b) {
                this.positions = new p;
                this.lengths = new p;
                ab.call(this);
                this.id = a;
                this.type = b
            };
            g["lime.utils.PackedAssetLibrary"] = lc;
            lc.__name__ = "lime.utils.PackedAssetLibrary";
            lc.fromBytes = function(a, b) {
                return lc.fromManifest(eb.fromBytes(a, b))
            }
            ;
            lc.fromFile = function(a, b) {
                return lc.fromManifest(eb.fromFile(a, b))
            }
            ;
            lc.fromManifest = function(a) {
                return ab.fromManifest(a)
            }
            ;
            lc.loadFromBytes = function(a, b) {
                return ab.loadFromBytes(a, b).then(function(a) {
                    return Ba.withValue(a)
                })
            }
            ;
            lc.loadFromFile = function(a, b) {
                return ab.loadFromFile(a, b).then(function(a) {
                    return Ba.withValue(a)
                })
            }
            ;
            lc.loadFromManifest = function(a) {
                return ab.loadFromManifest(a).then(function(a) {
                    return Ba.withValue(a)
                })
            }
            ;
            lc.__super__ = ab;
            lc.prototype = n(ab.prototype, {
                getAudioBuffer: function(a) {
                    return ab.prototype.getAudioBuffer.call(this, a)
                },
                getBytes: function(a) {
                    if (Object.prototype.hasOwnProperty.call(this.cachedBytes.h, a))
                        return this.cachedBytes.h[a];
                    if (Object.prototype.hasOwnProperty.call(this.cachedText.h, a)) {
                        var b = bb.ofString(this.cachedText.h[a]);
                        this.cachedBytes.h[a] = b
                    } else if (b = bb.alloc(this.lengths.h[a]),
                    b.blit(0, this.packedData, this.positions.h[a], this.lengths.h[a]),
                    "gzip" == this.type)
                        b = bb.decompress(b, Jb.GZIP);
                    else if ("zip" == this.type || "deflate" == this.type)
                        b = bb.decompress(b, Jb.DEFLATE);
                    return b
                },
                getFont: function(a) {
                    return ab.prototype.getFont.call(this, a)
                },
                getImage: function(a) {
                    if (Object.prototype.hasOwnProperty.call(this.cachedImages.h, a))
                        return this.cachedImages.h[a];
                    var b = bb.alloc(this.lengths.h[a]);
                    b.blit(0, this.packedData, this.positions.h[a], this.lengths.h[a]);
                    if ("gzip" == this.type)
                        b = bb.decompress(b, Jb.GZIP);
                    else if ("zip" == this.type || "deflate" == this.type)
                        b = bb.decompress(b, Jb.DEFLATE);
                    return Ja.fromBytes(b)
                },
                getText: function(a) {
                    if (Object.prototype.hasOwnProperty.call(this.cachedText.h, a))
                        return this.cachedText.h[a];
                    if ("gzip" == this.type || "zip" == this.type || "deflate" == this.type) {
                        var b = bb.alloc(this.lengths.h[a]);
                        b.blit(0, this.packedData, this.positions.h[a], this.lengths.h[a]);
                        if ("gzip" == this.type)
                            b = bb.decompress(b, Jb.GZIP);
                        else if ("zip" == this.type || "deflate" == this.type)
                            b = bb.decompress(b, Jb.DEFLATE);
                        return b.getString(0, b.length)
                    }
                    return this.packedData.getString(this.positions.h[a], this.lengths.h[a])
                },
                isLocal: function(a, b) {
                    return !0
                },
                load: function() {
                    var a = this;
                    if (this.loaded)
                        return Ba.withValue(this);
                    if (null == this.promise) {
                        this.promise = new Ib;
                        var b = function(b) {
                            a.cachedBytes.h[a.id] = b;
                            a.packedData = b;
                            a.assetsLoaded = 0;
                            a.assetsTotal = 1;
                            b = Object.keys(a.preload.h);
                            for (var c = b.length, f = 0; f < c; ) {
                                var h = b[f++];
                                if (a.preload.h[h]) {
                                    Xa.verbose("Preloading asset: " + h + " [" + a.types.h[h] + "]", {
                                        fileName: "lime/utils/PackedAssetLibrary.hx",
                                        lineNumber: 187,
                                        className: "lime.utils.PackedAssetLibrary",
                                        methodName: "load"
                                    });
                                    var d = a.types.h[h];
                                    if (null != d)
                                        switch (d) {
                                        case "BINARY":
                                            a.assetsTotal++;
                                            d = a.loadBytes(h);
                                            d.onError(function(a, b) {
                                                return function(c) {
                                                    b[0].load_onError(a[0], c)
                                                }
                                            }([h], [a]));
                                            d.onComplete(function(a, b) {
                                                return function(c) {
                                                    b[0].loadBytes_onComplete(a[0], c)
                                                }
                                            }([h], [a]));
                                            break;
                                        case "FONT":
                                            a.assetsTotal++;
                                            d = a.loadFont(h);
                                            d.onError(function(a, b) {
                                                return function(c) {
                                                    b[0].load_onError(a[0], c)
                                                }
                                            }([h], [a]));
                                            d.onComplete(function(a, b) {
                                                return function(c) {
                                                    b[0].loadFont_onComplete(a[0], c)
                                                }
                                            }([h], [a]));
                                            break;
                                        case "IMAGE":
                                            a.assetsTotal++;
                                            d = a.loadImage(h);
                                            d.onError(function(a, b) {
                                                return function(c) {
                                                    b[0].load_onError(a[0], c)
                                                }
                                            }([h], [a]));
                                            d.onComplete(function(a, b) {
                                                return function(c) {
                                                    b[0].loadImage_onComplete(a[0], c)
                                                }
                                            }([h], [a]));
                                            break;
                                        case "MUSIC":
                                        case "SOUND":
                                            a.assetsTotal++;
                                            d = a.loadAudioBuffer(h);
                                            d.onError(function(a, b) {
                                                return function(c) {
                                                    b[0].load_onError(a[0], c)
                                                }
                                            }([h], [a]));
                                            d.onComplete(function(a, b) {
                                                return function(c) {
                                                    b[0].loadAudioBuffer_onComplete(a[0], c)
                                                }
                                            }([h], [a]));
                                            break;
                                        case "TEXT":
                                            a.assetsTotal++,
                                            d = a.loadText(h),
                                            d.onError(function(a, b) {
                                                return function(c) {
                                                    b[0].load_onError(a[0], c)
                                                }
                                            }([h], [a])),
                                            d.onComplete(function(a, b) {
                                                return function(c) {
                                                    b[0].loadText_onComplete(a[0], c)
                                                }
                                            }([h], [a]))
                                        }
                                }
                            }
                            a.__assetLoaded(null)
                        };
                        if (Object.prototype.hasOwnProperty.call(this.cachedBytes.h, this.id))
                            b(this.cachedBytes.h[this.id]);
                        else {
                            var c = null == this.rootPath || "" == this.rootPath ? "" : vb.addTrailingSlash(this.rootPath)
                              , f = this.getPath(this.id);
                            null == f && (f = this.id);
                            c = vb.join([c, f]);
                            c = this.__cacheBreak(c);
                            bb.loadFromFile(c).onError((B = this.promise,
                            t(B, B.error))).onComplete(b)
                        }
                    }
                    return this.promise.future
                },
                loadAudioBuffer: function(a) {
                    return ab.prototype.loadAudioBuffer.call(this, a)
                },
                loadBytes: function(a) {
                    if (Object.prototype.hasOwnProperty.call(this.cachedBytes.h, a))
                        return Ba.withValue(this.cachedBytes.h[a]);
                    var b = bb.alloc(this.lengths.h[a]);
                    b.blit(0, this.packedData, this.positions.h[a], this.lengths.h[a]);
                    if ("gzip" == this.type)
                        b = bb.decompress(b, Jb.GZIP);
                    else if ("zip" == this.type || "deflate" == this.type)
                        b = bb.decompress(b, Jb.DEFLATE);
                    return Ba.withValue(b)
                },
                loadFont: function(a) {
                    return ab.prototype.loadFont.call(this, a)
                },
                loadImage: function(a) {
                    if (Object.prototype.hasOwnProperty.call(this.cachedImages.h, a))
                        return Ba.withValue(this.cachedImages.h[a]);
                    var b = bb.alloc(this.lengths.h[a]);
                    b.blit(0, this.packedData, this.positions.h[a], this.lengths.h[a]);
                    if ("gzip" == this.type)
                        b = bb.decompress(b, Jb.GZIP);
                    else if ("zip" == this.type || "deflate" == this.type)
                        b = bb.decompress(b, Jb.DEFLATE);
                    return Ja.loadFromBytes(b)
                },
                loadText: function(a) {
                    if (Object.prototype.hasOwnProperty.call(this.cachedText.h, a))
                        return Ba.withValue(this.cachedText.h[a]);
                    if (Object.prototype.hasOwnProperty.call(this.cachedBytes.h, a)) {
                        var b = this.getBytes(a);
                        if (null == b)
                            return Ba.withValue(null);
                        b = b.getString(0, b.length);
                        this.cachedText.h[a] = b;
                        return Ba.withValue(b)
                    }
                    if ("gzip" == this.type || "deflate" == this.type) {
                        b = bb.alloc(this.lengths.h[a]);
                        b.blit(0, this.packedData, this.positions.h[a], this.lengths.h[a]);
                        if ("gzip" == this.type)
                            b = bb.decompress(b, Jb.GZIP);
                        else if ("zip" == this.type || "deflate" == this.type)
                            b = bb.decompress(b, Jb.DEFLATE);
                        return Ba.withValue(b.getString(0, b.length))
                    }
                    return Ba.withValue(this.packedData.getString(this.positions.h[a], this.lengths.h[a]))
                },
                unload: function() {},
                __fromManifest: function(a) {
                    this.rootPath = a.rootPath;
                    ab.prototype.__fromManifest.call(this, a);
                    var b = 0;
                    for (a = a.assets; b < a.length; ) {
                        var c = a[b];
                        ++b;
                        Object.prototype.hasOwnProperty.call(c, "position") && (this.positions.h[c.id] = Y.field(c, "position"));
                        Object.prototype.hasOwnProperty.call(c, "length") && (this.lengths.h[c.id] = Y.field(c, "length"))
                    }
                },
                __assetLoaded: function(a) {
                    this.assetsLoaded++;
                    null != a && Xa.verbose("Loaded asset: " + a + " [" + this.types.h[a] + "] (" + (this.assetsLoaded - 1) + "/" + (this.assetsTotal - 1) + ")", {
                        fileName: "lime/utils/PackedAssetLibrary.hx",
                        lineNumber: 424,
                        className: "lime.utils.PackedAssetLibrary",
                        methodName: "__assetLoaded"
                    });
                    this.assetsLoaded >= this.assetsTotal && (this.loaded = !0,
                    this.promise.complete(this))
                },
                __class__: lc
            });
            var vd = function() {
                this.bytesTotalCache = new p;
                this.bytesLoadedCache2 = new p;
                this.bytesLoadedCache = new y;
                this.onProgress = new jd;
                this.onComplete = new lb;
                this.bytesTotal = this.bytesLoaded = 0;
                this.libraries = [];
                this.libraryNames = [];
                this.onProgress.add(t(this, this.update))
            };
            g["lime.utils.Preloader"] = vd;
            vd.__name__ = "lime.utils.Preloader";
            vd.prototype = {
                addLibrary: function(a) {
                    this.libraries.push(a)
                },
                addLibraryName: function(a) {
                    -1 == this.libraryNames.indexOf(a) && this.libraryNames.push(a)
                },
                load: function() {
                    for (var a = this, b = 0, c = this.libraries; b < c.length; )
                        this.bytesTotal += c[b++].bytesTotal;
                    this.loadedLibraries = -1;
                    this.preloadStarted = !1;
                    b = 0;
                    for (c = this.libraries; b < c.length; ) {
                        var f = [c[b]];
                        ++b;
                        Xa.verbose("Preloading asset library", {
                            fileName: "lime/utils/Preloader.hx",
                            lineNumber: 134,
                            className: "lime.utils.Preloader",
                            methodName: "load"
                        });
                        f[0].load().onProgress(function(b) {
                            return function(c, f) {
                                a.bytesLoaded = null == a.bytesLoadedCache.h.__keys__[b[0].__id__] ? a.bytesLoaded + c : a.bytesLoaded + (c - a.bytesLoadedCache.h[b[0].__id__]);
                                a.bytesLoadedCache.set(b[0], c);
                                a.simulateProgress || a.onProgress.dispatch(a.bytesLoaded, a.bytesTotal)
                            }
                        }(f)).onComplete(function(b) {
                            return function(c) {
                                a.bytesLoaded = null == a.bytesLoadedCache.h.__keys__[b[0].__id__] ? a.bytesLoaded + b[0].bytesTotal : a.bytesLoaded + ((b[0].bytesTotal | 0) - a.bytesLoadedCache.h[b[0].__id__]);
                                a.loadedAssetLibrary()
                            }
                        }(f)).onError(function() {
                            return function(a) {
                                Xa.error(a, {
                                    fileName: "lime/utils/Preloader.hx",
                                    lineNumber: 170,
                                    className: "lime.utils.Preloader",
                                    methodName: "load"
                                })
                            }
                        }())
                    }
                    b = 0;
                    for (c = this.libraryNames; b < c.length; )
                        ++b,
                        this.bytesTotal += 200;
                    this.loadedLibraries++;
                    this.preloadStarted = !0;
                    this.updateProgress()
                },
                loadedAssetLibrary: function(a) {
                    this.loadedLibraries++;
                    var b = this.loadedLibraries;
                    this.preloadStarted || ++b;
                    var c = this.libraries.length + this.libraryNames.length;
                    null != a ? Xa.verbose("Loaded asset library: " + a + " [" + b + "/" + c + "]", {
                        fileName: "lime/utils/Preloader.hx",
                        lineNumber: 197,
                        className: "lime.utils.Preloader",
                        methodName: "loadedAssetLibrary"
                    }) : Xa.verbose("Loaded asset library [" + b + "/" + c + "]", {
                        fileName: "lime/utils/Preloader.hx",
                        lineNumber: 201,
                        className: "lime.utils.Preloader",
                        methodName: "loadedAssetLibrary"
                    });
                    this.updateProgress()
                },
                start: function() {
                    this.complete || this.simulateProgress || !this.preloadComplete || (this.complete = !0,
                    this.onComplete.dispatch())
                },
                update: function(a, b) {},
                updateProgress: function() {
                    var a = this;
                    this.simulateProgress || this.onProgress.dispatch(this.bytesLoaded, this.bytesTotal);
                    if (this.loadedLibraries == this.libraries.length && !this.initLibraryNames) {
                        this.initLibraryNames = !0;
                        for (var b = 0, c = this.libraryNames; b < c.length; ) {
                            var f = [c[b]];
                            ++b;
                            Xa.verbose("Preloading asset library: " + f[0], {
                                fileName: "lime/utils/Preloader.hx",
                                lineNumber: 239,
                                className: "lime.utils.Preloader",
                                methodName: "updateProgress"
                            });
                            la.loadLibrary(f[0]).onProgress(function(b) {
                                return function(c, f) {
                                    0 < f && (Object.prototype.hasOwnProperty.call(a.bytesTotalCache.h, b[0]) || (a.bytesTotalCache.h[b[0]] = f,
                                    a.bytesTotal += f - 200),
                                    c > f && (c = f),
                                    Object.prototype.hasOwnProperty.call(a.bytesLoadedCache2.h, b[0]) ? a.bytesLoaded += c - a.bytesLoadedCache2.h[b[0]] : a.bytesLoaded += c,
                                    a.bytesLoadedCache2.h[b[0]] = c,
                                    a.simulateProgress || a.onProgress.dispatch(a.bytesLoaded, a.bytesTotal))
                                }
                            }(f)).onComplete(function(b) {
                                return function(c) {
                                    c = 200;
                                    Object.prototype.hasOwnProperty.call(a.bytesTotalCache.h, b[0]) && (c = a.bytesTotalCache.h[b[0]]);
                                    Object.prototype.hasOwnProperty.call(a.bytesLoadedCache2.h, b[0]) ? a.bytesLoaded += c - a.bytesLoadedCache2.h[b[0]] : a.bytesLoaded += c;
                                    a.loadedAssetLibrary(b[0])
                                }
                            }(f)).onError(function() {
                                return function(a) {
                                    Xa.error(a, {
                                        fileName: "lime/utils/Preloader.hx",
                                        lineNumber: 293,
                                        className: "lime.utils.Preloader",
                                        methodName: "updateProgress"
                                    })
                                }
                            }())
                        }
                    }
                    this.simulateProgress || this.loadedLibraries != this.libraries.length + this.libraryNames.length || (this.preloadComplete || (this.preloadComplete = !0,
                    Xa.verbose("Preload complete", {
                        fileName: "lime/utils/Preloader.hx",
                        lineNumber: 306,
                        className: "lime.utils.Preloader",
                        methodName: "updateProgress"
                    })),
                    this.start())
                },
                __class__: vd
            };
            var U = function() {};
            g["mobs.MobPhysicsChar"] = U;
            U.__name__ = "mobs.MobPhysicsChar";
            U.run = function(a, b) {
                var c = a.h.state;
                null == c ? U.runStateDefault(a, b) : "sleeping" == c ? U.runStateSleeping(a, b) : U.runStateDefault(a, b);
                u.get(b.world.getFG(U.getX(a), U.getY(a) + 1.5)).liquid ? (c = a.h.air,
                a.h.air = Math.max(0, (null != c ? c : 100) - .0555555555),
                0 >= a.h.air && (c = a.h.damageTimeout,
                0 >= (null != c ? c : 0) && (a.h.damageTimeout = 60,
                b.charOuch(a, 2, !0)))) : (c = a.h.air,
                a.h.air = Math.min(100, (null != c ? c : 0) + .333333333));
                -5 > U.getY(a) && b.charOuch(a, .2, !1);
                c = !1;
                0 >= a.h.health ? (b.world.dropInventory(),
                null != a.h.spawnX && null != a.h.spawnY ? (a.h.x = U.camXTmp = U.getSpawnX(a) + 1,
                a.h.y = U.camYTmp = U.getSpawnY(a) + .5) : (a.h.x = U.camXTmp = b.world.spawnSpot.x + 1,
                a.h.y = U.camYTmp = b.world.spawnSpot.y + .5),
                a.h.health = a.h.maxHealth,
                c = !0) : 0 < a.h.healTimeout ? --a.h.healTimeout : (b.charOuch(a, -1, !1),
                a.h.healTimeout = 120);
                1 <= 16 * Math.abs(U.camXTmp - b.camX) && (b.camX = 1 <= 16 * Math.abs(U.camXTmp - b.camX) / 10 ? b.camX + (U.camXTmp - b.camX) / 10 : b.camX + T.sign(U.camXTmp - b.camX) / 16);
                1 <= 16 * Math.abs(U.camYTmp - b.camY) && (b.camY = 1 <= 16 * Math.abs(U.camYTmp - b.camY) / 2 ? b.camY + (U.camYTmp - b.camY) / 2 : b.camY + T.sign(U.camYTmp - b.camY) / 16);
                30 < Math.abs(U.camXTmp - b.camX) && (b.camX = U.camXTmp);
                30 < Math.abs(U.camYTmp - b.camY) && (b.camY = U.camYTmp);
                b.camX = Math.floor(16 * b.camX) / 16;
                b.camY = Math.floor(16 * b.camY) / 16;
                c && b.checkIfImportantChunksNeedToBeLoaded()
            }
            ;
            U.exitBed = function(a, b) {
                if ("sleeping" == a.h.state) {
                    a.h.state = "default";
                    var c = U.getBedEntity(a, b);
                    a.h.x = U.getX(a) + 1;
                    if (null != b.world.collision(new ca(U.getX(a) - .5,U.getY(a) + 1,1,2))) {
                        var f = 1;
                        null != c && 1 == c.h.direction && (f = -1);
                        null == b.world.collision(new ca(U.getX(a) + (1 == f ? 1 : -2),U.getY(a),1,2)) ? a.h.x = U.getX(a) + 1.5 * f : null == b.world.collision(new ca(a.h.x + (1 == f ? -2 : 1),U.getY(a),1,2)) && (a.h.x = U.getX(a) - 1.5 * f)
                    }
                }
            }
            ;
            U.getBedEntity = function(a, b) {
                for (var c = b.world.createChunk(Math.floor(U.getX(a) / 8), Math.floor(U.getY(a) / 8)).entities.h, f = Object.keys(c), h = f.length, d = 0; d < h; ) {
                    var l = c[f[d++]];
                    if ("object" == l.type && (l = b.world.objects.h[l.id],
                    "bed" == l.h.type && l.h.x == U.getX(a) && l.h.y == U.getY(a)))
                        return l
                }
                return null
            }
            ;
            U.runStateSleeping = function(a, b) {
                a.h.xSpeed = 0;
                a.h.ySpeed = 0;
                a.h.x = Math.floor(U.getX(a));
                a.h.y = Math.floor(U.getY(a));
                a.h.textureSet = 4;
                a.h.textureFrame = 1;
                var c = U.getBedEntity(a, b);
                null == c || Q.gt(d.Instance.keyDown(119), 0) ? U.exitBed(a, b) : a.h.textureDirection = c.h.direction;
                if (!b.world.weatherAndTime.isDay() && U.canSleep) {
                    if (U.sleepProgressionSpeed = Math.min(1, U.sleepProgressionSpeed + .002),
                    U.sleepProgression = T.interpolateSmootherstep(U.sleepProgressionSpeed),
                    U.lastSleepFrame != d.Instance.tick) {
                        U.lastSleepFrame = d.Instance.tick;
                        c = 0;
                        for (var f = Math.floor(99 * U.sleepProgressionSpeed); c < f; )
                            ++c,
                            b.runTimeOfDay()
                    }
                } else if (U.sleepProgressionSpeed = Math.max(0, U.sleepProgressionSpeed - .004),
                U.sleepProgression = T.interpolateSmootherstep(U.sleepProgressionSpeed),
                U.lastSleepFrame != d.Instance.tick)
                    for (U.lastSleepFrame = d.Instance.tick,
                    c = 0,
                    f = Math.floor(Math.max(4, 24 * U.sleepProgressionSpeed)); c < f; )
                        ++c,
                        b.runTimeOfDay();
                U.camXTmp = -Math.floor(16 * (U.getX(a) + 1 + U.sleepProgression * U.skyCamera.x)) / 16;
                U.camYTmp = -Math.floor(16 * (U.getY(a) + U.sleepProgression * U.skyCamera.y)) / 16
            }
            ;
            U.runStateDefault = function(a, b) {
                var c = Math.floor(U.getX(a))
                  , f = Math.round(U.getY(a) - 1)
                  , h = !1;
                if (null != b.world.collision(new ca(U.getX(a) - .34375 - .25,U.getY(a) + .5,.25,1.1875)) && "noclip" != a.h.collisionMode)
                    0 > U.getXSpeed(a) && (a.h.xSpeed = 0);
                else if (!b.isPaused(!0) && Q.gt(d.Instance.keyDown(97), 0)) {
                    a.h.xSpeed = U.getXSpeed(a) - .6;
                    if ("flying" == a.h.collisionMode || "noclip" == a.h.collisionMode)
                        a.h.xSpeed = U.getXSpeed(a) - 1.2;
                    a.h.textureDirection = -1
                }
                if (null != b.world.collision(new ca(U.getX(a) + .34375,U.getY(a) + .5,.25,1.1875)) && "noclip" != a.h.collisionMode)
                    0 < U.getXSpeed(a) && (a.h.xSpeed = 0);
                else if (!b.isPaused(!0) && Q.gt(d.Instance.keyDown(100), 0)) {
                    a.h.xSpeed = U.getXSpeed(a) + .6;
                    if ("flying" == a.h.collisionMode || "noclip" == a.h.collisionMode)
                        a.h.xSpeed = U.getXSpeed(a) + 1.2;
                    a.h.textureDirection = 1
                }
                var l = null
                  , g = 0;
                if (null == b.world.collision(new ca(U.getX(a) - .34375 + .125,U.getY(a),.4375,.25)) || "noclip" == a.h.collisionMode)
                    if ("walking" == a.h.collisionMode) {
                        h = b.world.collision(new ca(U.getX(a) - .34375 + .125,U.getY(a),.4375,.25), "climb");
                        if (null != h) {
                            l = {
                                type: h.type,
                                id: h.id
                            };
                            for (h = 0; 10 > h; ) {
                                var p = h++;
                                null != b.world.collision(new ca(U.getX(a) - .34375 + .125,U.getY(a) + p / 5,.4375,p / 5), "climb") && ++g
                            }
                            g /= 10
                        }
                        a.h.ySpeed = U.getYSpeed(a) - .07;
                        a.h.wasFalling = !0;
                        h = a.h.wasFallingFromHeight = !0
                    } else {
                        if ("flying" == a.h.collisionMode || "noclip" == a.h.collisionMode)
                            h = !1
                    }
                else
                    "walking" == a.h.collisionMode && a.h.wasFalling && (b.charOuch(a, Math.round(100 * Math.pow(Math.max(0, -U.getYSpeed(a) - 2.3), 3)), !0),
                    1 == u.get(b.world.getFG(c, f)).solid && b.addParticles("dust", U.getX(a), U.getY(a) - .125, 10, b.world.getFG(c, f), !0, -1, U.getXSpeed(a) / 3)),
                    0 > U.getYSpeed(a) && (a.h.ySpeed = 0),
                    h = !1,
                    a.h.wasFalling = !1;
                if ("noclip" != a.h.collisionMode)
                    for (p = 5; 0 < p && null != b.world.collision(new ca(U.getX(a) + U.getXSpeed(a) / 16 - .171875,U.getY(a) + .0625,.34375,.0625), "solid") && null == b.world.collision(new ca(U.getX(a) + U.getXSpeed(a) - .171875,U.getY(a) + 1.6875 + .0625,.34375,.0625), "solid"); )
                        --p,
                        a.h.ySpeed = 0,
                        a.h.y = U.getY(a) + .0625;
                if (0 < a.h.damageTimeout)
                    --a.h.damageTimeout;
                else {
                    p = 0;
                    var y = u.get(b.world.getFG(c, f)).hurt;
                    null != y && (p = y);
                    y = u.get(b.world.getFG(c, f + 1)).hurt;
                    null != y && (p = Math.floor(Math.max(p, y)));
                    y = u.get(b.world.getFG(c, f + 2)).hurt;
                    null != y && (p = Math.floor(Math.max(p, y)));
                    0 < p && (a.h.damageTimeout = 60,
                    b.charOuch(a, p, !0))
                }
                p = b.world.collision(new ca(U.getX(a) - .34375 + .125,U.getY(a),.4375,.25), "slippery");
                p = null == p ? null : {
                    type: p.type,
                    id: p.id
                };
                if (!b.isPaused(!0) && Q.gt(d.Instance.keyDown(119), 0))
                    if ("walking" == a.h.collisionMode)
                        h ? null != l && "block" == l.type && (y = 0 < U.getYSpeed(a) ? U.getYSpeed(a) + u.get(l.id).climb.speed * (1.1 - .1 * g) : U.getYSpeed(a) + u.get(l.id).climb.speed * g,
                        a.h.ySpeed = y) : 1 != u.get(b.world.getFG(c, f + 1)).solid && 1 != u.get(b.world.getFG(c, f + 2)).solid && 0 >= U.getYSpeed(a) && (a.h.ySpeed = 2.8);
                    else if ("flying" == a.h.collisionMode || "noclip" == a.h.collisionMode)
                        if (1 != u.get(b.world.getFG(c, f + 1)).solid && 1 != u.get(b.world.getFG(c, f + 2)).solid || "noclip" == a.h.collisionMode)
                            a.h.ySpeed = U.getYSpeed(a) + 1.2;
                b.isPaused(!0) || !Q.gt(d.Instance.keyDown(115), 0) || "flying" != a.h.collisionMode && "noclip" != a.h.collisionMode || (1 == u.get(b.world.getFG(c, f + 1)).solid || 1 == u.get(b.world.getFG(c, f + 2)).solid) && "noclip" != a.h.collisionMode || (a.h.ySpeed = U.getYSpeed(a) - 1.2);
                null != b.world.collision(new ca(U.getX(a) - .34375 + .125,U.getY(a) + 1.6875,.5625,.25)) && "noclip" != a.h.collisionMode && (a.h.ySpeed = -Math.abs(.5 * U.getYSpeed(a)));
                h ? 0 >= U.getYSpeed(a) ? (a.h.textureSet = 2,
                a.h.textureFrame = 2) : (a.h.textureSet = 2,
                a.h.textureFrame = 5) : 0 == Math.round(U.getXSpeed(a)) ? (a.h.textureSet = 0,
                a.h.textureFrame = 1) : (a.h.textureSet = 2,
                a.h.textureFrame = T.modulus(a.h.textureFrame + .075 - 1, 6) + 1);
                "walking" == a.h.collisionMode ? (a.h.xSpeed = .6 * U.getXSpeed(a),
                null != p && "block" == p.type && (y = U.getXSpeed(a) * u.get(p.id).slippery,
                a.h.xSpeed = y)) : a.h.xSpeed = .5 * U.getXSpeed(a);
                "walking" == a.h.collisionMode ? (a.h.ySpeed = .98 * U.getYSpeed(a),
                null != l && ("block" == l.type ? (y = U.getYSpeed(a) * (u.get(l.id).climb.dampening * g + (1 - g)),
                a.h.ySpeed = y) : a.h.ySpeed = .8 * U.getYSpeed(a))) : a.h.ySpeed = .5 * U.getYSpeed(a);
                a.h.x = U.getX(a) + U.getXSpeed(a) / 16;
                a.h.y = U.getY(a) + U.getYSpeed(a) / 16;
                U.camXTmp = -Math.floor(16 * U.getX(a)) / 16 + -Math.min(d.screenWidth / 4 / b.screenZoom, Math.max(-d.screenWidth / 4 / b.screenZoom, (d.Instance.mouse.x - d.screenWidth / 2) / 4 / b.screenZoom)) / 16;
                U.camYTmp = -Math.floor(16 * U.getY(a)) / 16 - (30 - Math.min(d.screenHeight / 4 / b.screenZoom, Math.max(-d.screenHeight / 4 / b.screenZoom, (d.Instance.mouse.y - d.screenHeight / 2) / 4 / b.screenZoom))) / 16
            }
            ;
            U.getX = function(a) {
                return a.h.x
            }
            ;
            U.getY = function(a) {
                return a.h.y
            }
            ;
            U.getXSpeed = function(a) {
                return a.h.xSpeed
            }
            ;
            U.getYSpeed = function(a) {
                return a.h.ySpeed
            }
            ;
            U.getSpawnX = function(a) {
                return a.h.spawnX
            }
            ;
            U.getSpawnY = function(a) {
                return a.h.spawnY
            }
            ;
            var F = function(a, b) {
                this.activeChildScenes = new p;
                this.childScenes = new p;
                this.sceneName = "";
                this.sceneName = a;
                this.scene = b;
                this.init()
            };
            g["scenes.Scene_Base"] = F;
            F.__name__ = "scenes.Scene_Base";
            F.fillRect_static = function(a, b, c) {
                var f = F.tempDrawVector3.set(b.x, b.y, 0)
                  , h = F.tempDrawPoints[0].set()
                  , d = F.tempDrawPoints[1].set(1, 1);
                b = F.tempDrawPoints[2].set(b.width, b.height);
                var l = new p
                  , g = T.repeatArray([0, 0, 0, 0], 6);
                l.h.color = g;
                g = T.repeatArray([Q.toFloat(c >>> 16 & 255) / 255, Q.toFloat(c >>> 8 & 255) / 255, Q.toFloat(c & 255) / 255, Q.toFloat(c >>> 24 & 255) / 255], 6);
                l.h.colorOffset = g;
                a.addQuad(f, h, d, !0, b, null, null, l)
            }
            ;
            F.copyPixels_static = function(a, b, c, f, h) {
                null == h && (h = 1);
                a.addQuad(F.tempDrawVector3.set(f.x, f.y, 0), F.tempDrawPoints[0].set(b.x + c.x, b.y + c.y), F.tempDrawPoints[1].set(c.width, c.height), !0, F.tempDrawPoints[2].set(c.width * h, c.height * h))
            }
            ;
            F.draw_static = function(a, b, c, f, h, d, l, g, y, m, k, L, v, z, O, u) {
                null == u && (u = 0);
                null == O && (O = 0);
                null == z && (z = 0);
                null == v && (v = 0);
                null == L && (L = 1);
                null == k && (k = 1);
                null == m && (m = 1);
                null == y && (y = -1);
                null == g && (g = 0);
                null == l && (l = 0);
                null == d && (d = 1);
                null == c && (c = 1);
                -1 != y ? (f = F.tempDrawVector3.set(l, g, 0),
                h = F.tempDrawPoints[0].set(b.x, b.y),
                l = F.tempDrawPoints[1].set(b.width, b.height),
                b = F.tempDrawPoints[2].set(b.width * c, b.height * d),
                c = new p,
                y = T.repeatArray([y, m, k, L], 6),
                c.h.color = y,
                y = T.repeatArray([v / 255, z / 255, O / 255, u], 6),
                c.h.colorOffset = y,
                a.addQuad(f, h, l, !0, b, null, null, c)) : a.addQuad(F.tempDrawVector3.set(l, g, 0), F.tempDrawPoints[0].set(b.x, b.y), F.tempDrawPoints[1].set(b.width, b.height), !0, F.tempDrawPoints[2].set(b.width * c, b.height * d))
            }
            ;
            F.drawString_static = function(a, b, c, f, h, d, l, g, p, y, m, k, L, v) {
                null == v && (v = 37);
                null == L && (L = "");
                null == m && (m = 600);
                null == y && (y = !1);
                null == g && (g = 0);
                null == l && (l = 0);
                null == d && (d = 1);
                null == f && (f = 10);
                d = f * d * .030303030303030304;
                b = 2 == y ? b + m : 1 == y ? b + m / 2 : b + 4 * d;
                null != p && h.draw(za.get("ts_" + a + L, a, v, F.tempDrawPoints[0].set(b + g * f / 2, c + 2 * d), sa.get_jaggedDreams(), new Pa(-16777216 + p), d, 2 == y ? zb.RIGHT : 1 == y ? zb.CENTER : zb.LEFT, 1.5));
                a = za.get("t_" + a + L, a, v, F.tempDrawPoints[0].set(b + g * f / 2, c - d), sa.get_jaggedDreams(), new Pa(-16777216 + l), d, 2 == y ? zb.RIGHT : 1 == y ? zb.CENTER : zb.LEFT, 1.5);
                h.draw(a);
                return a
            }
            ;
            F.prototype = {
                init: function() {
                    for (var a = this.activeChildScenes.h, b = Object.keys(a), c = b.length, f = 0; f < c; )
                        a[b[f++]].init()
                },
                logic: function() {
                    for (var a = this.activeChildScenes.h, b = Object.keys(a), c = b.length, f = 0; f < c; )
                        a[b[f++]].logic()
                },
                render: function() {
                    for (var a = this.activeChildScenes.h, b = Object.keys(a), c = b.length, f = 0; f < c; )
                        a[b[f++]].render()
                },
                resize: function() {
                    for (var a = this.activeChildScenes.h, b = Object.keys(a), c = b.length, f = 0; f < c; )
                        a[b[f++]].resize()
                },
                destroy: function() {
                    for (var a = this.activeChildScenes.h, b = Object.keys(a), c = b.length, f = 0; f < c; )
                        a[b[f++]].destroy()
                },
                addChildScene: function(a) {
                    this.childScenes.h[a.sceneName] = a;
                    this.activeChildScenes.h[a.sceneName] = a
                },
                fillRect: function(a, b, c) {
                    F.fillRect_static(a, b, c)
                },
                copyPixels: function(a, b, c, f, h) {
                    null == h && (h = 1);
                    F.copyPixels_static(a, b, c, f, h)
                },
                draw: function(a, b, c, f, h, d, l, g, p, y, m, k, L, v, z, O) {
                    null == O && (O = 0);
                    null == z && (z = 0);
                    null == v && (v = 0);
                    null == L && (L = 0);
                    null == k && (k = 1);
                    null == m && (m = 1);
                    null == y && (y = 1);
                    null == p && (p = -1);
                    null == g && (g = 0);
                    null == l && (l = 0);
                    null == d && (d = 1);
                    null == h && (h = 0);
                    null == f && (f = 0);
                    null == c && (c = 1);
                    F.draw_static(a, b, c, f, h, d, l, g, p, y, m, k, L, v, z, O)
                },
                drawString: function(a, b, c, f, h, d, l, g, p, y, m, k, L, v) {
                    null == v && (v = 37);
                    null == L && (L = "");
                    null == k && (k = 1);
                    null == m && (m = 600);
                    null == y && (y = !1);
                    null == g && (g = 0);
                    null == l && (l = 0);
                    null == d && (d = 1);
                    null == f && (f = 10);
                    return F.drawString_static(a, b, c, f, h, d, l, g, p, y, m, k, L, v)
                },
                __class__: F
            };
            var qb = z["scenes.INVENTORY_TYPE"] = {
                __ename__: "scenes.INVENTORY_TYPE",
                __constructs__: null,
                CLOSED: {
                    _hx_name: "CLOSED",
                    _hx_index: 0,
                    __enum__: "scenes.INVENTORY_TYPE",
                    toString: m
                },
                MAIN: {
                    _hx_name: "MAIN",
                    _hx_index: 1,
                    __enum__: "scenes.INVENTORY_TYPE",
                    toString: m
                },
                CHEST: {
                    _hx_name: "CHEST",
                    _hx_index: 2,
                    __enum__: "scenes.INVENTORY_TYPE",
                    toString: m
                },
                CAMPFIRE: {
                    _hx_name: "CAMPFIRE",
                    _hx_index: 3,
                    __enum__: "scenes.INVENTORY_TYPE",
                    toString: m
                }
            };
            qb.__constructs__ = [qb.CLOSED, qb.MAIN, qb.CHEST, qb.CAMPFIRE];
            var Yb = z["scenes.MINING_OR_PLACING"] = {
                __ename__: "scenes.MINING_OR_PLACING",
                __constructs__: null,
                NEITHER: {
                    _hx_name: "NEITHER",
                    _hx_index: 0,
                    __enum__: "scenes.MINING_OR_PLACING",
                    toString: m
                },
                MINING: {
                    _hx_name: "MINING",
                    _hx_index: 1,
                    __enum__: "scenes.MINING_OR_PLACING",
                    toString: m
                },
                PLACING: {
                    _hx_name: "PLACING",
                    _hx_index: 2,
                    __enum__: "scenes.MINING_OR_PLACING",
                    toString: m
                }
            };
            Yb.__constructs__ = [Yb.NEITHER, Yb.MINING, Yb.PLACING];
            var ad = function(a, b, c) {
                this.inCrafting = [];
                this.tooltip = "";
                this.fpsStats = [];
                this.inventoryAnimation = this.statsCounter = 0;
                this.temporaryItem = new Z;
                this.dontUpdate = new p;
                this.rendered = new p;
                this.blockSelectorMatrix = new Ua;
                this.distX = this.distY = 0;
                this.mouseFG = this.mouseBG = "";
                this.mouseOverY = -1;
                this.mouseOverX = 0;
                this.initialLoadingWorld = !0;
                this.particleCountTick = 0;
                this.particles = new p;
                this.placeDelay = 0;
                this.blockHitting = [0, 0];
                this.blockDamage = 0;
                this.miningOrPlacing = Yb.NEITHER;
                this.cinematic = this.debugMenu = !1;
                this.loadingImportantChunks = !0;
                this.paused = !1;
                this.creativeInventoryPage = 0;
                this.draggingItem = {
                    x: 0,
                    y: 0,
                    item: R.emptyItem()
                };
                this.currentInventory = {
                    type: qb.CLOSED,
                    id: ""
                };
                this.screenZoom = 1;
                this.world = c;
                this.camX = -c.mobs.h["char"].h.x;
                this.camY = -c.mobs.h["char"].h.y;
                F.call(this, a, b)
            };
            g["scenes.Scene_Game"] = ad;
            ad.__name__ = "scenes.Scene_Game";
            ad.__super__ = F;
            ad.prototype = n(F.prototype, {
                init: function() {
                    F.prototype.init.call(this);
                    this.sky = new bd("menuSky",this.scene,this.world.weatherAndTime);
                    this.sky.menu = !1;
                    this.addChildScene(this.sky);
                    this.sky.reloadClouds();
                    this.foregroundScene = new yb(0,0);
                    this.foregroundScene.setup2D(this.scene.get_width(), this.scene.get_height(), Pa.clear);
                    this.foregroundEntity = new Pb([],wb.createQuad(1, 1),Sb.getShader());
                    this.foregroundImage = (new hb).fromScene(this.foregroundScene);
                    this.foregroundEntity.setTextureBuffer("texture", this.foregroundImage);
                    this.foregroundEntity.isTransparent = !0;
                    this.foregroundEntity.layer = 12;
                    this.uiEntity = X.createQuadPoolEntity(C.textures, 20);
                    P.init();
                    this.objectEntity = X.createQuadPoolEntity(C.textures, 14);
                    this.objectEntity.forceNoCulling = !0;
                    this.blockSelectorEntityBG = X.createQuadPoolEntity(C.textures, 11);
                    this.blockSelectorEntity = X.createQuadPoolEntity(C.textures, 13);
                    this.draggerEntity = X.createQuadPoolEntity(C.textures, 24);
                    this.tooltipEntity = X.createQuadPoolEntity(C.textures, 51);
                    this.statsGraph = X.createQuadPoolEntity(C.textures, 30);
                    this.chunkGraph = X.createQuadPoolEntity(C.textures, 30);
                    this.pauseEntity = X.createQuadPoolEntity(C.textures, 35);
                    this.resize()
                },
                logic: function() {
                    F.prototype.logic.call(this);
                    if (this.initialLoadingWorld) {
                        this.checkIfImportantChunksNeedToBeLoaded();
                        if (this.loadingImportantChunks)
                            return;
                        this.initialLoadingWorld = !1;
                        this.screenZoom = this.getMouseZoom()
                    }
                    1 == d.Instance.keyDown(27) && (this.currentInventory.type != qb.CLOSED ? this.showInventory(qb.CLOSED) : (N.menuFrame = "main",
                    this.paused = !this.paused));
                    this.isPaused() || (this.world.gameTime += d.Instance.timeDelta,
                    this.runTimeOfDay(),
                    this.runTimers());
                    if (!this.isPaused(!0))
                        if (this.mouseOverX = Math.floor((d.Instance.mouse.x - d.screenWidth / 2) / this.screenZoom / 16 - this.camX),
                        this.mouseOverY = Math.floor(-this.camY - (d.Instance.mouse.y - d.screenHeight / 2) / this.screenZoom / 16),
                        this.mouseFG = this.world.getFG(this.mouseOverX, this.mouseOverY),
                        this.mouseBG = this.world.getBG(this.mouseOverX, this.mouseOverY),
                        this.distX = this.mouseOverX - Math.floor(this.world.mobs.h["char"].h.x),
                        this.distY = this.mouseOverY - Math.ceil(this.world.mobs.h["char"].h.y) - 1,
                        d.Instance.mouse.x > d.screenWidth / 2 - 160 && 0 < d.Instance.mouse.y && d.Instance.mouse.x < d.screenWidth / 2 + 160 && 32 > d.Instance.mouse.y && (1 == d.Instance.mouseDown() && (this.world.selectedInventoryItem = Math.floor((d.Instance.mouse.x - d.screenWidth / 2 + 160) / 16 / 2)),
                        this.setTooltip(this.capFirst(u.get(this.world.inventory[Math.floor((d.Instance.mouse.x - d.screenWidth / 2 + 160) / 16 / 2)].type).name))),
                        d.Instance.mouse.x > d.screenWidth / 2 - 160 - 48 && d.Instance.mouse.x < d.screenWidth / 2 - 160 - 16 && 32 > d.Instance.mouse.y && (1 == d.Instance.mouseDown() && (1 == this.world.editLayer ? this.world.editLayer = 2 : 2 == this.world.editLayer && (this.world.editLayer = 1)),
                        this.setTooltip(2 == this.world.editLayer ? x.get("SWITCH_TO_FOREGROUND") : x.get("SWITCH_TO_BACKGROUND"))),
                        "creative" == this.world.gameMode && (this.blockDamage = Infinity),
                        this.placeDelay -= d.Instance.timeDelta,
                        12 > this.distX * this.distX + this.distY * this.distY) {
                            var a = this.world.blockEntityCollision(this.mouseOverX, this.mouseOverY);
                            null != a && (Q.gt(d.Instance.mouseDown(), 0) && this.miningOrPlacing != Yb.PLACING && (this.miningOrPlacing = Yb.MINING),
                            "chest" == this.world.entityObject(a.type).h[a.id].h.type ? this.setTooltip(this.capFirst(x.get("HOVER_OVER_ENTITY").split("{1}").join(x.get("CHEST")))) : "campfire" == this.world.entityObject(a.type).h[a.id].h.type ? this.setTooltip(this.capFirst(x.get("HOVER_OVER_ENTITY").split("{1}").join(x.get("CAMPFIRE")))) : "door_wood" == this.world.entityObject(a.type).h[a.id].h.type ? this.setTooltip(this.world.entityObject(a.type).h[a.id].h.isClosed ? x.get("OPEN_DOOR") : x.get("CLOSE_DOOR")) : "bed" == this.world.entityObject(a.type).h[a.id].h.type && this.setTooltip("sleeping" == this.world.mobs.h["char"].h.state ? x.get("WAKE_UP") : x.get("SLEEP")));
                            if (1 == J.mouseBlockBehavior && Q.gt(d.Instance.rightMouseDown(), 0) || 2 == J.mouseBlockBehavior && Q.gt(d.Instance.mouseDown(), 0) && Q.gt(d.Instance.keyDown(1073742049), 0) || 3 == J.mouseBlockBehavior && (1 == d.Instance.mouseUp() && 10 > d.Instance.lastMouseDownDuration || Q.gte(d.Instance.mouseDown(), 10) && (1 == this.world.editLayer && "air" == this.world.getFG(this.mouseOverX, this.mouseOverY) || 2 == this.world.editLayer && "air" == this.world.getBG(this.mouseOverX, this.mouseOverY) || this.miningOrPlacing == Yb.PLACING)) && this.miningOrPlacing != Yb.MINING) {
                                if (this.miningOrPlacing = Yb.PLACING,
                                0 >= this.placeDelay && !d.Instance.waitingForMouseUp) {
                                    var b = null;
                                    if (1 == this.world.editLayer) {
                                        if (null != u.get(this.world.inventory[this.world.selectedInventoryItem].type).placeSpecial)
                                            if (b = null,
                                            "chest" == this.world.inventory[this.world.selectedInventoryItem].type) {
                                                if (this.world.blockNextToFG(this.mouseOverX, this.mouseOverY, !0) && "air" == this.world.getFG(this.mouseOverX, this.mouseOverY)) {
                                                    var c = new p;
                                                    c.h.items = [];
                                                    null != this.world.addObject("chest", this.mouseOverX, this.mouseOverY, c) && "creative" != this.world.gameMode && (--this.world.inventory[this.world.selectedInventoryItem].count,
                                                    1 > this.world.inventory[this.world.selectedInventoryItem].count && (this.world.inventory[this.world.selectedInventoryItem] = R.emptyItem()));
                                                    d.Instance.waitingForMouseUp = !0;
                                                    this.placeDelay = .1
                                                }
                                            } else if ("chest_battered" == this.world.inventory[this.world.selectedInventoryItem].type)
                                                this.world.blockNextToFG(this.mouseOverX, this.mouseOverY, !0) && "air" == this.world.getFG(this.mouseOverX, this.mouseOverY) && (c = new p,
                                                c.h.items = [],
                                                c.h.chestType = "battered",
                                                null != this.world.addObject("chest", this.mouseOverX, this.mouseOverY, c) && "creative" != this.world.gameMode && (--this.world.inventory[this.world.selectedInventoryItem].count,
                                                1 > this.world.inventory[this.world.selectedInventoryItem].count && (this.world.inventory[this.world.selectedInventoryItem] = R.emptyItem())),
                                                d.Instance.waitingForMouseUp = !0,
                                                this.placeDelay = .1);
                                            else if ("bucket_empty" == this.world.inventory[this.world.selectedInventoryItem].type) {
                                                var f = null;
                                                "0" == this.world.getDataFG(this.mouseOverX, this.mouseOverY, "liquidLevel") && "0" == this.world.getDataFG(this.mouseOverX, this.mouseOverY, "liquidDirection") && ("water" == this.world.getFG(this.mouseOverX, this.mouseOverY) ? f = "bucket_water" : "lava" == this.world.getFG(this.mouseOverX, this.mouseOverY) && (f = "bucket_lava"));
                                                null != f && (this.world.mineFG(this.mouseOverX, this.mouseOverY),
                                                "creative" != this.world.gameMode && (--this.world.inventory[this.world.selectedInventoryItem].count,
                                                1 > this.world.inventory[this.world.selectedInventoryItem].count ? (this.world.inventory[this.world.selectedInventoryItem] = R.emptyItem(),
                                                c = new p,
                                                c.h.type = f,
                                                c.h.count = 1,
                                                this.addToInventory(c, this.world.selectedInventoryItem)) : (c = new p,
                                                c.h.type = f,
                                                c.h.count = 1,
                                                this.addToInventory(c)),
                                                d.Instance.waitingForMouseUp = !0,
                                                this.placeDelay = .1))
                                            } else
                                                "bucket_water" == this.world.inventory[this.world.selectedInventoryItem].type ? !this.world.blockNextToFG(this.mouseOverX, this.mouseOverY, !1) && "air" == this.world.getBG(this.mouseOverX, this.mouseOverY) || 1 != u.get(this.mouseFG).replace || 1 == u.get(this.mouseFG).liquid || (this.world.setFG(this.mouseOverX, this.mouseOverY, "water"),
                                                "creative" != this.world.gameMode && (--this.world.inventory[this.world.selectedInventoryItem].count,
                                                1 > this.world.inventory[this.world.selectedInventoryItem].count ? (this.world.inventory[this.world.selectedInventoryItem] = R.emptyItem(),
                                                c = new p,
                                                c.h.type = "bucket_empty",
                                                c.h.count = 1,
                                                this.addToInventory(c, this.world.selectedInventoryItem)) : (c = new p,
                                                c.h.type = "bucket_empty",
                                                c.h.count = 1,
                                                this.addToInventory(c))),
                                                d.Instance.waitingForMouseUp = !0,
                                                this.placeDelay = .1) : "bucket_lava" == this.world.inventory[this.world.selectedInventoryItem].type ? !this.world.blockNextToFG(this.mouseOverX, this.mouseOverY, !1) && "air" == this.world.getBG(this.mouseOverX, this.mouseOverY) || 1 != u.get(this.mouseFG).replace || 1 == u.get(this.mouseFG).liquid || (this.world.setFG(this.mouseOverX, this.mouseOverY, "lava"),
                                                "creative" != this.world.gameMode && (--this.world.inventory[this.world.selectedInventoryItem].count,
                                                1 > this.world.inventory[this.world.selectedInventoryItem].count ? (this.world.inventory[this.world.selectedInventoryItem] = R.emptyItem(),
                                                c = new p,
                                                c.h.type = "bucket_empty",
                                                c.h.count = 1,
                                                this.addToInventory(c, this.world.selectedInventoryItem)) : (c = new p,
                                                c.h.type = "bucket_empty",
                                                c.h.count = 1,
                                                this.addToInventory(c))),
                                                d.Instance.waitingForMouseUp = !0,
                                                this.placeDelay = .1) : "campfire" == this.world.inventory[this.world.selectedInventoryItem].type ? "air" == this.world.getFG(this.mouseOverX, this.mouseOverY) && "air" == this.world.getFG(this.mouseOverX - 1, this.mouseOverY) && "air" == this.world.getFG(this.mouseOverX + 1, this.mouseOverY) && "air" == this.world.getFG(this.mouseOverX, this.mouseOverY + 1) && "air" == this.world.getFG(this.mouseOverX - 1, this.mouseOverY + 1) && "air" == this.world.getFG(this.mouseOverX + 1, this.mouseOverY + 1) && 1 == u.get(this.world.getFG(this.mouseOverX - 1, this.mouseOverY - 1)).solid && 1 == u.get(this.world.getFG(this.mouseOverX, this.mouseOverY - 1)).solid && 1 == u.get(this.world.getFG(this.mouseOverX + 1, this.mouseOverY - 1)).solid && (c = new p,
                                                c.h.fuel = [R.emptyItem(), R.emptyItem(), R.emptyItem()],
                                                c.h.currentFuel = [R.emptyItem(), R.emptyItem(), R.emptyItem()],
                                                c.h.input = [R.emptyItem(), R.emptyItem(), R.emptyItem()],
                                                c.h.output = [R.emptyItem(), R.emptyItem(), R.emptyItem()],
                                                c.h.fuelTimers = [0, 0, 0],
                                                c.h.itemTimers = [0, 0, 0],
                                                null != this.world.addObject("campfire", this.mouseOverX - 1, this.mouseOverY, c) && "creative" != this.world.gameMode && (--this.world.inventory[this.world.selectedInventoryItem].count,
                                                1 > this.world.inventory[this.world.selectedInventoryItem].count && (this.world.inventory[this.world.selectedInventoryItem] = R.emptyItem())),
                                                d.Instance.waitingForMouseUp = !0,
                                                this.placeDelay = .1) : u.inBlockGroup("door_wood", this.world.inventory[this.world.selectedInventoryItem].type) ? "air" == this.world.getFG(this.mouseOverX, this.mouseOverY) && "air" == this.world.getFG(this.mouseOverX, this.mouseOverY + 1) && 1 == u.get(this.world.getFG(this.mouseOverX, this.mouseOverY - 1)).solid && (f = this.world.mobs.h["char"].h.x < this.mouseOverX + .5 ? -.375 : .375,
                                                c = new p,
                                                c.h.isClosed = !0,
                                                c.h.direction = this.world.mobs.h["char"].h.x < this.mouseOverX + .5 ? 1 : -1,
                                                c.h.doorType = this.world.inventory[this.world.selectedInventoryItem].type,
                                                c.h.swing = 0,
                                                null != this.world.addObject("door_wood", this.mouseOverX + f, this.mouseOverY, c) && "creative" != this.world.gameMode && (--this.world.inventory[this.world.selectedInventoryItem].count,
                                                1 > this.world.inventory[this.world.selectedInventoryItem].count && (this.world.inventory[this.world.selectedInventoryItem] = R.emptyItem())),
                                                d.Instance.waitingForMouseUp = !0,
                                                this.placeDelay = .1) : "bed" == this.world.inventory[this.world.selectedInventoryItem].type && (f = this.world.mobs.h["char"].h.x < this.mouseOverX + .5 ? 1 : -1,
                                                c = !1,
                                                1 == f ? "air" == this.world.getFG(this.mouseOverX, this.mouseOverY) && "air" == this.world.getFG(this.mouseOverX + 1, this.mouseOverY) && 1 == u.get(this.world.getFG(this.mouseOverX, this.mouseOverY - 1)).solid && 1 == u.get(this.world.getFG(this.mouseOverX + 1, this.mouseOverY - 1)).solid && (c = !0) : -1 == f && "air" == this.world.getFG(this.mouseOverX, this.mouseOverY) && "air" == this.world.getFG(this.mouseOverX - 1, this.mouseOverY) && 1 == u.get(this.world.getFG(this.mouseOverX, this.mouseOverY - 1)).solid && 1 == u.get(this.world.getFG(this.mouseOverX - 1, this.mouseOverY - 1)).solid && (c = !0),
                                                c && (c = new p,
                                                c.h.direction = f,
                                                null != this.world.addObject("bed", this.mouseOverX + (-1 == f ? -1 : 0), this.mouseOverY, c) && "creative" != this.world.gameMode && (--this.world.inventory[this.world.selectedInventoryItem].count,
                                                1 > this.world.inventory[this.world.selectedInventoryItem].count && (this.world.inventory[this.world.selectedInventoryItem] = R.emptyItem())),
                                                d.Instance.waitingForMouseUp = !0,
                                                this.placeDelay = .1));
                                        else
                                            null != u.get(this.world.inventory[this.world.selectedInventoryItem].type).placeable && (b = null != u.get(this.world.inventory[this.world.selectedInventoryItem].type).placeDifferent ? u.get(this.world.inventory[this.world.selectedInventoryItem].type).placeDifferent : this.world.inventory[this.world.selectedInventoryItem].type);
                                        if (null != a)
                                            if (c = this.world.entityObject(a.type).h[a.id],
                                            "chest" == c.h.type)
                                                this.showInventory(qb.CHEST, a.id);
                                            else if ("campfire" == c.h.type)
                                                this.showInventory(qb.CAMPFIRE, a.id);
                                            else if ("door_wood" == c.h.type)
                                                1 == c.h.isClosed ? (this.updateEntity("object", a.id, "isClosed", !1),
                                                a = this.world.mobs.h["char"].h.x < this.mouseOverX + .5 ? 1 : -1,
                                                null == this.world.collision(F.tempDrawRectangles[0].set(Math.round(c.h.x + .5) + (-1 == a ? -1 : 0), c.h.y, 1, 2)) ? c.h.direction = a : c.h.direction = -a) : this.updateEntity("object", a.id, "isClosed", !0),
                                                this.world.getRegion(8 * Math.floor(c.h.x / 8)).needsSave = !0,
                                                d.Instance.waitingForMouseUp = !0,
                                                this.placeDelay = .1;
                                            else {
                                                if ("bed" == c.h.type) {
                                                    if ("sleeping" == this.world.mobs.h["char"].h.state)
                                                        U.exitBed(this.world.mobs.h["char"], this);
                                                    else {
                                                        this.world.mobs.h["char"].h.x = c.h.x;
                                                        this.world.mobs.h["char"].h.y = c.h.y;
                                                        this.world.mobs.h["char"].h.state = "sleeping";
                                                        U.sleepProgression = 0;
                                                        U.sleepProgressionSpeed = 0;
                                                        this.world.mobs.h["char"].h.spawnX = c.h.x;
                                                        this.world.mobs.h["char"].h.spawnY = c.h.y;
                                                        a = new W;
                                                        b = 0;
                                                        for (c = -20; 20 > c; ) {
                                                            f = c++;
                                                            for (var h = 4; 9 > h; ) {
                                                                var l = h++;
                                                                "air" == this.world.getBG(this.world.mobs.h["char"].h.x + f, this.world.mobs.h["char"].h.y + l) && 1 != u.get(this.world.getFG(this.world.mobs.h["char"].h.x + f, this.world.mobs.h["char"].h.y + l)).solid && (a.x += f,
                                                                a.y += l,
                                                                ++b)
                                                            }
                                                        }
                                                        if (0 == b)
                                                            for (c = -20; 20 > c; )
                                                                for (f = c++,
                                                                h = 10; 15 > h; )
                                                                    l = h++,
                                                                    "air" == this.world.getBG(this.world.mobs.h["char"].h.x + f, this.world.mobs.h["char"].h.y + l) && 1 != u.get(this.world.getFG(this.world.mobs.h["char"].h.x + f, this.world.mobs.h["char"].h.y + l)).solid && (a.x += f,
                                                                    a.y += l,
                                                                    ++b);
                                                        0 == b ? U.canSleep = !1 : (U.canSleep = !0,
                                                        U.skyCamera.set(a.x / b, a.y / b))
                                                    }
                                                    d.Instance.waitingForMouseUp = !0;
                                                    this.placeDelay = .1
                                                }
                                            }
                                        else
                                            0 >= this.placeDelay && null != b && (this.world.blockNextToFG(this.mouseOverX, this.mouseOverY, !1) || "air" != this.world.getBG(this.mouseOverX, this.mouseOverY)) && 1 == u.get(this.mouseFG).replace && b != this.mouseFG && (1 != u.get(b).solid || this.mouseOverX != Math.floor(this.world.mobs.h["char"].h.x - .15) && this.mouseOverX != Math.floor(this.world.mobs.h["char"].h.x + .15) || this.mouseOverY != Math.round(this.world.mobs.h["char"].h.y - .45) && this.mouseOverY != Math.round(this.world.mobs.h["char"].h.y + .55)) && (h = this.mouseOverX + .5,
                                            a = this.mouseOverY + .5,
                                            f = u.get(b).itemTexture,
                                            this.addParticles("block", h, a, 4, null != f ? f : b),
                                            a = !0,
                                            this.world.setFG(this.mouseOverX, this.mouseOverY, b) || (a = !1),
                                            "wool" == b && a && this.world.setDataFG(this.mouseOverX, this.mouseOverY, "type", this.world.inventory[this.world.selectedInventoryItem].data.h.type, !1),
                                            "creative" != this.world.gameMode && a && (this.placeDelay = .1,
                                            --this.world.inventory[this.world.selectedInventoryItem].count,
                                            1 > this.world.inventory[this.world.selectedInventoryItem].count && (this.world.inventory[this.world.selectedInventoryItem].type = "air",
                                            this.world.inventory[this.world.selectedInventoryItem].count = 0)))
                                    } else
                                        2 == this.world.editLayer && (b = 1 == u.get(this.world.inventory[this.world.selectedInventoryItem].type).placeableBG ? null != u.get(this.world.inventory[this.world.selectedInventoryItem].type).placeDifferent ? u.get(this.world.inventory[this.world.selectedInventoryItem].type).placeDifferent : this.world.inventory[this.world.selectedInventoryItem].type : null,
                                        null != b && this.world.blockNextToBG(this.mouseOverX, this.mouseOverY, !1) && 1 == u.get(this.mouseBG).replace && b != this.mouseBG && (h = this.mouseOverX + .5,
                                        a = this.mouseOverY + .5,
                                        f = u.get(b).itemTexture,
                                        this.addParticles("block", h, a, 4, null != f ? f : b),
                                        a = this.world.setBG(this.mouseOverX, this.mouseOverY, b),
                                        this.world.setDataBG(this.mouseOverX, this.mouseOverY, "player", "true"),
                                        "wool" == b && a && this.world.setDataBG(this.mouseOverX, this.mouseOverY, "type", this.world.inventory[this.world.selectedInventoryItem].data.h.type, !1),
                                        "creative" != this.world.gameMode && a && (this.placeDelay = .1,
                                        --this.world.inventory[this.world.selectedInventoryItem].count,
                                        1 > this.world.inventory[this.world.selectedInventoryItem].count && (this.world.inventory[this.world.selectedInventoryItem].type = "air",
                                        this.world.inventory[this.world.selectedInventoryItem].count = 0))));
                                    this.blockDamage = 0
                                }
                            } else if (1 == J.mouseBlockBehavior && Q.gt(d.Instance.mouseDown(), 0) || 2 == J.mouseBlockBehavior && Q.gt(d.Instance.mouseDown(), 0) || Q.gte(d.Instance.mouseDown(), 10) && !d.Instance.waitingForMouseUp && this.miningOrPlacing != Yb.PLACING) {
                                if (this.miningOrPlacing = Yb.MINING,
                                0 >= this.placeDelay)
                                    if (Q.gt(d.Instance.keyDown(1073742048), 0))
                                        "creative" == this.world.gameMode && (1 == this.world.editLayer && 1 == u.get(this.world.getFG(this.mouseOverX, this.mouseOverY)).placeable || 2 == this.world.editLayer && 1 == u.get(this.world.getBG(this.mouseOverX, this.mouseOverY)).placeable) && (1 == this.world.editLayer ? (this.world.inventory[this.world.selectedInventoryItem].type = this.world.getFG(this.mouseOverX, this.mouseOverY),
                                        "wool" == this.world.inventory[this.world.selectedInventoryItem].type && null != this.world.getDataFG(this.mouseOverX, this.mouseOverY, "type") && (c = new p,
                                        a = this.world.getDataFG(this.mouseOverX, this.mouseOverY, "type"),
                                        c.h.type = a,
                                        this.world.inventory[this.world.selectedInventoryItem].data = c)) : 2 == this.world.editLayer && (this.world.inventory[this.world.selectedInventoryItem].type = this.world.getBG(this.mouseOverX, this.mouseOverY),
                                        "wool" == this.world.inventory[this.world.selectedInventoryItem].type && null != this.world.getDataBG(this.mouseOverX, this.mouseOverY, "type") && (c = new p,
                                        a = this.world.getDataBG(this.mouseOverX, this.mouseOverY, "type"),
                                        c.h.type = a,
                                        this.world.inventory[this.world.selectedInventoryItem].data = c)),
                                        this.world.inventory[this.world.selectedInventoryItem].count = 1),
                                        P.getBlockLight(this.world, this.mouseOverX, this.mouseOverY),
                                        this.blockDamage = 0;
                                    else {
                                        if (this.blockHitting[0] != this.mouseOverX || this.blockHitting[1] != this.mouseOverY)
                                            this.blockHitting = [this.mouseOverX, this.mouseOverY],
                                            this.blockDamage = 0;
                                        if (1 == this.world.editLayer)
                                            if (c = !1,
                                            f = 1,
                                            b = 0,
                                            null != u.get(this.world.inventory[this.world.selectedInventoryItem].type).tool && (null != u.get(this.world.getFG(this.mouseOverX, this.mouseOverY)).affectedBy ? (h = u.get(this.world.getFG(this.mouseOverX, this.mouseOverY)).affectedBy,
                                            l = u.get(this.world.inventory[this.world.selectedInventoryItem].type).toolType,
                                            h = null != h.h[l]) : h = !1,
                                            h && (b = u.get(this.world.inventory[this.world.selectedInventoryItem].type).strength,
                                            h = u.get(this.world.getFG(this.mouseOverX, this.mouseOverY)).affectedBy,
                                            l = u.get(this.world.inventory[this.world.selectedInventoryItem].type).toolType,
                                            f += b * h.h[l],
                                            b = 1)),
                                            null != u.get(this.world.getFG(this.mouseOverX, this.mouseOverY)).dropInclusion ? null != u.get(this.world.getFG(this.mouseOverX, this.mouseOverY)).dropInclusion.h[this.world.inventory[this.world.selectedInventoryItem].type] ? c = !0 : (b = 0,
                                            f /= 3) : c = !0,
                                            null != a)
                                                null != this.world.entityObject(a.type).h[a.id].h.health && (c = this.world.entityObject(a.type).h[a.id],
                                                c.h.health -= 5,
                                                this.world.entityObject(a.type).h[a.id].h.hitAnimation = 40,
                                                this.placeDelay = .3);
                                            else {
                                                if (1 == u.get(this.mouseFG).mineable) {
                                                    if (1 == u.get(this.mouseFG).isTreeTrunk) {
                                                        for (a = 0; 1 == u.get(this.world.getFG(this.mouseOverX, this.mouseOverY + ++a)).isTreeTrunk; )
                                                            ;
                                                        this.blockDamage += d.Instance.timeDelta * f / (1 + (a - 1) / 2) * 1E3;
                                                        b *= Math.floor(1 + (a - 1) / 2)
                                                    } else
                                                        this.blockDamage += d.Instance.timeDelta * f * 1E3;
                                                    0 == X.randomNumber(0, 2) && (h = this.mouseOverX + .5,
                                                    a = this.mouseOverY + .5,
                                                    f = u.get(this.mouseFG).itemTexture,
                                                    this.addParticles("block", h, a, 1, null != f ? f : this.mouseFG));
                                                    if (this.blockDamage >= u.get(this.mouseFG).damageValue) {
                                                        this.world.inventory[this.world.selectedInventoryItem].damage(b);
                                                        if (1 == u.get(this.mouseFG).isTreeTrunk)
                                                            for (a = -1; 1 == u.get(this.world.getFG(this.mouseOverX, this.mouseOverY + ++a)).isTreeTrunk; )
                                                                this.world.mineFG(this.mouseOverX, this.mouseOverY + a, c);
                                                        this.world.mineFG(this.mouseOverX, this.mouseOverY, c);
                                                        h = this.mouseOverX + .5;
                                                        a = this.mouseOverY + .5;
                                                        f = u.get(this.mouseFG).itemTexture;
                                                        this.addParticles("block", h, a, 5, null != f ? f : this.mouseFG);
                                                        this.blockDamage = 0
                                                    }
                                                }
                                            }
                                        else
                                            2 == this.world.editLayer && (c = !1,
                                            f = 1,
                                            b = 0,
                                            null != u.get(this.world.inventory[this.world.selectedInventoryItem].type).tool && (null != u.get(this.world.getBG(this.mouseOverX, this.mouseOverY)).affectedBy ? (h = u.get(this.world.getBG(this.mouseOverX, this.mouseOverY)).affectedBy,
                                            l = u.get(this.world.inventory[this.world.selectedInventoryItem].type).toolType,
                                            h = 0 < h.h[l]) : h = !1,
                                            h && (b = u.get(this.world.inventory[this.world.selectedInventoryItem].type).strength,
                                            h = u.get(this.world.getBG(this.mouseOverX, this.mouseOverY)).affectedBy,
                                            l = u.get(this.world.inventory[this.world.selectedInventoryItem].type).toolType,
                                            f = 1 + b * h.h[l],
                                            b = 1)),
                                            null != u.get(this.world.getBG(this.mouseOverX, this.mouseOverY)).dropInclusion ? null != u.get(this.world.getBG(this.mouseOverX, this.mouseOverY)).dropInclusion.h[this.world.inventory[this.world.selectedInventoryItem].type] ? c = !0 : (b = 0,
                                            f /= 3) : c = !0,
                                            null == u.get(this.world.getBG(this.mouseOverX, this.mouseOverY)).mineable || 1 == u.get(this.world.getBG(this.mouseOverX - 1, this.mouseOverY)).solid && 1 == u.get(this.world.getBG(this.mouseOverX + 1, this.mouseOverY)).solid && 1 == u.get(this.world.getBG(this.mouseOverX, this.mouseOverY - 1)).solid && "true" != this.world.getDataBG(this.mouseOverX, this.mouseOverY, "player") || (this.blockDamage += d.Instance.timeDelta * f * 1E3,
                                            0 == X.randomNumber(0, 2) && (h = this.mouseOverX + .5,
                                            a = this.mouseOverY + .5,
                                            f = u.get(this.mouseBG).itemTexture,
                                            this.addParticles("block", h, a, 1, null != f ? f : this.mouseBG)),
                                            this.blockDamage >= u.get(this.mouseBG).damageValue && (this.world.inventory[this.world.selectedInventoryItem].damage(b),
                                            this.world.mineBG(this.mouseOverX, this.mouseOverY, c),
                                            h = this.mouseOverX + .5,
                                            a = this.mouseOverY + .5,
                                            f = u.get(this.mouseBG).itemTexture,
                                            this.addParticles("block", h, a, 5, null != f ? f : this.mouseBG),
                                            this.blockDamage = 0)))
                                    }
                            } else
                                this.miningOrPlacing = Yb.NEITHER,
                                this.blockDamage = this.placeDelay = 0
                        } else
                            this.blockDamage = 0;
                    for (a = this.world.toGenerate.keys(); a.hasNext(); ) {
                        a = a.next();
                        this.world.getRegion(150 * a).generate();
                        break
                    }
                    this.world.runSaveCheck();
                    1 <= this.draggingItem.item.count && (d.Instance.cursor = null);
                    0 != d.Instance.mouseWheelDelta && (this.world.selectedInventoryItem -= 0 < d.Instance.mouseWheelDelta ? 1 : -1);
                    10 <= this.world.selectedInventoryItem ? this.world.selectedInventoryItem = 0 : 0 > this.world.selectedInventoryItem && (this.world.selectedInventoryItem = 9)
                },
                runTimeOfDay: function() {
                    var a = this.world.weatherAndTime.timeOfDay;
                    this.world.weatherAndTime.tickTimeOfDay();
                    Math.floor(a / 2.5) != Math.floor(this.world.weatherAndTime.timeOfDay / 2.5) && this.world.resetLighting();
                    this.world.weatherAndTime.tickSkySpot()
                },
                render: function() {
                    F.prototype.render.call(this);
                    if (!this.initialLoadingWorld) {
                        this.uiEntity.clearPool();
                        this.draggerEntity.clearPool();
                        this.tooltipEntity.clearPool();
                        this.renderWorld();
                        60 < Math.abs(P.lastLightingCacheClear - this.world.gameTime) && (P.lightingCache.h = Object.create(null),
                        P.lastLightingCacheClear = this.world.gameTime);
                        for (var a = this.world.toGenerate.keys(); a.hasNext(); ) {
                            a.next();
                            a = C.get("genIcon" + (T.modulus(Math.floor(d.Instance.lastTime / 1E3 * 50 / 20), 4) + 1));
                            this.uiEntity.addQuad(F.tempDrawVector3.set(d.screenWidth - 24 - 5, d.screenHeight - 24 - 5), a.get_position(), a.get_size());
                            break
                        }
                        this.cinematic && this.currentInventory.type == qb.CLOSED || this.renderGUI();
                        this.uiEntity.resetUnusedQuads();
                        this.scene.draw(this.uiEntity);
                        this.draggerEntity.resetUnusedQuads();
                        0 < this.draggerEntity.numQuads && this.scene.draw(this.draggerEntity);
                        this.tooltipEntity.resetUnusedQuads();
                        0 < this.tooltipEntity.numQuads && this.scene.draw(this.tooltipEntity);
                        this.paused && this.renderPauseMenu()
                    }
                },
                renderPauseMenu: function() {
                    var a = this;
                    this.pauseEntity.clearPool();
                    this.fillRect(this.pauseEntity, F.tempDrawRectangles[0].set(0, 0, d.screenWidth, d.screenHeight), -1442827418);
                    0 < N.menuTimer && (N.menuTimer = Math.max(0, N.menuTimer - 5 * d.Instance.timeDelta),
                    .5 >= N.menuTimer && N.menuFrame != N.nextMenu && (N.menuFrame = N.nextMenu));
                    this.draw(this.pauseEntity, C.get("menuBG"), 1, 0, 0, d.screenHeight);
                    "main" == N.menuFrame && (N.menuFrame = "pause");
                    "pause" == N.menuFrame ? (this.drawString(x.get("PAUSED"), 0, 70, 33, this.scene, 1, 16777215, 0, 0, !0, d.screenWidth, 1, "title"),
                    N.addButton2(x.get("UNPAUSE"), 144, 100, function() {
                        a.paused = !1
                    }, 1.2, this.scene, this.pauseEntity, 15),
                    N.addButton2(x.get("SETTINGS"), 144, 150, function() {
                        N.changeMenuScreen("settings")
                    }, 1.2, this.scene, this.pauseEntity, 15),
                    N.addButton2(x.get("SAVE_AND_QUIT"), 144, 250, function() {
                        a.exitGame()
                    }, 1.2, this.scene, this.pauseEntity, 15)) : "help" == K.substr(N.menuFrame, 0, 4) ? ("1" == K.substr(N.menuFrame, 4, 1) && (this.drawString(x.get("INFO"), 0, 110, 40, this.scene, 1, 16777215, 0, 0, !0, d.screenWidth, 1, "title"),
                    this.drawString(x.get("TMP_HELP_TEXT"), 0, 150, 20, this.scene, 1, 16777215, 0, 0, !0, d.screenWidth, 8)),
                    N.addButton2(x.get("BACK_BUTTON"), 144, d.screenHeight - 50, function() {
                        N.changeMenuScreen("pause")
                    }, 1.2, this.scene, this.pauseEntity, 15)) : "settings" == K.substr(N.menuFrame, 0, 8) && N.renderSettings(this.scene, this.pauseEntity, !0);
                    this.drawString(x.get("BY_ZANZLANZ"), d.screenWidth - 105, d.screenHeight - 30, 20, this.scene, 1, 16777215, 0, 0, 2, 100);
                    this.drawString(x.version, d.screenWidth - 105, 5, 20, this.scene, 1, 16777215, 0, 0, 2, 100);
                    this.pauseEntity.resetUnusedQuads();
                    this.scene.draw(this.pauseEntity)
                },
                exitGame: function() {
                    this.world.saveAll();
                    d.Instance.currentScene = d.Instance.mainMenuScene;
                    N.menuFrame = "main"
                },
                getMouseZoom: function() {
                    var a = T.distance(d.Instance.mouse.x - d.screenWidth / 2, d.Instance.mouse.y - d.screenHeight / 2) / (d.screenWidth / 2);
                    "sleeping" == this.world.mobs.h["char"].h.state && (a = 0);
                    return 4 * T.clamp(.25, .5, 1 - Math.min(1, a))
                },
                renderWorld: function() {
                    this.foregroundScene.clear();
                    this.objectEntity.clearPool();
                    this.rendered.h = Object.create(null);
                    if (0 == X.randomNumber(0, 200))
                        for (var a = this.world.loadedChunks.h, b = Object.keys(a), c = b.length, f = 0; f < c; ) {
                            var h = a[b[f++]];
                            0 == X.randomNumber(0, 10) && this.world.unloadChunk(h.chunkX, h.chunkY)
                        }
                    this.isPaused(!0) || (this.screenZoom += (this.getMouseZoom() - this.screenZoom) / 3);
                    f = -Math.ceil(this.camX);
                    b = -Math.floor(this.camY);
                    var l = d.screenWidth / 16 / 2 / this.screenZoom;
                    c = d.screenHeight / 16 / 2 / this.screenZoom;
                    h = Math.floor(f - l) - 1;
                    l = Math.ceil(f + l) + 1;
                    f = Math.ceil(b + c) + 1;
                    var g = Math.floor(b - c) - 1;
                    this.dontUpdate.h = Object.create(null);
                    this.checkIfImportantChunksNeedToBeLoaded();
                    b = Math.floor(h / 8);
                    c = Math.floor(l / 8);
                    f = Math.floor(f / 8);
                    l = Math.floor(g / 8);
                    P.entity.clearPool();
                    P.entity.transform.reset().setPosition(Math.floor(16 * this.camX) + d.screenWidth / 2, -Math.ceil(16 * this.camY) + d.screenHeight / 2);
                    g = b;
                    for (var p = c + 1; g < p; )
                        for (var y = g++, m = l, k = f + 1; m < k; ) {
                            var L = m++;
                            if (null == this.world.worldChunks.h[null == y ? "null" : "" + y] || null == this.world.worldChunks.h[null == y ? "null" : "" + y].h[null == L ? "null" : "" + L])
                                if (null == this.world.getRegion(8 * y) || null == this.world.createChunk(y, L))
                                    continue;
                            h = this.world.worldChunks.h[null == y ? "null" : "" + y].h[null == L ? "null" : "" + L];
                            var v = y >= b && y <= c && L <= f && L >= l;
                            if (!this.isPaused() && (h.isRenderable || v) && null != h.updateBlocks) {
                                a = h.updateBlocks.h;
                                for (var z = Object.keys(a), O = z.length, u = 0; u < O; ) {
                                    var B = a[z[u++]];
                                    null != B && this.checkBlock(8 * y + B.x, 8 * L + B.y)
                                }
                            }
                            if (v) {
                                if (!h.isRenderable) {
                                    if (this.loadingImportantChunks)
                                        continue;
                                    h.render(this.world, !1)
                                }
                                -1 < h.staleLighting && 0 == h.staleLighting-- && P.renderChunk(h, this.world);
                                -1 != h.lightingKey && P.slots[h.lightingIndex].key == h.lightingKey || P.renderChunk(h, this.world);
                                h.imageDataBG.transform.reset().translate(Math.floor(128 * y + 16 * this.camX) + d.screenWidth / 2, -Math.floor(16 * (8 * L + 8) + 16 * this.camY) + d.screenHeight / 2);
                                this.foregroundScene.draw(h.imageDataBG);
                                if (null != h.entities)
                                    for (a = h.entities.h,
                                    v = Object.keys(a),
                                    z = v.length,
                                    O = 0; O < z; )
                                        u = a[v[O++]],
                                        1 != this.rendered.h[u.id] && (this.rendered.h[u.id] = !0,
                                        this.entityRenderFunction(u.type)(u.id, h));
                                P.entity.addQuad(F.tempDrawVector3.set(128 * y, 16 * -(8 * L + 8)), P.getUV(h.lightingIndex).add(F.tempDrawPoints[0].set(2, 2)), F.tempDrawPoints[0].set(8, 8), !0, F.tempDrawPoints[1].set(128, 128));
                                P.slots[h.lightingIndex].tick = d.Instance.tick;
                                h.imageDataFG.transform.reset().translate(Math.floor(128 * y + 16 * this.camX) + d.screenWidth / 2, -Math.floor(16 * (8 * L + 8) + 16 * this.camY) + d.screenHeight / 2);
                                this.foregroundScene.draw(h.imageDataFG)
                            }
                        }
                    this.renderBlockSelector();
                    this.renderEntities();
                    P.entity.resetUnusedQuads();
                    this.foregroundScene.draw(P.entity);
                    this.foregroundScene.render();
                    this.foregroundEntity.transform.reset().scale2D(Math.max(1, this.screenZoom)).translate(.5, .5).scale(d.screenWidth, d.screenHeight);
                    this.scene.draw(this.foregroundEntity);
                    this.objectEntity.resetUnusedQuads();
                    this.objectEntity.transform.reset().translate(-d.screenWidth / 2, -d.screenHeight / 2).scale2D(Math.max(1, this.screenZoom)).translate(d.screenWidth / 2, d.screenHeight / 2);
                    this.scene.draw(this.objectEntity)
                },
                checkIfImportantChunksNeedToBeLoaded: function() {
                    var a = -Math.ceil(this.camX)
                      , b = d.screenWidth / 16 / 2 / this.screenZoom
                      , c = Math.floor(a - b) - 1;
                    a = Math.ceil(a + b) + 1;
                    this.loadingImportantChunks = !1;
                    b = Math.floor(c / 150 - 2);
                    for (var f = Math.floor(a / 150 + 2) + 1; b < f; ) {
                        var h = b++
                          , l = this.world.getRegion(150 * h);
                        l.isLoaded && !this.world.generatedAt(150 * h) && (this.world.toGenerate.h[h] = !0);
                        0 == l.isLoaded && h >= Math.floor(c / 150 - 1) && h <= Math.floor(a / 150 + 1) && (this.loadingImportantChunks = !0)
                    }
                },
                renderBlockSelector: function() {
                    if (!this.loadingImportantChunks) {
                        var a = 0;
                        this.miningOrPlacing != Yb.NEITHER && (1 == this.world.editLayer && 1 <= Math.floor(this.blockDamage / u.get(this.world.getFG(this.mouseOverX, this.mouseOverY)).damageValue * 8) && 7 >= Math.floor(this.blockDamage / u.get(this.world.getFG(this.mouseOverX, this.mouseOverY)).damageValue * 8) ? a = 1 : 2 == this.world.editLayer && 1 <= Math.floor(this.blockDamage / u.get(this.world.getBG(this.mouseOverX, this.mouseOverY)).damageValue * 8) && 7 >= Math.floor(this.blockDamage / u.get(this.world.getBG(this.mouseOverX, this.mouseOverY)).damageValue * 8) && (a = 2));
                        var b = this.mouseOverX - Math.floor(this.world.mobs.h["char"].h.x)
                          , c = this.mouseOverY - Math.ceil(this.world.mobs.h["char"].h.y) - 1;
                        if (0 != a) {
                            var f = C.get("break" + Math.floor(this.blockDamage / u.get(1 == a ? this.world.getFG(this.mouseOverX, this.mouseOverY) : this.world.getBG(this.mouseOverX, this.mouseOverY)).damageValue * 8));
                            (1 == a ? this.blockSelectorEntity : this.blockSelectorEntityBG).updateQuad(0, F.tempDrawVector3.set(), F.tempDrawPoints[0].set(f.x, f.y), F.tempDrawPoints[1].set(f.width, f.height));
                            1 == a ? (this.blockSelectorEntity.transform.reset().translate(Math.floor(16 * this.mouseOverX + 16 * this.camX) + d.screenWidth / 2, -Math.floor(16 * this.mouseOverY + 16 * this.camY + 16) + d.screenHeight / 2),
                            this.foregroundScene.draw(this.blockSelectorEntity)) : (this.blockSelectorEntityBG.transform.reset().translate(Math.floor(16 * this.mouseOverX + 16 * this.camX) + d.screenWidth / 2, -Math.floor(16 * this.mouseOverY + 16 * this.camY + 16) + d.screenHeight / 2),
                            this.foregroundScene.draw(this.blockSelectorEntityBG))
                        }
                        if (!this.cinematic) {
                            a = P.getBlockLight(this.world, this.mouseOverX, this.mouseOverY);
                            this.blockSelectorMatrix.reset().translate(Math.floor(16 * this.mouseOverX + 16 * this.camX) + d.screenWidth / 2, -Math.floor(16 * this.mouseOverY + 16 * this.camY + 16) + d.screenHeight / 2);
                            var h = C.get(12 > b * b + c * c ? "blockSelector1" : "blockSelector3");
                            b = this.objectEntity;
                            c = F.tempDrawVector3;
                            f = F.tempDrawPoints[0].set(h.x, h.y);
                            var l = F.tempDrawPoints[1].set(h.width, h.height);
                            h = wb.quadMatrixHelper(F.tempDrawRectangles[0].set(0, 0, h.width, h.height), this.blockSelectorMatrix, !1, F.tempDrawArray);
                            var g = new p;
                            a = T.repeatArray([Q.toFloat(a >>> 24) * (Q.toFloat(a >>> 16 & 255) / 255) / 255, Q.toFloat(a >>> 24) * (Q.toFloat(a >>> 8 & 255) / 255) / 255, Q.toFloat(a >>> 24) * (Q.toFloat(a & 255) / 255) / 255, 1], 6);
                            g.h.color = a;
                            b.addQuad(c, f, l, !0, null, h, null, g)
                        }
                    }
                },
                renderEntities: function() {
                    this.renderParticles();
                    this.renderMob("char", null)
                },
                entityRenderFunction: function(a) {
                    null == a && (a = "mob");
                    switch (a) {
                    case "drop":
                        return t(this, this.renderDrop);
                    case "mob":
                        return t(this, this.renderMob);
                    case "object":
                        return t(this, this.renderObject)
                    }
                    return t(this, this.nullFunction)
                },
                renderMob: function(a, b) {
                    if (Object.prototype.hasOwnProperty.call(this.world.mobs.h, a)) {
                        var c = this.world.mobs.h[a];
                        if ("char" != a && -1 > c.h.y)
                            b = b.entities,
                            Object.prototype.hasOwnProperty.call(b.h, a) && delete b.h[a];
                        else {
                            if (this.onScreen(c.h.x, c.h.y) && ("char" != a || "noclip" != this.world.mobs.h["char"].h.collisionMode)) {
                                var f = new Ua;
                                if ("sleeping" == c.h.state) {
                                    -1 == c.h.textureDirection && (f.scale(-1),
                                    f.translate(32, 0));
                                    f.translate(8, 0);
                                    var h = P.getBlockLight(this.world, Math.floor(c.h.x + 1), Math.round(c.h.y + 1))
                                } else
                                    -1 == c.h.textureDirection && (f.scale(-1, 1),
                                    f.translate(16, 0)),
                                    h = P.getBlockLight(this.world, Math.floor(c.h.x), Math.round(c.h.y + 1));
                                "char" != c.h.type && "zombie" != c.h.type && "player" != c.h.type || f.translate(Math.floor(16 * c.h.x) + Math.floor(16 * this.camX) + d.screenWidth / 2 - 8, Math.floor(16 * -c.h.y) - Math.floor(16 * this.camY) + d.screenHeight / 2 - 32);
                                var l = C.get(c.h.graphicsType + c.h.textureSet + Math.floor(c.h.textureFrame));
                                if (null != l) {
                                    var g = this.objectEntity
                                      , y = F.tempDrawVector3
                                      , m = F.tempDrawPoints[0].set(l.x, l.y)
                                      , k = F.tempDrawPoints[1].set(l.width, l.height);
                                    l = wb.quadMatrixHelper(F.tempDrawRectangles[0].set(0, 0, l.width, l.height), f, !1, F.tempDrawArray);
                                    f = new p;
                                    h = T.repeatArray([Q.toFloat(h >>> 24) * (Q.toFloat(h >>> 16 & 255) / 255) / 255, Q.toFloat(h >>> 24) * (Q.toFloat(h >>> 8 & 255) / 255) / 255, Q.toFloat(h >>> 24) * (Q.toFloat(h & 255) / 255) / 255, 1], 6);
                                    f.h.color = h;
                                    g.addQuad(y, m, k, !0, null, l, null, f)
                                } else
                                    ha.trace("Mob texture not found: " + H.string(c.h.graphicsType) + H.string(c.h.textureSet) + Math.floor(c.h.textureFrame), {
                                        fileName: "src/scenes/Scene_Game.hx",
                                        lineNumber: 1002,
                                        className: "scenes.Scene_Game",
                                        methodName: "renderMob"
                                    })
                            }
                            "char" != a && this.world.relinkEntityToChunk(a, "", b.chunkX, b.chunkY, c.h.x, c.h.y);
                            if (!this.isPaused() && 0 < d.Instance.performCount)
                                for (f = 0,
                                a = d.Instance.performCount; f < a && (++f,
                                this.mobPhysics(c, b),
                                !this.loadingImportantChunks); )
                                    ;
                        }
                    } else
                        b = b.entities,
                        Object.prototype.hasOwnProperty.call(b.h, a) && delete b.h[a]
                },
                charOuch: function(a, b, c) {
                    null == b && (b = 0);
                    0 < b ? "creative" == this.world.gameMode ? a.h.health = a.h.maxHealth : (a.h.health -= b,
                    a.h.health > a.h.maxHealth && (a.h.health = a.h.maxHealth)) : (a.h.health -= b,
                    a.h.health > a.h.maxHealth && (a.h.health = a.h.maxHealth))
                },
                mobPhysics: function(a, b) {
                    null != a && (this.onScreen(a.h.x, a.h.y, 200) || "char" == a.h.id) && "char" == a.h.id && U.run(a, this)
                },
                renderDrop: function(a, b) {
                    if (Object.prototype.hasOwnProperty.call(this.world.drops.h, a)) {
                        var c = this.world.drops.h[a];
                        if (-1 > c.h.y)
                            b = b.entities,
                            Object.prototype.hasOwnProperty.call(b.h, a) && delete b.h[a],
                            b = this.world.drops,
                            Object.prototype.hasOwnProperty.call(b.h, a) && delete b.h[a];
                        else {
                            if (this.onScreen(c.h.x, c.h.y)) {
                                try {
                                    var f = P.getBlockLight(this.world, Math.floor(c.h.x), Math.ceil(c.h.y));
                                    F.tempMatrix.reset().scale2D(.5).translate(Math.floor(16 * c.h.x + 16 * this.camX + d.screenWidth / 2 - 4), Math.floor(16 * -c.h.y - 16 * this.camY + d.screenHeight / 2 - 4 - 2 * Math.sin(6 * c.h.r1 + d.Instance.lastTime / 1E3 / 50 * 20) - 3));
                                    this.renderItem(this.temporaryItem.fromObject(c), F.tempMatrix, this.objectEntity, f)
                                } catch (q) {
                                    ha.trace("(drop) Bad texture: " + H.string(c.h.type), {
                                        fileName: "src/scenes/Scene_Game.hx",
                                        lineNumber: 1063,
                                        className: "scenes.Scene_Game",
                                        methodName: "renderDrop"
                                    })
                                }
                                if (!this.isPaused() && 0 < d.Instance.performCount) {
                                    f = 0;
                                    for (var h = d.Instance.performCount; f < h; )
                                        ++f,
                                        this.dropPhysics(a, b);
                                    if (null == this.world.drops.h[a])
                                        return
                                }
                            }
                            null != this.world.drops.h[a] && this.world.relinkEntityToChunk(a, "", b.chunkX, b.chunkY, c.h.x, c.h.y)
                        }
                    } else
                        b = b.entities,
                        Object.prototype.hasOwnProperty.call(b.h, a) && delete b.h[a]
                },
                dropPhysics: function(a, b) {
                    b = this.world.drops.h[a];
                    if (null != b) {
                        b.h.x += b.h.xSpeed / 16;
                        b.h.y += b.h.ySpeed / 16;
                        1 != u.get(this.world.getFG(Math.floor(b.h.x), Math.floor(b.h.y - .2))).solid ? (b.h.ySpeed -= .035,
                        b.h.ySpeed *= .98,
                        b.h.xSpeed *= .98) : b.h.ySpeed = 0;
                        var c = this.world.getFG(Math.floor(b.h.x), Math.floor(b.h.y));
                        if ("water" == c)
                            b.h.ySpeed += .04;
                        else if ("lava" == c && null == b.h.burnTimer)
                            for (b.h.burnTimer = 1,
                            b.h.ySpeed = 1,
                            b.h.xSpeed += .5 * Math.random() - .25,
                            c = 0; 10 > c; )
                                ++c,
                                this.addParticles("fire", b.h.x + (.5 * Math.random() - .25), b.h.y + (.5 * Math.random() - .25), 1, null, !1);
                        if (null != b.h.burnTimer && (b.h.burnTimer -= d.Instance.timeDelta,
                        .1 > Math.random() && this.addParticles("fire", b.h.x + (.5 * Math.random() - .25), b.h.y + (.5 * Math.random() - .25), 1, null, !1),
                        0 > b.h.burnTimer)) {
                            this.removeEntity("drop", a);
                            return
                        }
                        1 != u.get(this.world.getFG(Math.floor(b.h.x - .2), Math.floor(b.h.y))).solid || 1 != u.get(this.world.getFG(Math.floor(b.h.x + .2), Math.floor(b.h.y))).solid ? b.h.xSpeed *= .95 : b.h.xSpeed = 0;
                        1.5 > Math.abs(b.h.x - this.world.mobs.h["char"].h.x) && 2 > Math.abs(b.h.y - (this.world.mobs.h["char"].h.y + 1)) && (c = new p,
                        c.h.type = b.h.type,
                        c.h.count = b.h.count,
                        c.h.data = b.h.data,
                        b = this.addToInventory(c),
                        0 >= b ? this.removeEntity("drop", a) : this.updateEntity("drop", a, "count", b))
                    }
                },
                renderItem: function(a, b, c, f) {
                    var h = u.get(a.type).itemTexture
                      , d = C.get(null != h ? h : a.type)
                      , l = null;
                    null != f && (l = [Q.toFloat(f >>> 16 & 255) / 255, Q.toFloat(f >>> 8 & 255) / 255, Q.toFloat(f & 255) / 255, Q.toFloat(f >>> 24) / 255]);
                    "wool" == a.type && (h = ba.getWoolColor(a.data.h.type),
                    null == h ? (ha.trace("Missing wool color: " + H.string(a.data.h.type), {
                        fileName: "src/scenes/Scene_Game.hx",
                        lineNumber: 1151,
                        className: "scenes.Scene_Game",
                        methodName: "renderItem"
                    }),
                    a.data.h.type = "white") : (null == l && (l = [1, 1, 1, 1]),
                    l[0] *= h.array[0],
                    l[1] *= h.array[1],
                    l[2] *= h.array[2]));
                    null != l ? (h = F.tempDrawVector3,
                    a = F.tempDrawPoints[0].set(d.x, d.y),
                    f = F.tempDrawPoints[1].set(d.width, d.height),
                    b = wb.quadMatrixHelper(F.tempDrawRectangles[0].set(0, 0, d.width, d.height), b, !1, F.tempDrawArray),
                    d = new p,
                    l = T.repeatArray(l, 6),
                    d.h.color = l,
                    c.addQuad(h, a, f, !0, null, b, null, d)) : c.addQuad(F.tempDrawVector3, F.tempDrawPoints[0].set(d.x, d.y), F.tempDrawPoints[1].set(d.width, d.height), !0, null, wb.quadMatrixHelper(F.tempDrawRectangles[0].set(0, 0, d.width, d.height), b, !1, F.tempDrawArray))
                },
                renderInventorySlot: function(a, b, c, f, h, d) {
                    null == d && (d = 22);
                    if (null != a && "air" != a.type) {
                        null == h && (h = this.uiEntity);
                        try {
                            this.renderItem(a, F.tempMatrix.reset().translate(b + 8, c + 8), h)
                        } catch (I) {
                            ha.trace("Bad texture (" + f + "): " + a.type, {
                                fileName: "src/scenes/Scene_Game.hx",
                                lineNumber: 1183,
                                className: "scenes.Scene_Game",
                                methodName: "renderInventorySlot"
                            }),
                            a.empty()
                        }
                        1 < a.count && this.drawString(null == a.count ? "null" : "" + a.count, b, c + 16 - 1, 15, this.scene, 1, 16777215, 0, 0, !1, 32, 1, f + "Count", d);
                        0 < a.getDamage() && (this.copyPixels(h, C.get("itemBarGrey"), F.tempDrawRectangles[0].set(0, 0, C.get("itemBarGrey").width, 4), F.tempDrawPoints[0].set(b + 3, c + 3)),
                        this.copyPixels(h, C.get("itemBarGreen"), F.tempDrawRectangles[0].set(0, 0, Math.floor(C.get("itemBarGreen").width * (1 - a.getDamage() / a.getBlockInfo().damageValue)), 4), F.tempDrawPoints[0].set(b + 3, c + 3)))
                    }
                },
                renderObject: function(a, b) {
                    if (Object.prototype.hasOwnProperty.call(this.world.objects.h, a)) {
                        var c = this.world.objects.h[a];
                        if (-1 > c.h.y)
                            b = b.entities,
                            Object.prototype.hasOwnProperty.call(b.h, a) && delete b.h[a],
                            b = this.world.objects,
                            Object.prototype.hasOwnProperty.call(b.h, a) && delete b.h[a];
                        else {
                            if (!this.isPaused() && 0 < d.Instance.performCount) {
                                for (var f = 0, h = d.Instance.performCount; f < h; )
                                    ++f,
                                    this.objectPhysics(a, b);
                                if (null == this.world.objects.h[a])
                                    return
                            }
                            if (this.onScreen(c.h.x, c.h.y)) {
                                var l = ""
                                  , g = da.get(c.h.type);
                                h = (new Ua).translate(16 * g.textureBoundingBox.x, 16 * (-g.textureBoundingBox.y - g.textureBoundingBox.height));
                                1 == g.sway ? (h.translate(0, -12.8),
                                h.shear2D((Math.sin((d.Instance.lastTime / 50 + 4 * c.h.x) / 8) + Math.cos((d.Instance.lastTime / 50 / 2 + 4 * c.h.x) / 9 + 1)) * c.h.hitAnimation / 50),
                                h.translate(0, 12.8)) : 2 == g.sway ? c.h.hitAnimation && h.shear2D(Math.sin((d.Instance.lastTime / 50 + 4 * c.h.x) / 8) * c.h.hitAnimation / 50) : c.h.hitAnimation && h.translate(X.randomNumber(-1, 1), 0);
                                if ("chest" == c.h.type)
                                    l = c.h.type,
                                    "battered" == c.h.chestType && (l += "_battered"),
                                    this.currentInventory.id == a && (l += "_open");
                                else if ("campfire" == c.h.type)
                                    for (f = 0; 3 > f; ) {
                                        if (0 < c.h.fuelTimers[f++]) {
                                            l = "campfire_lit";
                                            break
                                        }
                                    }
                                else
                                    "door_wood" == c.h.type ? (l = c.h.doorType,
                                    1 == c.h.isClosed ? l += "_closed" : -1 == c.h.direction ? (h.scale(-1),
                                    h.translate(-6, 0)) : h.translate(6, 0)) : "bed" == c.h.type && -1 == c.h.direction && h.scale(-1);
                                h.translate(Math.floor(16 * c.h.x + 16 * this.camX + d.screenWidth / 2) + 16 * g.offsetFromOrigin.x, Math.ceil(16 * -c.h.y - 16 * this.camY + d.screenHeight / 2) - 16 * g.offsetFromOrigin.y);
                                f = C.get("" != l ? l : c.h.type);
                                if (null != f) {
                                    var y = P.getBlockLight(this.world, Math.floor(c.h.x + g.offsetFromOrigin.x + g.textureBoundingBox.get_centerX()), Math.floor(c.h.y + g.offsetFromOrigin.y + g.textureBoundingBox.get_centerY()));
                                    l = this.objectEntity;
                                    g = F.tempDrawVector3;
                                    var m = F.tempDrawPoints[0].set(f.x, f.y)
                                      , k = F.tempDrawPoints[1].set(f.width, f.height);
                                    h = wb.quadMatrixHelper(F.tempDrawRectangles[0].set(0, 0, f.width, f.height), h, !1, F.tempDrawArray);
                                    f = new p;
                                    y = T.repeatArray([Q.toFloat(y >>> 24) * (Q.toFloat(y >>> 16 & 255) / 255) / 255, Q.toFloat(y >>> 24) * (Q.toFloat(y >>> 8 & 255) / 255) / 255, Q.toFloat(y >>> 24) * (Q.toFloat(y & 255) / 255) / 255, 1], 6);
                                    f.h.color = y;
                                    l.addQuad(g, m, k, !0, null, h, null, f)
                                } else
                                    ha.trace("Object texture not found: " + ("" != l ? l : c.h.type), {
                                        fileName: "src/scenes/Scene_Game.hx",
                                        lineNumber: 1282,
                                        className: "scenes.Scene_Game",
                                        methodName: "renderObject"
                                    })
                            }
                            null != this.world.objects.h[a] && this.world.relinkEntityToChunk(a, "", b.chunkX, b.chunkY, c.h.x, c.h.y)
                        }
                    } else
                        b = b.entities,
                        Object.prototype.hasOwnProperty.call(b.h, a) && delete b.h[a]
                },
                nullFunction: function(a, b) {},
                renderParticles: function() {
                    for (var a = Object.keys(this.particles.h), b = a.length, c = 0; c < b; ) {
                        var f = a[c++]
                          , h = this.particles.h[f];
                        if (null != h) {
                            if (!this.isPaused() && 0 < d.Instance.performCount)
                                for (var l = 0, g = d.Instance.performCount; l < g; )
                                    ++l,
                                    this.particlePhysics(f);
                            if (null == this.world.collision(new ca(h.h.x,h.h.y - .125,.125,.125))) {
                                g = P.getBlockLight(this.world, Math.floor(h.h.x), Math.ceil(h.h.y));
                                var y = C.get(h.h.texture);
                                if (null != y) {
                                    f = this.objectEntity;
                                    l = F.tempDrawVector3.set(Math.round(16 * h.h.x + 16 * this.camX + d.screenWidth / 2) - 1, Math.ceil(16 * -h.h.y - 16 * this.camY + d.screenHeight / 2));
                                    h = F.tempDrawPoints[0].set(y.x + Math.min(y.width - 2, Math.round(14 * h.h.r1)), y.y + Math.round(14 * h.h.r2));
                                    y = F.tempDrawPoints[1].set(2, 2);
                                    var m = new p;
                                    g = T.repeatArray([Q.toFloat(g >>> 24) * (Q.toFloat(g >>> 16 & 255) / 255) / 255, Q.toFloat(g >>> 24) * (Q.toFloat(g >>> 8 & 255) / 255) / 255, Q.toFloat(g >>> 24) * (Q.toFloat(g & 255) / 255) / 255, 1], 6);
                                    m.h.color = g;
                                    f.addQuad(l, h, y, !0, null, null, null, m)
                                } else
                                    ha.trace("Object texture not found: " + H.string(h.h.type), {
                                        fileName: "src/scenes/Scene_Game.hx",
                                        lineNumber: 1316,
                                        className: "scenes.Scene_Game",
                                        methodName: "renderParticles"
                                    })
                            }
                        }
                    }
                },
                particlePhysics: function(a) {
                    var b = this.particles.h[a];
                    if (null != b) {
                        this.onScreen(b.h.x, b.h.y, 50) || (b.h.life = 0);
                        "fire" == b.h.type ? b.h.r1 += .08 : "fire2" == b.h.type && (.02 > Math.random() && (b.h.r1 = 1,
                        b.h.life += 10),
                        .02 > Math.random() && (b.h.life = 0),
                        b.h.r1 += .02857142857142857);
                        null != this.world.collision(new ca(b.h.x,b.h.y - .0625,.0625,.0625)) ? (b.h.ySpeed = Math.max(0, b.h.ySpeed),
                        b.h.x += b.h.xSpeed / 38 / 2,
                        "block" != b.h.type && (b.h.life = 0)) : b.h.x += b.h.xSpeed / 38;
                        var c = b.h.type;
                        if (null == c)
                            b.h.xSpeed *= .97,
                            b.h.ySpeed -= .07;
                        else
                            switch (c) {
                            case "dust":
                                b.h.ySpeed -= .035;
                                break;
                            case "dust2":
                                c = b.h.ySpeed - X.randomNumber(-5, 10) / 1E3;
                                b.h.ySpeed = c;
                                c = b.h.xSpeed + X.randomNumber(-10, 10) / 1E3;
                                b.h.xSpeed = c;
                                break;
                            case "fire":
                                b.h.ySpeed = .25;
                                c = Math.sin((d.Instance.lastTime / 1E3 * 125 + 32 * b.h.y + 32 * b.h.x) / 15) / 8 + X.randomNumber(-2, 2) / 20;
                                b.h.xSpeed = c;
                                break;
                            case "fire2":
                                b.h.ySpeed = .3;
                                c = Math.sin((d.Instance.lastTime / 1E3 * 125 + 368 * b.h.y + 256 * b.h.x) / 15) / 8 + X.randomNumber(-3, 3) / 20;
                                b.h.xSpeed = c;
                                break;
                            case "leaf":
                                b.h.ySpeed = -(.2 + Math.sin((d.Instance.lastTime / 1E3 * 25 / 6 + 2 * b.h.y + b.h.x / 2) / 8) / 20);
                                c = Math.sin((d.Instance.lastTime / 1E3 * 25 / 4 + b.h.y / 3 + 1.5 * b.h.x) / 4) / 5 + X.randomNumber(-2, 2) / 20 + .2;
                                b.h.xSpeed = c;
                                break;
                            case "snow":
                                b.h.ySpeed = -.14;
                                c = Math.sin((d.Instance.lastTime / 1E3 * 25 + 16 * b.h.x / 5) / 15) / 4 + X.randomNumber(-5, 5) / 20 + .4;
                                b.h.xSpeed = c;
                                break;
                            default:
                                b.h.xSpeed *= .97,
                                b.h.ySpeed -= .07
                            }
                        b.h.y += b.h.ySpeed / 38;
                        --b.h.life;
                        1 > b.h.life && (b = this.particles,
                        Object.prototype.hasOwnProperty.call(b.h, a) && delete b.h[a])
                    }
                },
                addParticles: function(a, b, c, f, h, d, l, g, y, m, k) {
                    null == k && (k = !1);
                    null == m && (m = 50);
                    null == y && (y = 0);
                    null == g && (g = 0);
                    null == l && (l = -1);
                    null == d && (d = !0);
                    null == h && (h = "stone");
                    null == f && (f = 1);
                    null == c && (c = 0);
                    null == b && (b = 0);
                    null == a && (a = "block");
                    if (1 != J.particleQuality || k)
                        for (-1 == l && (l = "fire" == a ? 96 * Math.random() + 12 : "fire2" == a ? 192 * Math.random() + 12 : 240 * Math.random() + 120 * Math.random()); 0 < f; ) {
                            --f;
                            this.particleCountTick = ++this.particleCountTick % 1E4;
                            if (5 == J.particleQuality && !k && (l *= .5,
                            0 != this.particleCountTick % 3))
                                continue;
                            var q = b
                              , L = c;
                            d && (q = b + (1.125 * Math.random() - .5 - .0625),
                            L = c + (1.125 * Math.random() - .5 - .0625));
                            var v = g
                              , z = y;
                            if ("block" == a)
                                v = g + (2 * Math.random() - 1),
                                z = y + (2 * Math.random() - 1);
                            else if ("leaf" == a)
                                v = g + (3 * Math.random() + 1),
                                z = -Math.random();
                            else if ("dust" == a)
                                v = g + (.4 * Math.random() - .2),
                                z = y + (Math.random() + .1);
                            else if ("fire" == a || "fire2" == a)
                                v = g + (.4 * Math.random() - .2),
                                z = y + Math.random(),
                                h = "fireG";
                            var O = new p;
                            O.h.type = a;
                            O.h.x = q - .0625;
                            O.h.y = L + .0625;
                            O.h.texture = h;
                            O.h.xSpeed = v;
                            O.h.ySpeed = z;
                            O.h.life = l + Math.floor((2 * Math.random() - 1) * m);
                            O.h.r1 = Math.random();
                            O.h.r2 = Math.random();
                            q = this.particles;
                            L = a + H.string(Math.random());
                            q.h[L] = O
                        }
                },
                runTimers: function() {
                    for (var a = Object.keys(this.world.timers.h), b = a.length, c = 0; c < b; ) {
                        var f = a[c++]
                          , h = this.world.timers.h[f];
                        null == h.h.tick && (h.h.tick = 0);
                        if (h.h.tick < h.h.tickTime)
                            h.h.tick += d.Instance.timeDelta;
                        else if (h.h.tick = T.modulus(h.h.tick, h.h.tickTime),
                        "campfire" == h.h.type) {
                            var l = this.world.objects.h[f];
                            if (null == l) {
                                this.world.removeTimer(f, h.h.region);
                                break
                            }
                            f = 0;
                            h = l.h.fuelTimers;
                            for (var g = 0, p = h.length; g < p; ) {
                                var y = g++
                                  , m = l.h.currentFuel[y]
                                  , k = l.h.fuel[y];
                                0 < m.count && h[y]--;
                                0 >= h[y] && 0 < k.count && null != u.get(k.type).fuel && (l.h.currentFuel[y] = k.clone(),
                                h[y] = u.get(k.type).fuel.amount,
                                "bucket_lava" == k.type ? k.type = "bucket_empty" : k.count--);
                                0 < h[y] && 0 < m.count && null != u.get(m.type).fuel && (f += u.get(m.type).fuel.speed)
                            }
                            g = h = 0;
                            for (p = l.h.input.length; g < p; )
                                0 < ja.__cast(l.h.input[g++], Z).count && ++h;
                            g = l.h.itemTimers;
                            p = 0;
                            for (y = l.h.input.length; p < y; ) {
                                m = p++;
                                k = l.h.input[m];
                                var L = u.get(k.type).smelt;
                                if (null != L && (g[m] += L.speed / h * f) >= L.amount)
                                    for (var v = 0, z = l.h.output.length; v < z; ) {
                                        var O = v++
                                          , B = l.h.output[O];
                                        if (B.type == L.into) {
                                            if (B.count < u.get(B.type).stackSize) {
                                                B.count++;
                                                k.count--;
                                                1 > k.count && (l.h.input[m] = R.emptyItem());
                                                g[m] = 0;
                                                break
                                            }
                                        } else if ("" == B.type || 0 == B.count) {
                                            l.h.output[O] = new Z(L.into,1);
                                            1 > k.count ? l.h.input[m] = R.emptyItem() : k.count--;
                                            g[m] = 0;
                                            break
                                        }
                                    }
                            }
                        } else if ("sapling_pine" == h.h.type || "sapling_birch" == h.h.type || "sapling_orange" == h.h.type || "cotton" == h.h.type)
                            if (h.h.chance -= 2,
                            (0 >= h.h.chance || 0 == X.randomNumber(0, Math.floor(h.h.chance))) && null != this.world.getRegion(h.h.blockX - 10, !0) && null != this.world.getRegion(h.h.blockX + 10, !0))
                                switch (this.world.getFG(h.h.blockX, h.h.blockY)) {
                                case "cotton":
                                    .4 > Math.random() ? "air" == this.world.getFG(h.h.blockX, h.h.blockY + 2) && "air" == this.world.getFG(h.h.blockX + 1, h.h.blockY + 1) && null != this.world.addObject("cotton_large", h.h.blockX - .5, h.h.blockY) && (this.world.mineFG(h.h.blockX, h.h.blockY),
                                    this.world.removeTimer(f, h.h.region)) : "air" == this.world.getFG(h.h.blockX, h.h.blockY + 2) && null != this.world.addObject("cotton_small", h.h.blockX, h.h.blockY) && (this.world.mineFG(h.h.blockX, h.h.blockY),
                                    this.world.removeTimer(f, h.h.region));
                                    break;
                                case "sapling_birch":
                                    E.makeTree(h.h.blockX, h.h.blockY, "birch", null, this.world) && (this.world.unloadChunksAround(Math.floor(h.h.blockX / 8), Math.floor(h.h.blockY / 8), 2),
                                    this.world.removeTimer(f, h.h.region));
                                    break;
                                case "sapling_orange":
                                    E.makeTree(h.h.blockX, h.h.blockY, "orange", null, this.world) && (this.world.unloadChunksAround(Math.floor(h.h.blockX / 8), Math.floor(h.h.blockY / 8), 2),
                                    this.world.removeTimer(f, h.h.region));
                                    break;
                                case "sapling_pine":
                                    E.makeTree(h.h.blockX, h.h.blockY, "pine", null, this.world) && (this.world.unloadChunksAround(Math.floor(h.h.blockX / 8), Math.floor(h.h.blockY / 8), 2),
                                    this.world.removeTimer(f, h.h.region));
                                    break;
                                default:
                                    this.world.removeTimer(f, h.h.region)
                                }
                    }
                },
                onScreen: function(a, b, c) {
                    null == c && (c = 100);
                    return 16 * a + 16 * this.camX + d.screenWidth / 2 / this.screenZoom > 0 - c && 16 * a + 16 * this.camX + d.screenWidth / 2 / this.screenZoom < d.screenWidth + c && 16 * b + 16 * this.camY + d.screenHeight / 2 / this.screenZoom > 0 - c ? 16 * b + 16 * this.camY + d.screenHeight / 2 / this.screenZoom < d.screenHeight + c : !1
                },
                objectPhysics: function(a, b) {
                    if (Object.prototype.hasOwnProperty.call(this.world.objects.h, a)) {
                        var c = this.world.objects.h[a];
                        switch (c.h.type) {
                        case "bed":
                            c.h.hitAnimation = Math.max(0, c.h.hitAnimation - 5);
                            c.h.health < da.get(c.h.type).maxHealth && (c.h.health += .01);
                            if (1 != u.get(this.world.getFG(Math.floor(c.h.x), Math.ceil(c.h.y) - 1)).solid || 1 != u.get(this.world.getFG(Math.floor(c.h.x) + 1, Math.ceil(c.h.y) - 1)).solid)
                                c.h.health = 0;
                            0 >= c.h.health && (this.world.addDrop(!1, "bed", c.h.x + da.get("bed").offsetFromOrigin.x, c.h.y + da.get("bed").offsetFromOrigin.y),
                            this.removeEntity("object", a));
                            break;
                        case "boulder":
                            c.h.hitAnimation = Math.max(0, c.h.hitAnimation - 3);
                            c.h.health < da.get(c.h.type).maxHealth && (c.h.health += .01);
                            1 != u.get(this.world.getFG(Math.floor(c.h.x), Math.ceil(c.h.y) - 1)).solid && 1 != u.get(this.world.getFG(Math.floor(c.h.x) + 1, Math.ceil(c.h.y) - 1)).solid && 1 != u.get(this.world.getFG(Math.floor(c.h.x) + 2, Math.ceil(c.h.y) - 1)).solid && (c.h.health = 0);
                            0 >= c.h.health && (this.world.addDrop(!1, "rock", c.h.x + da.get("boulder").offsetFromOrigin.x, c.h.y + da.get("boulder").offsetFromOrigin.y, X.randomNumber(5, 10)),
                            this.removeEntity("object", a));
                            break;
                        case "campfire":
                            for (var f = !1, h = 0; 3 > h; )
                                if (0 < c.h.fuelTimers[h++]) {
                                    f = !0;
                                    break
                                }
                            f && (.5 > Math.random() && this.addParticles("fire2", c.h.x + da.get("campfire").offsetFromOrigin.x - .3125, c.h.y + da.get("campfire").offsetFromOrigin.y + 1, 1, null, !0),
                            .5 > Math.random() && this.addParticles("fire2", c.h.x + da.get("campfire").offsetFromOrigin.x + .3125, c.h.y + da.get("campfire").offsetFromOrigin.y + 1, 1, null, !0));
                            c.h.hitAnimation = Math.max(0, c.h.hitAnimation - 3);
                            c.h.health < da.get(c.h.type).maxHealth && (c.h.health += .01);
                            if (1 != u.get(this.world.getFG(Math.floor(c.h.x), Math.ceil(c.h.y) - 1)).solid || 1 != u.get(this.world.getFG(Math.floor(c.h.x) + 1, Math.ceil(c.h.y) - 1)).solid || 1 != u.get(this.world.getFG(Math.floor(c.h.x) + 2, Math.ceil(c.h.y) - 1)).solid)
                                c.h.health = 0;
                            h = Math.floor(c.h.x + da.get(c.h.type).offsetFromOrigin.x);
                            var d = Math.floor(c.h.y + 1)
                              , l = Math.floor(T.modulus(h, 8))
                              , g = Math.floor(T.modulus(d, 8))
                              , p = this.world.createChunk(Math.floor(h / 8), Math.floor(d / 8));
                            if (f) {
                                if (null == p.lights || null == p.lights.h["bX" + l + "Y" + g])
                                    this.world.setLight(h, d, "radial", 4, 16750899, {
                                        type: "object",
                                        x: h,
                                        y: d,
                                        id: a
                                    }),
                                    this.world.reloadLightingAround(b, 2, !0)
                            } else
                                null != p.lights && Object.prototype.hasOwnProperty.call(p.lights.h, "bX" + l + "Y" + g) && (h = p.lights,
                                f = "bX" + l + "Y" + g,
                                Object.prototype.hasOwnProperty.call(h.h, f) && delete h.h[f],
                                this.world.reloadLightingAround(b, 2, !0));
                            if (0 >= c.h.health) {
                                h = 0;
                                for (f = ja.__cast(c.h.input, Array).length; h < f; )
                                    d = h++,
                                    this.world.addDrop(!1, c.h.input[d].type, c.h.x + da.get("campfire").offsetFromOrigin.x, c.h.y + da.get("campfire").offsetFromOrigin.y, c.h.input[d].count);
                                h = 0;
                                for (f = ja.__cast(c.h.output, Array).length; h < f; )
                                    d = h++,
                                    this.world.addDrop(!1, c.h.output[d].type, c.h.x + da.get("campfire").offsetFromOrigin.x, c.h.y + da.get("campfire").offsetFromOrigin.y, c.h.output[d].count);
                                h = 0;
                                for (f = ja.__cast(c.h.fuel, Array).length; h < f; )
                                    d = h++,
                                    this.world.addDrop(!1, c.h.fuel[d].type, c.h.x + da.get("campfire").offsetFromOrigin.x, c.h.y + da.get("campfire").offsetFromOrigin.y, c.h.fuel[d].count);
                                this.world.addDrop(!1, "campfire", c.h.x + da.get("campfire").offsetFromOrigin.x, c.h.y + da.get("campfire").offsetFromOrigin.y, 1);
                                null != p.lights && (h = p.lights,
                                f = "bX" + l + "Y" + g,
                                Object.prototype.hasOwnProperty.call(h.h, f) && delete h.h[f],
                                this.world.reloadLightingAround(b, 2, !0));
                                this.removeEntity("object", a)
                            }
                            break;
                        case "chest":
                            c.h.hitAnimation = Math.max(0, c.h.hitAnimation - 3);
                            "battered" == c.h.chestType ? c.h.health < da.get(c.h.type).maxHealth / 4 ? c.h.health += .01 : c.h.health > da.get(c.h.type).maxHealth / 4 && (b = da.get(c.h.type).maxHealth / 4,
                            c.h.health = b) : c.h.health < da.get(c.h.type).maxHealth && (c.h.health += .01);
                            if (0 >= c.h.health) {
                                h = 0;
                                for (f = ja.__cast(c.h.items, Array).length; h < f; )
                                    d = h++,
                                    null != c.h.items[d] && this.world.addDrop(!1, c.h.items[d].type, c.h.x + da.get("chest").offsetFromOrigin.x, c.h.y + da.get("chest").offsetFromOrigin.y, c.h.items[d].count);
                                null == c.h.chestType ? this.world.addDrop(!1, "chest", c.h.x + da.get("chest").offsetFromOrigin.x, c.h.y + da.get("chest").offsetFromOrigin.y, 1) : "battered" == c.h.chestType && this.world.addDrop(!1, "chest_battered", c.h.x + da.get("chest").offsetFromOrigin.x, c.h.y + da.get("chest").offsetFromOrigin.y, 1);
                                this.removeEntity("object", a)
                            }
                            break;
                        case "cobweb1":
                        case "cobweb2":
                        case "cobweb3":
                        case "cobweb4":
                            c.h.hitAnimation = Math.max(0, c.h.hitAnimation - 5);
                            c.h.health < da.get(c.h.type).maxHealth && (c.h.health += .01);
                            1 == c.h.orientation ? (b = E.cobwebBlocks,
                            f = this.world.getFG(Math.floor(c.h.x), Math.ceil(c.h.y) - 1),
                            null != b.h[f] ? (b = E.cobwebBlocks,
                            f = this.world.getFG(Math.floor(c.h.x) - 1, Math.ceil(c.h.y)),
                            b = null == b.h[f]) : b = !0,
                            b ? b = !0 : (b = E.cobwebBlocks,
                            f = this.world.getFG(Math.floor(c.h.x) - 1, Math.ceil(c.h.y) + 1),
                            b = null == b.h[f]),
                            b && (c.h.health = 0)) : 2 == c.h.orientation ? (b = E.cobwebBlocks,
                            f = this.world.getFG(Math.floor(c.h.x), Math.ceil(c.h.y) - 1),
                            null != b.h[f] ? (b = E.cobwebBlocks,
                            f = this.world.getFG(Math.floor(c.h.x) + 1, Math.ceil(c.h.y)),
                            b = null == b.h[f]) : b = !0,
                            b ? b = !0 : (b = E.cobwebBlocks,
                            f = this.world.getFG(Math.floor(c.h.x) + 1, Math.ceil(c.h.y) + 1),
                            b = null == b.h[f]),
                            b && (c.h.health = 0)) : 3 == c.h.orientation ? (b = E.cobwebBlocks,
                            f = this.world.getFG(Math.floor(c.h.x), Math.ceil(c.h.y) + 2),
                            null != b.h[f] ? (b = E.cobwebBlocks,
                            f = this.world.getFG(Math.floor(c.h.x) - 1, Math.ceil(c.h.y + 1)),
                            b = null == b.h[f]) : b = !0,
                            b ? b = !0 : (b = E.cobwebBlocks,
                            f = this.world.getFG(Math.floor(c.h.x) - 1, Math.ceil(c.h.y)),
                            b = null == b.h[f]),
                            b && (c.h.health = 0)) : 4 == c.h.orientation && (b = E.cobwebBlocks,
                            f = this.world.getFG(Math.floor(c.h.x), Math.ceil(c.h.y) + 2),
                            null != b.h[f] ? (b = E.cobwebBlocks,
                            f = this.world.getFG(Math.floor(c.h.x) + 1, Math.ceil(c.h.y + 1)),
                            b = null == b.h[f]) : b = !0,
                            b ? b = !0 : (b = E.cobwebBlocks,
                            f = this.world.getFG(Math.floor(c.h.x) + 1, Math.ceil(c.h.y)),
                            b = null == b.h[f]),
                            b && (c.h.health = 0));
                            0 >= c.h.health && (this.world.addDrop(!1, "string", c.h.x + da.get(c.h.type).offsetFromOrigin.x, c.h.y + da.get(c.h.type).offsetFromOrigin.y, X.randomNumber(1, 5)),
                            this.removeEntity("object", a));
                            break;
                        case "cotton_large":
                            c.h.hitAnimation = Math.max(2, c.h.hitAnimation - .5);
                            c.h.health < da.get(c.h.type).maxHealth && (c.h.health += .01);
                            "dirt_grass" != this.world.getFG(Math.floor(c.h.x + .5), Math.ceil(c.h.y) - 1) && "dirt" != this.world.getFG(Math.floor(c.h.x + .5), Math.ceil(c.h.y) - 1) && (c.h.health = 0);
                            0 >= c.h.health && (this.world.addDrop(!1, "cotton", c.h.x + da.get("cotton_large").offsetFromOrigin.x, c.h.y + da.get("cotton_large").offsetFromOrigin.y, X.randomNumber(5, 8)),
                            this.removeEntity("object", a));
                            break;
                        case "cotton_small":
                        case "flower_red_monocot":
                        case "grass_double":
                        case "mushroom_tall":
                            c.h.hitAnimation = Math.max(2, c.h.hitAnimation - .5);
                            c.h.health < da.get(c.h.type).maxHealth && (c.h.health += .01);
                            "dirt_grass" != this.world.getFG(Math.floor(c.h.x), Math.ceil(c.h.y) - 1) && "dirt" != this.world.getFG(Math.floor(c.h.x), Math.ceil(c.h.y) - 1) && (c.h.health = 0);
                            0 >= c.h.health && ("cotton_small" == c.h.type && this.world.addDrop(!1, "cotton", c.h.x + da.get("cotton_small").offsetFromOrigin.x, c.h.y + da.get("cotton_small").offsetFromOrigin.y, X.randomNumber(2, 3)),
                            this.removeEntity("object", a));
                            break;
                        case "door_wood":
                            c.h.hitAnimation = Math.max(0, c.h.hitAnimation - 3),
                            c.h.health < da.get(c.h.type).maxHealth && (c.h.health += .01),
                            1 != u.get(this.world.getFG(Math.floor(c.h.x + .5), Math.floor(c.h.y - 1))).solid && (c.h.health = 0),
                            0 >= c.h.health && (null != c.h.doorType && this.world.addDrop(!1, c.h.doorType, c.h.x + da.get("door_wood").offsetFromOrigin.x, c.h.y + da.get("door_wood").offsetFromOrigin.y, 1),
                            this.removeEntity("object", a))
                        }
                    } else
                        h = b.entities,
                        Object.prototype.hasOwnProperty.call(h.h, a) && delete h.h[a]
                },
                updateEntity: function(a, b, c, f) {
                    null == c && (c = "x");
                    null == b && (b = "drop");
                    null == a && (a = "drop");
                    null != this.world.entityObject(a).h[b] && (this.world.entityObject(a).h[b].h[c] = f,
                    a = this.world.entityObject(a).h[b].h.lastInChunk,
                    null != a && (a = this.world.createChunk(a.h.x, a.h.y),
                    this.world.appendSavingChunk(a)))
                },
                removeEntity: function(a, b) {
                    null == b && (b = "drop");
                    null == a && (a = "drop");
                    if (null != this.world.entityObject(a).h[b]) {
                        var c = this.world.entityObject(a).h[b].h.lastInChunk;
                        if (null != c) {
                            var f = this.world.createChunk(c.h.x, c.h.y)
                              , h = f.entities;
                            Object.prototype.hasOwnProperty.call(h.h, b) && delete h.h[b];
                            this.world.appendSavingChunk(f);
                            null != f.region ? "drop" == a ? (h = f.region.drops,
                            Object.prototype.hasOwnProperty.call(h.h, b) && delete h.h[b]) : "mob" == a ? (h = f.region.mobs,
                            Object.prototype.hasOwnProperty.call(h.h, b) && delete h.h[b]) : "object" == a && (h = f.region.objects,
                            Object.prototype.hasOwnProperty.call(h.h, b) && delete h.h[b]) : ha.trace("Warning: region at block " + c.h.x + " doesn't exist when removing " + a + " " + b, {
                                fileName: "src/scenes/Scene_Game.hx",
                                lineNumber: 1749,
                                className: "scenes.Scene_Game",
                                methodName: "removeEntity"
                            })
                        }
                    }
                    h = this.world.entityObject(a);
                    Object.prototype.hasOwnProperty.call(h.h, b) && delete h.h[b]
                },
                renderGUI: function() {
                    "creative" != this.world.gameMode && (this.renderBar(this.uiEntity, "horizontal", "heart", this.world.mobs.h["char"].h.health / 10, this.world.mobs.h["char"].h.maxHealth / 10, Math.floor(d.screenWidth / 2 - 168 + 3), 37, !1, 1),
                    100 > this.world.mobs.h["char"].h.air && this.renderBar(this.uiEntity, "horizontal", "air", this.world.mobs.h["char"].h.air / 10, 10, Math.floor(d.screenWidth / 2 + 168 - 3 - 120), 37, !1, 1));
                    0 >= this.statsCounter && (this.fpsStats.unshift({
                        fps: 0,
                        steps: 0,
                        lightsUpdated: 0
                    }),
                    this.statsCounter = 5);
                    this.fpsStats[0].fps += 1E3 * d.Instance.timeDelta / 20 / 5;
                    this.fpsStats[0].steps += d.Instance.performCount;
                    this.fpsStats[0].lightsUpdated += P.chunksLitThisFrame;
                    P.chunksLitThisFrame = 0;
                    for (this.statsCounter--; 250 < this.fpsStats.length; )
                        this.fpsStats.pop();
                    1 == this.world.editLayer ? this.draw(this.uiEntity, C.get("editFG"), 1, 0, 0, 1, d.screenWidth / 2 - 160 - 48 + 4, 4) : 2 == this.world.editLayer && this.draw(this.uiEntity, C.get("editBG"), 1, 0, 0, 1, d.screenWidth / 2 - 160 - 48 + 4, 4);
                    if (this.currentInventory.type != qb.CLOSED)
                        this.renderInventory(),
                        d.Instance.mouse.x >= d.screenWidth / 2 + 164 && d.Instance.mouse.x <= d.screenWidth / 2 + 180 && 4 <= d.Instance.mouse.y && 20 >= d.Instance.mouse.y ? (this.draw(this.uiEntity, C.get("collapseUp"), 1, 0, 0, 1, d.screenWidth / 2 + 164, 6),
                        1 == d.Instance.mouseDown() && this.showInventory(null, "main")) : this.draw(this.uiEntity, C.get("collapseUp"), 1, 0, 0, 1, d.screenWidth / 2 + 164, 4),
                        this.inventoryAnimation = Math.min(0, Math.ceil(5 * (this.inventoryAnimation + 2) / 6));
                    else {
                        d.Instance.mouse.x >= d.screenWidth / 2 + 164 && d.Instance.mouse.x <= d.screenWidth / 2 + 180 && 4 <= d.Instance.mouse.y && 20 >= d.Instance.mouse.y ? (this.draw(this.uiEntity, C.get("collapseDown"), 1, 0, 0, 1, d.screenWidth / 2 + 164, 6),
                        this.isPaused() || 1 != d.Instance.mouseDown() || this.showInventory(null, "main")) : this.draw(this.uiEntity, C.get("collapseDown"), 1, 0, 0, 1, d.screenWidth / 2 + 164, 4);
                        if (this.debugMenu) {
                            this.drawString("Time: " + Math.floor(10 * this.world.weatherAndTime.timeOfDay) / 10, 5, 5, 15, this.scene, 1, 16777215, 0, 0, !1, 200, 1, "", 30);
                            this.drawString("FPS: " + Math.round(d.Instance.fpsMB2Smoothed), 5, 22, 15, this.scene, 1, 16777215, 0, 0, !1, 200, 1, "", 30);
                            this.drawString("Seed: " + this.world.seed, 5, 39, 15, this.scene, 1, 16777215, 0, 0, !1, 200, 1, "", 30);
                            this.drawString("Biome: " + E.getSpecificBiomeAtX(Math.floor(this.world.mobs.h["char"].h.x), this.world), 5, 56, 15, this.scene, 1, 16777215, 0, 0, !1, 200, 1, "", 30);
                            var a = 0;
                            this.chunkGraph.clearPool();
                            for (var b = this.world.loadedRegions.iterator(); b.hasNext(); ) {
                                var c = b.next()
                                  , f = this.chunkGraph
                                  , h = F.tempDrawVector3.set(d.screenWidth - 10 - 125 + Math.floor(20 * c.x + this.camX / 150 * 20), d.screenHeight - 120 - 30)
                                  , l = F.tempDrawPoints[0].set()
                                  , g = F.tempDrawPoints[1].set()
                                  , y = F.tempDrawPoints[2].set(19, 10)
                                  , m = new p
                                  , k = T.repeatArray([0], 24);
                                m.h.color = k;
                                k = T.repeatArray([c.isLoaded ? 1 : 0, c.genStage / 15, c.generated ? 1 : 0, 1], 6);
                                m.h.colorOffset = k;
                                f.updateQuad(a, h, l, g, y, null, null, m);
                                ++a
                            }
                            f = this.chunkGraph;
                            h = F.tempDrawVector3.set(d.screenWidth - 10 - 125, d.screenHeight - 120 - 30);
                            l = F.tempDrawPoints[0].set();
                            g = F.tempDrawPoints[1].set();
                            y = F.tempDrawPoints[2].set(1, 10);
                            m = new p;
                            k = T.repeatArray([0], 24);
                            m.h.color = k;
                            k = T.repeatArray([1, 0, 0, 1], 6);
                            m.h.colorOffset = k;
                            f.updateQuad(a, h, l, g, y, null, null, m);
                            this.chunkGraph.resetUnusedQuads();
                            this.scene.draw(this.chunkGraph);
                            this.drawString("Biomes loaded: " + a, 5, 73, 15, this.scene, 1, 16777215, 0, 0, !1, 200, 1, "", 30);
                            a = 0;
                            m = Object.keys(this.world.savingChunks.h).length;
                            for (b = 0; b < m; )
                                ++b,
                                ++a;
                            this.drawString("Chunks to save: " + a, 5, 90, 15, this.scene, 1, 16777215, 0, 0, !1, 200, 1, "", 30);
                            a = 0;
                            for (b = this.world.toGenerate.iterator(); b.hasNext(); )
                                b.next(),
                                ++a;
                            this.drawString("Biomes generating: " + a, 5, 107, 15, this.scene, 1, 16777215, 0, 0, !1, 200, 1, "", 30);
                            h = b = 0;
                            m = Math.floor(this.world.mobs.h["char"].h.x / 8) - 4;
                            for (a = Math.floor(this.world.mobs.h["char"].h.x / 8) + 4 + 1; m < a; )
                                for (l = m++,
                                c = Math.floor(this.world.mobs.h["char"].h.y / 8) - 4,
                                f = Math.floor(this.world.mobs.h["char"].h.y / 8) + 4 + 1; c < f; )
                                    if (g = c++,
                                    null != this.world.worldChunks.h[null == l ? "null" : "" + l] && null != this.world.worldChunks.h[null == l ? "null" : "" + l].h[null == g ? "null" : "" + g] && null != this.world.worldChunks.h[null == l ? "null" : "" + l].h[null == g ? "null" : "" + g].entities) {
                                        g = this.world.worldChunks.h[null == l ? "null" : "" + l].h[null == g ? "null" : "" + g].entities.h;
                                        y = Object.keys(g);
                                        k = y.length;
                                        for (var L = 0; L < k; ) {
                                            var v = g[y[L++]];
                                            ++h;
                                            "mob" == v.type && ++b
                                        }
                                    }
                            this.drawString("Entities in nearest 16 chunks: " + h, 5, 124, 15, this.scene, 1, 16777215, 0, 0, !1, 400, 1, "", 30);
                            this.drawString("Mobs in nearest 16 chunks: " + b, 5, 141, 15, this.scene, 1, 16777215, 0, 0, !1, 400, 1, "", 30);
                            a = 0;
                            m = Object.keys(this.world.drops.h).length;
                            for (b = 0; b < m; )
                                ++b,
                                ++a;
                            this.drawString("Loaded drops: " + a, 5, 158, 15, this.scene, 1, 16777215, 0, 0, !1, 400, 1, "", 30);
                            a = 0;
                            m = Object.keys(this.world.mobs.h).length;
                            for (b = 0; b < m; )
                                ++b,
                                ++a;
                            this.drawString("Loaded mobs: " + a, 5, 175, 15, this.scene, 1, 16777215, 0, 0, !1, 400, 1, "", 30);
                            a = 0;
                            m = Object.keys(this.world.objects.h).length;
                            for (b = 0; b < m; )
                                ++b,
                                ++a;
                            this.drawString("Loaded objects: " + a, 5, 192, 15, this.scene, 1, 16777215, 0, 0, !1, 400, 1, "", 30);
                            this.drawString("Position: X:" + Math.round(10 * this.world.mobs.h["char"].h.x) / 10 + ", Y:" + Math.round(10 * this.world.mobs.h["char"].h.y) / 10, 5, 209, 15, this.scene, 1, 16777215, 0, 0, !1, 300, 1, "", 30);
                            this.drawString("Speed: X:" + Math.round(10 * this.world.mobs.h["char"].h.xSpeed) / 10 + ", Y:" + Math.round(10 * this.world.mobs.h["char"].h.ySpeed) / 10, 5, 226, 15, this.scene, 1, 16777215, 0, 0, !1, 200, 1, "", 30);
                            f = this.statsGraph;
                            h = F.tempDrawVector3.set(d.screenWidth - 10 - this.fpsStats.length, d.screenHeight - 100 - 30);
                            l = F.tempDrawPoints[0].set();
                            g = F.tempDrawPoints[1].set();
                            y = F.tempDrawPoints[2].set(this.fpsStats.length, 90);
                            m = new p;
                            k = T.repeatArray([0], 24);
                            m.h.color = k;
                            k = T.repeatArray([0, 0, 0, 1], 6);
                            m.h.colorOffset = k;
                            f.updateQuad(0, h, l, g, y, null, null, m);
                            m = 0;
                            for (a = this.fpsStats.length; m < a; )
                                b = m++,
                                f = this.statsGraph,
                                h = F.tempDrawVector3.set(d.screenWidth - 11 - b, d.screenHeight - 100 - 15 * this.fpsStats[b].fps),
                                l = F.tempDrawPoints[0].set(),
                                g = F.tempDrawPoints[1].set(),
                                y = F.tempDrawPoints[2].set(1, 15 * this.fpsStats[b].fps),
                                c = new p,
                                k = T.repeatArray([0], 24),
                                c.h.color = k,
                                k = T.repeatArray([1, T.clamp(0, 1, 1 - this.fpsStats[b].fps), 0, 1], 6),
                                c.h.colorOffset = k,
                                f.updateQuad(1 + 3 * b, h, l, g, y, null, null, c),
                                c = this.statsGraph,
                                h = F.tempDrawVector3.set(d.screenWidth - 11 - b, d.screenHeight - 70 - this.fpsStats[b].steps),
                                l = F.tempDrawPoints[0].set(),
                                g = F.tempDrawPoints[1].set(),
                                y = F.tempDrawPoints[2].set(1, this.fpsStats[b].steps),
                                f = new p,
                                k = T.repeatArray([0], 24),
                                f.h.color = k,
                                k = T.repeatArray([0, 1, 1, 1], 6),
                                f.h.colorOffset = k,
                                c.updateQuad(3 * b + 2, h, l, g, y, null, null, f),
                                c = this.statsGraph,
                                f = F.tempDrawVector3.set(d.screenWidth - 11 - b, d.screenHeight - 40 - this.fpsStats[b].lightsUpdated),
                                h = F.tempDrawPoints[0].set(),
                                l = F.tempDrawPoints[1].set(),
                                g = F.tempDrawPoints[2].set(1, this.fpsStats[b].lightsUpdated),
                                y = new p,
                                k = T.repeatArray([0], 24),
                                y.h.color = k,
                                k = T.repeatArray([1, 0, 1, 1], 6),
                                y.h.colorOffset = k,
                                c.updateQuad(3 * b + 3, f, h, l, g, null, null, y);
                            this.scene.draw(this.statsGraph)
                        }
                        this.renderSmallInventory()
                    }
                    this.isPaused() || (this.draggingItem.x = Math.floor(d.Instance.mouse.x),
                    this.draggingItem.y = Math.floor(d.Instance.mouse.y));
                    0 < this.draggingItem.item.count && (this.draw(this.draggerEntity, C.get("transparentInventoryBlock"), 32, 0, 0, 32, this.draggingItem.x - 16, this.draggingItem.y - 16),
                    this.renderInventorySlot(this.draggingItem.item, Math.floor(this.draggingItem.x - 16), Math.floor(this.draggingItem.y - 16), "draggingItem", this.draggerEntity, 25));
                    "" == this.tooltip || this.isPaused() || (m = this.drawString(this.tooltip, d.Instance.mouse.x + 16, d.Instance.mouse.y + 16, 15, this.scene, 1, 16777215, 0, 0, !1, 200, 1, "", 52),
                    this.fillRect(this.tooltipEntity, F.tempDrawRectangles[0].set(d.Instance.mouse.x + 16 - 5, d.Instance.mouse.y + 16 - 5, Math.floor(.4545454545454546 * m.calculatedWidth) + 10, 25), -16764075),
                    this.setTooltip(""))
                },
                getStackSize: function(a) {
                    return null != u.get(a).stackSize ? u.get(a).stackSize : 100
                },
                sameItems: function(a, b) {
                    if (a.type != b.type)
                        return !1;
                    if (null != a.data)
                        for (var c = Object.keys(a.data.h), f = c.length, h = 0; h < f; ) {
                            var d = c[h++];
                            if (a.data.h[d] != (null == b.data ? null : b.data.h[d]))
                                return !1
                        }
                    if (null != b.data)
                        for (c = Object.keys(b.data.h),
                        f = c.length,
                        h = 0; h < f; )
                            if (d = c[h++],
                            b.data.h[d] != (null == a.data ? null : a.data.h[d]))
                                return !1;
                    return !0
                },
                addToInventory: function(a, b) {
                    null == b && (b = -1);
                    a = new Z(a.h.type,a.h.count,a.h.data);
                    if (-1 != b)
                        for (; 0 < a.count; )
                            if ("air" == this.world.inventory[b].type || 0 == this.world.inventory[b].count) {
                                this.world.inventory[b].type = a.type;
                                this.world.inventory[b].data = a.data;
                                var c = this.world.inventory[b];
                                c.count++;
                                a.count--
                            } else if (this.sameItems(this.world.inventory[b], a) && this.world.inventory[b].count < this.getStackSize(a.type))
                                this.world.inventory[b].type = a.type,
                                c = this.world.inventory[b],
                                c.count++,
                                a.count--;
                            else {
                                a.count = 0;
                                break
                            }
                    else {
                        for (b = 0; 40 > b; ) {
                            for (var f = b++; 0 < a.count; )
                                if (this.sameItems(this.world.inventory[f], a) && this.world.inventory[f].count < this.getStackSize(a.type))
                                    this.world.inventory[f].type = a.type,
                                    c = this.world.inventory[f],
                                    c.count++,
                                    a.count--;
                                else
                                    break;
                            if (0 == a.count)
                                return 0
                        }
                        for (b = 0; 40 > b; ) {
                            for (f = b++; 0 < a.count; )
                                if ("air" == this.world.inventory[f].type || 0 == this.world.inventory[f].count)
                                    this.world.inventory[f].type = a.type,
                                    this.world.inventory[f].data = a.data,
                                    c = this.world.inventory[f],
                                    c.count++,
                                    a.count--;
                                else if (this.sameItems(this.world.inventory[f], a) && this.world.inventory[f].count < this.getStackSize(a.type))
                                    this.world.inventory[f].type = a.type,
                                    c = this.world.inventory[f],
                                    c.count++,
                                    a.count--;
                                else
                                    break;
                            if (0 == a.count)
                                return 0
                        }
                    }
                    return a.count
                },
                renderSmallInventory: function() {
                    var a = Math.floor((d.screenWidth - 330) / 2);
                    this.draw(this.uiEntity, C.get("inventoryGraphic"), 1, 0, 0, 1, a, -98);
                    for (var b = 0; 10 > b; ) {
                        var c = b++;
                        this.world.selectedInventoryItem == c ? this.draw(this.uiEntity, C.get("inventoryBox2"), 1, 0, 0, 1, a + R.inventorySlotCoords[c].x, 0) : this.draw(this.uiEntity, C.get("inventoryBox1"), 1, 0, 0, 1, a + R.inventorySlotCoords[c].x, 0);
                        this.renderInventorySlot(this.world.inventory[c], a + R.inventorySlotCoords[c].x, 0, "inventory" + c)
                    }
                },
                renderInventory: function() {
                    this.draw(this.uiEntity, C.get("inventoryGraphic"), 1, 0, 0, 1, (d.screenWidth - 330) / 2, this.inventoryAnimation);
                    for (var a = 0; 4 > a; )
                        for (var b = a++, c = 0; 10 > c; ) {
                            var f = c++ + 10 * b
                              , h = Math.floor((d.screenWidth - 330) / 2)
                              , l = Math.floor(this.inventoryAnimation);
                            h += R.inventorySlotCoords[f].x;
                            l += R.inventorySlotCoords[f].y;
                            this.draw(this.uiEntity, C.get("inventoryBox1"), 1, 0, 0, 1, h, l);
                            this.renderInventorySlot(this.world.inventory[f], h, l, "inventory" + f);
                            d.Instance.waitingForMouseUp || this.handleInventoryMouse(h, l, this.world.inventory, f);
                            0 >= this.draggingItem.item.count && (this.draggingItem.item = R.emptyItem());
                            0 >= this.world.inventory[f].count && (this.world.inventory[f] = R.emptyItem())
                        }
                    "creative" == this.world.gameMode && ("air" != this.draggingItem.item.type && d.Instance.mouse.x < d.screenWidth / 2 + 205 && d.Instance.mouse.x > d.screenWidth / 2 + 181 && 124 > d.Instance.mouse.y && 100 < d.Instance.mouse.y ? (this.draw(this.uiEntity, C.get("trashOpen"), 1, 0, 0, 1, d.screenWidth / 2 + 181, 98),
                    1 == d.Instance.mouseDown() && (this.draggingItem.item = R.emptyItem())) : this.draw(this.uiEntity, C.get("trashClosed"), 1, 0, 0, 1, d.screenWidth / 2 + 181, 100));
                    if (this.currentInventory.type == qb.MAIN) {
                        l = Math.floor(d.screenWidth / 2 - 128);
                        this.draw(this.uiEntity, C.get("craftingBG"), 1, 0, 0, 1, l, 150);
                        this.drawString(this.capFirst(x.get("CRAFTING")), l, 130, 20, this.scene, 1, 16777215, 0, 0, !1, 300, 1, "", 23);
                        a = 0;
                        for (c = Math.floor(Math.min(4, this.inCrafting.length) + 1); a < c; )
                            f = a++,
                            h = Math.floor(l + 4 + 37 * f),
                            this.draw(this.uiEntity, C.get("inventoryBox1"), 1, 0, 0, 1, h, 154),
                            null != this.inCrafting[f] && "air" != this.inCrafting[f].type ? this.renderInventorySlot(this.inCrafting[f], h, 154, "crafting" + f) : (d.Instance.mouse.x > h && 154 < d.Instance.mouse.y && d.Instance.mouse.x <= h + 32 && 186 >= d.Instance.mouse.y && this.setTooltip(x.get("CRAFT_SLOT")),
                            this.inCrafting.splice(f, 1)),
                            d.Instance.waitingForMouseUp || this.handleInventoryMouse(h, 154, this.inCrafting, f),
                            0 >= this.draggingItem.item.count && (this.draggingItem.item = R.emptyItem()),
                            null != this.inCrafting[f] && 0 >= this.inCrafting[f].count && (this.inCrafting[f] = R.emptyItem());
                        a = f = 0;
                        for (c = D.recipes; a < c.length; ) {
                            b = c[a];
                            ++a;
                            h = 0;
                            for (var g = !1, y = 0, m = b.input; y < m.length; ) {
                                var k = m[y];
                                ++y;
                                g = !1;
                                for (var L = 0; L < k.length; ) {
                                    var v = k[L];
                                    ++L;
                                    for (var z = 0, O = this.inCrafting; z < O.length; ) {
                                        var B = O[z];
                                        ++z;
                                        if (("~" == K.substr(v.type, 0, 1) && 1 == u.inBlockGroup(K.substr(v.type, 1, v.type.length - 1), B.type) || "~" != K.substr(v.type, 0, 1) && v.type == B.type) && v.count <= B.count) {
                                            g = !0;
                                            ++h;
                                            break
                                        }
                                    }
                                    if (g)
                                        break
                                }
                                if (!g)
                                    break
                            }
                            if (g && this.inCrafting.length == h && (++f,
                            h = Math.floor(l + 4 + 37 * (f - 1)),
                            this.draw(this.uiEntity, C.get("inventoryBox1"), 1, 0, 0, 1, h, 194),
                            this.renderInventorySlot(b.output, h, 194, "craftingOutput" + l),
                            d.Instance.mouse.x < h + 32 && d.Instance.mouse.x > h && 226 >= d.Instance.mouse.y && 194 <= d.Instance.mouse.y && (this.setTooltip(this.capFirst(u.get(b.output.type).name)),
                            1 == d.Instance.mouseDown())))
                                if (this.sameItems(b.output, this.draggingItem.item)) {
                                    if (this.getStackSize(b.output.type) >= b.output.count + this.draggingItem.item.count && (this.draggingItem.item.count += b.output.count,
                                    "creative" != this.world.gameMode))
                                        for (h = 0,
                                        b = b.input; h < b.length; )
                                            for (g = b[h],
                                            ++h,
                                            y = 0; y < g.length; )
                                                for (m = g[y],
                                                ++y,
                                                k = 0,
                                                L = this.inCrafting; k < L.length; )
                                                    if (v = L[k],
                                                    ++k,
                                                    "~" == K.substr(m.type, 0, 1) && 1 == u.inBlockGroup(K.substr(m.type, 1, m.type.length - 1), v.type) || "~" != K.substr(m.type, 0, 1) && m.type == v.type) {
                                                        v.count -= m.count;
                                                        break
                                                    }
                                } else if (0 >= this.draggingItem.item.count) {
                                    h = b.output.type;
                                    g = b.output.count;
                                    if (null == b.output.data)
                                        y = null;
                                    else
                                        for (y = new p,
                                        m = Object.keys(b.output.data.h),
                                        k = m.length,
                                        L = 0; L < k; )
                                            v = m[L++],
                                            y.h[v] = b.output.data.h[v];
                                    this.draggingItem.item = new Z(h,g,y);
                                    if ("creative" != this.world.gameMode)
                                        for (h = 0,
                                        b = b.input; h < b.length; )
                                            for (g = b[h],
                                            ++h,
                                            y = 0; y < g.length; )
                                                for (m = g[y],
                                                ++y,
                                                k = 0,
                                                L = this.inCrafting; k < L.length; )
                                                    if (v = L[k],
                                                    ++k,
                                                    "~" == K.substr(m.type, 0, 1) && 1 == u.inBlockGroup(K.substr(m.type, 1, m.type.length - 1), v.type) || "~" != K.substr(m.type, 0, 1) && m.type == v.type) {
                                                        v.count -= m.count;
                                                        break
                                                    }
                                }
                        }
                        0 < this.inCrafting.length && 0 == f && this.drawString(x.get("NO_RECIPES"), l + 4, 198, 15, this.scene, 1, 16777215, 0, 0, !1, 300, 1, "", 23);
                        if ("creative" == this.world.gameMode) {
                            this.draw(this.uiEntity, C.get("creativeInventory"), 1, 0, 0, 1, (d.screenWidth - 330) / 2, 240);
                            for (a = 0; 30 > a; ) {
                                b = a++;
                                y = 30 * this.creativeInventoryPage + b;
                                c = u.creativeInventory[y];
                                if (y >= u.creativeInventory.length)
                                    break;
                                h = Math.floor((d.screenWidth - 330) / 2 + 4 + b % 10 * 32);
                                l = Math.floor(244 + 32 * Math.floor(b / 10));
                                this.draw(this.uiEntity, C.get("inventoryBox1"), 1, 0, 0, 1, h, l);
                                this.renderInventorySlot(c, h, l, "creative" + y);
                                "air" != c.type && d.Instance.mouse.x < h + 32 && d.Instance.mouse.x > h && d.Instance.mouse.y <= l + 32 && d.Instance.mouse.y >= l && (this.setTooltip(this.capFirst(u.get(c.type).name)),
                                1 == d.Instance.mouseDown() && (0 == this.draggingItem.item.count || this.sameItems(c, this.draggingItem.item) ? Q.gt(d.Instance.keyDown(1073742049), 0) || 1 == d.Instance.rightMouseDown() ? (c.type != this.draggingItem.item.type && (y = c.serialize(),
                                this.draggingItem.item = Z.deserialize(y)),
                                this.draggingItem.item.count = this.getStackSize(c.type)) : this.getStackSize(c.type) >= 1 + this.draggingItem.item.count && (c.type != this.draggingItem.item.type ? (c = c.serialize(),
                                this.draggingItem.item = Z.deserialize(c)) : this.draggingItem.item.count++) : Q.gt(d.Instance.keyDown(1073742049), 0) || 1 == d.Instance.rightMouseDown() ? this.draggingItem.item.count-- : this.draggingItem.item.count = 0))
                            }
                            0 < this.creativeInventoryPage && (d.Instance.mouse.x >= d.screenWidth / 2 + 165 - 96 && d.Instance.mouse.x <= d.screenWidth / 2 + 165 - 96 + 32 && d.Instance.mouse.y >= 240 + C.get("creativeInventory").height && d.Instance.mouse.y <= 240 + C.get("creativeInventory").height + 32 ? (this.draw(this.uiEntity, C.get("arrowLeftLong"), 1, 0, 0, 1, d.screenWidth / 2 + 165 - 96, 240 + C.get("creativeInventory").height + 2),
                            1 == d.Instance.mouseDown() && this.creativeInventoryPage--) : this.draw(this.uiEntity, C.get("arrowLeftLong"), 1, 0, 0, 1, d.screenWidth / 2 + 165 - 96, 240 + C.get("creativeInventory").height));
                            this.drawString("" + (this.creativeInventoryPage + 1), d.screenWidth / 2 + 165 - 64, 240 + C.get("creativeInventory").height - 3, 16, this.scene, 1, 16777215, 0, 0, !0, 32, 1, "", 23);
                            this.creativeInventoryPage < Math.floor(u.creativeInventory.length / 30) && (d.Instance.mouse.x >= d.screenWidth / 2 + 165 - 32 && d.Instance.mouse.x <= d.screenWidth / 2 + 165 - 32 + 32 && d.Instance.mouse.y >= 240 + C.get("creativeInventory").height && d.Instance.mouse.y <= 240 + C.get("creativeInventory").height + 32 ? (this.draw(this.uiEntity, C.get("arrowRightLong"), 1, 0, 0, 1, d.screenWidth / 2 + 165 - 32, 240 + C.get("creativeInventory").height + 2),
                            1 == d.Instance.mouseDown() && this.creativeInventoryPage++) : this.draw(this.uiEntity, C.get("arrowRightLong"), 1, 0, 0, 1, d.screenWidth / 2 + 165 - 32, 240 + C.get("creativeInventory").height))
                        }
                    } else if (this.currentInventory.type == qb.CHEST) {
                        if (b = this.world.objects.h[this.currentInventory.id],
                        null != b)
                            for (m = b.h.items,
                            this.draw(this.uiEntity, C.get("chestBG"), 1, 0, 0, 1, (d.screenWidth - 330) / 2, 170),
                            this.drawString(this.capFirst(x.get("CHEST_STORAGE")), (d.screenWidth - 330) / 2, 150, 20, this.scene, 1, 16777215, 0, 0, !1, 300, 1, "", 23),
                            a = 0; 10 > a; )
                                for (y = a++,
                                c = 0; 2 > c; )
                                    f = y + 10 * c++,
                                    g = m[f],
                                    null == g && (g = m[f] = R.emptyItem()),
                                    h = Math.floor((d.screenWidth - 330) / 2 + R.inventorySlotCoords[f + 40 - 20].x),
                                    l = Math.floor(173 + R.inventorySlotCoords[f + 40 - 20].y),
                                    this.draw(this.uiEntity, C.get("inventoryBox1"), 1, 0, 0, 1, h, l),
                                    this.renderInventorySlot(g, h, l, "chest" + y),
                                    d.Instance.waitingForMouseUp || this.handleInventoryMouse(h, l, m, f, b),
                                    0 >= this.draggingItem.item.count && (this.draggingItem.item = R.emptyItem()),
                                    "air" != g.type && 0 >= g.count && (m[f] = R.emptyItem())
                    } else if (this.currentInventory.type == qb.CAMPFIRE && (this.draw(this.uiEntity, C.get("campfireBG"), 1, 0, 0, 1, Math.floor((d.screenWidth - 103) / 2), 170),
                    this.drawString(this.capFirst(x.get("COOKING")), Math.floor((d.screenWidth - 103) / 2), 150, 20, this.scene, 1, 16777215, 0, 0, !1, 300, 1, "", 23),
                    b = this.world.objects.h[this.currentInventory.id],
                    null != b)) {
                        k = b.h.input;
                        c = b.h.currentFuel;
                        y = b.h.fuel;
                        m = b.h.output;
                        for (a = 0; 3 > a; ) {
                            f = a++;
                            g = k[f];
                            null == g && (g = k[f] = R.emptyItem());
                            h = Math.floor((d.screenWidth - 103) / 2 + 4 + 32 * f);
                            l = 175;
                            this.draw(this.uiEntity, C.get("inventoryBox1"), 1, 0, 0, 1, h, l);
                            "air" != g.type && (this.renderInventorySlot(g, h, l, "campfireInput" + f),
                            this.copyPixels(this.uiEntity, C.get("itemBarGrey"), F.tempDrawRectangles[0].set(0, 0, C.get("itemBarGrey").width, 4), F.tempDrawPoints[0].set(h + 3, l + 3)),
                            null != u.get(g.type).smelt && this.copyPixels(this.uiEntity, C.get("itemBarGreen"), F.tempDrawRectangles[0].set(0, 0, C.get("itemBarGreen").width * (b.h.itemTimers[f] / u.get(g.type).smelt.amount), 4), F.tempDrawPoints[0].set(h + 3, l + 3)));
                            if (0 >= this.draggingItem.item.count || null != u.get(this.draggingItem.item.type).smelt)
                                d.Instance.waitingForMouseUp || this.handleInventoryMouse(h, l, k, f, b),
                                "air" == g.type && d.Instance.mouse.x <= h + 32 && d.Instance.mouse.x > h && d.Instance.mouse.y <= l + 32 && d.Instance.mouse.y > l && this.setTooltip(x.get("COOK_SLOT"));
                            0 >= this.draggingItem.item.count && (this.draggingItem.item = R.emptyItem());
                            "air" != g.type && 0 >= g.count && (k[f] = R.emptyItem())
                        }
                        for (a = 0; 3 > a; ) {
                            f = a++;
                            l = y[f];
                            null == l && (l = y[f] = R.emptyItem());
                            h = Math.floor((d.screenWidth - 103) / 2 + 4 + 32 * f);
                            this.draw(this.uiEntity, C.get("inventoryBox1"), 1, 0, 0, 1, h, 214);
                            g = c[f];
                            if ("air" != l.type)
                                this.renderInventorySlot(l, h, 214, "campfireFuel" + f);
                            else if ("air" != g.type && 0 < b.h.fuelTimers[f])
                                try {
                                    this.renderItem(g, F.tempMatrix.reset().translate(h + 8, 222), this.uiEntity, 1291845631)
                                } catch (te) {
                                    ha.trace("(campfire current fuel) Bad texture " + g.type, {
                                        fileName: "src/scenes/Scene_Game.hx",
                                        lineNumber: 2286,
                                        className: "scenes.Scene_Game",
                                        methodName: "renderInventory"
                                    }),
                                    g = c[f] = R.emptyItem()
                                }
                            0 < b.h.fuelTimers[f] && (this.copyPixels(this.uiEntity, C.get("itemBarGrey"), F.tempDrawRectangles[0].set(0, 0, C.get("itemBarGrey").width, 4), F.tempDrawPoints[0].set(h + 3, 217)),
                            null != u.get(g.type).fuel && this.copyPixels(this.uiEntity, C.get("itemBarRed"), F.tempDrawRectangles[0].set(0, 0, C.get("itemBarRed").width * (b.h.fuelTimers[f] / u.get(g.type).fuel.amount), 4), F.tempDrawPoints[0].set(h + 3, 217)));
                            if (0 >= this.draggingItem.item.count || null != u.get(this.draggingItem.item.type).fuel)
                                d.Instance.waitingForMouseUp || this.handleInventoryMouse(h, 214, y, f, b),
                                "air" == l.type && d.Instance.mouse.x <= h + 32 && d.Instance.mouse.x > h && 246 >= d.Instance.mouse.y && 214 < d.Instance.mouse.y && this.setTooltip(x.get("FUEL_SLOT"));
                            0 >= this.draggingItem.item.count && (this.draggingItem.item = R.emptyItem());
                            "air" != l.type && 0 >= l.count && (y[f] = R.emptyItem())
                        }
                        for (a = 0; 3 > a; ) {
                            f = a++;
                            g = m[f];
                            null == g && (g = m[f] = R.emptyItem());
                            h = Math.floor((d.screenWidth - 103) / 2 + 4 + 32 * f);
                            this.draw(this.uiEntity, C.get("inventoryBox1"), 1, 0, 0, 1, h, 253);
                            this.renderInventorySlot(g, h, 253, "campfireOutput" + f);
                            if (0 >= this.draggingItem.item.count || null != u.get(this.draggingItem.item.type).smelt)
                                d.Instance.waitingForMouseUp || this.handleInventoryMouse(h, 253, m, f, b);
                            0 >= this.draggingItem.item.count && (this.draggingItem.item = R.emptyItem());
                            "air" != g.type && 0 >= g.count && (m[f] = R.emptyItem())
                        }
                    }
                },
                handleInventoryMouse: function(a, b, c, f, h) {
                    if (d.Instance.mouse.x <= a + 32 && d.Instance.mouse.x > a && d.Instance.mouse.y <= b + 32 && d.Instance.mouse.y > b)
                        if (null != c[f] && "air" != c[f].type) {
                            if (this.setTooltip(this.capFirst(u.get(c[f].type).name)),
                            1 == d.Instance.mouseDown() || 1 == d.Instance.rightMouseDown())
                                this.sameItems(c[f], this.draggingItem.item) || "air" == this.draggingItem.item.type ? Q.gt(d.Instance.keyDown(1073742049), 0) || 1 == d.Instance.rightMouseDown() ? 1 <= this.draggingItem.item.count ? this.getStackSize(c[f].type) >= c[f].count + 1 && (this.draggingItem.item.count--,
                                c[f].count++,
                                null != h && (this.world.createChunk(Math.floor(h.h.x / 8), Math.floor(h.h.y / 8)).region.needsSave = !0)) : (a = c[f].count / 2,
                                b = c[f].serialize(),
                                this.draggingItem.item = Z.deserialize(b),
                                this.draggingItem.item.count = Math.ceil(a),
                                c[f].count = Math.floor(a),
                                null != h && (this.world.createChunk(Math.floor(h.h.x / 8), Math.floor(h.h.y / 8)).region.needsSave = !0)) : (1 > this.draggingItem.item.count ? (b = c[f].serialize(),
                                this.draggingItem.item = Z.deserialize(b),
                                c[f] = R.emptyItem()) : this.getStackSize(c[f].type) >= c[f].count + this.draggingItem.item.count ? (c[f].count += this.draggingItem.item.count,
                                this.draggingItem.item = R.emptyItem()) : (this.draggingItem.item.count -= this.getStackSize(c[f].type) - c[f].count,
                                c[f].count = this.getStackSize(c[f].type)),
                                null != h && (this.world.createChunk(Math.floor(h.h.x / 8), Math.floor(h.h.y / 8)).region.needsSave = !0)) : (a = Z.deserialize(c[f].serialize()),
                                c[f] = Z.deserialize(this.draggingItem.item.serialize()),
                                this.draggingItem.item = a,
                                null != h && (this.world.createChunk(Math.floor(h.h.x / 8), Math.floor(h.h.y / 8)).region.needsSave = !0))
                        } else
                            1 <= this.draggingItem.item.count && (1 == d.Instance.mouseDown() || 1 == d.Instance.rightMouseDown()) && (Q.gt(d.Instance.keyDown(1073742049), 0) || 1 == d.Instance.rightMouseDown() ? (c[f] = Z.deserialize(this.draggingItem.item.serialize()),
                            c[f].count = 1,
                            this.draggingItem.item.count--) : (c[f] = Z.deserialize(this.draggingItem.item.serialize()),
                            this.draggingItem.item = R.emptyItem()))
                },
                renderBar: function(a, b, c, f, h, d, l, g, p) {
                    null == p && (p = 1);
                    null == g && (g = !1);
                    null == l && (l = 0);
                    null == d && (d = 0);
                    null == h && (h = 100);
                    null == f && (f = 100);
                    null == c && (c = "heart");
                    null == b && (b = "horizontal");
                    var y = 0;
                    g && (y = Math.floor(12 * -h / 2 * p));
                    g = 1;
                    for (var q = Math.floor(h + 1); g < q; ) {
                        var m = g++;
                        if ("horizontal" == b) {
                            h = Math.floor(d + 12 * (m - 1) * p + y);
                            var k = l
                        } else
                            h = d,
                            k = Math.floor(l + 12 * (m - 1) * p + y);
                        f + .5 > m ? this.draw(a, C.get(c + "Full"), p, 0, 0, p, h, k) : f + 1 > m ? this.draw(a, C.get(c + "Half"), p, 0, 0, p, h, k) : this.draw(a, C.get(c + "Empty"), p, 0, 0, p, h, k)
                    }
                },
                setTooltip: function(a) {
                    this.tooltip = a
                },
                capFirst: function(a) {
                    return null == a || "" == a ? "" : K.substr(a, 0, 1).toUpperCase() + K.substr(a, 1, a.length - 1)
                },
                enterWorld: function(a, b, c) {
                    null == b && (b = 50);
                    a || (this.world.mobs.h["char"].h.x = .5 + b,
                    null == c ? (a = this.world.mobs.h["char"],
                    c = ja.__cast(this.world.getFGHeight(b), $d),
                    a.h.y = c,
                    this.world.spawnSpot.set(b, this.world.getFGHeight(b))) : (this.world.mobs.h["char"].h.y = ja.__cast(c, $d),
                    this.world.spawnSpot.set(b, c)),
                    this.camX = -this.world.mobs.h["char"].h.x,
                    this.camY = -this.world.mobs.h["char"].h.y,
                    this.world.saveAll())
                },
                isPaused: function(a) {
                    null == a && (a = !1);
                    return this.paused || this.loadingImportantChunks || a && this.currentInventory.type != qb.CLOSED ? !0 : !1
                },
                showInventory: function(a, b) {
                    null == b && (b = "");
                    null == a && (a = qb.MAIN);
                    for (var c = this.inventoryAnimation = 0, f = this.inCrafting; c < f.length; ) {
                        var h = f[c];
                        ++c;
                        this.world.addDrop(!1, h.type, this.world.mobs.h["char"].h.x, this.world.mobs.h["char"].h.y, h.count, h.data)
                    }
                    0 < this.draggingItem.item.count && this.world.addDrop(!1, this.draggingItem.item.type, this.world.mobs.h["char"].h.x, this.world.mobs.h["char"].h.y, this.draggingItem.item.count, this.draggingItem.item.data);
                    this.inCrafting = [];
                    this.draggingItem.item = R.emptyItem();
                    this.currentInventory.type == a ? (this.currentInventory.type = qb.CLOSED,
                    this.currentInventory.id = "") : a == qb.MAIN ? (this.currentInventory.type != qb.CLOSED ? this.currentInventory.type = qb.CLOSED : (this.inventoryAnimation = -96,
                    this.currentInventory.type = a),
                    this.currentInventory.id = "") : a == qb.CHEST || a == qb.CAMPFIRE ? (d.Instance.waitingForMouseUp = !0,
                    this.inventoryAnimation = -96,
                    this.currentInventory.type = a,
                    this.currentInventory.id = b) : (this.currentInventory.type = qb.CLOSED,
                    this.currentInventory.id = "")
                },
                checkBlock: function(a, b) {
                    var c = this.world.getFG(a, b)
                      , f = u.get(c).uniqueUpdate;
                    if (null != f && 1 != this.dontUpdate.h[a + "x" + b] && (0 == f || Math.floor((this.world.gameTime - d.Instance.timeDelta) / f) != Math.floor(this.world.gameTime / f)))
                        switch (c) {
                        case "bush_desert":
                            "sand" != this.world.getFG(a, b - 1) && "sand_gravel" != this.world.getFG(a, b - 1) && this.world.mineFG(a, b, !0);
                            break;
                        case "cactus":
                            "sand" == this.world.getFG(a, b - 1) || "sand_gravel" == this.world.getFG(a, b - 1) || "cactus" == this.world.getFG(a, b - 1) && "true" != this.world.getDataFG(a, b - 1, "flowered") || "right" != this.world.getDataFG(a, b, "orientation") && "cactus" == this.world.getFG(a - 1, b) && ("sand" == this.world.getFG(a - 1, b - 1) || "sand_gravel" == this.world.getFG(a - 1, b - 1) || "cactus" == this.world.getFG(a - 1, b - 1)) && "cactus" == this.world.getFG(a - 1, b + 1) && "cactus" == this.world.getFG(a, b + 1) || "left" != this.world.getDataFG(a, b, "orientation") && "cactus" == this.world.getFG(a + 1, b) && ("sand" == this.world.getFG(a + 1, b - 1) || "sand_gravel" == this.world.getFG(a + 1, b - 1) || "cactus" == this.world.getFG(a + 1, b - 1)) && "cactus" == this.world.getFG(a + 1, b + 1) && "cactus" == this.world.getFG(a, b + 1) || !this.world.mineFG(a, b, !0) || (this.checkBlock(a, b + 1),
                            this.checkBlock(a + 1, b),
                            this.checkBlock(a - 1, b));
                            "true" != this.world.getDataFG(a, b, "flowered") && (.005 > Math.random() / d.Instance.timeDelta && "air" == this.world.getFG(a, b + 1) && "cactus" != this.world.getFG(a, b + 2) && (this.world.setFG(a, b + 1, "cactus"),
                            .004 > Math.random() && this.world.setDataFG(a, b + 1, "flowered", "true")),
                            .002 > Math.random() / d.Instance.timeDelta && "cactus" == this.world.getFG(a, b - 1) && "cactus" == this.world.getFG(a, b + 1) && "air" == this.world.getFG(a - 1, b - 1) && "air" == this.world.getFG(a - 1, b) && "air" == this.world.getFG(a - 1, b + 1) && "cactus" != this.world.getFG(a - 1, b + 2) && ("cactus" != this.world.getFG(a - 2, b) || 1 != u.get(this.world.getFG(a - 2, b - 1)).solid) && (this.world.setFG(a - 1, b, "cactus"),
                            this.world.setDataFG(a - 1, b, "orientation", "right"),
                            this.world.setFG(a - 1, b + 1, "cactus"),
                            .004 > Math.random() && this.world.setDataFG(a - 1, b + 1, "flowered", "true")),
                            .002 > Math.random() / d.Instance.timeDelta && "cactus" == this.world.getFG(a, b - 1) && "cactus" == this.world.getFG(a, b + 1) && "air" == this.world.getFG(a + 1, b - 1) && "air" == this.world.getFG(a + 1, b) && "air" == this.world.getFG(a + 1, b + 1) && "cactus" != this.world.getFG(a + 1, b + 2) && ("cactus" != this.world.getFG(a + 2, b) || 1 != u.get(this.world.getFG(a + 2, b - 1)).solid) && (this.world.setFG(a + 1, b, "cactus"),
                            this.world.setDataFG(a + 1, b, "orientation", "left"),
                            this.world.setFG(a + 1, b + 1, "cactus"),
                            .004 > Math.random() && this.world.setDataFG(a + 1, b + 1, "flowered", "true")));
                            break;
                        case "bush":
                        case "cotton":
                        case "flower_bulb":
                        case "flower_patch_red":
                        case "flower_patch_yellow":
                        case "grass_medium":
                        case "grass_short":
                        case "grass_tall":
                        case "sapling_birch":
                        case "sapling_orange":
                        case "sapling_pine":
                            "dirt" != this.world.getFG(a, b - 1) && "dirt_grass" != this.world.getFG(a, b - 1) && "dirt_gravel" != this.world.getFG(a, b - 1) && this.world.mineFG(a, b, !0);
                            break;
                        case "dirt":
                            .01 > Math.random() && ("dirt_grass" == this.world.getFG(a - 1, b) || "dirt_grass" == this.world.getFG(a + 1, b) || "dirt_grass" == this.world.getFG(a - 1, b - 1) || "dirt_grass" == this.world.getFG(a + 1, b - 1) || "dirt_grass" == this.world.getFG(a - 1, b + 1) || "dirt_grass" == this.world.getFG(a + 1, b + 1) || this.world.getFGHeight(a) == b + 1) && u.get(this.world.getFG(a, b + 1)).isTransparent && this.world.setFG(a, b, "dirt_grass");
                            break;
                        case "dirt_grass":
                            .01 > Math.random() && !u.get(this.world.getFG(a, b + 1)).isTransparent && this.world.setFG(a, b, "dirt");
                            0 == X.randomNumber(0, 20) && this.addParticles("dust2", a + .5, b + 1, 1, c, !1, X.randomNumber(240, 480), X.randomNumber(-10, 10) / 50, .08);
                            break;
                        case "gravel":
                        case "sand":
                        case "sand_gravel":
                            null != u.get(this.world.getFG(a, b - 1)).replace && this.world.setFG(a, b - 1, this.world.getFG(a, b)) && this.world.mineFG(a, b) && (this.checkBlock(a, b + 1),
                            this.dontUpdate.h[a + "x" + (b - 1)] = !0);
                            break;
                        case "lava":
                            c = this.world.createChunk(Math.floor(a / 8), Math.floor(b / 8));
                            this.world.appendSavingChunk(c);
                            Math.floor(T.modulus(d.Instance.lastTime / 1E3 - f, 4) / 4 * 4) != Math.floor(T.modulus(d.Instance.lastTime / 1E3, 4) / 4 * 4) && (c.isRenderable = !1);
                            null == this.world.getDataFG(a, b, "liquidLevel") && (this.world.setDataFG(a, b, "liquidLevel", "0"),
                            this.world.setDataFG(a, b, "liquidDirection", "0"));
                            if ("0" == this.world.getDataFG(a, b, "liquidLevel") && "0" == this.world.getDataFG(a, b, "liquidDirection")) {
                                if ("water" == this.world.getFG(a, b - 1) || "water" == this.world.getFG(a, b + 1) || "water" == this.world.getFG(a + 1, b) || "water" == this.world.getFG(a - 1, b)) {
                                    this.world.setFG(a, b, "obsidian");
                                    break
                                }
                            } else if ("water" == this.world.getFG(a, b - 1) || "water" == this.world.getFG(a, b + 1) || "water" == this.world.getFG(a + 1, b) || "water" == this.world.getFG(a - 1, b)) {
                                this.world.setFG(a, b, "cobblestone");
                                break
                            }
                            c = !1;
                            1 == u.get(this.world.getFG(a, b - 1)).liquidReplace ? this.world.mineFG(a, b - 1, !0) && this.world.setFG(a, b - 1, "lava") && (this.world.setDataFG(a, b - 1, "liquidLevel", "1"),
                            this.world.setDataFG(a, b - 1, "liquidDirection", "0"),
                            this.dontUpdate.h[a + "x" + (b - 1)] = !0) : 1 != u.get(this.world.getFG(a, b - 1)).liquid && (c = !0);
                            1 >= H.parseInt(this.world.getDataFG(a, b, "liquidLevel")) ? (this.world.setDataFG(a, b, "liquidDirection", "0"),
                            c && 1 == u.get(this.world.getFG(a - 1, b)).liquidReplace && this.world.mineFG(a - 1, b, !0) && this.world.setFG(a - 1, b, "lava") && (this.world.setDataFG(a - 1, b, "liquidLevel", "2"),
                            this.world.setDataFG(a - 1, b, "liquidDirection", "-1")),
                            c && 1 == u.get(this.world.getFG(a + 1, b)).liquidReplace && this.world.mineFG(a + 1, b, !0) && this.world.setFG(a + 1, b, "lava") && (this.world.setDataFG(a + 1, b, "liquidLevel", "2"),
                            this.world.setDataFG(a + 1, b, "liquidDirection", "1"),
                            this.dontUpdate.h[a + 1 + "x" + b] = !0),
                            "1" == this.world.getDataFG(a, b, "liquidLevel") && "lava" != this.world.getFG(a, b + 1) && (this.world.mineFG(a, b),
                            this.dontUpdate.h[a + "x" + (b - 1)] = !0)) : "-1" != this.world.getDataFG(a, b, "liquidDirection") || "lava" == this.world.getFG(a + 1, b) && "1" != this.world.getDataFG(a + 1, b, "liquidDirection") && Math.max(1, H.parseInt(this.world.getDataFG(a + 1, b, "liquidLevel"))) == H.parseInt(this.world.getDataFG(a, b, "liquidLevel")) - 1 ? "1" != this.world.getDataFG(a, b, "liquidDirection") || "lava" == this.world.getFG(a - 1, b) && "-1" != this.world.getDataFG(a - 1, b, "liquidDirection") && Math.max(1, H.parseInt(this.world.getDataFG(a - 1, b, "liquidLevel"))) == H.parseInt(this.world.getDataFG(a, b, "liquidLevel")) - 1 ? 4 > H.parseInt(this.world.getDataFG(a, b, "liquidLevel")) && ("-1" == this.world.getDataFG(a, b, "liquidDirection") && c && 1 == u.get(this.world.getFG(a - 1, b)).liquidReplace && this.world.mineFG(a - 1, b, !0) && this.world.setFG(a - 1, b, "lava") && (this.world.setDataFG(a - 1, b, "liquidLevel", H.string(H.parseInt(this.world.getDataFG(a, b, "liquidLevel")) + 1)),
                            this.world.setDataFG(a - 1, b, "liquidDirection", "-1")),
                            "1" == this.world.getDataFG(a, b, "liquidDirection") && c && 1 == u.get(this.world.getFG(a + 1, b)).liquidReplace && this.world.mineFG(a + 1, b, !0) && this.world.setFG(a + 1, b, "lava") && (this.world.setDataFG(a + 1, b, "liquidLevel", H.string(H.parseInt(this.world.getDataFG(a, b, "liquidLevel")) + 1)),
                            this.world.setDataFG(a + 1, b, "liquidDirection", "1"),
                            this.dontUpdate.h[a + 1 + "x" + b] = !0)) : (this.world.mineFG(a, b),
                            this.dontUpdate.h[a + 1 + "x" + b] = !0) : (this.world.mineFG(a, b),
                            this.dontUpdate.h[a + 1 + "x" + b] = !0);
                            break;
                        case "leaves_birch":
                        case "leaves_orange":
                        case "leaves_orange_flower":
                        case "leaves_pine":
                            if (0 == X.randomNumber(0, 4)) {
                                f = !1;
                                var h = K.substr(c, 7, null);
                                -1 != h.indexOf("_") && (h = K.substr(h, 0, h.indexOf("_")));
                                for (var l = -3; 4 > l; ) {
                                    for (var g = l++, p = -4; 4 > p; )
                                        if (this.world.getFG(a + g, b + p++) == "wood_" + h) {
                                            f = !0;
                                            break
                                        }
                                    if (f)
                                        break
                                }
                                f || (this.addParticles("leaf", a + .5, b + .5, 20, c, !0, 100, 0, 0, 192),
                                this.world.mineFG(a, b, !0))
                            }
                            0 == X.randomNumber(0, 50) && this.addParticles("leaf", a + .5, b + .5, 1, c, !0, 2400);
                            break;
                        case "rock":
                            1 != u.get(this.world.getFG(a, b - 1)).solid && this.world.mineFG(a, b, !0);
                            break;
                        case "roots_plant":
                            c = E.vineBlocks;
                            f = this.world.getFG(a, b + 1);
                            Object.prototype.hasOwnProperty.call(c.h, f) ? c = !1 : (c = E.rareVineBlocks,
                            f = this.world.getFG(a, b + 1),
                            c = !Object.prototype.hasOwnProperty.call(c.h, f));
                            c && (this.world.mineFG(a, b, !0),
                            this.checkBlock(a, b - 1));
                            break;
                        case "spikes":
                            "ceiling" == this.world.getDataFG(a, b, "orientation") ? 1 != u.get(this.world.getFG(a, b + 1)).solid && this.world.mineFG(a, b, !0) : 1 != u.get(this.world.getFG(a, b - 1)).solid && this.world.mineFG(a, b, !0);
                            break;
                        case "mushrooms":
                        case "torch":
                            "left" == this.world.getDataFG(a, b, "orientation") ? (1 != u.get(this.world.getFG(a - 1, b)).solid && this.world.mineFG(a, b, !0),
                            0 == X.randomNumber(0, 20) && "torch" == c && this.addParticles("fire", a + .5 - .125, b + .5 - .0625, 1, null, !1)) : "right" == this.world.getDataFG(a, b, "orientation") ? (1 != u.get(this.world.getFG(a + 1, b)).solid && this.world.mineFG(a, b, !0),
                            0 == X.randomNumber(0, 20) && "torch" == c && this.addParticles("fire", a + .5 + .125, b + .5 - .0625, 1, null, !1)) : (1 != u.get(this.world.getFG(a, b - 1)).solid && this.world.mineFG(a, b, !0),
                            0 == X.randomNumber(0, 20) && "torch" == c && this.addParticles("fire", a + .5, b + .5 - .0625, 1, null, !1));
                            break;
                        case "vine":
                        case "vines":
                        case "vines_orange":
                            this.world.getFG(a, b + 1) != this.world.getFG(a, b) ? (c = E.vineBlocks,
                            f = this.world.getFG(a, b + 1),
                            c = !Object.prototype.hasOwnProperty.call(c.h, f)) : c = !1;
                            c ? (c = E.rareVineBlocks,
                            f = this.world.getFG(a, b + 1),
                            c = !Object.prototype.hasOwnProperty.call(c.h, f)) : c = !1;
                            c ? (this.world.mineFG(a, b, !0),
                            this.checkBlock(a, b - 1)) : .01 > Math.random() / d.Instance.timeDelta && "air" == this.world.getFG(a, b - 1) && this.world.setFG(a, b - 1, this.world.getFG(a, b));
                            break;
                        case "water":
                            (c = this.world.createChunk(Math.floor(a / 8), Math.floor(b / 8)),
                            this.world.appendSavingChunk(c),
                            Math.floor(T.modulus(d.Instance.lastTime / 1E3 - f, 2) / 2 * 4) != Math.floor(T.modulus(d.Instance.lastTime / 1E3, 2) / 2 * 4) && (c.isRenderable = !1),
                            null == this.world.getDataFG(a, b, "liquidLevel") && (this.world.setDataFG(a, b, "liquidLevel", "0"),
                            this.world.setDataFG(a, b, "liquidDirection", "0")),
                            c = !1,
                            1 == u.get(this.world.getFG(a, b - 1)).liquidReplace ? this.world.mineFG(a, b - 1, !0) && this.world.setFG(a, b - 1, "water") && (this.world.setDataFG(a, b - 1, "liquidLevel", "1"),
                            this.world.setDataFG(a, b - 1, "liquidDirection", "0"),
                            this.dontUpdate.h[a + "x" + (b - 1)] = !0) : 1 != u.get(this.world.getFG(a, b - 1)).liquid && (c = !0),
                            1 >= H.parseInt(this.world.getDataFG(a, b, "liquidLevel"))) ? (this.world.setDataFG(a, b, "liquidDirection", "0"),
                            c && 1 == u.get(this.world.getFG(a - 1, b)).liquidReplace && this.world.mineFG(a - 1, b, !0) && this.world.setFG(a - 1, b, "water") && (this.world.setDataFG(a - 1, b, "liquidLevel", "2"),
                            this.world.setDataFG(a - 1, b, "liquidDirection", "-1")),
                            c && 1 == u.get(this.world.getFG(a + 1, b)).liquidReplace && this.world.mineFG(a + 1, b, !0) && this.world.setFG(a + 1, b, "water") && (this.world.setDataFG(a + 1, b, "liquidLevel", "2"),
                            this.world.setDataFG(a + 1, b, "liquidDirection", "1"),
                            this.dontUpdate.h[a + 1 + "x" + b] = !0),
                            "1" == this.world.getDataFG(a, b, "liquidLevel") && "water" != this.world.getFG(a, b + 1) && (this.world.mineFG(a, b),
                            this.dontUpdate.h[a + "x" + (b - 1)] = !0)) : "-1" != this.world.getDataFG(a, b, "liquidDirection") || "water" == this.world.getFG(a + 1, b) && "1" != this.world.getDataFG(a + 1, b, "liquidDirection") && Math.max(1, H.parseInt(this.world.getDataFG(a + 1, b, "liquidLevel"))) == H.parseInt(this.world.getDataFG(a, b, "liquidLevel")) - 1 ? "1" != this.world.getDataFG(a, b, "liquidDirection") || "water" == this.world.getFG(a - 1, b) && "-1" != this.world.getDataFG(a - 1, b, "liquidDirection") && Math.max(1, H.parseInt(this.world.getDataFG(a - 1, b, "liquidLevel"))) == H.parseInt(this.world.getDataFG(a, b, "liquidLevel")) - 1 ? 8 > H.parseInt(this.world.getDataFG(a, b, "liquidLevel")) && ("-1" == this.world.getDataFG(a, b, "liquidDirection") && c && 1 == u.get(this.world.getFG(a - 1, b)).liquidReplace && this.world.mineFG(a - 1, b, !0) && this.world.setFG(a - 1, b, "water") && (this.world.setDataFG(a - 1, b, "liquidLevel", H.string(H.parseInt(this.world.getDataFG(a, b, "liquidLevel")) + 1)),
                            this.world.setDataFG(a - 1, b, "liquidDirection", "-1")),
                            "1" == this.world.getDataFG(a, b, "liquidDirection") && c && 1 == u.get(this.world.getFG(a + 1, b)).liquidReplace && this.world.mineFG(a + 1, b, !0) && this.world.setFG(a + 1, b, "water") && (this.world.setDataFG(a + 1, b, "liquidLevel", H.string(H.parseInt(this.world.getDataFG(a, b, "liquidLevel")) + 1)),
                            this.world.setDataFG(a + 1, b, "liquidDirection", "1"),
                            this.dontUpdate.h[a + 1 + "x" + b] = !0)) : (this.world.mineFG(a, b),
                            this.dontUpdate.h[a + 1 + "x" + b] = !0) : (this.world.mineFG(a, b),
                            this.dontUpdate.h[a + 1 + "x" + b] = !0)
                        }
                },
                resize: function() {
                    F.prototype.resize.call(this);
                    this.foregroundScene.setup2D(d.screenWidth, d.screenHeight, Pa.clear);
                    na.activate(this.foregroundScene);
                    this.foregroundImage.fromScene(this.foregroundScene);
                    this.foregroundEntity.setAttrib("texClip", T.repeatArray([0, d.screenHeight, d.screenWidth, -d.screenHeight], 6));
                    this.foregroundEntity.setUniform("texSize", [d.screenWidth, d.screenHeight]);
                    R.calcInventorySlotCoords()
                },
                __class__: ad
            });
            var rd = function(a, b) {
                F.call(this, a, b)
            };
            g["scenes.Scene_Loading"] = rd;
            rd.__name__ = "scenes.Scene_Loading";
            rd.__super__ = F;
            rd.prototype = n(F.prototype, {
                init: function() {
                    F.prototype.init.call(this);
                    this.backgroundData = X.createQuadPoolEntity(xa.getImage("loading_bg"), 10);
                    this.screenData = X.createQuadPoolEntity(C.textures, 20)
                },
                logic: function() {
                    F.prototype.logic.call(this);
                    this.backgroundData.clearPool();
                    this.screenData.clearPool();
                    this.fillRect(this.backgroundData, new ca(0,0,d.screenWidth,d.screenHeight), -16777216);
                    this.draw(this.backgroundData, F.tempDrawRectangles[0].set(0, 0, Q.toFloat(this.backgroundData.texture.width), Q.toFloat(this.backgroundData.texture.height)), d.screenHeight / 100, 0, 0, d.screenHeight / 100);
                    this.fillRect(this.backgroundData, new ca(0,0,d.screenWidth,61), -16777216);
                    this.fillRect(this.backgroundData, new ca(0,d.screenHeight - 61,d.screenWidth,61), -16777216);
                    this.drawString(x.get("GENERATING") + "...", d.screenWidth / 2 + 10, d.screenHeight / 2 - 20, 40, this.scene, 1, 16777215, 0, 0, !1, d.screenWidth);
                    Sa.currentGame.generatedAt(-300) ? Sa.currentGame.generatedAt(-150) ? Sa.currentGame.generatedAt(0) ? Sa.currentGame.generatedAt(150) ? (this.drawString("OMG", d.screenWidth / 2 - 60, d.screenHeight / 2 - 25, 50, this.scene, 1, 7864319, 0, 0, 2, 50),
                    null != d.Instance.gameScene && d.Instance.gameScene.destroy(),
                    d.Instance.currentScene = d.Instance.gameScene = new ad("game",this.scene,Sa.currentGame),
                    d.Instance.gameScene.enterWorld(!1, 0)) : (Sa.currentGame.getRegion(150).generate(),
                    this.drawString(Math.floor(75 + 25 * Math.min(1, Sa.currentGame.getRegion(150).genStage / 14)) + "%", d.screenWidth / 2 - 60, d.screenHeight / 2 - 25, 50, this.scene, 1, 7864319, 0, 0, 2, 50)) : (Sa.currentGame.getRegion(0).generate(),
                    this.drawString(Math.floor(50 + 25 * Math.min(1, Sa.currentGame.getRegion(0).genStage / 14)) + "%", d.screenWidth / 2 - 60, d.screenHeight / 2 - 25, 50, this.scene, 1, 7864319, 0, 0, 2, 50)) : (Sa.currentGame.getRegion(-150).generate(),
                    this.drawString(Math.floor(25 + 25 * Math.min(1, Sa.currentGame.getRegion(-150).genStage / 14)) + "%", d.screenWidth / 2 - 60, d.screenHeight / 2 - 25, 50, this.scene, 1, 7864319, 0, 0, 2, 50)) : (Sa.currentGame.getRegion(-300).generate(),
                    this.drawString(Math.floor(25 * Math.min(1, Sa.currentGame.getRegion(-300).genStage / 14)) + "%", d.screenWidth / 2 - 60, d.screenHeight / 2 - 25, 50, this.scene, 1, 7864319, 0, 0, 2, 50));
                    this.draw(this.screenData, C.get("genIcon" + (Math.floor(d.Instance.lastTime / 1E3 * 50 / 20) % 4 + 1)), 1, 0, 0, 1, d.screenWidth / 2 - 170, d.screenHeight / 2 + 90);
                    this.drawString(x.get("SAVE_WARNING"), d.screenWidth / 2 - 130, d.screenHeight / 2 + 90, 20, this.scene, 1, 16777215, 0, 0, !1, d.screenWidth);
                    this.scene.draw(this.backgroundData);
                    this.scene.draw(this.screenData);
                    this.backgroundData.resetUnusedQuads();
                    this.screenData.resetUnusedQuads();
                    this.scene.render()
                },
                render: function() {
                    F.prototype.render.call(this)
                },
                resize: function() {
                    F.prototype.resize.call(this)
                },
                __class__: rd
            });
            var N = function(a, b) {
                this.buttonsToRender = new p;
                this.failedToConnectToWebsite = !1;
                this.newsMessage = this.newsMessageURL = this.updateURL = this.updateNotes = "";
                this.lockDomain = !1;
                this.latestVersion = "";
                this.loadWorld = !1;
                this.saveName = "";
                this.gameMode = "survival";
                this.toEditInfo = {
                    date: "",
                    dateCreated: "",
                    createdVersion: "",
                    lastOpenedVersion: "",
                    seed: "",
                    spawnSpot: ""
                };
                this.saveListScroll = 0;
                this.newspaperCursor = !1;
                this.mouseX = this.mouseY = 0;
                F.call(this, a, b);
                a = new p;
                b = r.location.href;
                a.h.url = b;
                a.h.version = "0.8.1";
                b = H.string(Math.random());
                a.h.dirt = b;
                gc.send("https://mineblocks.com/2/scripts/connect.php", !1, a, t(this, this.handleLoadSuccessful), t(this, this.handleLoadError));
                this.menuData = X.createQuadPoolEntity(C.textures, 35);
                this.skyEntity = X.createQuadPoolEntity(xa.getImage("sky"), 0);
                this.saveListData = new yb(0,0);
                this.saveListData.setup2D(598, 139, Pa.clear);
                this.saveListDataEntity = (new hb).fromScene(this.saveListData).toEntity(null, !1, !0);
                this.saveListDataEntity.isTransparent = !0;
                this.saveListDataEntity.layer = 36;
                this.saveListMenuData = X.createQuadPoolEntity(C.textures, 35);
                this.headerEntity = xa.getImage("header").toEntity();
                this.headerEntity.isTransparent = !0;
                this.headerEntity.layer = 12
            };
            g["scenes.Scene_MainMenu"] = N;
            N.__name__ = "scenes.Scene_MainMenu";
            N.changeMenuScreen = function(a) {
                null == a && (a = "main");
                N.nextMenu = a;
                N.menuTimer = 1;
                C.texturePackError = C.texturePackSuccess = "";
                "singleplayer" == a && J.updateSaveList()
            }
            ;
            N.renderSettings = function(a, b, c) {
                null == c && (c = !1);
                if ("settings" == N.menuFrame)
                    F.drawString_static(x.get("SETTINGS"), 20, 95, 25, a, 1, 16777215, 0, 0, !1, 300, 1, "title"),
                    N.addButton2(x.get("GRAPHICS_OPTIONS"), 112, 140, function() {
                        N.changeMenuScreen("settings3")
                    }, 1, a, b, 14),
                    N.addButton2(x.get("CONTROLS"), 112, 180, function() {
                        N.changeMenuScreen("settings4")
                    }, 1, a, b, 14),
                    N.addButton2(x.get("LANGUAGES"), 112, 220, function() {
                        N.changeMenuScreen("settings1")
                    }, 1, a, b, 14),
                    N.addButton2(x.get("TEXTURE_PACKS"), 112, 260, function() {
                        N.changeMenuScreen("settings2")
                    }, 1, a, b, 14),
                    N.addButton2(x.get("BACK_BUTTON"), 112, d.screenHeight - 40, function() {
                        N.changeMenuScreen("main")
                    }, 1, a, b, 14);
                else {
                    if ("1" == K.substr(N.menuFrame, 8, 1)) {
                        F.drawString_static(x.get("LANGUAGES"), 20, 110, 25, a, 1, 16777215, 0, 0, !1, 300, 1, "title");
                        c = x.languageList.length;
                        F.fillRect_static(b, F.tempDrawRectangles[0].set(d.screenWidth / 2 - 260, 107, 520, 50 + 40 * Math.floor((c - 1) / 4 + 1) | 0), -16777216);
                        F.fillRect_static(b, F.tempDrawRectangles[0].set(d.screenWidth / 2 - 260, 105, 520, 50 + 40 * Math.floor((c - 1) / 4 + 1) | 0), -14535868);
                        for (var f = null, h = 0, l = x.languageList.length; h < l; ) {
                            var g = [h++];
                            J.selectedLanguage == x.languageList[g[0]].file && (f = x.languageList[g[0]]);
                            N.addButton(x.languageList[g[0]].name, d.screenWidth / 2 + 64 * (g[0] % 4 * 2 - 3), 125 + 40 * Math.floor(g[0] / 4), function(a) {
                                return function() {
                                    x.loadByCode(x.languageList[a[0]].file)
                                }
                            }(g), 1, a, b, 5, !1)
                        }
                        null != f && F.drawString_static(x.get("TRANSLATION_BY"), d.screenWidth / 2 - 250, 120 + 40 * Math.floor((c - 1) / 4 + 1), 20, a, 1, 16777215, 0, 0, !1, 300)
                    } else
                        "2" == K.substr(N.menuFrame, 8, 1) ? (F.drawString_static(x.get("TEXTURE_PACKS"), 20, 110, 25, a, 1, 16777215, 0, 0, !1, 300, 1, "title"),
                        F.drawString_static(x.get("TMP_TEXTURE_PACK_HELP"), 120, 145, 20, a, 1, 16777215, 0, 0, !0, d.screenWidth, 2),
                        "" != C.texturePackError && F.drawString_static(x.get("ERROR") + " " + C.texturePackError, 120, 230, 20, a, 1, 16711680, 0, 0, !0, d.screenWidth),
                        "" != C.texturePackSuccess && F.drawString_static(x.get("SUCCESS") + " " + C.texturePackSuccess, 120, 230, 20, a, 1, 65280, 0, 0, !0, d.screenWidth),
                        N.addButton2(x.get("LOAD_TEXTURES"), 144, 160, null, 1.2, a, b, 15, !1, C.browseForTexturesFile),
                        N.addButton2(x.get("DEFAULT_TEXTURES"), 144, 210, C.loadDefaultTextures, 1.2, a, b, 15, !1)) : "3" == K.substr(N.menuFrame, 8, 1) ? (F.fillRect_static(b, F.tempDrawRectangles[0].set(245, 107, 500, 220), -16777216),
                        F.fillRect_static(b, F.tempDrawRectangles[0].set(245, 105, 500, 220), -14535868),
                        F.drawString_static(x.get("GRAPHICS_OPTIONS"), 20, 110, 25, a, 1, 16777215, 0, 0, !1, 300, 1, "title"),
                        F.drawString_static(x.get("LIGHTING_RESOLUTION") + ":", 300, 110, 20, a, 1, 16777215, 0, 0, !1, d.screenWidth),
                        N.addButton(x.get("SMOOTH"), 348, 145, function() {
                            J.pixelLightingFactor = 1;
                            null != d.Instance.gameScene && d.Instance.gameScene.world.resetLighting()
                        }, 1, a, b, 4, 1 == J.pixelLightingFactor),
                        N.addButton(x.get("4x4"), 444, 145, function() {
                            J.pixelLightingFactor = 4;
                            null != d.Instance.gameScene && d.Instance.gameScene.world.resetLighting()
                        }, 1, a, b, 4, 4 == J.pixelLightingFactor),
                        N.addButton(x.get("2x2"), 540, 145, function() {
                            J.pixelLightingFactor = 8;
                            null != d.Instance.gameScene && d.Instance.gameScene.world.resetLighting()
                        }, 1, a, b, 4, 8 == J.pixelLightingFactor),
                        N.addButton(x.get("BLOCKY"), 636, 145, function() {
                            J.pixelLightingFactor = 16;
                            null != d.Instance.gameScene && d.Instance.gameScene.world.resetLighting()
                        }, 1, a, b, 4, 16 == J.pixelLightingFactor),
                        c = 0,
                        4 == J.pixelLightingFactor ? c = 1 : 8 == J.pixelLightingFactor ? c = 2 : 16 == J.pixelLightingFactor && (c = 3),
                        F.fillRect_static(b, F.tempDrawRectangles[0].set(252, 133, 40, 40), -16777216),
                        F.copyPixels_static(b, C.get("pixelLighting"), F.tempDrawRectangles[0].set(16 * c, 0, 16, 16), F.tempDrawPoints[0].set(256, 137), 2),
                        F.drawString_static(x.get("BLOCK_BORDERS") + ":", 300, 180, 20, a, 1, 16777215, 0, 0, !1, d.screenWidth),
                        N.addButton(J.blockBorders ? x.get("ON") : x.get("OFF"), 348, 215, function() {
                            J.blockBorders = !J.blockBorders;
                            null != d.Instance.gameScene && d.Instance.gameScene.world.resetChunks()
                        }, 1, a, b, 4),
                        F.fillRect_static(b, F.tempDrawRectangles[0].set(252, 203, 40, 40), -16777216),
                        F.copyPixels_static(b, C.get("bordersOption"), F.tempDrawRectangles[0].set(16 * (J.blockBorders ? 0 : 1), 0, 16, 16), F.tempDrawPoints[0].set(256, 207), 2),
                        F.drawString_static(x.get("PARTICLES") + ":", 450, 180, 20, a, 1, 16777215, 0, 0, !1, d.screenWidth),
                        N.addButton(x.get("MAXIMUM"), 498, 215, function() {
                            J.particleQuality = 10
                        }, 1, a, b, 4, 10 == J.particleQuality),
                        N.addButton(x.get("REDUCED"), 594, 215, function() {
                            J.particleQuality = 5
                        }, 1, a, b, 4, 5 == J.particleQuality),
                        N.addButton(x.get("MINIMUM"), 690, 215, function() {
                            J.particleQuality = 1
                        }, 1, a, b, 4, 1 == J.particleQuality),
                        F.drawString_static(x.get("TARGET_FPS") + ":", 300, 250, 20, a, 1, 16777215, 0, 0, !1, d.screenWidth),
                        N.addButton(x.get("MAXIMUM"), 348, 285, function() {
                            J.setFpsLimit(0)
                        }, 1, a, b, 4, 0 == J.fpsLimit),
                        N.addButton("50", 444, 285, function() {
                            J.setFpsLimit(50)
                        }, 1, a, b, 4, 50 == J.fpsLimit),
                        N.addButton("30", 540, 285, function() {
                            J.setFpsLimit(30)
                        }, 1, a, b, 4, 30 == J.fpsLimit)) : "4" == K.substr(N.menuFrame, 8, 1) && (F.fillRect_static(b, F.tempDrawRectangles[0].set(245, 157, 450, 125), -16777216),
                        F.fillRect_static(b, F.tempDrawRectangles[0].set(245, 155, 450, 125), -14535868),
                        F.drawString_static(x.get("CONTROLS"), 20, 110, 25, a, 1, 16777215, 0, 0, !1, 300, 1, "title"),
                        F.drawString_static(x.get("MOUSE_INTERACTION") + ":", 255, 160, 20, a, 1, 16777215, 0, 0, !1, d.screenWidth),
                        N.addButton(x.get("RIGHT_CLICK"), 327, 195, function() {
                            J.mouseBlockBehavior = 1
                        }, 1, a, b, 7, 1 == J.mouseBlockBehavior),
                        N.addButton(x.get("SHIFT_CLICK"), 471, 195, function() {
                            J.mouseBlockBehavior = 2
                        }, 1, a, b, 7, 2 == J.mouseBlockBehavior),
                        N.addButton(x.get("HOLD_CLICK"), 615, 195, function() {
                            J.mouseBlockBehavior = 3
                        }, 1, a, b, 7, 3 == J.mouseBlockBehavior),
                        1 == J.mouseBlockBehavior ? F.drawString_static(x.get("RIGHT_CLICK_INFO"), 255, 220, 15, a, 1, 16777215, 0, 0, !1, 450, 2, "info") : 2 == J.mouseBlockBehavior ? F.drawString_static(x.get("SHIFT_CLICK_INFO"), 255, 220, 15, a, 1, 16777215, 0, 0, !1, 450, 2, "info") : 3 == J.mouseBlockBehavior && F.drawString_static(x.get("HOLD_CLICK_INFO"), 255, 220, 15, a, 1, 16777215, 0, 0, !1, 450, 2, "info"));
                    N.addButton2(x.get("BACK_BUTTON"), 144, d.screenHeight - 50, function() {
                        N.changeMenuScreen("settings");
                        J.saveSettings()
                    }, 1.2, a, b, 15)
                }
            }
            ;
            N.addButton = function(a, b, c, f, h, l, g, p, y) {
                null == y && (y = !1);
                null == p && (p = 5);
                if (!y && Na.mouseIsOver(b - 16 * (p + 2) * h / 2, c - 16 * h / 2, 16 * (p + 2) * h, 32 * h))
                    if (Q.gt(d.Instance.mouseDown(), 0) && 0 != N.mouseButtonStates.state && N.mouseButtonStates.id == a + "x" + b + "y" + c) {
                        N.mouseButtonStates = {
                            state: 2,
                            id: a + "x" + b + "y" + c
                        };
                        F.draw_static(g, C.get("buttonLeft3"), h, 0, 0, h, b - 16 * p * h / 2 - 16 * h, c - 8);
                        for (f = 0; f < p; )
                            F.draw_static(g, C.get("buttonMiddle3"), h, 0, 0, h, b - 16 * p * h / 2 + 16 * f++ * h, c - 8);
                        F.draw_static(g, C.get("buttonRight3"), h, 0, 0, h, b + 16 * p * h / 2, c - 8);
                        F.drawString_static(a, b - 16 * (p + 2) * h / 2, c - 8 + 2 * h + h, 22 * h, l, 1, 0, 0, null, !0, 16 * (p + 2) * h, 1, "button" + b)
                    } else if (2 == N.mouseButtonStates.state && N.mouseButtonStates.id == a + "x" + b + "y" + c) {
                        null != f && (S.playSound("btn_down", 1, 0),
                        N.buttonSoundPause = d.Instance.tick + 1,
                        N.mouseButtonStates = {
                            state: 1,
                            id: a + "x" + b + "y" + c
                        },
                        f());
                        F.draw_static(g, C.get("buttonLeft3"), h, 0, 0, h, b - 16 * p * h / 2 - 16 * h, c - 8);
                        for (f = 0; f < p; )
                            F.draw_static(g, C.get("buttonMiddle3"), h, 0, 0, h, b - 16 * p * h / 2 + 16 * f++ * h, c - 8);
                        F.draw_static(g, C.get("buttonRight3"), h, 0, 0, h, b + 16 * p * h / 2, c - 8);
                        F.drawString_static(a, b - 16 * (p + 2) * h / 2, c - 8 + 2 * h + h, 22 * h, l, 1, 0, 0, null, !0, 16 * (p + 2) * h, 1, "button" + b)
                    } else {
                        0 == d.Instance.mouseDown() && (N.mouseButtonStates.id != a + "x" + b + "y" + c && N.buttonSoundPause != d.Instance.tick && S.playSound("btn_over", 1, 0),
                        N.mouseButtonStates = {
                            state: 1,
                            id: a + "x" + b + "y" + c
                        });
                        F.draw_static(g, C.get("buttonLeft2"), h, 0, 0, h, b - 16 * p * h / 2 - 16 * h, c - 8);
                        for (f = 0; f < p; )
                            F.draw_static(g, C.get("buttonMiddle2"), h, 0, 0, h, b - 16 * p * h / 2 + 16 * f++ * h, c - 8);
                        F.draw_static(g, C.get("buttonRight2"), h, 0, 0, h, b + 16 * p * h / 2, c - 8);
                        F.drawString_static(a, b - 16 * (p + 2) * h / 2, c - 8 + 2 * h, 22 * h, l, 1, 0, 0, null, !0, 16 * (p + 2) * h, 1, "button" + b)
                    }
                else if (0 == d.Instance.mouseDown() && N.mouseButtonStates.id == a + "x" + b + "y" + c && (N.mouseButtonStates.id = ""),
                y) {
                    F.draw_static(g, C.get("buttonLeft3"), h, 0, 0, h, b - 16 * p * h / 2 - 16 * h, c - 8);
                    for (f = 0; f < p; )
                        F.draw_static(g, C.get("buttonMiddle3"), h, 0, 0, h, b - 16 * p * h / 2 + 16 * f++ * h, c - 8);
                    F.draw_static(g, C.get("buttonRight3"), h, 0, 0, h, b + 16 * p * h / 2, c - 8);
                    F.drawString_static(a, b - 16 * (p + 2) * h / 2, c - 8 + 2 * h, 22 * h, l, 1, 2250103, 0, null, !0, 16 * (p + 2) * h, 1, "button" + b)
                } else {
                    F.draw_static(g, C.get("buttonLeft1"), h, 0, 0, h, b - 16 * p * h / 2 - 16 * h, c - 8);
                    for (f = 0; f < p; )
                        F.draw_static(g, C.get("buttonMiddle1"), h, 0, 0, h, b - 16 * p * h / 2 + 16 * f++ * h, c - 8);
                    F.draw_static(g, C.get("buttonRight1"), h, 0, 0, h, b + 16 * p * h / 2, c - 8);
                    F.drawString_static(a, b - 16 * (p + 2) * h / 2, c - 8 + 2 * h, 22 * h, l, 1, 0, 0, null, !0, 16 * (p + 2) * h, 1, "button" + b)
                }
            }
            ;
            N.addButton2 = function(a, b, c, f, h, l, g, p, y, m) {
                null == y && (y = !1);
                null == p && (p = 5);
                var q = -Math.pow(50 - Math.abs(100 * N.menuTimer - 50), 2) * (c - 100) / 400;
                !y && Na.mouseIsOver(b - 16 * (p + 2) * h / 2, c - 16 * h / 2, 16 * (p - 1) * h, 32 * h) ? Q.gt(d.Instance.mouseDown(), 0) && 0 != N.mouseButtonStates.state && N.mouseButtonStates.id == a + "x" + b + "y" + c ? (d.Instance.runOnMouseUpEvent = m,
                N.mouseButtonStates = {
                    state: 2,
                    id: a + "x" + b + "y" + c
                },
                F.draw_static(g, C.get("menuBarDown"), 1, 0, 0, 32 * h / 50, b - 16 * (p + 2) * h / 2 + q, c - 16 * h / 2),
                F.drawString_static("> " + a, b - 16 * (p + 2) * h / 2 + 50 + q, c - 8 + 2 * h, 22 * h, l, 1, 16777215, 0, null, !1, 16 * (p + 2) * h, 1, "button2")) : 2 == N.mouseButtonStates.state && N.mouseButtonStates.id == a + "x" + b + "y" + c ? (null != f && (S.playSound("btn_down", 1, 0),
                N.buttonSoundPause = d.Instance.tick + 1,
                N.mouseButtonStates = {
                    state: 1,
                    id: a + "x" + b + "y" + c
                },
                .5 > N.menuTimer && f()),
                F.draw_static(g, C.get("menuBarOver"), 1, 0, 0, 32 * h / 50, b - 16 * (p + 2) * h / 2 + q, c - 16 * h / 2),
                F.drawString_static(a, b - 16 * (p + 2) * h / 2 + 50 + q, c - 8 + 2 * h + h, 22 * h, l, 1, 16777215, 0, null, !1, 16 * (p + 2) * h, 1, "button2")) : (0 == d.Instance.mouseDown() && (N.mouseButtonStates.id != a + "x" + b + "y" + c && N.buttonSoundPause != d.Instance.tick && S.playSound("btn_over", 1, 0),
                N.mouseButtonStates = {
                    state: 1,
                    id: a + "x" + b + "y" + c
                }),
                F.draw_static(g, C.get("menuBarOver"), 1, 0, 0, 32 * h / 50, b - 16 * (p + 2) * h / 2 + q, c - 16 * h / 2),
                F.drawString_static(a, b - 16 * (p + 2) * h / 2 + 50 + q, c - 8 + 2 * h, 22 * h, l, 1, 16777215, 0, null, !1, 16 * (p + 2) * h, 1, "button2")) : (0 == d.Instance.mouseDown() && N.mouseButtonStates.id == a + "x" + b + "y" + c && (N.mouseButtonStates.id = ""),
                y ? (F.draw_static(g, C.get("menuBarOut"), 1, 0, 0, 32 * h / 50, b - 16 * (p + 2) * h / 2 + q, c - 16 * h / 2),
                F.drawString_static(a, b - 16 * (p + 2) * h / 2 + 50 + q, c - 8 + 2 * h, 22 * h, l, 1, 5592405, .2, null, !1, 16 * (p + 2) * h, 1, "button2")) : (F.draw_static(g, C.get("menuBarOut"), 1, 0, 0, 32 * h / 50, b - 16 * (p + 2) * h / 2 + q, c - 16 * h / 2),
                F.drawString_static(a, b - 16 * (p + 2) * h / 2 + 50 + q, c - 8 + 2 * h, 22 * h, l, 1, 16777215, 0, null, !1, 16 * (p + 2) * h, 1, "button2")))
            }
            ;
            N.__super__ = F;
            N.prototype = n(F.prototype, {
                init: function() {
                    F.prototype.init.call(this);
                    this.sky = new bd("menuSky",this.scene);
                    this.sky.menu = !0;
                    this.addChildScene(this.sky);
                    this.generateTitleBG();
                    this.sky.reloadClouds();
                    this.sky.resize()
                },
                newWorld: function(a) {
                    null == a && (a = "creative");
                    var b = this;
                    if (0 == this.newWorldName.length)
                        return !1;
                    0 == this.newWorldSeed.length && (this.newWorldSeed = H.string(Math.floor(1E8 * Math.random())));
                    var c = H.parseInt(this.newWorldSeed)
                      , f = 1;
                    this.saveName = this.newWorldName;
                    for (var h = this.saveName.toUpperCase(), d = 0, l = h.length; d < l; ) {
                        var g = d++;
                        (65 > K.cca(h, g) || 90 < K.cca(h, g)) && (48 > K.cca(h, g) || 57 < K.cca(h, g)) && (this.saveName = K.substr(this.saveName, 0, g) + "_" + K.substr(this.saveName, g + 1, null))
                    }
                    d = !1;
                    h = J.saveList.h;
                    l = Object.keys(h);
                    g = l.length;
                    for (var y = 0; y < g; )
                        h[l[y++]].name == this.saveName && (d = !0);
                    if (d) {
                        for (d = 0; 50 > d; ) {
                            ++d;
                            l = !0;
                            h = J.saveList.h;
                            g = Object.keys(h);
                            y = g.length;
                            for (var m = 0; m < y; )
                                if (h[g[m++]].name == this.saveName + f) {
                                    l = !1;
                                    break
                                }
                            if (l) {
                                this.saveName += f;
                                break
                            } else
                                ++f
                        }
                        if (50 == d)
                            return !1
                    }
                    this.loadWorld = !1;
                    new uc("/MineBlocks2/saves/" + this.saveName + "/data","/",function(f) {
                        f.data.h.seed = c;
                        b.gameMode = a;
                        var h = f.data
                          , d = R.resetInventory();
                        h.h.inventory = d;
                        h = (new Date).getTime();
                        d = new p;
                        d.h.date = h;
                        d.h.dateCreated = h;
                        d.h.createdVersion = "0.8.1";
                        d.h.lastOpenedVersion = "0.8.1";
                        d.h.name = b.saveName;
                        d.h.visibleName = b.newWorldName;
                        d.h.type = a;
                        d.h.seed = c;
                        J.saveList.h[b.saveName] = new Qa(d);
                        J.saveSaveList();
                        b.startGame(a, f);
                        b.newWorldSeed = H.string(Math.floor(1E8 * Math.random()))
                    }
                    );
                    return !0
                },
                startGame: function(a, b) {
                    null == a && (a = "survival");
                    var c = this;
                    this.loadWorld ? Sa.fromSave(this.saveName, function(a) {
                        Sa.currentGame = a;
                        null != d.Instance.gameScene && d.Instance.gameScene.destroy();
                        d.Instance.currentScene = d.Instance.gameScene = new ad("game",c.scene,Sa.currentGame);
                        N.menuFrame = "main";
                        J.saveList.h[c.saveName].date = (new Date).getTime();
                        J.saveList.h[c.saveName].lastOpenedVersion = "0.8.1";
                        J.saveSaveList()
                    }, function() {
                        N.menuFrame = "failLoad"
                    }) : (Sa.currentGame = Sa.fromNew(this.saveName, b, b.data.h.seed, a),
                    null != d.Instance.loadingScene && d.Instance.loadingScene.destroy(),
                    d.Instance.currentScene = d.Instance.loadingScene = new rd("loading",this.scene),
                    N.menuFrame = "main")
                },
                logic: function() {
                    var a = this;
                    F.prototype.logic.call(this);
                    this.menuData.clearPool();
                    this.mouseX = d.Instance.mouse.x | 0;
                    this.mouseY = d.Instance.mouse.y | 0;
                    this.sky.weatherAndTime.tickTimeOfDay();
                    this.sky.weatherAndTime.tickSkySpot();
                    this.sky.weatherAndTime.tickTimeOfDay();
                    this.sky.weatherAndTime.tickSkySpot();
                    this.sky.weatherAndTime.tickTimeOfDay();
                    this.sky.weatherAndTime.tickSkySpot();
                    this.sky.weatherAndTime.tickTimeOfDay();
                    this.sky.weatherAndTime.tickSkySpot();
                    this.sky.weatherAndTime.tickTimeOfDay();
                    this.sky.weatherAndTime.tickSkySpot();
                    this.sky.weatherAndTime.tickTimeOfDay();
                    this.sky.weatherAndTime.tickSkySpot();
                    this.sky.weatherAndTime.tickTimeOfDay();
                    this.sky.weatherAndTime.tickSkySpot();
                    this.sky.weatherAndTime.tickTimeOfDay();
                    this.sky.weatherAndTime.tickSkySpot();
                    this.sky.weatherAndTime.tickTimeOfDay();
                    this.sky.weatherAndTime.tickSkySpot();
                    this.sky.weatherAndTime.tickTimeOfDay();
                    this.sky.weatherAndTime.tickSkySpot();
                    this.fillRect(this.skyEntity, F.tempDrawRectangles[0].set(0, 0, d.screenWidth, d.screenHeight), -5579265);
                    this.titleScreenBGEntity.transform.reset().translate((-Math.sin(d.Instance.lastTime / 1E3 * 50 / 20 % d.screenWidth / d.screenWidth * 2 * Math.PI) - 1) * d.screenWidth | 0, 0);
                    this.scene.draw(this.titleScreenBGEntity);
                    this.draw(this.menuData, C.get("menuBG"), 1, 0, 0, d.screenHeight / C.get("menuBG").height);
                    this.scene.draw(this.headerEntity);
                    this.newspaperCursor = !1;
                    this.buttonLogic("redditButton", 116, 5, 32, 32, function() {
                        gc.open("https://reddit.com/r/MineBlocks")
                    }) && (this.newspaperCursor = !0,
                    d.Instance.cursor = null);
                    this.buttonLogic("patreonButton", 79, 5, 32, 32, function() {
                        gc.open("https://patreon.com/MineBlocks")
                    }) && (this.newspaperCursor = !0,
                    d.Instance.cursor = null);
                    this.buttonLogic("twitterButton", 42, 5, 32, 32, function() {
                        gc.open("https://twitter.com/Mine_Blocks2")
                    }) && (this.newspaperCursor = !0,
                    d.Instance.cursor = null);
                    this.buttonLogic("discordButton", 5, 5, 32, 32, function() {
                        gc.open("https://mineblocks.com/discord")
                    }) && (this.newspaperCursor = !0,
                    d.Instance.cursor = null);
                    0 < this.buttonRender("redditButton") ? this.copyPixels(this.menuData, C.get("redditButton"), F.tempDrawRectangles[0].set(0, 0, 32, 32), F.tempDrawPoints[0].set(116, 10)) : this.copyPixels(this.menuData, C.get("redditButton"), F.tempDrawRectangles[0].set(0, 0, 32, 32), F.tempDrawPoints[0].set(116, 5));
                    0 < this.buttonRender("patreonButton") ? this.copyPixels(this.menuData, C.get("patreonButton"), F.tempDrawRectangles[0].set(0, 0, 32, 32), F.tempDrawPoints[0].set(79, 10)) : this.copyPixels(this.menuData, C.get("patreonButton"), F.tempDrawRectangles[0].set(0, 0, 32, 32), F.tempDrawPoints[0].set(79, 5));
                    0 < this.buttonRender("twitterButton") ? this.copyPixels(this.menuData, C.get("twitterButton"), F.tempDrawRectangles[0].set(0, 0, 32, 32), F.tempDrawPoints[0].set(42, 10)) : this.copyPixels(this.menuData, C.get("twitterButton"), F.tempDrawRectangles[0].set(0, 0, 32, 32), F.tempDrawPoints[0].set(42, 5));
                    0 < this.buttonRender("discordButton") ? this.copyPixels(this.menuData, C.get("discordButton"), F.tempDrawRectangles[0].set(0, 0, 32, 32), F.tempDrawPoints[0].set(5, 10)) : this.copyPixels(this.menuData, C.get("discordButton"), F.tempDrawRectangles[0].set(0, 0, 32, 32), F.tempDrawPoints[0].set(5, 5));
                    0 < N.menuTimer && (N.menuTimer = Math.max(0, N.menuTimer - 5 * d.Instance.timeDelta),
                    .5 >= N.menuTimer && N.menuFrame != N.nextMenu && (N.menuFrame = N.nextMenu));
                    if ("main" == N.menuFrame) {
                        N.addButton2(x.get("PLAY_BUTTON"), 144, 160, function() {
                            N.changeMenuScreen("singleplayer")
                        }, 1.2, this.scene, this.menuData, 15);
                        N.addButton2(x.get("SETTINGS"), 144, 210, function() {
                            N.changeMenuScreen("settings")
                        }, 1.2, this.scene, this.menuData, 15);
                        N.addButton2(x.get("INFO"), 144, 260, function() {
                            N.changeMenuScreen("help")
                        }, 1.2, this.scene, this.menuData, 15);
                        d.versionToNumber(this.latestVersion) > d.versionToNumber("0.8.1") && (this.mouseX >= d.screenWidth / 2 - 100 && this.mouseX <= d.screenWidth - 120 && this.mouseY >= d.screenHeight / 2 - 10 && this.mouseY <= d.screenHeight / 2 + 120 ? (this.fillRect(this.menuData, F.tempDrawRectangles[0].set(d.screenWidth / 2 - 100, d.screenHeight / 2 - 10 + 2, d.screenWidth / 2 - 20, 130), -14535868),
                        this.fillRect(this.menuData, F.tempDrawRectangles[0].set(d.screenWidth / 2 - 100, d.screenHeight / 2 - 10, d.screenWidth / 2 - 20, 130), -12294520),
                        this.draw(this.menuData, C.get("newspaper"), 1, 0, 0, 1, this.mouseX, this.mouseY),
                        d.Instance.cursor = null,
                        1 == d.Instance.mouseDown() && gc.open(this.updateURL)) : (this.fillRect(this.menuData, F.tempDrawRectangles[0].set(d.screenWidth / 2 - 100, d.screenHeight / 2 - 10 + 2, d.screenWidth / 2 - 20, 130), -16777216),
                        this.fillRect(this.menuData, F.tempDrawRectangles[0].set(d.screenWidth / 2 - 100, d.screenHeight / 2 - 10, d.screenWidth / 2 - 20, 130), -14535868)),
                        this.drawString(x.get("NEW_UPDATE"), d.screenWidth / 2 - 90, d.screenHeight / 2 - 10 + 10, 25, this.scene, 1, 16777215, 0, 0, !0, d.screenWidth / 2 - 30, 6),
                        this.drawString(this.updateNotes, d.screenWidth / 2 - 90, d.screenHeight / 2 - 10 + 40, 15, this.scene, 1, 16777215, 0, 0, !0, d.screenWidth / 2 - 30, 6),
                        this.drawString(x.get("CLICK_TO_PLAY"), d.screenWidth / 2 - 90, d.screenHeight / 2 + 120 - 25, 15, this.scene, 1, 16777215, .25, 0, !0, d.screenWidth / 2 - 30, 6));
                        this.drawString(this.newsMessage, 0, Q.toFloat(xa.getImage("header").height + 5), 20, this.scene, 1, 16777215, 0, 0, !0, d.screenWidth, 1, "", 35);
                        if ("" != this.newsMessageURL && this.mouseX >= d.screenWidth / 2 - 9 * this.newsMessage.length / 2 && this.mouseX <= d.screenWidth / 2 + 9 * this.newsMessage.length / 2 && Q.gte(this.mouseY, xa.getImage("header").height)) {
                            var b = this.mouseY;
                            var c = Q.gte(xa.getImage("header").height + 23 + 5, b)
                        } else
                            c = !1;
                        c && (1 == d.Instance.mouseDown() && gc.open(this.newsMessageURL),
                        this.draw(this.menuData, C.get("newspaper"), 1, 0, 0, 1, this.mouseX, this.mouseY),
                        d.Instance.cursor = null)
                    } else if ("spomp" == N.menuFrame)
                        this.drawString(x.get("SELECT_GAME_TYPE") + ":", 20, 110, 25, this.scene, 1, 16777215, 0, 0, !1, 300, 1, "title"),
                        N.addButton2(x.get("SINGLEPLAYER"), 144, 160, function() {
                            N.changeMenuScreen("singleplayer")
                        }, 1.2, this.scene, this.menuData, 15),
                        N.addButton2(x.get("MULTIPLAYER"), 144, 210, function() {
                            N.changeMenuScreen("multiplayer")
                        }, 1.2, this.scene, this.menuData, 15, !0),
                        N.addButton2(x.get("BACK_BUTTON"), 144, d.screenHeight - 50, function() {
                            N.changeMenuScreen("main")
                        }, 1.2, this.scene, this.menuData, 15);
                    else if ("help" == N.menuFrame)
                        this.drawString(x.get("INFO"), 0, 110, 30, this.scene, 1, 16777215, 0, 0, !0, d.screenWidth, 1, "title"),
                        this.drawString(x.get("TMP_HELP_TEXT"), 0, 150, 20, this.scene, 1, 16777215, 0, 0, !0, d.screenWidth, 8),
                        N.addButton2(x.get("CREDITS"), 144, 160, function() {
                            N.changeMenuScreen("credits")
                        }, 1.2, this.scene, this.menuData, 15),
                        N.addButton2(x.get("BACK_BUTTON"), 144, d.screenHeight - 50, function() {
                            N.changeMenuScreen("main")
                        }, 1.2, this.scene, this.menuData, 15);
                    else if ("credits" == N.menuFrame) {
                        this.fillRect(this.menuData, F.tempDrawRectangles[0].set(d.screenWidth / 2 - 224, 112, 448, 200), -16777216);
                        this.fillRect(this.menuData, F.tempDrawRectangles[0].set(d.screenWidth / 2 - 224, 110, 448, 200), -14535868);
                        this.drawString(x.get("CREDITS"), 20, 110, 25, this.scene, 1, 16777215, 0, 0, !1, 300, 1, "title");
                        b = 130;
                        this.drawString(x.get("BY_ZANZLANZ"), d.screenWidth / 2 - 150, 130, 25, this.scene, 1, 16777215, 0, 0, !0, 300, 1, "credits");
                        b = 170;
                        this.drawString(x.get("TRANSLATORS") + ":", d.screenWidth / 2 - 192, 170, 20, this.scene, 1, 16777215, 0, 0, !1, 300, 1, "credits");
                        b = 195;
                        for (var f = b = 0, h = x.languageList.length; f < h; ) {
                            var l = f++;
                            null != x.languageList[l].translator && (this.drawString(x.languageList[l].translator, d.screenWidth / 2 + 48 * (b % 4 * 2 - 3) - 48, 195 + 20 * Math.floor(b / 4), 18, this.scene, 1, 16777215, 0, 0, !1, 96, 1, "credits"),
                            ++b)
                        }
                        b = 195 + 20 * Math.floor((b - 1) / 4);
                        b += 40;
                        this.drawString(x.get("FONT") + ": Jagged Dreams", d.screenWidth / 2 - 192, b, 20, this.scene, 1, 16777215, 0, 0, !1, 300, 1, "credits");
                        N.addButton2(x.get("BACK_BUTTON"), 144, d.screenHeight - 50, function() {
                            N.changeMenuScreen("help")
                        }, 1.2, this.scene, this.menuData, 15)
                    } else if ("settings" == K.substr(N.menuFrame, 0, 8))
                        N.renderSettings(this.scene, this.menuData);
                    else if ("singleplayer" == N.menuFrame) {
                        this.saveListData.clear();
                        this.saveListMenuData.clearPool();
                        b = new ca(d.screenWidth / 2 - 300,100,600,168);
                        l = new ca(d.screenWidth / 2 - 300,100,579,139);
                        f = new ca(d.screenWidth / 2 + 300 - 21,101,20,139);
                        var g = 28 * J.organizedSaveList.length + 1;
                        b.contains(this.mouseX, this.mouseY) && (this.saveListScroll -= 3 * d.Instance.mouseWheelDelta);
                        0 > this.saveListScroll ? this.saveListScroll = 0 : this.saveListScroll > Math.max(0, g - 140) && (this.saveListScroll = Math.max(0, g - 140));
                        var p = Math.floor(Math.max(20, Math.min(140, 140 / g * 140)))
                          , y = Math.floor(this.saveListScroll / (g - 140) * (140 - p));
                        h = new ca(d.screenWidth / 2 + 300 - 21,101 + y,20,p - 1);
                        if (h.contains(this.mouseX, this.mouseY) || "saveScroll" == Na.selectedGUI)
                            1 == d.Instance.mouseDown() || "saveScroll" == Na.selectedGUI && Q.gt(d.Instance.mouseDown(), 0) ? ("saveScroll" != Na.selectedGUI && (Na.selectedGUI = "saveScroll",
                            Na.selectedGUIOffset = this.mouseY - y - 101),
                            this.saveListScroll = Math.max(0, Math.min(g - 140, (g - 140) * (this.mouseY - 100 - Na.selectedGUIOffset) / (140 - p)))) : "saveScroll" == Na.selectedGUI && (Na.selectedGUI = "");
                        this.fillRect(this.menuData, b, -1116161);
                        g = 0;
                        this.fillRect(this.menuData, f, -16777216);
                        this.fillRect(this.menuData, h, -11167233);
                        this.fillRect(this.menuData, F.tempDrawRectangles[0].set(f.x, 101, 1, 140), -6710887);
                        this.fillRect(this.menuData, F.tempDrawRectangles[0].set(h.x + 5, Math.floor(h.y + h.height / 2 - 1), h.width - 9, 1), -14522710);
                        this.fillRect(this.menuData, F.tempDrawRectangles[0].set(h.x + 5, Math.floor(h.y + h.height / 2 + 1), h.width - 9, 1), -14522710);
                        this.fillRect(this.menuData, F.tempDrawRectangles[0].set(h.x + 5, Math.floor(h.y + h.height / 2 + 3), h.width - 9, 1), -14522710);
                        f = 0;
                        for (h = J.organizedSaveList; f < h.length; ) {
                            p = h[f];
                            ++f;
                            y = J.saveList.h[p];
                            null == y.visibleName && (y.visibleName = y.name);
                            var m = new ca(0,28 * g - this.saveListScroll,578,27)
                              , k = !1;
                            if ((new ca(b.x + 1,b.y + 1 + m.y,m.width,m.height)).contains(this.mouseX, this.mouseY) && l.contains(this.mouseX, this.mouseY)) {
                                this.fillRect(this.saveListMenuData, m, -3348737);
                                this.drawString(y.visibleName, 5 * Math.abs(Math.sin(d.Instance.lastTime / 1E3 * 50 / 10)), 28 * g - this.saveListScroll, 20, this.saveListData, 1, 0, 0, 16777215, !1, 170, 1, "world_" + p);
                                this.drawString("(" + y.type + ")", 170, 28 * g - this.saveListScroll, 20, this.saveListData, 1, 0, 0, 16777215, !1, 100, 1, "world_" + p);
                                this.drawString("Seed: " + y.seed, 250, 28 * g - this.saveListScroll, 20, this.saveListData, 1, 0, 0, 16777215, !1, 200, 1, "world_" + p);
                                new ca(485,28 * g + 1 - this.saveListScroll,24,24);
                                m = new ca(d.screenWidth / 2 - 300 + 485,28 * g + 102 - this.saveListScroll,24,24);
                                if (m.contains(this.mouseX, this.mouseY)) {
                                    if (this.draw(this.saveListMenuData, C.get("infoOver"), 1, 0, 0, 1, 485, 28 * g + 1 - this.saveListScroll),
                                    1 == d.Instance.mouseDown()) {
                                        k = !0;
                                        this.toEdit = p;
                                        this.toEditN = y.visibleName;
                                        m = new uc("/MineBlocks2/saves/" + p + "/data","/");
                                        if (0 >= y.dateCreated)
                                            this.toEditInfo.dateCreated = x.get("UNKNOWN_DATE");
                                        else {
                                            var L = new Date(y.dateCreated);
                                            c = X.dateString(L) + ", ";
                                            this.toEditInfo.dateCreated = c + L.getHours() + ":" + L.getMinutes()
                                        }
                                        0 >= y.date ? this.toEditInfo.date = x.get("UNKNOWN_DATE") : (c = new Date(y.date),
                                        L = X.dateString(c) + ", ",
                                        this.toEditInfo.date = L + c.getHours() + ":" + c.getMinutes());
                                        this.toEditInfo.seed = null == m.data.h.spawnSpot ? null == y.seed ? "null" : "" + y.seed : m.data.h.seed;
                                        this.toEditInfo.spawnSpot = null == m.data.h.spawnSpot ? x.get("UNKNOWN_VALUE") : "x:" + Math.floor(m.data.h.spawnSpot[0]) + ", y:" + Math.floor(-m.data.h.spawnSpot[1]);
                                        this.toEditInfo.createdVersion = "" == y.createdVersion ? x.get("UNKNOWN_VALUE") : y.createdVersion;
                                        this.toEditInfo.lastOpenedVersion = "" == y.lastOpenedVersion ? x.get("UNKNOWN_VALUE") : y.lastOpenedVersion;
                                        N.changeMenuScreen("worldInfo")
                                    }
                                } else
                                    this.draw(this.saveListMenuData, C.get("infoOut"), 1, 0, 0, 1, 485, 28 * g + 1 - this.saveListScroll);
                                new ca(520,28 * g + 1 - this.saveListScroll,24,24);
                                m = new ca(d.screenWidth / 2 - 300 + 520,28 * g + 102 - this.saveListScroll,24,24);
                                m.contains(this.mouseX, this.mouseY) ? (this.draw(this.saveListMenuData, C.get("editOver"), 1, 0, 0, 1, 520, 28 * g + 1 - this.saveListScroll),
                                1 == d.Instance.mouseDown() && (k = !0,
                                this.toEdit = p,
                                this.editWorldName = this.toEditN = y.visibleName,
                                N.changeMenuScreen("editWorld"))) : this.draw(this.saveListMenuData, C.get("editOut"), 1, 0, 0, 1, 520, 28 * g + 1 - this.saveListScroll);
                                new ca(570,28 * g + 1 - this.saveListScroll,24,24);
                                m = new ca(d.screenWidth / 2 - 300 + 550,28 * g + 102 - this.saveListScroll,24,24);
                                m.contains(this.mouseX, this.mouseY) ? (this.draw(this.saveListMenuData, C.get("trashOpen"), 1, 0, 0, 1, 550, 28 * g - 1 - this.saveListScroll),
                                1 == d.Instance.mouseDown() && (k = !0,
                                this.toEdit = p,
                                this.toEditN = y.visibleName,
                                N.changeMenuScreen("confirmDelete"))) : this.draw(this.saveListMenuData, C.get("trashClosed"), 1, 0, 0, 1, 550, 28 * g + 1 - this.saveListScroll);
                                1 != d.Instance.mouseDown() || k || (this.newWorldName = y.name,
                                this.newWorldSeed = null == y.seed ? "null" : "" + y.seed,
                                this.loadWorldClick(p, y))
                            } else
                                this.fillRect(this.saveListMenuData, m, -3355444),
                                this.drawString(y.visibleName, 0, 28 * g + 1 - this.saveListScroll, 20, this.saveListData, 1, 0, 0, 16777215, !1, 170, 1, "world_" + p),
                                this.drawString("(" + y.type + ")", 170, 28 * g + 1 - this.saveListScroll, 20, this.saveListData, 1, 0, 0, 16777215, !1, 100, 1, "world_" + p);
                            ++g
                        }
                        0 == J.organizedSaveList.length && this.drawString(x.get("NO_SAVED_WORLDS"), d.screenWidth / 2 - 299, 101, 20, this.scene, 1, 10066329, .2, null, !1, 500);
                        this.saveListMenuData.resetUnusedQuads();
                        this.saveListData.draw(this.saveListMenuData);
                        this.saveListData.render();
                        this.saveListDataEntity.transform.reset().translate(this.saveListData.get_width() / 2, this.saveListData.get_height() / 2).translate(b.x + 1, b.y + 1);
                        this.scene.draw(this.saveListDataEntity);
                        m = new ca(d.screenWidth / 2 - 300 + 1,240,598,27);
                        m.contains(this.mouseX, this.mouseY) ? (this.fillRect(this.menuData, m, -5585153),
                        this.drawString(x.get("CREATE_NEW_WORLD"), d.screenWidth / 2 - 150 + 4 * Math.sin(d.Instance.lastTime / 1E3 * 50 / 10), 240, 20, this.scene, 1, 4352, 0, null, !0, 300, 1, "world"),
                        1 == d.Instance.mouseDown() && (this.newWorldName = x.get("UNTITLED_WORLD"),
                        this.newWorldSeed = H.string(Math.floor(1E8 * Math.random())),
                        N.changeMenuScreen("newWorld"))) : (this.fillRect(this.menuData, m, -5592406),
                        this.drawString(x.get("CREATE_NEW_WORLD"), d.screenWidth / 2 - 150, 241, 20, this.scene, 1, 4352, 0, null, !0, 300, 1, "world"));
                        N.addButton2(x.get("BACK_BUTTON"), 144, d.screenHeight - 50, function() {
                            N.changeMenuScreen("main")
                        }, 1.2, this.scene, this.menuData, 15)
                    } else
                        "confirmLoadFuture" == N.menuFrame ? (this.fillRect(this.menuData, F.tempDrawRectangles[0].set(d.screenWidth / 2 - 300, 132, 600, 150), -11643041),
                        this.fillRect(this.menuData, F.tempDrawRectangles[0].set(d.screenWidth / 2 - 300, 130, 600, 150), -1116161),
                        N.addButton(x.get("CANCEL"), d.screenWidth / 2 + 112, 245, function() {
                            N.changeMenuScreen("singleplayer")
                        }, 1, this.scene, this.menuData, 8, !1),
                        N.addButton2(x.get("CANCEL") + " ", 144, d.screenHeight - 50, function() {
                            N.changeMenuScreen("singleplayer")
                        }, 1.2, this.scene, this.menuData, 15)) : "confirmDelete" == N.menuFrame ? (this.fillRect(this.menuData, F.tempDrawRectangles[0].set(d.screenWidth / 2 - 300, 132, 600, 150), -11643041),
                        this.fillRect(this.menuData, F.tempDrawRectangles[0].set(d.screenWidth / 2 - 300, 130, 600, 150), -1116161),
                        this.drawString(x.get("CONFIRM_DELETE_WORLD") + "\n\n'" + this.toEditN + "'", d.screenWidth / 2 - 300 + 5, 135, 20, this.scene, 1, 0, 0, null, !1, 590, 3),
                        N.addButton(x.get("YES"), d.screenWidth / 2 - 112, 245, function() {
                            fa.deleteWorld(a.toEdit, function() {
                                N.changeMenuScreen("singleplayer")
                            })
                        }, 1, this.scene, this.menuData, 8, !1),
                        N.addButton(x.get("CANCEL"), d.screenWidth / 2 + 112, 245, function() {
                            N.changeMenuScreen("singleplayer")
                        }, 1, this.scene, this.menuData, 8, !1),
                        N.addButton2(x.get("CANCEL") + " ", 144, d.screenHeight - 50, function() {
                            N.changeMenuScreen("singleplayer")
                        }, 1.2, this.scene, this.menuData, 15)) : "failLoad" == N.menuFrame ? (this.fillRect(this.menuData, F.tempDrawRectangles[0].set(d.screenWidth / 2 - 200, 132, 400, 130), -11643041),
                        this.fillRect(this.menuData, F.tempDrawRectangles[0].set(d.screenWidth / 2 - 200, 130, 400, 130), -1116161),
                        this.drawString(x.get("WORLD_FAILED_TO_LOAD").split("{1}").join(this.toEditN), d.screenWidth / 2 - 200 + 5, 135, 20, this.scene, 1, 0, 0, null, !1, 390),
                        N.addButton(x.get("YES"), d.screenWidth / 2 - 112, 225, function() {
                            fa.deleteWorld(a.toEdit, function() {
                                N.changeMenuScreen("singleplayer")
                            })
                        }, 1, this.scene, this.menuData, 8, !1),
                        N.addButton(x.get("NO"), d.screenWidth / 2 + 112, 225, function() {
                            N.changeMenuScreen("singleplayer")
                        }, 1, this.scene, this.menuData, 8, !1),
                        N.addButton2(x.get("NO") + " ", 144, d.screenHeight - 50, function() {
                            N.changeMenuScreen("singleplayer")
                        }, 1.2, this.scene, this.menuData, 15)) : "worldInfo" == N.menuFrame ? (this.fillRect(this.menuData, F.tempDrawRectangles[0].set(d.screenWidth / 2 - 250, 112, 500, 180), -11643041),
                        this.fillRect(this.menuData, F.tempDrawRectangles[0].set(d.screenWidth / 2 - 250, 110, 500, 180), -1116161),
                        this.drawString(x.get("INFORMATION_FOR_WORLD").split("{1}").join(this.toEditN), d.screenWidth / 2 - 250 + 5, 115, 20, this.scene, 1, 0, 0, null, !1, 390),
                        this.drawString("  - " + x.get("SAVE_DIRECTORY") + ": #" + this.toEdit, d.screenWidth / 2 - 250 + 5, 140, 15, this.scene, 1, 0, 0, null, !1, 390),
                        this.drawString("  - " + x.get("DATE_CREATED") + ": " + this.toEditInfo.dateCreated, d.screenWidth / 2 - 250 + 5, 155, 15, this.scene, 1, 0, 0, null, !1, 390),
                        this.drawString("  - " + x.get("DATE_LAST_OPENED") + ": " + this.toEditInfo.date, d.screenWidth / 2 - 250 + 5, 170, 15, this.scene, 1, 0, 0, null, !1, 390),
                        this.drawString("  - " + x.get("SEED_NUMBER") + ": " + this.toEditInfo.seed, d.screenWidth / 2 - 250 + 5, 185, 15, this.scene, 1, 0, 0, null, !1, 390),
                        this.drawString("  - " + x.get("SPAWN_POINT") + ": " + this.toEditInfo.spawnSpot, d.screenWidth / 2 - 250 + 5, 200, 15, this.scene, 1, 0, 0, null, !1, 390),
                        this.drawString("  - " + x.get("VERSION_CREATED") + ": " + this.toEditInfo.createdVersion, d.screenWidth / 2 - 250 + 5, 215, 15, this.scene, 1, 0, 0, null, !1, 390),
                        this.drawString("  - " + x.get("VERSION_LAST_OPENED") + ": " + this.toEditInfo.lastOpenedVersion, d.screenWidth / 2 - 250 + 5, 230, 15, this.scene, 1, 0, 0, null, !1, 390),
                        N.addButton(x.get("BACK_BUTTON") + " ", d.screenWidth / 2, 260, function() {
                            N.changeMenuScreen("singleplayer")
                        }, 1, this.scene, this.menuData, 8, !1),
                        N.addButton2(x.get("BACK_BUTTON"), 144, d.screenHeight - 50, function() {
                            N.changeMenuScreen("singleplayer")
                        }, 1.2, this.scene, this.menuData, 15)) : "editWorld" == N.menuFrame ? (this.fillRect(this.menuData, F.tempDrawRectangles[0].set(d.screenWidth / 2 - 250, 132, 500, 130), -11643041),
                        this.fillRect(this.menuData, F.tempDrawRectangles[0].set(d.screenWidth / 2 - 250, 130, 500, 130), -1116161),
                        this.drawString(x.get("EDIT_SAVE_INFO").split("{1}").join(this.toEditN), d.screenWidth / 2 - 250 + 5, 135, 20, this.scene, 1, 0, 0, null, !1, 390),
                        this.drawString(x.get("WORLD_NAME") + ": ", d.screenWidth / 2 - 112 - 2 - 300, 170, 20, this.scene, 1, 0, 0, null, 2, 300),
                        this.addTextbox("worldName", this.editWorldName, function(b) {
                            a.editWorldName = b
                        }, d.screenWidth / 2 - 112, 170, 25, this.menuData, 20, 25, "alphanumeric", !0),
                        N.addButton(x.get("OKAY"), d.screenWidth / 2 - 112, 215, function() {
                            fa.editWorld(a.toEdit, a.editWorldName);
                            N.changeMenuScreen("singleplayer")
                        }, 1, this.scene, this.menuData, 8, !1),
                        N.addButton(x.get("CANCEL"), d.screenWidth / 2 + 112, 215, function() {
                            N.changeMenuScreen("singleplayer")
                        }, 1, this.scene, this.menuData, 8, !1),
                        N.addButton2(x.get("CANCEL") + " ", 144, d.screenHeight - 50, function() {
                            N.changeMenuScreen("singleplayer")
                        }, 1.2, this.scene, this.menuData, 15)) : "newWorld" == N.menuFrame && (this.fillRect(this.menuData, F.tempDrawRectangles[0].set(d.screenWidth / 2 - 250, 142, 500, 150), -11643041),
                        this.fillRect(this.menuData, F.tempDrawRectangles[0].set(d.screenWidth / 2 - 250, 140, 500, 150), -1116161),
                        this.drawString(x.get("WORLD_NAME") + ":", d.screenWidth / 2 - 112 - 300 - 5, 165, 20, this.scene, 1, 0, 0, 16777215, 2, 300),
                        this.drawString(x.get("SEED_NUMBER") + ":", d.screenWidth / 2 - 112 - 300 - 5, 195, 20, this.scene, 1, 0, 0, 16777215, 2, 300),
                        this.addTextbox("worldName", this.newWorldName, function(b) {
                            a.newWorldName = b
                        }, d.screenWidth / 2 - 112, 165, 25, this.menuData, 20, 25, "alphanumeric", !0),
                        this.addTextbox("worldSeed", this.newWorldSeed, function(b) {
                            a.newWorldSeed = b
                        }, d.screenWidth / 2 - 112, 195, 25, this.menuData, 20, 10, "number", !0),
                        1 == d.Instance.keyDown(9) && ("worldName" == Na.selectedGUI && (Na.selectedGUI = "worldSeed"),
                        "worldSeed" == Na.selectedGUI && Q.gt(d.Instance.keyDown(1073742049), 0) && (Na.selectedGUI = "worldName")),
                        1 == d.Instance.keyDown(13) && "worldName" == Na.selectedGUI && (Na.selectedGUI = "worldSeed"),
                        N.addButton(x.get("SURVIVAL"), d.screenWidth / 2 - 112, 245, function() {
                            a.newWorld("survival")
                        }, 1, this.scene, this.menuData, 8, !1),
                        N.addButton(x.get("CREATIVE"), d.screenWidth / 2 + 112, 245, function() {
                            a.newWorld("creative")
                        }, 1, this.scene, this.menuData, 8, !1),
                        N.addButton2(x.get("CANCEL"), 144, d.screenHeight - 50, function() {
                            N.changeMenuScreen("singleplayer")
                        }, 1.2, this.scene, this.menuData, 15));
                    this.drawString(x.get("BY_ZANZLANZ"), d.screenWidth - 105, d.screenHeight - 30, 20, this.scene, 1, 16777215, 0, 0, 2, 100);
                    this.drawString(x.version, d.screenWidth - 105, 5, 20, this.scene, 1, 16777215, 0, 0, 2, 100);
                    this.newspaperCursor && this.draw(this.menuData, C.get("newspaper"), 1, 0, 0, 1, this.mouseX, this.mouseY);
                    this.menuData.resetUnusedQuads();
                    this.scene.draw(this.menuData)
                },
                loadWorldClick: function(a, b, c) {
                    null == c && (c = !1);
                    this.saveName = this.toEdit = a;
                    this.toEditN = b.visibleName;
                    0 == c && (null == b.lastOpenedVersion || d.versionToNumber(b.lastOpenedVersion) > d.versionToNumber("0.8.1")) ? N.menuFrame = "confirmLoadFuture" : (this.loadWorld = !0,
                    this.startGame())
                },
                render: function() {
                    F.prototype.render.call(this)
                },
                resize: function() {
                    F.prototype.resize.call(this)
                },
                generateTitleBG: function() {
                    null == this.titleScreenBGEntity && (this.titleScreenBGEntity = X.createQuadPoolEntity(C.textures, 10));
                    this.titleScreenBGEntity.clearPool();
                    var a = 13 + (5 * Math.random() | 0) - 2;
                    this.fillRect(this.titleScreenBGEntity, F.tempDrawRectangles[0].set(0, 0, 3 * d.screenWidth, d.screenHeight), 0);
                    for (var b = 0, c = Math.ceil(d.screenWidth / 16 * 3); b < c; ) {
                        var f = b++;
                        .5 > Math.random() && (a += (3 * Math.random() | 0) - 1);
                        17 < a && (a = 17);
                        12 > a && (a = 12);
                        for (var h = a, l = Math.ceil(d.screenHeight / 16); h < l; ) {
                            var g = h++;
                            g == a ? 0 < X.randomNumber(0, 2) ? this.copyPixels(this.titleScreenBGEntity, C.get(["grass_short", "grass_medium", "grass_tall"][3 * Math.random() | 0]), F.tempDrawRectangles[0].set(0, 0, 16, 16), F.tempDrawPoints[0].set(16 * f, 16 * g)) : 0 == X.randomNumber(0, 4) && this.copyPixels(this.titleScreenBGEntity, C.get(["flower_patch_red", "flower_patch_yellow"][2 * Math.random() | 0]), F.tempDrawRectangles[0].set(0, 0, 16, 16), F.tempDrawPoints[0].set(16 * f, 16 * g)) : g == a + 1 ? this.copyPixels(this.titleScreenBGEntity, C.get("dirt_grass"), F.tempDrawRectangles[0].set(0, 0, 16, 16), F.tempDrawPoints[0].set(16 * f, 16 * g)) : g < a + 7 || g < a + 8 && 0 == X.randomNumber(0, 1) ? g > a + 4 || g > a + 3 && 0 == X.randomNumber(0, 1) ? this.copyPixels(this.titleScreenBGEntity, C.get("dirt_gravel"), F.tempDrawRectangles[0].set(0, 0, 16, 16), F.tempDrawPoints[0].set(16 * f, 16 * g)) : this.copyPixels(this.titleScreenBGEntity, C.get("dirt"), F.tempDrawRectangles[0].set(0, 0, 16, 16), F.tempDrawPoints[0].set(16 * f, 16 * g)) : this.copyPixels(this.titleScreenBGEntity, C.get("stone"), F.tempDrawRectangles[0].set(0, 0, 16, 16), F.tempDrawPoints[0].set(16 * f, 16 * g))
                        }
                    }
                    this.titleScreenBGEntity.resetUnusedQuads()
                },
                handleLoadSuccessful: function(a) {
                    a = gc.parseVariables(a);
                    null != a.h.latestVersion && (this.latestVersion = a.h.latestVersion);
                    null != a.h.lockDomain && (this.lockDomain = "true" == a.h.lockDomain);
                    null != a.h.message && (this.newsMessage = a.h.message);
                    null != a.h.messageURL && (this.newsMessageURL = a.h.messageURL);
                    null != a.h.updateURL && (this.updateURL = a.h.updateURL);
                    null != a.h.updateNotes && (this.updateNotes = a.h.updateNotes)
                },
                handleLoadError: function(a) {
                    this.failedToConnectToWebsite = !0
                },
                buttonLogic: function(a, b, c, f, h, l) {
                    Object.prototype.hasOwnProperty.call(this.buttonsToRender.h, a) || (this.buttonsToRender.h[a] = {
                        id: a,
                        x: b,
                        y: c,
                        width: f,
                        height: h,
                        state: 0
                    });
                    if (this.mouseX > b && this.mouseX < b + f && this.mouseY > c && this.mouseY < c + h)
                        return Q.gt(d.Instance.mouseDown(), 0) ? (this.buttonsToRender.h[a].state = 2,
                        1 == d.Instance.mouseDown() && l()) : this.buttonsToRender.h[a].state = 1,
                        !0;
                    this.buttonsToRender.h[a].state = 0;
                    return !1
                },
                buttonRender: function(a) {
                    return this.buttonsToRender.h[a].state
                },
                addTextbox: function(a, b, c, f, h, l, g, p, y, m, k) {
                    null == m && (m = "alphanumeric");
                    null == y && (y = 20);
                    null == p && (p = 20);
                    null == l && (l = 15);
                    k = new ca(f,h,16 * p,l + 2);
                    var q = new ca(f + 1,h + 1,16 * p - 2,l)
                      , L = new ca(f - 1,h - 1,16 * p + 2,l + 4)
                      , v = .030303030303030304 * l;
                    if (null != N.fields.h[a] && N.fields.h[a].tick != d.Instance.tick - 1) {
                        var z = N.fields;
                        Object.prototype.hasOwnProperty.call(z.h, a) && delete z.h[a]
                    }
                    if (null == N.fields.h[a]) {
                        var O = za.get(a, b, 37, new W, sa.get_jaggedDreams(), Pa.black, v, zb.LEFT, 1.5);
                        z = N.fields;
                        l = {
                            tick: d.Instance.tick,
                            textField: O,
                            input: new Ea(O,new W(16 * p / v,sa.get_jaggedDreams().height),l)
                        };
                        z.h[a] = l;
                        N.fields.h[a].input.set_leftScrollPadding(4)
                    }
                    l = N.fields.h[a];
                    this.fillRect(g, L, -16777216);
                    this.fillRect(g, k, -16737793);
                    Na.selectedGUI == a ? (this.fillRect(g, L, -16737793),
                    this.fillRect(g, k, -6702081),
                    l.input.set_focused(!0)) : k.contains(this.mouseX, this.mouseY) && 1 == d.Instance.mouseDown() && (Na.selectedGUI = a,
                    l.input.set_focused(!0));
                    this.fillRect(g, q, -1);
                    l.input.updateLayers();
                    l.tick = d.Instance.tick;
                    l.input.transform.reset().scale2D(v).translate(f, h);
                    l.input.set_maxLength(y);
                    switch (m) {
                    case "alphanumeric":
                        a = "0-9a-zA-Z /{}=`,;'.\\-\\\\";
                        break;
                    case "name":
                        a = "0-9a-zA-Z:.\\-";
                        break;
                    case "number":
                        a = "0-9";
                        break;
                    default:
                        a = ""
                    }
                    l.input.set_allowedCharacters(a);
                    l.input.containsPoint(d.Instance.mouse) ? l.input.focused || (d.Instance.cursor = Cb.TEXT,
                    1 == d.Instance.mouseDown() && (l.input.set_focused(!0),
                    l.input.mouseDownHandler(d.Instance.mouse.x, d.Instance.mouse.y, 0))) : l.input.focused && 1 == d.Instance.mouseDown() && l.input.set_focused(!1);
                    b != l.input.get_text() && (b = l.input.get_text(),
                    c(b));
                    l.input.update(this.scene)
                },
                __class__: N
            });
            var bd = function(a, b, c) {
                this.clouds = [];
                this.menu = !1;
                null == c && (c = new Rb);
                this.weatherAndTime = c;
                F.call(this, a, b)
            };
            g["scenes.Scene_Sky"] = bd;
            bd.__name__ = "scenes.Scene_Sky";
            bd.__super__ = F;
            bd.prototype = n(F.prototype, {
                init: function() {
                    F.prototype.init.call(this);
                    this.skyColorEntity = new Pb([],wb.createQuad(1, 1),hc.getShader());
                    this.skyColorEntity.isTransparent = !0;
                    this.skyColorEntity.layer = 0;
                    this.starsEntity = new Pb([],wb.createQuad(1, 1),Wb.getShader());
                    Wb.setupEntity(this.starsEntity, xa.getImage("stars"), null, new Pa(-1));
                    this.starsEntity.isTransparent = !0;
                    this.starsEntity.layer = 1;
                    this.skyBackgroundEntity = X.createQuadPoolEntity(C.textures, 3)
                },
                logic: function() {
                    F.prototype.logic.call(this);
                    var a = T.modulus(this.weatherAndTime.timeOfDay + 50, 100);
                    if (10 > this.weatherAndTime.timeOfDay) {
                        var b = this.weatherAndTime.timeOfDay / 10;
                        var c = b / 3;
                        var f = b / 2;
                        var h = b / 1;
                        var l = b / 1;
                        var g = b / 2;
                        var p = b / 3
                    } else
                        25 > this.weatherAndTime.timeOfDay ? (b = (this.weatherAndTime.timeOfDay - 10) / 15,
                        c = .3333333333333333 + b / 4,
                        f = .5 + b / 3,
                        h = 1,
                        l = 1 - b / 3,
                        g = .5 + b / 2,
                        p = .3333333333333333 + b / 3 * 2) : 40 > this.weatherAndTime.timeOfDay ? (b = (this.weatherAndTime.timeOfDay - 25) / 15,
                        c = .5833333333333334 - b / 4,
                        f = .8333333333333334 - b / 3,
                        h = 1,
                        l = .6666666666666666 + b / 3,
                        g = 1 - b / 2,
                        p = 1 - b / 3 * 2) : 50 > this.weatherAndTime.timeOfDay ? (b = (this.weatherAndTime.timeOfDay - 40) / 10,
                        c = .3333333333333333 - b / 3,
                        f = .5 - b / 2,
                        h = 1 - b / 1,
                        l = 1 - b / 1,
                        g = .5 - b / 2,
                        p = .3333333333333333 - b / 3) : p = g = l = h = f = c = 0;
                    var y = this.skyColorEntity;
                    b = [];
                    for (var m = 0, k = [c, f, h, 1]; m < k.length; )
                        b.push(k[m++]);
                    m = 0;
                    for (k = [l, g, p, 1]; m < k.length; )
                        b.push(k[m++]);
                    m = 0;
                    for (k = [c, f, h, 1]; m < k.length; )
                        b.push(k[m++]);
                    m = 0;
                    for (k = [c, f, h, 1]; m < k.length; )
                        b.push(k[m++]);
                    m = 0;
                    for (k = [l, g, p, 1]; m < k.length; )
                        b.push(k[m++]);
                    m = 0;
                    for (k = [l, g, p, 1]; m < k.length; )
                        b.push(k[m++]);
                    y.setAttrib("color", b);
                    f = 0;
                    c = 10 > this.weatherAndTime.timeOfDay ? this.weatherAndTime.timeOfDay / 10 : 20 > this.weatherAndTime.timeOfDay ? (20 - this.weatherAndTime.timeOfDay) / 10 : 30 < this.weatherAndTime.timeOfDay && 40 >= this.weatherAndTime.timeOfDay ? (this.weatherAndTime.timeOfDay - 30) / 10 : 40 < this.weatherAndTime.timeOfDay && 50 > this.weatherAndTime.timeOfDay ? (50 - this.weatherAndTime.timeOfDay) / 10 : 0;
                    45 <= this.weatherAndTime.timeOfDay && 55 >= this.weatherAndTime.timeOfDay ? f = (this.weatherAndTime.timeOfDay - 45) / 10 : 5 <= a && 45 > a ? f = 1 : 55 >= a && (f = (55 - a) / 10);
                    this.scene.draw(this.skyColorEntity);
                    b = Math.max(d.screenWidth / 900, d.screenHeight / 360);
                    this.starsEntity.transform.reset().scale(1600, 1600).rotate2D(-this.weatherAndTime.skySpot / 100 * 2 * Math.PI).scale(.8316008316008316 * b, .8316008316008316 * b).translate(d.screenWidth / 2, d.screenHeight);
                    this.starsEntity.setUniform("color", [1, 1, 1, f]);
                    this.scene.draw(this.starsEntity);
                    this.skyBackgroundEntity.clearPool();
                    y = this.skyBackgroundEntity;
                    b = C.get("sun");
                    a = d.screenWidth / 2 + .8 * Math.sin((this.weatherAndTime.timeOfDay + 75) / 100 * 2 * Math.PI) * d.screenHeight - 24;
                    h = d.screenHeight - .8 * Math.cos((this.weatherAndTime.timeOfDay + 75) / 100 * 2 * Math.PI) * d.screenHeight - 24;
                    this.copyPixels(y, b, new ca(0,0,48,48), new W(a,h));
                    y = this.skyBackgroundEntity;
                    b = C.get("moon1");
                    a = d.screenWidth / 2 + .8 * Math.sin((this.weatherAndTime.timeOfDay + 25) / 100 * 2 * Math.PI) * d.screenHeight - 16;
                    h = d.screenHeight - .8 * Math.cos((this.weatherAndTime.timeOfDay + 25) / 100 * 2 * Math.PI) * d.screenHeight - 16;
                    this.copyPixels(y, b, new ca(0,0,32,32), new W(a,h));
                    y = this.skyBackgroundEntity;
                    b = C.get("moon2");
                    a = d.screenWidth / 2 + .65 * Math.sin((this.weatherAndTime.moon2Spot + 79) / 100 * 2 * Math.PI) * d.screenHeight - 16;
                    h = d.screenHeight - .65 * Math.cos((this.weatherAndTime.moon2Spot + 79) / 100 * 2 * Math.PI) * d.screenHeight - 16;
                    this.copyPixels(y, b, new ca(0,0,32,32), new W(a,h));
                    y = this.skyBackgroundEntity;
                    b = C.get("moon3");
                    a = d.screenWidth / 2 + .92 * Math.sin((this.weatherAndTime.moon3Spot + 11) / 100 * 2 * Math.PI) * d.screenHeight - 16;
                    h = d.screenHeight + .92 * Math.cos((this.weatherAndTime.moon3Spot + 11) / 100 * 2 * Math.PI) * d.screenHeight - 16;
                    this.copyPixels(y, b, new ca(0,0,32,32), new W(a,h));
                    0 == X.randomNumber(0, 220 - this.weatherAndTime.cloudiness * this.weatherAndTime.cloudiness / 50) && (b = X.randomNumber(0, 9),
                    b = this.clouds[b],
                    y = "c" + Math.random(),
                    a = {
                        type: "cloud" + X.randomNumber(1, 3),
                        alpha: X.randomNumber(50, 100),
                        deteriorate: !1,
                        x: -716.8,
                        y: X.randomNumber(0, 100),
                        xSpeed: X.randomNumber(0, 15)
                    },
                    b.h[y] = a);
                    0 == X.randomNumber(0, 900) && (y = Math.min(100, this.weatherAndTime.cloudiness + X.randomNumber(-30, 30)),
                    this.weatherAndTime.cloudiness = Math.max(0, y));
                    for (b = 0; 10 > b; )
                        for (y = b++,
                        a = Object.keys(this.clouds[y].h),
                        h = a.length,
                        l = 0; l < h; )
                            if (g = a[l++],
                            this.clouds[y].h[g].x += (this.clouds[y].h[g].xSpeed / 10 + 5) * (5 * y + 1) / 16 * d.Instance.timeDelta,
                            p = this.menu ? 150 + 20 * (3 - y + this.clouds[y].h[g].y / 100) : 150 + ((E.worldHeight + 100 - d.Instance.gameScene.world.mobs.h["char"].h.y) / 2 + 20) * (3 - y + this.clouds[y].h[g].y / 100),
                            this.draw(this.skyBackgroundEntity, C.get(this.clouds[y].h[g].type), (y + 4) / 5, 0, 0, (y + 4) / 5, this.clouds[y].h[g].x, p, 1 - .9 * f, 1 - .9 * f - .3 * c, 1 - .9 * f - .5 * c, this.clouds[y].h[g].alpha / 100),
                            0 == X.randomNumber(0, 2E3 + 50 * this.weatherAndTime.cloudiness) && (this.clouds[y].h[g].deteriorate = !0),
                            this.clouds[y].h[g].deteriorate && (this.clouds[y].h[g].alpha -= .2),
                            0 >= this.clouds[y].h[g].alpha || this.clouds[y].h[g].x >= d.screenWidth)
                                p = this.clouds[y],
                                Object.prototype.hasOwnProperty.call(p.h, g) && delete p.h[g];
                    !this.menu && 150 > d.Instance.gameScene.world.mobs.h["char"].h.y && this.draw(this.skyBackgroundEntity, C.get("black"), d.screenWidth / 16, 0, 0, d.screenHeight / 16, 0, 0, 1, 1, 1, Math.max(1, 1 + (-d.Instance.gameScene.world.mobs.h["char"].h.y + 140) / 50));
                    this.skyBackgroundEntity.resetUnusedQuads();
                    this.scene.draw(this.skyBackgroundEntity)
                },
                reloadClouds: function() {
                    var a = [];
                    a.push(new p);
                    a.push(new p);
                    a.push(new p);
                    a.push(new p);
                    a.push(new p);
                    a.push(new p);
                    a.push(new p);
                    a.push(new p);
                    a.push(new p);
                    a.push(new p);
                    this.clouds = a;
                    a = 0;
                    for (var b = this.weatherAndTime.cloudiness / 2 + 1 | 0; a < b; ) {
                        ++a;
                        var c = X.randomNumber(0, 9);
                        c = this.clouds[c];
                        var f = "c" + Math.random()
                          , h = {
                            type: "cloud" + X.randomNumber(1, 3),
                            alpha: X.randomNumber(50, 100),
                            deteriorate: !1,
                            x: X.randomNumber(-716.8, d.screenWidth),
                            y: X.randomNumber(0, 100),
                            xSpeed: X.randomNumber(0, 15)
                        };
                        c.h[f] = h
                    }
                },
                render: function() {
                    F.prototype.render.call(this)
                },
                resize: function() {
                    F.prototype.resize.call(this);
                    this.skyColorEntity.transform.reset().scale(d.screenWidth, d.screenHeight).translate(d.screenWidth / 2, d.screenHeight / 2)
                },
                __class__: bd
            });
            var xc = function() {};
            g["shader.ColorTextures"] = xc;
            xc.__name__ = "shader.ColorTextures";
            xc.getShader = function() {
                if (null != xc.shader)
                    return xc.shader;
                var a = new fc("shader.color_textures",xc.getFragmentShader(),xc.getVertexShader());
                a.setBuiltInBuffers("vertexPosition", "modelMatrix", "cameraMatrix", "projectionMatrix", "uvPosition");
                a.setAttrib("texClip", "float", 4);
                a.setUniform("texSize", [0, 0], "float2");
                a.setAttrib("color", "float", 4);
                a.setAttrib("colorOffset", "float", 4);
                return xc.shader = a
            }
            ;
            xc.getFragmentShader = function() {
                return "precision mediump float;\r\n\t\t\tvarying vec2 uvPositionF;\r\n\t\t\tvarying vec4 texClipF;\r\n\t\t\tvarying vec4 colorOffsetF;\r\n\t\t\tvarying vec4 colorF;\r\n\t\t\t\r\n\t\t\tuniform sampler2D texture;\r\n\t\t\tuniform vec2 texSize;\r\n\t\t\t\r\n\t\t\tvoid main () {\r\n\t\t\t\tvec4 src = texture2D(texture, mod(\r\n\t\t\t\t\t(clamp(mod(uvPositionF, 1.0) * texClipF.zw, min(vec2(0.5, 0.5), texClipF.zw-.5), max(vec2(0.5, 0.5), texClipF.zw-.5)) + texClipF.xy) / texSize.xy,\r\n\t\t\t\t\t1.0)\r\n\t\t\t\t);\r\n\t\t\t\t\r\n\t\t\t\tsrc.rgb /= max(src.a, 0.00001);\r\n\t\t\t\tsrc.rgba *= colorF;\r\n\t\t\t\tsrc.rgb *= src.a;\r\n\t\t\t\t\r\n\t\t\t\tgl_FragColor = clamp(colorOffsetF + src, 0.0, 1.0);\r\n\t\t\t}\r\n\t\t\t"
            }
            ;
            xc.getVertexShader = function() {
                return "precision mediump float;\r\n\t\t\tattribute vec3 vertexPosition;\r\n\t\t\tattribute vec2 uvPosition;\r\n\t\t\tattribute vec4 texClip;\r\n\t\t\tattribute vec4 colorOffset;\r\n\t\t\tattribute vec4 color;\r\n\r\n\t\t\tvarying vec4 colorOffsetF;\r\n\t\t\tvarying vec4 colorF;\r\n\t\t\t\r\n\t\t\tvarying vec4 texClipF;\r\n\t\t\tvarying vec2 uvPositionF;\r\n\t\t\t\r\n\t\t\tuniform mat4 projectionMatrix;\r\n\t\t\tuniform mat4 cameraMatrix;\r\n\t\t\tuniform mat4 modelMatrix;\r\n\t\t\t\r\n\t\t\tvoid main () {\r\n\t\t\t\tuvPositionF = uvPosition;\r\n\t\t\t\ttexClipF = texClip;\r\n\t\t\t\tcolorOffsetF = colorOffset;\r\n\t\t\t\tcolorF = color;\r\n\t\t\t\t\r\n\t\t\t\tgl_Position = projectionMatrix * cameraMatrix * modelMatrix * vec4(vertexPosition, 1.0);\r\n\t\t\t}\r\n\t\t\t"
            }
            ;
            var wc = function() {};
            g["shader.ColorTexturesWithMask"] = wc;
            wc.__name__ = "shader.ColorTexturesWithMask";
            wc.getShader = function() {
                if (null != wc.shader)
                    return wc.shader;
                var a = new fc("shader.color_textures_with_mask",wc.getFragmentShader(),wc.getVertexShader());
                a.setBuiltInBuffers("vertexPosition", "modelMatrix", "cameraMatrix", "projectionMatrix", "uvPosition");
                a.setAttrib("texClip", "float", 4);
                a.setUniform("texSize", [0, 0], "float2");
                a.setAttrib("color", "float", 4);
                a.setAttrib("colorOffset", "float", 4);
                a.setAttrib("maskClip", "float", 4);
                return wc.shader = a
            }
            ;
            wc.getFragmentShader = function() {
                return "precision mediump float;\r\n\t\t\tvarying vec2 uvPositionF;\r\n\t\t\tvarying vec4 texClipF;\r\n\t\t\tvarying vec4 colorOffsetF;\r\n\t\t\tvarying vec4 colorF;\r\n\t\t\tvarying vec4 maskClipF;\r\n\t\t\t\r\n\t\t\tuniform sampler2D texture;\r\n\t\t\tuniform vec2 texSize;\r\n\t\t\t\r\n\t\t\tvoid main () {\r\n\t\t\t\tvec4 src = texture2D(texture, mod(\r\n\t\t\t\t\t(clamp(mod(uvPositionF, 1.0) * texClipF.zw, min(vec2(0.5, 0.5), texClipF.zw-.5), max(vec2(0.5, 0.5), texClipF.zw-.5)) + texClipF.xy) / texSize.xy,\r\n\t\t\t\t\t1.0)\r\n\t\t\t\t);\r\n\t\t\t\t\r\n\t\t\t\tsrc.rgb /= max(src.a, 0.00001);\r\n\t\t\t\tsrc.rgba *= colorF;\r\n\t\t\t\tif(maskClipF.z > 0.0) {\r\n\t\t\t\t\tsrc.a *= texture2D(texture, mod(\r\n\t\t\t\t\t\t(clamp(mod(uvPositionF, 1.0) * maskClipF.zw, min(vec2(0.5, 0.5), maskClipF.zw-.5), max(vec2(0.5, 0.5), maskClipF.zw-.5)) + maskClipF.xy) / texSize.xy,\r\n\t\t\t\t\t\t1.0)\r\n\t\t\t\t\t).a;\r\n\t\t\t\t}\r\n\t\t\t\tsrc.rgb *= src.a;\r\n\t\t\t\t\r\n\t\t\t\tgl_FragColor = clamp(colorOffsetF + src, 0.0, 1.0);\r\n\t\t\t}\r\n\t\t\t"
            }
            ;
            wc.getVertexShader = function() {
                return "precision mediump float;\r\n\t\t\tattribute vec3 vertexPosition;\r\n\t\t\tattribute vec2 uvPosition;\r\n\t\t\tattribute vec4 texClip;\r\n\t\t\tattribute vec4 colorOffset;\r\n\t\t\tattribute vec4 color;\r\n\t\t\tattribute vec4 maskClip;\r\n\r\n\t\t\tvarying vec4 colorOffsetF;\r\n\t\t\tvarying vec4 colorF;\r\n\t\t\t\r\n\t\t\tvarying vec4 texClipF;\r\n\t\t\tvarying vec2 uvPositionF;\r\n\t\t\t\r\n\t\t\tvarying vec4 maskClipF;\r\n\t\t\t\r\n\t\t\tuniform mat4 projectionMatrix;\r\n\t\t\tuniform mat4 cameraMatrix;\r\n\t\t\tuniform mat4 modelMatrix;\r\n\t\t\t\r\n\t\t\tvoid main () {\r\n\t\t\t\tuvPositionF = uvPosition;\r\n\t\t\t\ttexClipF = texClip;\r\n\t\t\t\tcolorOffsetF = colorOffset;\r\n\t\t\t\tcolorF = color;\r\n\t\t\t\tmaskClipF = maskClip;\r\n\t\t\t\t\r\n\t\t\t\tgl_Position = projectionMatrix * cameraMatrix * modelMatrix * vec4(vertexPosition, 1.0);\r\n\t\t\t}\r\n\t\t\t"
            }
            ;
            var vc = function() {};
            g["shader.LightingShader"] = vc;
            vc.__name__ = "shader.LightingShader";
            vc.getShader = function() {
                if (null != vc.shader)
                    return vc.shader;
                var a = new fc("shader.lighting",vc.getFragmentShader(),vc.getVertexShader());
                a.setBuiltInBuffers("vertexPosition", "modelMatrix", "cameraMatrix", "projectionMatrix", "uvPosition");
                a.setAttrib("texClip", "float", 4);
                a.setUniform("texSize", [0, 0], "float2");
                a.setUniform("blockiness", 0, "float");
                return vc.shader = a
            }
            ;
            vc.getFragmentShader = function() {
                return "precision mediump float;\r\n\t\t\tvarying vec2 uvPositionF;\r\n\t\t\tvarying vec4 texClipF;\r\n\t\t\t\r\n\t\t\tuniform sampler2D texture;\r\n\t\t\tuniform vec2 texSize;\r\n\t\t\tuniform float blockiness;\r\n\t\t\t\r\n\t\t\tvec4 tex(vec2 pos) {\r\n\t\t\t\treturn texture2D(texture, pos / texSize.xy);\r\n\t\t\t}\r\n\t\t\tvoid main() {\r\n\t\t\t\tvec2 pos = (floor((uvPositionF * texClipF.zw + texClipF.xy)*blockiness) + vec2(.5, .5))/blockiness;\r\n\r\n\t\t\t\tvec4 src = tex(pos + vec2(0.0, 0.0))*.5\r\n\t\t\t\t\t\t\t+ (\r\n\t\t\t\t\t\t\t\t  tex(pos + vec2(-1.0,  0.0))\r\n\t\t\t\t\t\t\t\t+ tex(pos + vec2( 0.0, -1.0))\r\n\t\t\t\t\t\t\t\t+ tex(pos + vec2( 1.0,  0.0))\r\n\t\t\t\t\t\t\t\t+ tex(pos + vec2( 0.0,  1.0))\r\n\t\t\t\t\t\t\t)*.125;\r\n\t\t\t\t\r\n\t\t\t\tgl_FragColor = clamp(src, 0.0, 1.0);\r\n\t\t\t}\r\n\t\t\t"
            }
            ;
            vc.getVertexShader = function() {
                return "precision mediump float;\r\n\t\t\tattribute vec3 vertexPosition;\r\n\t\t\tattribute vec2 uvPosition;\r\n\t\t\tattribute vec4 texClip;\r\n\t\t\t\r\n\t\t\tvarying vec4 texClipF;\r\n\t\t\tvarying vec2 uvPositionF;\r\n\t\t\t\r\n\t\t\tuniform mat4 projectionMatrix;\r\n\t\t\tuniform mat4 cameraMatrix;\r\n\t\t\tuniform mat4 modelMatrix;\r\n\t\t\t\r\n\t\t\tvoid main () {\r\n\t\t\t\tuvPositionF = uvPosition;\r\n\t\t\t\ttexClipF = texClip;\r\n\t\t\t\t\r\n\t\t\t\tgl_Position = projectionMatrix * cameraMatrix * modelMatrix * vec4(vertexPosition, 1.0);\r\n\t\t\t}\r\n\t\t\t"
            }
            ;
            var Hb = function() {};
            g["shader.ScaledText"] = Hb;
            Hb.__name__ = "shader.ScaledText";
            Hb.getShader = function() {
                null == Hb.shader && (Hb.shader = new fc("shader.ScaledText",Hb.getFragmentShader(),Hb.getVertexShader()),
                Hb.shader.setBuiltInBuffers("vertexPosition", "modelMatrix", "cameraMatrix", "projectionMatrix", "uvPosition"),
                Hb.shader.setAttrib("texClip", "float", 4),
                Hb.shader.setUniform("texSize", [0, 0], "float2"),
                Hb.shader.setUniform("color", [1, 1, 1, 1], "float4"),
                Hb.shader.setUniform("colorOffset", [0, 0, 0, 0], "float4"),
                Hb.shader.setUniform("aliasBleed", .4, "float"),
                Hb.shader.setUniform("mask", [-1, -1, -1, -1], "float4"));
                return Hb.shader
            }
            ;
            Hb.getFragmentShader = function() {
                return "precision mediump float;\r\n\t\t\tvarying vec2 uvPositionF;\r\n\t\t\tvarying vec4 texClipF;\r\n\t\t\tvarying vec3 vertexPositionF;\r\n\t\t\t\r\n\t\t\tuniform sampler2D texture;\r\n\t\t\tuniform vec2 texSize;\r\n\t\t\tuniform vec4 colorOffset;\r\n\t\t\tuniform vec4 color;\r\n\t\t\tuniform float aliasBleed;\r\n\t\t\tuniform vec4 mask;\r\n\t\t\tuniform float scale;\r\n\r\n\t\t\tvoid main () {\r\n\t\t\t\tvec2 uv = uvPositionF * texClipF.zw + texClipF.xy;\r\n\t\t\t\t\r\n\t\t\t\tvec2 uvMod = mod(uv.xy, 1.0)*aliasBleed; // aliasBleed puts more weight on the original scale to reduce blurring\r\n\r\n\t\t\t\tvec4 src =\r\n\t\t\t\t\ttexture2D(texture, uv / texSize.xy)*(1.0-uvMod.x)*(1.0-uvMod.y)\r\n\t\t\t\t\t+texture2D(texture, (uv+vec2(.5, 0.0)) / texSize.xy)*uvMod.x*(1.0-uvMod.y)\r\n\t\t\t\t\t+texture2D(texture, (uv+vec2(0.0, .5)) / texSize.xy)*(1.0-uvMod.x)*uvMod.y\r\n\t\t\t\t\t+texture2D(texture, (uv+vec2(.5, .5)) / texSize.xy)*uvMod.x*uvMod.y;\r\n\t\t\t\t\r\n\t\t\t\tsrc.rgba = sqrt(clamp(src.rgba, 0.0, 1.0));\r\n\t\t\t\t\r\n\t\t\t\tsrc.rgb /= max(src.a, 0.00001);\r\n\t\t\t\tsrc.rgba *= clamp(color*vec4(1.0, 1.0, 1.0, 1.3), 0.0, 1.0); // 1.3 increases lost clarity from antialising\r\n\t\t\t\tsrc.rgb *= src.a;\r\n\r\n\t\t\t\tif(mask.z != -1.0 &&\r\n\t\t\t\t\t(  vertexPositionF.x < mask.x\r\n\t\t\t\t\t|| vertexPositionF.y < mask.y\r\n\t\t\t\t\t|| vertexPositionF.x >= mask.x+mask.z\r\n\t\t\t\t\t|| vertexPositionF.y >= mask.y+mask.w )) {\r\n\t\t\t\t\tdiscard;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tgl_FragColor = clamp(colorOffset+src, 0.0, 1.0);\r\n\t\t\t}\r\n\t\t"
            }
            ;
            Hb.getVertexShader = function() {
                return "precision mediump float;\r\n\t\t\tattribute vec3 vertexPosition;\r\n\t\t\tattribute vec2 uvPosition;\r\n\t\t\tattribute vec4 texClip;\r\n\t\t\t\r\n\t\t\tvarying vec4 texClipF;\r\n\t\t\tvarying vec2 uvPositionF;\r\n\t\t\tvarying vec3 vertexPositionF;\r\n\t\t\t\r\n\t\t\tuniform mat4 projectionMatrix;\r\n\t\t\tuniform mat4 cameraMatrix;\r\n\t\t\tuniform mat4 modelMatrix;\r\n\t\t\t\r\n\t\t\tvoid main () {\r\n\t\t\t\tuvPositionF = uvPosition;\r\n\t\t\t\ttexClipF = texClip;\r\n\t\t\t\tvec3 vertexPosition2 = floor(vertexPosition.xyz + .5);\r\n\t\t\t\tvertexPositionF = vertexPosition2;\r\n\t\t\t\t\r\n\t\t\t\tgl_Position = projectionMatrix * cameraMatrix * modelMatrix * vec4(vertexPosition2, 1.0);\r\n\t\t\t}\r\n\t\t\t"
            }
            ;
            r.$haxeUID |= 0;
            "undefined" != typeof performance && "function" == typeof performance.now && (K.now = performance.now.bind(performance));
            g.Math = Math;
            null == String.fromCodePoint && (String.fromCodePoint = function(a) {
                return 65536 > a ? String.fromCharCode(a) : String.fromCharCode((a >> 10) + 55232) + String.fromCharCode((a & 1023) + 56320)
            }
            );
            Object.defineProperty(String.prototype, "__class__", {
                value: g.String = String,
                enumerable: !1,
                writable: !0
            });
            String.__name__ = "String";
            g.Array = Array;
            Array.__name__ = "Array";
            Date.prototype.__class__ = g.Date = Date;
            Date.__name__ = "Date";
            var oe = {}
              , ne = {}
              , $d = Number
              , me = Boolean
              , ke = {}
              , le = {};
            ja.__toStr = {}.toString;
            null == ArrayBuffer.prototype.slice && (ArrayBuffer.prototype.slice = ae.sliceImpl);
            "undefined" == typeof window && (r.onmessage = function(a) {
                a = a.data;
                try {
                    r.onmessage = (B = Fa.__current,
                    t(B, B.dispatchMessage)),
                    ic.toFunction(a)()
                } catch (b) {
                    Fa.__current.destroy()
                }
            }
            );
            ya.__alpha16 = new Uint32Array(256);
            for (var Pc = 0; 256 > Pc; ) {
                var cd = Pc++;
                ya.__alpha16[cd] = Math.ceil(257.00392156862745 * cd)
            }
            ya.__clamp = new Uint8Array(511);
            for (Pc = 0; 255 > Pc; )
                cd = Pc++,
                ya.__clamp[cd] = cd;
            for (Pc = 255; 511 > Pc; )
                cd = Pc++,
                ya.__clamp[cd] = 255;
            Xa.level = 3;
            "undefined" == typeof console && (console = {});
            null == console.log && (console.log = function() {}
            );
            u.blockData = new p;
            u.emptyBlockInfoData = {};
            u.blockGroups = new p;
            u.creativeInventory = [];
            D.recipes = [];
            J.pixelLightingFactor = 1;
            J.blockBorders = !0;
            J.particleQuality = 10;
            J.mouseBlockBehavior = 1;
            J.selectedLanguage = "en-US";
            J.fpsLimit = 0;
            J.defaultSettings = function(a) {
                a = new p;
                a.h.pixelLightingFactor = 1;
                a.h.blockBorders = !0;
                a.h.particleQuality = 10;
                a.h.mouseBlockBehavior = 1;
                a.h.selectedLanguage = "en-US";
                a.h.fpsLimit = 0;
                return a
            }(this);
            J.saveList = new p;
            J.organizedSaveList = [];
            ka.loaded = !1;
            ka.waitingForNG = !1;
            R.inventorySlotCoords = [];
            x.languageList = [{
                name: "English",
                file: "en-US"
            }, {
                name: "Espa\u00f1ol",
                file: "es-MX",
                translator: "Crystal"
            }, {
                name: "Deutsch",
                file: "de",
                translator: "Gap"
            }, {
                name: "Portugu\u00eas",
                file: "pt-BR",
                translator: "BrunoDev"
            }];
            x.languageMap = new p;
            x.strings = new p;
            x.version = "";
            x.languages = [];
            P.chunksLitThisFrame = 0;
            P.currentIndex = 0;
            P.slots = [];
            P.lastLightingCacheClear = 0;
            P.lightingCache = new p;
            P.point = new W;
            d.screenWidth = 0;
            d.screenHeight = 0;
            da.objectData = new p;
            za.entityCache = new p;
            C.state = L.DONE;
            C.texturePackError = "";
            C.texturePackSuccess = "";
            C.blockTextureMap = new p;
            C.texturesUnoccupied = new ra;
            C.texturesOccupied = new ra;
            Na.selectedGUI = "";
            Na.selectedGUIOffset = 0;
            Va.lightingKeyIndex = 0;
            E.worldHeight = 200;
            E.veinAttributes = function(a) {
                a = new p;
                a.h.gravel = [0, 1, 5.5, 8];
                a.h.dirt = [0, 1, 5.5, 9];
                a.h.coal_ore = [0, 1, 2.8, 6];
                a.h.iron_ore = [0, 1, 2.3, 3];
                a.h.copper_ore = [0, .7, 2.1, 3];
                a.h.gold_ore = [0, .3, 1.9, 3];
                a.h.diamond_ore = [0, .25, 1.8, 2];
                a.h.stone_slate = [0, 1, 5.5, 5];
                a.h.stone_syenite = [0, 1, 5.2, 4];
                a.h.stone_gneiss = [0, 1, 5.8, 3];
                return a
            }(this);
            E.appropriateMineBlocks = function(a) {
                a = new p;
                a.h.stone = !0;
                a.h.stone_slate = !0;
                a.h.stone_syenite = !0;
                a.h.stone_gneiss = !0;
                a.h.coal_ore = !0;
                a.h.gold_ore = !0;
                a.h.diamond_ore = !0;
                a.h.iron_ore = !0;
                return a
            }(this);
            E.vineBlocks = function(a) {
                a = new p;
                a.h.dirt = !0;
                a.h.dirt_gravel = !0;
                return a
            }(this);
            E.rareVineBlocks = function(a) {
                a = new p;
                a.h.leaves_pine = !0;
                a.h.leaves_birch = !0;
                a.h.leaves_orange = !0;
                a.h.leaves_orange_flower = !0;
                a.h.sand_gravel = !0;
                a.h.stone = !0;
                return a
            }(this);
            E.cobwebBlocks = function(a) {
                a = new p;
                a.h.stone = !0;
                a.h.leaves_pine = !0;
                a.h.leaves_birch = !0;
                a.h.dirt_gravel = !0;
                return a
            }(this);
            E.bonusChestItems = [{
                type: "wood_pine",
                min: 10,
                max: 80
            }, {
                type: "wood_birch",
                min: 10,
                max: 80
            }, {
                type: "wood_orange",
                min: 3,
                max: 8
            }, {
                type: "dirt",
                min: 10,
                max: 30
            }, {
                type: "gravel",
                min: 10,
                max: 30
            }, {
                type: "flower_bulb",
                min: 1,
                max: 5
            }, {
                type: "charcoal",
                min: 5,
                max: 20
            }, {
                type: "string",
                min: 2,
                max: 10
            }, {
                type: "iron_ingot",
                min: 5,
                max: 25
            }, {
                type: "gold_ingot",
                min: 2,
                max: 4
            }, {
                type: "diamond",
                min: 1,
                max: 2
            }, {
                type: "vine",
                min: 5,
                max: 10
            }, {
                type: "vines",
                min: 5,
                max: 10
            }, {
                type: "mushrooms",
                min: 5,
                max: 10
            }, {
                type: "coin_copper",
                min: 5,
                max: 15
            }, {
                type: "coin_gold",
                min: 5,
                max: 15
            }, {
                type: "copper_ingot",
                min: 5,
                max: 15
            }, {
                type: "cotton",
                min: 10,
                max: 20
            }, {
                type: "rock",
                min: 10,
                max: 30
            }];
            jb.USE_CACHE = !1;
            jb.USE_ENUM_INDEX = !1;
            jb.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
            fb.DEFAULT_RESOLVER = new Ec;
            fb.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
            Gb.CHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
            Gb.BYTES = Aa.ofString(Gb.CHARS);
            Bb.LEN_EXTRA_BITS_TBL = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, -1, -1];
            Bb.LEN_BASE_VAL_TBL = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258];
            Bb.DIST_EXTRA_BITS_TBL = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, -1, -1];
            Bb.DIST_BASE_VAL_TBL = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577];
            Bb.CODE_LENGTHS_POS = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];
            xa.images = new p;
            xa.sounds = new p;
            xa.numImages = 0;
            xa.numImagesLoaded = 0;
            xa.numSounds = 0;
            xa.numSoundsLoaded = 0;
            xa.blankSound = new Rc;
            Wa.sfxChannel = new y;
            Wa.musicChannel = new y;
            Wa.ambienceChannel = new y;
            Wa.masterVolume = 1;
            Wa.sfxVolume = 1;
            Wa.musicVolume = 1;
            Wa.ambienceVolume = 1;
            ia.defaultUVs = [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1];
            Pa.black = new Pa(-16777216);
            Pa.clear = new Pa(0);
            Tc.lookatDirections = [new va(1,0,0), new va(-1,0,0), new va(0,1,0), new va(0,-1,0), new va(0,0,1), new va(0,0,-1)];
            Ua.identity = new Ua([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);
            na.callCount = 0;
            na.depthMask = !1;
            na.culling = !1;
            na.cullFaceBack = !0;
            na.depthTest = !1;
            Tb.shaders = new Kb;
            Sb.shaders = new Kb;
            Wb.shaders = new Kb;
            qa.activeRequests = 0;
            qa.requestLimit = 17;
            qa.requestQueue = new Mb;
            Fa.__current = new Fa(r.location.href);
            Fa.__isWorker = "undefined" == typeof window;
            Fa.__messages = new Mb;
            Fa.__resolveMethods = new Mb;
            Fa.__workerCount = 0;
            ua.dummyCharacter = "\u007f";
            ua.windowID = 0;
            pc.DICTIONARY = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".split("");
            pc.EXTENDED_DICTIONARY = function(a) {
                a = [];
                for (var b = 0, c = pc.DICTIONARY; b < c.length; )
                    for (var f = c[b++], h = 0, d = pc.DICTIONARY; h < d.length; )
                        a.push(f + d[h++]);
                return a
            }(this);
            Ga.promises = new ra;
            Ga.minThreads = 0;
            Ga.maxThreads = 1;
            xb.onUpdate = new lb;
            xb.__updated = !1;
            tc.sensorByID = new ra;
            tc.sensors = [];
            Ra.__mainThread = null != Fa.__current.__worker || Fa.__isWorker ? null : Fa.__current;
            Ra.workLoad = .5;
            Ra.__totalWorkPriority = 0;
            $c.nextID = 0;
            sb.devices = new ra;
            sb.onConnect = new Td;
            ob.devices = new ra;
            ob.onConnect = new Ud;
            ub.onCancel = new Nc;
            ub.onEnd = new Nc;
            ub.onMove = new Nc;
            ub.onStart = new Nc;
            la.cache = new Xd;
            la.onChange = new lb;
            la.bundlePaths = new p;
            la.libraries = new p;
            la.libraryPaths = new p;
            Xa.throwErrors = !0;
            U.camXTmp = 0;
            U.camYTmp = 0;
            U.sleepProgressionSpeed = 0;
            U.sleepProgression = 0;
            U.lastSleepFrame = 0;
            U.canSleep = !1;
            U.skyCamera = new W(0,0);
            F.tempDrawRectangles = [new ca, new ca];
            F.tempDrawPoints = [new W, new W, new W];
            F.tempDrawVector3 = new va;
            F.tempDrawArray = [];
            F.tempMatrix = new Ua;
            N.menuTimer = 0;
            N.menuFrame = "main";
            N.nextMenu = "";
            N.fields = new p;
            N.mouseButtonStates = {
                state: 0,
                id: ""
            };
            N.buttonSoundPause = -1;
            G.main()
        }
        )("undefined" != typeof k ? k : "undefined" != typeof window ? window : "undefined" != typeof self ? self : this, "undefined" != typeof window ? window : "undefined" != typeof r ? r : "undefined" != typeof self ? self : this)
    };
    "undefined" !== typeof self && self.constructor.name.includes("Worker") ? w({}, k) : (r.lime = r.lime || {},
    r.lime.$scripts = r.lime.$scripts || {},
    r.lime.$scripts["Mine Blocks 2"] = w,
    r.lime.embed = function(w) {
        var n = {}
          , D = r.lime.$scripts[w];
        if (!D)
            throw Error('Cannot find project name "' + w + '"');
        D(n, k);
        for (var M in n)
            r[M] = r[M] || n[M];
        (D = n.lime || window.lime) && D.embed && this !== D.embed && D.embed.apply(D, arguments);
        return n
    }
    );
    "function" === typeof define && define.amd && (define([], function() {
        return r.lime
    }),
    define.__amd = define.amd,
    define.amd = null)
};
$lime_init("undefined" !== typeof exports ? exports : "function" === typeof define && define.amd ? {} : "undefined" !== typeof window ? window : "undefined" !== typeof self ? self : this, "undefined" !== typeof window ? window : "undefined" !== typeof global ? global : "undefined" !== typeof self ? self : this);
"undefined" !== typeof self && self.constructor.name.includes("Worker") || (!function() {
    var r = function() {
        this.init()
    };
    r.prototype = {
        init: function() {
            var g = this || k;
            return g._counter = 1E3,
            g._html5AudioPool = [],
            g.html5PoolSize = 10,
            g._codecs = {},
            g._howls = [],
            g._muted = !1,
            g._volume = 1,
            g._canPlayEvent = "canplaythrough",
            g._navigator = "undefined" != typeof window && window.navigator ? window.navigator : null,
            g.masterGain = null,
            g.noAudio = !1,
            g.usingWebAudio = !0,
            g.autoSuspend = !0,
            g.ctx = null,
            g.autoUnlock = !0,
            g._setup(),
            g
        },
        volume: function(g) {
            var m = this || k;
            if (g = parseFloat(g),
            m.ctx || t(),
            void 0 !== g && 0 <= g && 1 >= g) {
                if (m._volume = g,
                m._muted)
                    return m;
                m.usingWebAudio && m.masterGain.gain.setValueAtTime(g, k.ctx.currentTime);
                for (var z = 0; z < m._howls.length; z++)
                    if (!m._howls[z]._webAudio)
                        for (var B = m._howls[z]._getSoundIds(), r = 0; r < B.length; r++) {
                            var n = m._howls[z]._soundById(B[r]);
                            n && n._node && (n._node.volume = n._volume * g)
                        }
                return m
            }
            return m._volume
        },
        mute: function(g) {
            var m = this || k;
            m.ctx || t();
            m._muted = g;
            m.usingWebAudio && m.masterGain.gain.setValueAtTime(g ? 0 : m._volume, k.ctx.currentTime);
            for (var z = 0; z < m._howls.length; z++)
                if (!m._howls[z]._webAudio)
                    for (var B = m._howls[z]._getSoundIds(), r = 0; r < B.length; r++) {
                        var n = m._howls[z]._soundById(B[r]);
                        n && n._node && (n._node.muted = !!g || n._muted)
                    }
            return m
        },
        stop: function() {
            for (var g = this || k, m = 0; m < g._howls.length; m++)
                g._howls[m].stop();
            return g
        },
        unload: function() {
            for (var g = this || k, m = g._howls.length - 1; 0 <= m; m--)
                g._howls[m].unload();
            return g.usingWebAudio && g.ctx && void 0 !== g.ctx.close && (g.ctx.close(),
            g.ctx = null,
            t()),
            g
        },
        codecs: function(g) {
            return (this || k)._codecs[g.replace(/^x-/, "")]
        },
        _setup: function() {
            var g = this || k;
            if (g.state = g.ctx ? g.ctx.state || "suspended" : "suspended",
            g._autoSuspend(),
            !g.usingWebAudio)
                if ("undefined" != typeof Audio)
                    try {
                        var m = new Audio;
                        void 0 === m.oncanplaythrough && (g._canPlayEvent = "canplay")
                    } catch (z) {
                        g.noAudio = !0
                    }
                else
                    g.noAudio = !0;
            try {
                m = new Audio,
                m.muted && (g.noAudio = !0)
            } catch (z) {}
            return g.noAudio || g._setupCodecs(),
            g
        },
        _setupCodecs: function() {
            var g = this || k
              , m = null;
            try {
                m = "undefined" != typeof Audio ? new Audio : null
            } catch (db) {
                return g
            }
            if (!m || "function" != typeof m.canPlayType)
                return g;
            var z = m.canPlayType("audio/mpeg;").replace(/^no$/, "")
              , B = g._navigator ? g._navigator.userAgent : ""
              , r = B.match(/OPR\/(\d+)/g);
            r = r && 33 > parseInt(r[0].split("/")[1], 10);
            var n = -1 !== B.indexOf("Safari") && -1 === B.indexOf("Chrome");
            B = B.match(/Version\/(.*?) /);
            B = n && B && 15 > parseInt(B[1], 10);
            return g._codecs = {
                mp3: !(r || !z && !m.canPlayType("audio/mp3;").replace(/^no$/, "")),
                mpeg: !!z,
                opus: !!m.canPlayType('audio/ogg; codecs="opus"').replace(/^no$/, ""),
                ogg: !!m.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/, ""),
                oga: !!m.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/, ""),
                wav: !!(m.canPlayType('audio/wav; codecs="1"') || m.canPlayType("audio/wav")).replace(/^no$/, ""),
                aac: !!m.canPlayType("audio/aac;").replace(/^no$/, ""),
                caf: !!m.canPlayType("audio/x-caf;").replace(/^no$/, ""),
                m4a: !!(m.canPlayType("audio/x-m4a;") || m.canPlayType("audio/m4a;") || m.canPlayType("audio/aac;")).replace(/^no$/, ""),
                m4b: !!(m.canPlayType("audio/x-m4b;") || m.canPlayType("audio/m4b;") || m.canPlayType("audio/aac;")).replace(/^no$/, ""),
                mp4: !!(m.canPlayType("audio/x-mp4;") || m.canPlayType("audio/mp4;") || m.canPlayType("audio/aac;")).replace(/^no$/, ""),
                weba: !(B || !m.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/, "")),
                webm: !(B || !m.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/, "")),
                dolby: !!m.canPlayType('audio/mp4; codecs="ec-3"').replace(/^no$/, ""),
                flac: !!(m.canPlayType("audio/x-flac;") || m.canPlayType("audio/flac;")).replace(/^no$/, "")
            },
            g
        },
        _unlockAudio: function() {
            var g = this || k;
            if (!g._audioUnlocked && g.ctx) {
                g._audioUnlocked = !1;
                g.autoUnlock = !1;
                g._mobileUnloaded || 44100 === g.ctx.sampleRate || (g._mobileUnloaded = !0,
                g.unload());
                g._scratchBuffer = g.ctx.createBuffer(1, 1, 22050);
                var m = function(k) {
                    for (; g._html5AudioPool.length < g.html5PoolSize; )
                        try {
                            var z = new Audio;
                            z._unlocked = !0;
                            g._releaseHtml5Audio(z)
                        } catch (oa) {
                            g.noAudio = !0;
                            break
                        }
                    for (k = 0; k < g._howls.length; k++)
                        if (!g._howls[k]._webAudio) {
                            z = g._howls[k]._getSoundIds();
                            for (var r = 0; r < z.length; r++) {
                                var n = g._howls[k]._soundById(z[r]);
                                n && n._node && !n._node._unlocked && (n._node._unlocked = !0,
                                n._node.load())
                            }
                        }
                    g._autoResume();
                    var t = g.ctx.createBufferSource();
                    t.buffer = g._scratchBuffer;
                    t.connect(g.ctx.destination);
                    void 0 === t.start ? t.noteOn(0) : t.start(0);
                    "function" == typeof g.ctx.resume && g.ctx.resume();
                    t.onended = function() {
                        t.disconnect(0);
                        g._audioUnlocked = !0;
                        document.removeEventListener("touchstart", m, !0);
                        document.removeEventListener("touchend", m, !0);
                        document.removeEventListener("click", m, !0);
                        document.removeEventListener("keydown", m, !0);
                        for (var k = 0; k < g._howls.length; k++)
                            g._howls[k]._emit("unlock")
                    }
                };
                return document.addEventListener("touchstart", m, !0),
                document.addEventListener("touchend", m, !0),
                document.addEventListener("click", m, !0),
                document.addEventListener("keydown", m, !0),
                g
            }
        },
        _obtainHtml5Audio: function() {
            var g = this || k;
            if (g._html5AudioPool.length)
                return g._html5AudioPool.pop();
            g = (new Audio).play();
            return g && "undefined" != typeof Promise && (g instanceof Promise || "function" == typeof g.then) && g.catch(function() {
                console.warn("HTML5 Audio pool exhausted, returning potentially locked audio object.")
            }),
            new Audio
        },
        _releaseHtml5Audio: function(g) {
            var m = this || k;
            return g._unlocked && m._html5AudioPool.push(g),
            m
        },
        _autoSuspend: function() {
            var g = this;
            if (g.autoSuspend && g.ctx && void 0 !== g.ctx.suspend && k.usingWebAudio) {
                for (var m = 0; m < g._howls.length; m++)
                    if (g._howls[m]._webAudio)
                        for (var z = 0; z < g._howls[m]._sounds.length; z++)
                            if (!g._howls[m]._sounds[z]._paused)
                                return g;
                return g._suspendTimer && clearTimeout(g._suspendTimer),
                g._suspendTimer = setTimeout(function() {
                    if (g.autoSuspend) {
                        g._suspendTimer = null;
                        g.state = "suspending";
                        var m = function() {
                            g.state = "suspended";
                            g._resumeAfterSuspend && (delete g._resumeAfterSuspend,
                            g._autoResume())
                        };
                        g.ctx.suspend().then(m, m)
                    }
                }, 3E4),
                g
            }
        },
        _autoResume: function() {
            var g = this;
            if (g.ctx && void 0 !== g.ctx.resume && k.usingWebAudio)
                return "running" === g.state && "interrupted" !== g.ctx.state && g._suspendTimer ? (clearTimeout(g._suspendTimer),
                g._suspendTimer = null) : "suspended" === g.state || "running" === g.state && "interrupted" === g.ctx.state ? (g.ctx.resume().then(function() {
                    g.state = "running";
                    for (var m = 0; m < g._howls.length; m++)
                        g._howls[m]._emit("resume")
                }),
                g._suspendTimer && (clearTimeout(g._suspendTimer),
                g._suspendTimer = null)) : "suspending" === g.state && (g._resumeAfterSuspend = !0),
                g
        }
    };
    var k = new r
      , w = function(g) {
        if (!g.src || 0 === g.src.length)
            return void console.error("An array of source files must be passed with any new Howl.");
        this.init(g)
    };
    w.prototype = {
        init: function(g) {
            var m = this;
            return k.ctx || t(),
            m._autoplay = g.autoplay || !1,
            m._format = "string" != typeof g.format ? g.format : [g.format],
            m._html5 = g.html5 || !1,
            m._muted = g.mute || !1,
            m._loop = g.loop || !1,
            m._pool = g.pool || 5,
            m._preload = "boolean" != typeof g.preload && "metadata" !== g.preload || g.preload,
            m._rate = g.rate || 1,
            m._sprite = g.sprite || {},
            m._src = "string" != typeof g.src ? g.src : [g.src],
            m._volume = void 0 !== g.volume ? g.volume : 1,
            m._xhr = {
                method: g.xhr && g.xhr.method ? g.xhr.method : "GET",
                headers: g.xhr && g.xhr.headers ? g.xhr.headers : null,
                withCredentials: !(!g.xhr || !g.xhr.withCredentials) && g.xhr.withCredentials
            },
            m._duration = 0,
            m._state = "unloaded",
            m._sounds = [],
            m._endTimers = {},
            m._queue = [],
            m._playLock = !1,
            m._onend = g.onend ? [{
                fn: g.onend
            }] : [],
            m._onfade = g.onfade ? [{
                fn: g.onfade
            }] : [],
            m._onload = g.onload ? [{
                fn: g.onload
            }] : [],
            m._onloaderror = g.onloaderror ? [{
                fn: g.onloaderror
            }] : [],
            m._onplayerror = g.onplayerror ? [{
                fn: g.onplayerror
            }] : [],
            m._onpause = g.onpause ? [{
                fn: g.onpause
            }] : [],
            m._onplay = g.onplay ? [{
                fn: g.onplay
            }] : [],
            m._onstop = g.onstop ? [{
                fn: g.onstop
            }] : [],
            m._onmute = g.onmute ? [{
                fn: g.onmute
            }] : [],
            m._onvolume = g.onvolume ? [{
                fn: g.onvolume
            }] : [],
            m._onrate = g.onrate ? [{
                fn: g.onrate
            }] : [],
            m._onseek = g.onseek ? [{
                fn: g.onseek
            }] : [],
            m._onunlock = g.onunlock ? [{
                fn: g.onunlock
            }] : [],
            m._onresume = [],
            m._webAudio = k.usingWebAudio && !m._html5,
            void 0 !== k.ctx && k.ctx && k.autoUnlock && k._unlockAudio(),
            k._howls.push(m),
            m._autoplay && m._queue.push({
                event: "play",
                action: function() {
                    m.play()
                }
            }),
            m._preload && "none" !== m._preload && m.load(),
            m
        },
        load: function() {
            var g = null;
            if (k.noAudio)
                return void this._emit("loaderror", null, "No audio support.");
            "string" == typeof this._src && (this._src = [this._src]);
            for (var m = 0; m < this._src.length; m++) {
                var z;
                if (this._format && this._format[m])
                    var r = this._format[m];
                else {
                    if ("string" != typeof (z = this._src[m])) {
                        this._emit("loaderror", null, "Non-string found in selected audio sources - ignoring.");
                        continue
                    }
                    (r = /^data:audio\/([^;,]+);/i.exec(z)) || (r = /\.([^.]+)$/.exec(z.split("?", 1)[0]));
                    r && (r = r[1].toLowerCase())
                }
                if (r || console.warn('No file extension was found. Consider using the "format" property or specify an extension.'),
                r && k.codecs(r)) {
                    g = this._src[m];
                    break
                }
            }
            return g ? (this._src = g,
            this._state = "loading",
            "https:" === window.location.protocol && "http:" === g.slice(0, 5) && (this._html5 = !0,
            this._webAudio = !1),
            new G(this),
            this._webAudio && D(this),
            this) : void this._emit("loaderror", null, "No codec support for selected audio sources.")
        },
        play: function(g, m) {
            var z = this
              , r = null;
            if ("number" == typeof g)
                r = g,
                g = null;
            else {
                if ("string" == typeof g && "loaded" === z._state && !z._sprite[g])
                    return null;
                if (void 0 === g && (g = "__default",
                !z._playLock)) {
                    for (var n = 0, t = 0; t < z._sounds.length; t++)
                        z._sounds[t]._paused && !z._sounds[t]._ended && (n++,
                        r = z._sounds[t]._id);
                    1 === n ? g = null : r = null
                }
            }
            var w = r ? z._soundById(r) : z._inactiveSound();
            if (!w)
                return null;
            if (r && !g && (g = w._sprite || "__default"),
            "loaded" !== z._state) {
                w._sprite = g;
                w._ended = !1;
                var D = w._id;
                return z._queue.push({
                    event: "play",
                    action: function() {
                        z.play(D)
                    }
                }),
                D
            }
            if (r && !w._paused)
                return m || z._loadQueue("play"),
                w._id;
            z._webAudio && k._autoResume();
            var M = Math.max(0, 0 < w._seek ? w._seek : z._sprite[g][0] / 1E3)
              , u = Math.max(0, (z._sprite[g][0] + z._sprite[g][1]) / 1E3 - M)
              , G = 1E3 * u / Math.abs(w._rate)
              , V = z._sprite[g][0] / 1E3
              , aa = (z._sprite[g][0] + z._sprite[g][1]) / 1E3;
            w._sprite = g;
            w._ended = !1;
            var Qa = function() {
                w._paused = !1;
                w._seek = M;
                w._start = V;
                w._stop = aa;
                w._loop = !(!w._loop && !z._sprite[g][2])
            };
            if (M >= aa)
                return void z._ended(w);
            var J = w._node;
            if (z._webAudio)
                r = function() {
                    z._playLock = !1;
                    Qa();
                    z._refreshBuffer(w);
                    J.gain.setValueAtTime(w._muted || z._muted ? 0 : w._volume, k.ctx.currentTime);
                    w._playStart = k.ctx.currentTime;
                    void 0 === J.bufferSource.start ? w._loop ? J.bufferSource.noteGrainOn(0, M, 86400) : J.bufferSource.noteGrainOn(0, M, u) : w._loop ? J.bufferSource.start(0, M, 86400) : J.bufferSource.start(0, M, u);
                    G !== 1 / 0 && (z._endTimers[w._id] = setTimeout(z._ended.bind(z, w), G));
                    m || setTimeout(function() {
                        z._emit("play", w._id);
                        z._loadQueue()
                    }, 0)
                }
                ,
                "running" === k.state && "interrupted" !== k.ctx.state ? r() : (z._playLock = !0,
                z.once("resume", r),
                z._clearTimer(w._id));
            else {
                var K = function() {
                    J.currentTime = M;
                    J.muted = w._muted || z._muted || k._muted || J.muted;
                    J.volume = w._volume * k.volume();
                    J.playbackRate = w._rate;
                    try {
                        var u = J.play();
                        if (u && "undefined" != typeof Promise && (u instanceof Promise || "function" == typeof u.then) ? (z._playLock = !0,
                        Qa(),
                        u.then(function() {
                            z._playLock = !1;
                            J._unlocked = !0;
                            m ? z._loadQueue() : z._emit("play", w._id)
                        }).catch(function() {
                            z._playLock = !1;
                            z._emit("playerror", w._id, "Playback was unable to start. This is most commonly an issue on mobile devices and Chrome where playback was not within a user interaction.");
                            w._ended = !0;
                            w._paused = !0
                        })) : m || (z._playLock = !1,
                        Qa(),
                        z._emit("play", w._id)),
                        J.playbackRate = w._rate,
                        J.paused)
                            return void z._emit("playerror", w._id, "Playback was unable to start. This is most commonly an issue on mobile devices and Chrome where playback was not within a user interaction.");
                        "__default" !== g || w._loop ? z._endTimers[w._id] = setTimeout(z._ended.bind(z, w), G) : (z._endTimers[w._id] = function() {
                            z._ended(w);
                            J.removeEventListener("ended", z._endTimers[w._id], !1)
                        }
                        ,
                        J.addEventListener("ended", z._endTimers[w._id], !1))
                    } catch (R) {
                        z._emit("playerror", w._id, R)
                    }
                };
                "data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA" === J.src && (J.src = z._src,
                J.load());
                r = window && window.ejecta || !J.readyState && k._navigator.isCocoonJS;
                if (3 <= J.readyState || r)
                    K();
                else {
                    z._playLock = !0;
                    z._state = "loading";
                    var ka = function() {
                        z._state = "loaded";
                        K();
                        J.removeEventListener(k._canPlayEvent, ka, !1)
                    };
                    J.addEventListener(k._canPlayEvent, ka, !1);
                    z._clearTimer(w._id)
                }
            }
            return w._id
        },
        pause: function(g, m) {
            var k = this;
            if ("loaded" !== k._state || k._playLock)
                return k._queue.push({
                    event: "pause",
                    action: function() {
                        k.pause(g)
                    }
                }),
                k;
            for (var r = k._getSoundIds(g), n = 0; n < r.length; n++) {
                k._clearTimer(r[n]);
                var t = k._soundById(r[n]);
                if (t && !t._paused && (t._seek = k.seek(r[n]),
                t._rateSeek = 0,
                t._paused = !0,
                k._stopFade(r[n]),
                t._node))
                    if (k._webAudio) {
                        if (!t._node.bufferSource)
                            continue;
                        void 0 === t._node.bufferSource.stop ? t._node.bufferSource.noteOff(0) : t._node.bufferSource.stop(0);
                        k._cleanBuffer(t._node)
                    } else
                        isNaN(t._node.duration) && t._node.duration !== 1 / 0 || t._node.pause();
                m || k._emit("pause", t ? t._id : null)
            }
            return k
        },
        stop: function(g, m) {
            var k = this;
            if ("loaded" !== k._state || k._playLock)
                return k._queue.push({
                    event: "stop",
                    action: function() {
                        k.stop(g)
                    }
                }),
                k;
            for (var r = k._getSoundIds(g), t = 0; t < r.length; t++) {
                k._clearTimer(r[t]);
                var n = k._soundById(r[t]);
                n && (n._seek = n._start || 0,
                n._rateSeek = 0,
                n._paused = !0,
                n._ended = !0,
                k._stopFade(r[t]),
                n._node && (k._webAudio ? n._node.bufferSource && (void 0 === n._node.bufferSource.stop ? n._node.bufferSource.noteOff(0) : n._node.bufferSource.stop(0),
                k._cleanBuffer(n._node)) : isNaN(n._node.duration) && n._node.duration !== 1 / 0 || (n._node.currentTime = n._start || 0,
                n._node.pause(),
                n._node.duration === 1 / 0 && k._clearSound(n._node))),
                m || k._emit("stop", n._id))
            }
            return k
        },
        mute: function(g, m) {
            var z = this;
            if ("loaded" !== z._state || z._playLock)
                return z._queue.push({
                    event: "mute",
                    action: function() {
                        z.mute(g, m)
                    }
                }),
                z;
            if (void 0 === m) {
                if ("boolean" != typeof g)
                    return z._muted;
                z._muted = g
            }
            for (var r = z._getSoundIds(m), n = 0; n < r.length; n++) {
                var t = z._soundById(r[n]);
                t && (t._muted = g,
                t._interval && z._stopFade(t._id),
                z._webAudio && t._node ? t._node.gain.setValueAtTime(g ? 0 : t._volume, k.ctx.currentTime) : t._node && (t._node.muted = !!k._muted || g),
                z._emit("mute", t._id))
            }
            return z
        },
        volume: function() {
            var g, m, z = this, r = arguments;
            if (0 === r.length)
                return z._volume;
            1 === r.length || 2 === r.length && void 0 === r[1] ? 0 <= z._getSoundIds().indexOf(r[0]) ? m = parseInt(r[0], 10) : g = parseFloat(r[0]) : 2 <= r.length && (g = parseFloat(r[0]),
            m = parseInt(r[1], 10));
            var n;
            if (!(void 0 !== g && 0 <= g && 1 >= g))
                return n = m ? z._soundById(m) : z._sounds[0],
                n ? n._volume : 0;
            if ("loaded" !== z._state || z._playLock)
                return z._queue.push({
                    event: "volume",
                    action: function() {
                        z.volume.apply(z, r)
                    }
                }),
                z;
            void 0 === m && (z._volume = g);
            m = z._getSoundIds(m);
            for (var t = 0; t < m.length; t++)
                (n = z._soundById(m[t])) && (n._volume = g,
                r[2] || z._stopFade(m[t]),
                z._webAudio && n._node && !n._muted ? n._node.gain.setValueAtTime(g, k.ctx.currentTime) : n._node && !n._muted && (n._node.volume = g * k.volume()),
                z._emit("volume", n._id));
            return z
        },
        fade: function(g, m, z, r) {
            var n = this;
            if ("loaded" !== n._state || n._playLock)
                return n._queue.push({
                    event: "fade",
                    action: function() {
                        n.fade(g, m, z, r)
                    }
                }),
                n;
            g = Math.min(Math.max(0, parseFloat(g)), 1);
            m = Math.min(Math.max(0, parseFloat(m)), 1);
            z = parseFloat(z);
            n.volume(g, r);
            for (var t = n._getSoundIds(r), B = 0; B < t.length; B++) {
                var w = n._soundById(t[B]);
                if (w) {
                    if (r || n._stopFade(t[B]),
                    n._webAudio && !w._muted) {
                        var M = k.ctx.currentTime
                          , u = M + z / 1E3;
                        w._volume = g;
                        w._node.gain.setValueAtTime(g, M);
                        w._node.gain.linearRampToValueAtTime(m, u)
                    }
                    n._startFadeInterval(w, g, m, z, t[B], void 0 === r)
                }
            }
            return n
        },
        _startFadeInterval: function(g, m, k, r, n, t) {
            var z = this
              , B = m
              , w = k - m;
            n = Math.abs(w / .01);
            n = Math.max(4, 0 < n ? r / n : r);
            var u = Date.now();
            g._fadeTo = k;
            g._interval = setInterval(function() {
                var n = (Date.now() - u) / r;
                u = Date.now();
                B += w * n;
                B = Math.round(100 * B) / 100;
                B = 0 > w ? Math.max(k, B) : Math.min(k, B);
                z._webAudio ? g._volume = B : z.volume(B, g._id, !0);
                t && (z._volume = B);
                (k < m && B <= k || k > m && B >= k) && (clearInterval(g._interval),
                g._interval = null,
                g._fadeTo = null,
                z.volume(k, g._id),
                z._emit("fade", g._id))
            }, n)
        },
        _stopFade: function(g) {
            var m = this._soundById(g);
            return m && m._interval && (this._webAudio && m._node.gain.cancelScheduledValues(k.ctx.currentTime),
            clearInterval(m._interval),
            m._interval = null,
            this.volume(m._fadeTo, g),
            m._fadeTo = null,
            this._emit("fade", g)),
            this
        },
        loop: function() {
            var g, m, k, r = arguments;
            if (0 === r.length)
                return this._loop;
            if (1 === r.length) {
                if ("boolean" != typeof r[0])
                    return !!(k = this._soundById(parseInt(r[0], 10))) && k._loop;
                this._loop = g = r[0]
            } else
                2 === r.length && (g = r[0],
                m = parseInt(r[1], 10));
            m = this._getSoundIds(m);
            for (r = 0; r < m.length; r++)
                (k = this._soundById(m[r])) && (k._loop = g,
                this._webAudio && k._node && k._node.bufferSource && (k._node.bufferSource.loop = g,
                g && (k._node.bufferSource.loopStart = k._start || 0,
                k._node.bufferSource.loopEnd = k._stop,
                this.playing(m[r]) && (this.pause(m[r], !0),
                this.play(m[r], !0)))));
            return this
        },
        rate: function() {
            var g, m, r = this, n = arguments;
            0 === n.length ? m = r._sounds[0]._id : 1 === n.length ? 0 <= r._getSoundIds().indexOf(n[0]) ? m = parseInt(n[0], 10) : g = parseFloat(n[0]) : 2 === n.length && (g = parseFloat(n[0]),
            m = parseInt(n[1], 10));
            var t;
            if ("number" != typeof g)
                return t = r._soundById(m),
                t ? t._rate : r._rate;
            if ("loaded" !== r._state || r._playLock)
                return r._queue.push({
                    event: "rate",
                    action: function() {
                        r.rate.apply(r, n)
                    }
                }),
                r;
            void 0 === m && (r._rate = g);
            m = r._getSoundIds(m);
            for (var w = 0; w < m.length; w++)
                if (t = r._soundById(m[w])) {
                    r.playing(m[w]) && (t._rateSeek = r.seek(m[w]),
                    t._playStart = r._webAudio ? k.ctx.currentTime : t._playStart);
                    t._rate = g;
                    r._webAudio && t._node && t._node.bufferSource ? t._node.bufferSource.playbackRate.setValueAtTime(g, k.ctx.currentTime) : t._node && (t._node.playbackRate = g);
                    var M = r.seek(m[w]);
                    M = 1E3 * ((r._sprite[t._sprite][0] + r._sprite[t._sprite][1]) / 1E3 - M) / Math.abs(t._rate);
                    !r._endTimers[m[w]] && t._paused || (r._clearTimer(m[w]),
                    r._endTimers[m[w]] = setTimeout(r._ended.bind(r, t), M));
                    r._emit("rate", t._id)
                }
            return r
        },
        seek: function() {
            var g, m, r = this, n = arguments;
            0 === n.length ? r._sounds.length && (m = r._sounds[0]._id) : 1 === n.length ? 0 <= r._getSoundIds().indexOf(n[0]) ? m = parseInt(n[0], 10) : r._sounds.length && (m = r._sounds[0]._id,
            g = parseFloat(n[0])) : 2 === n.length && (g = parseFloat(n[0]),
            m = parseInt(n[1], 10));
            if (void 0 === m)
                return 0;
            if ("number" == typeof g && ("loaded" !== r._state || r._playLock))
                return r._queue.push({
                    event: "seek",
                    action: function() {
                        r.seek.apply(r, n)
                    }
                }),
                r;
            var t = r._soundById(m);
            if (t) {
                if (!("number" == typeof g && 0 <= g))
                    return r._webAudio ? (g = r.playing(m) ? k.ctx.currentTime - t._playStart : 0,
                    t._seek + ((t._rateSeek ? t._rateSeek - t._seek : 0) + g * Math.abs(t._rate))) : t._node.currentTime;
                var w = r.playing(m);
                w && r.pause(m, !0);
                t._seek = g;
                t._ended = !1;
                r._clearTimer(m);
                r._webAudio || !t._node || isNaN(t._node.duration) || (t._node.currentTime = g);
                var M = function() {
                    w && r.play(m, !0);
                    r._emit("seek", m)
                };
                if (w && !r._webAudio) {
                    var D = function() {
                        r._playLock ? setTimeout(D, 0) : M()
                    };
                    setTimeout(D, 0)
                } else
                    M()
            }
            return r
        },
        playing: function(g) {
            if ("number" == typeof g)
                return g = this._soundById(g),
                !!g && !g._paused;
            for (g = 0; g < this._sounds.length; g++)
                if (!this._sounds[g]._paused)
                    return !0;
            return !1
        },
        duration: function(g) {
            var m = this._duration;
            g = this._soundById(g);
            return g && (m = this._sprite[g._sprite][1] / 1E3),
            m
        },
        state: function() {
            return this._state
        },
        unload: function() {
            for (var g = this._sounds, m = 0; m < g.length; m++)
                g[m]._paused || this.stop(g[m]._id),
                this._webAudio || (this._clearSound(g[m]._node),
                g[m]._node.removeEventListener("error", g[m]._errorFn, !1),
                g[m]._node.removeEventListener(k._canPlayEvent, g[m]._loadFn, !1),
                g[m]._node.removeEventListener("ended", g[m]._endFn, !1),
                k._releaseHtml5Audio(g[m]._node)),
                delete g[m]._node,
                this._clearTimer(g[m]._id);
            m = k._howls.indexOf(this);
            0 <= m && k._howls.splice(m, 1);
            g = !0;
            for (m = 0; m < k._howls.length; m++)
                if (k._howls[m]._src === this._src || 0 <= this._src.indexOf(k._howls[m]._src)) {
                    g = !1;
                    break
                }
            return n && g && delete n[this._src],
            k.noAudio = !1,
            this._state = "unloaded",
            this._sounds = [],
            null
        },
        on: function(g, m, k, r) {
            g = this["_on" + g];
            return "function" == typeof m && g.push(r ? {
                id: k,
                fn: m,
                once: r
            } : {
                id: k,
                fn: m
            }),
            this
        },
        off: function(g, m, k) {
            var r = this["_on" + g];
            if ("number" == typeof m && (k = m,
            m = null),
            m || k)
                for (g = 0; g < r.length; g++) {
                    var n = k === r[g].id;
                    if (m === r[g].fn && n || !m && n) {
                        r.splice(g, 1);
                        break
                    }
                }
            else if (g)
                this["_on" + g] = [];
            else
                for (m = Object.keys(this),
                g = 0; g < m.length; g++)
                    0 === m[g].indexOf("_on") && Array.isArray(this[m[g]]) && (this[m[g]] = []);
            return this
        },
        once: function(g, m, k) {
            return this.on(g, m, k, 1),
            this
        },
        _emit: function(g, m, k) {
            for (var r = this["_on" + g], n = r.length - 1; 0 <= n; n--)
                r[n].id && r[n].id !== m && "load" !== g || (setTimeout(function(g) {
                    g.call(this, m, k)
                }
                .bind(this, r[n].fn), 0),
                r[n].once && this.off(g, r[n].fn, r[n].id));
            return this._loadQueue(g),
            this
        },
        _loadQueue: function(g) {
            if (0 < this._queue.length) {
                var m = this._queue[0];
                m.event === g && (this._queue.shift(),
                this._loadQueue());
                g || m.action()
            }
            return this
        },
        _ended: function(g) {
            var m = g._sprite;
            if (!this._webAudio && g._node && !g._node.paused && !g._node.ended && g._node.currentTime < g._stop)
                return setTimeout(this._ended.bind(this, g), 100),
                this;
            m = !(!g._loop && !this._sprite[m][2]);
            if (this._emit("end", g._id),
            !this._webAudio && m && this.stop(g._id, !0).play(g._id),
            this._webAudio && m) {
                this._emit("play", g._id);
                g._seek = g._start || 0;
                g._rateSeek = 0;
                g._playStart = k.ctx.currentTime;
                var r = 1E3 * (g._stop - g._start) / Math.abs(g._rate);
                this._endTimers[g._id] = setTimeout(this._ended.bind(this, g), r)
            }
            return this._webAudio && !m && (g._paused = !0,
            g._ended = !0,
            g._seek = g._start || 0,
            g._rateSeek = 0,
            this._clearTimer(g._id),
            this._cleanBuffer(g._node),
            k._autoSuspend()),
            this._webAudio || m || this.stop(g._id, !0),
            this
        },
        _clearTimer: function(g) {
            if (this._endTimers[g]) {
                if ("function" != typeof this._endTimers[g])
                    clearTimeout(this._endTimers[g]);
                else {
                    var m = this._soundById(g);
                    m && m._node && m._node.removeEventListener("ended", this._endTimers[g], !1)
                }
                delete this._endTimers[g]
            }
            return this
        },
        _soundById: function(g) {
            for (var m = 0; m < this._sounds.length; m++)
                if (g === this._sounds[m]._id)
                    return this._sounds[m];
            return null
        },
        _inactiveSound: function() {
            this._drain();
            for (var g = 0; g < this._sounds.length; g++)
                if (this._sounds[g]._ended)
                    return this._sounds[g].reset();
            return new G(this)
        },
        _drain: function() {
            var g = this._pool, m = 0, k;
            if (!(this._sounds.length < g)) {
                for (k = 0; k < this._sounds.length; k++)
                    this._sounds[k]._ended && m++;
                for (k = this._sounds.length - 1; 0 <= k && !(m <= g); k--)
                    this._sounds[k]._ended && (this._webAudio && this._sounds[k]._node && this._sounds[k]._node.disconnect(0),
                    this._sounds.splice(k, 1),
                    m--)
            }
        },
        _getSoundIds: function(g) {
            if (void 0 === g) {
                g = [];
                for (var m = 0; m < this._sounds.length; m++)
                    g.push(this._sounds[m]._id);
                return g
            }
            return [g]
        },
        _refreshBuffer: function(g) {
            return g._node.bufferSource = k.ctx.createBufferSource(),
            g._node.bufferSource.buffer = n[this._src],
            g._panner ? g._node.bufferSource.connect(g._panner) : g._node.bufferSource.connect(g._node),
            g._node.bufferSource.loop = g._loop,
            g._loop && (g._node.bufferSource.loopStart = g._start || 0,
            g._node.bufferSource.loopEnd = g._stop || 0),
            g._node.bufferSource.playbackRate.setValueAtTime(g._rate, k.ctx.currentTime),
            this
        },
        _cleanBuffer: function(g) {
            var m = k._navigator && 0 <= k._navigator.vendor.indexOf("Apple");
            if (!g.bufferSource)
                return this;
            if (k._scratchBuffer && g.bufferSource && (g.bufferSource.onended = null,
            g.bufferSource.disconnect(0),
            m))
                try {
                    g.bufferSource.buffer = k._scratchBuffer
                } catch (z) {}
            return g.bufferSource = null,
            this
        },
        _clearSound: function(g) {
            /MSIE |Trident\//.test(k._navigator && k._navigator.userAgent) || (g.src = "data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA")
        }
    };
    var G = function(g) {
        this._parent = g;
        this.init()
    };
    G.prototype = {
        init: function() {
            var g = this._parent;
            return this._muted = g._muted,
            this._loop = g._loop,
            this._volume = g._volume,
            this._rate = g._rate,
            this._seek = 0,
            this._paused = !0,
            this._ended = !0,
            this._sprite = "__default",
            this._id = ++k._counter,
            g._sounds.push(this),
            this.create(),
            this
        },
        create: function() {
            var g = this._parent
              , m = k._muted || this._muted || this._parent._muted ? 0 : this._volume;
            return g._webAudio ? (this._node = void 0 === k.ctx.createGain ? k.ctx.createGainNode() : k.ctx.createGain(),
            this._node.gain.setValueAtTime(m, k.ctx.currentTime),
            this._node.paused = !0,
            this._node.connect(k.masterGain)) : k.noAudio || (this._node = k._obtainHtml5Audio(),
            this._errorFn = this._errorListener.bind(this),
            this._node.addEventListener("error", this._errorFn, !1),
            this._loadFn = this._loadListener.bind(this),
            this._node.addEventListener(k._canPlayEvent, this._loadFn, !1),
            this._endFn = this._endListener.bind(this),
            this._node.addEventListener("ended", this._endFn, !1),
            this._node.src = g._src,
            this._node.preload = !0 === g._preload ? "auto" : g._preload,
            this._node.volume = m * k.volume(),
            this._node.load()),
            this
        },
        reset: function() {
            var g = this._parent;
            return this._muted = g._muted,
            this._loop = g._loop,
            this._volume = g._volume,
            this._rate = g._rate,
            this._seek = 0,
            this._rateSeek = 0,
            this._paused = !0,
            this._ended = !0,
            this._sprite = "__default",
            this._id = ++k._counter,
            this
        },
        _errorListener: function() {
            this._parent._emit("loaderror", this._id, this._node.error ? this._node.error.code : 0);
            this._node.removeEventListener("error", this._errorFn, !1)
        },
        _loadListener: function() {
            var g = this._parent;
            g._duration = Math.ceil(10 * this._node.duration) / 10;
            0 === Object.keys(g._sprite).length && (g._sprite = {
                __default: [0, 1E3 * g._duration]
            });
            "loaded" !== g._state && (g._state = "loaded",
            g._emit("load"),
            g._loadQueue());
            this._node.removeEventListener(k._canPlayEvent, this._loadFn, !1)
        },
        _endListener: function() {
            var g = this._parent;
            g._duration === 1 / 0 && (g._duration = Math.ceil(10 * this._node.duration) / 10,
            g._sprite.__default[1] === 1 / 0 && (g._sprite.__default[1] = 1E3 * g._duration),
            g._ended(this));
            this._node.removeEventListener("ended", this._endFn, !1)
        }
    };
    var n = {}
      , D = function(g) {
        var m = g._src;
        if (n[m])
            return g._duration = n[m].duration,
            void V(g);
        if (/^data:[^;]+;base64,/.test(m)) {
            for (var k = atob(m.split(",")[1]), r = new Uint8Array(k.length), t = 0; t < k.length; ++t)
                r[t] = k.charCodeAt(t);
            aa(r.buffer, g)
        } else {
            var w = new XMLHttpRequest;
            w.open(g._xhr.method, m, !0);
            w.withCredentials = g._xhr.withCredentials;
            w.responseType = "arraybuffer";
            g._xhr.headers && Object.keys(g._xhr.headers).forEach(function(m) {
                w.setRequestHeader(m, g._xhr.headers[m])
            });
            w.onload = function() {
                var m = (w.status + "")[0];
                if ("0" !== m && "2" !== m && "3" !== m)
                    return void g._emit("loaderror", null, "Failed loading audio file with status: " + w.status + ".");
                aa(w.response, g)
            }
            ;
            w.onerror = function() {
                g._webAudio && (g._html5 = !0,
                g._webAudio = !1,
                g._sounds = [],
                delete n[m],
                g.load())
            }
            ;
            M(w)
        }
    }
      , M = function(g) {
        try {
            g.send()
        } catch (m) {
            g.onerror()
        }
    }
      , aa = function(g, m) {
        var r = function() {
            m._emit("loaderror", null, "Decoding audio data failed.")
        }
          , t = function(g) {
            g && 0 < m._sounds.length ? (n[m._src] = g,
            V(m, g)) : r()
        };
        "undefined" != typeof Promise && 1 === k.ctx.decodeAudioData.length ? k.ctx.decodeAudioData(g).then(t).catch(r) : k.ctx.decodeAudioData(g, t, r)
    }
      , V = function(g, m) {
        m && !g._duration && (g._duration = m.duration);
        0 === Object.keys(g._sprite).length && (g._sprite = {
            __default: [0, 1E3 * g._duration]
        });
        "loaded" !== g._state && (g._state = "loaded",
        g._emit("load"),
        g._loadQueue())
    }
      , t = function() {
        if (k.usingWebAudio) {
            try {
                "undefined" != typeof AudioContext ? k.ctx = new AudioContext : "undefined" != typeof webkitAudioContext ? k.ctx = new webkitAudioContext : k.usingWebAudio = !1
            } catch (z) {
                k.usingWebAudio = !1
            }
            k.ctx || (k.usingWebAudio = !1);
            var g = /iP(hone|od|ad)/.test(k._navigator && k._navigator.platform)
              , m = k._navigator && k._navigator.appVersion.match(/OS (\d+)_(\d+)_?(\d+)?/);
            m = m ? parseInt(m[1], 10) : null;
            g && m && 9 > m && (g = /safari/.test(k._navigator && k._navigator.userAgent.toLowerCase()),
            k._navigator && !g && (k.usingWebAudio = !1));
            k.usingWebAudio && (k.masterGain = void 0 === k.ctx.createGain ? k.ctx.createGainNode() : k.ctx.createGain(),
            k.masterGain.gain.setValueAtTime(k._muted ? 0 : k._volume, k.ctx.currentTime),
            k.masterGain.connect(k.ctx.destination));
            k._setup()
        }
    };
    "function" == typeof define && define.amd && define([], function() {
        return {
            Howler: k,
            Howl: w
        }
    });
    "undefined" != typeof exports && (exports.Howler = k,
    exports.Howl = w);
    "undefined" != typeof global ? (global.HowlerGlobal = r,
    global.Howler = k,
    global.Howl = w,
    global.Sound = G) : "undefined" != typeof window && (window.HowlerGlobal = r,
    window.Howler = k,
    window.Howl = w,
    window.Sound = G)
}(),
!function() {
    HowlerGlobal.prototype._pos = [0, 0, 0];
    HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];
    HowlerGlobal.prototype.stereo = function(k) {
        if (!this.ctx || !this.ctx.listener)
            return this;
        for (var r = this._howls.length - 1; 0 <= r; r--)
            this._howls[r].stereo(k);
        return this
    }
    ;
    HowlerGlobal.prototype.pos = function(k, r, G) {
        return this.ctx && this.ctx.listener ? (r = "number" != typeof r ? this._pos[1] : r,
        G = "number" != typeof G ? this._pos[2] : G,
        "number" != typeof k ? this._pos : (this._pos = [k, r, G],
        void 0 !== this.ctx.listener.positionX ? (this.ctx.listener.positionX.setTargetAtTime(this._pos[0], Howler.ctx.currentTime, .1),
        this.ctx.listener.positionY.setTargetAtTime(this._pos[1], Howler.ctx.currentTime, .1),
        this.ctx.listener.positionZ.setTargetAtTime(this._pos[2], Howler.ctx.currentTime, .1)) : this.ctx.listener.setPosition(this._pos[0], this._pos[1], this._pos[2]),
        this)) : this
    }
    ;
    HowlerGlobal.prototype.orientation = function(k, r, G, n, D, M) {
        if (!this.ctx || !this.ctx.listener)
            return this;
        var w = this._orientation;
        return r = "number" != typeof r ? w[1] : r,
        G = "number" != typeof G ? w[2] : G,
        n = "number" != typeof n ? w[3] : n,
        D = "number" != typeof D ? w[4] : D,
        M = "number" != typeof M ? w[5] : M,
        "number" != typeof k ? w : (this._orientation = [k, r, G, n, D, M],
        void 0 !== this.ctx.listener.forwardX ? (this.ctx.listener.forwardX.setTargetAtTime(k, Howler.ctx.currentTime, .1),
        this.ctx.listener.forwardY.setTargetAtTime(r, Howler.ctx.currentTime, .1),
        this.ctx.listener.forwardZ.setTargetAtTime(G, Howler.ctx.currentTime, .1),
        this.ctx.listener.upX.setTargetAtTime(n, Howler.ctx.currentTime, .1),
        this.ctx.listener.upY.setTargetAtTime(D, Howler.ctx.currentTime, .1),
        this.ctx.listener.upZ.setTargetAtTime(M, Howler.ctx.currentTime, .1)) : this.ctx.listener.setOrientation(k, r, G, n, D, M),
        this)
    }
    ;
    Howl.prototype.init = function(k) {
        return function(r) {
            return this._orientation = r.orientation || [1, 0, 0],
            this._stereo = r.stereo || null,
            this._pos = r.pos || null,
            this._pannerAttr = {
                coneInnerAngle: void 0 !== r.coneInnerAngle ? r.coneInnerAngle : 360,
                coneOuterAngle: void 0 !== r.coneOuterAngle ? r.coneOuterAngle : 360,
                coneOuterGain: void 0 !== r.coneOuterGain ? r.coneOuterGain : 0,
                distanceModel: void 0 !== r.distanceModel ? r.distanceModel : "inverse",
                maxDistance: void 0 !== r.maxDistance ? r.maxDistance : 1E4,
                panningModel: void 0 !== r.panningModel ? r.panningModel : "HRTF",
                refDistance: void 0 !== r.refDistance ? r.refDistance : 1,
                rolloffFactor: void 0 !== r.rolloffFactor ? r.rolloffFactor : 1
            },
            this._onstereo = r.onstereo ? [{
                fn: r.onstereo
            }] : [],
            this._onpos = r.onpos ? [{
                fn: r.onpos
            }] : [],
            this._onorientation = r.onorientation ? [{
                fn: r.onorientation
            }] : [],
            k.call(this, r)
        }
    }(Howl.prototype.init);
    Howl.prototype.stereo = function(k, w) {
        var G = this;
        if (!G._webAudio)
            return G;
        if ("loaded" !== G._state)
            return G._queue.push({
                event: "stereo",
                action: function() {
                    G.stereo(k, w)
                }
            }),
            G;
        var n = void 0 === Howler.ctx.createStereoPanner ? "spatial" : "stereo";
        if (void 0 === w) {
            if ("number" != typeof k)
                return G._stereo;
            G._stereo = k;
            G._pos = [k, 0, 0]
        }
        for (var D = G._getSoundIds(w), M = 0; M < D.length; M++) {
            var aa = G._soundById(D[M]);
            if (aa) {
                if ("number" != typeof k)
                    return aa._stereo;
                aa._stereo = k;
                aa._pos = [k, 0, 0];
                aa._node && (aa._pannerAttr.panningModel = "equalpower",
                aa._panner && aa._panner.pan || r(aa, n),
                "spatial" === n ? void 0 !== aa._panner.positionX ? (aa._panner.positionX.setValueAtTime(k, Howler.ctx.currentTime),
                aa._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime),
                aa._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime)) : aa._panner.setPosition(k, 0, 0) : aa._panner.pan.setValueAtTime(k, Howler.ctx.currentTime));
                G._emit("stereo", aa._id)
            }
        }
        return G
    }
    ;
    Howl.prototype.pos = function(k, w, G, n) {
        var D = this;
        if (!D._webAudio)
            return D;
        if ("loaded" !== D._state)
            return D._queue.push({
                event: "pos",
                action: function() {
                    D.pos(k, w, G, n)
                }
            }),
            D;
        if (w = "number" != typeof w ? 0 : w,
        G = "number" != typeof G ? -.5 : G,
        void 0 === n) {
            if ("number" != typeof k)
                return D._pos;
            D._pos = [k, w, G]
        }
        for (var M = D._getSoundIds(n), aa = 0; aa < M.length; aa++) {
            var V = D._soundById(M[aa]);
            if (V) {
                if ("number" != typeof k)
                    return V._pos;
                V._pos = [k, w, G];
                V._node && (V._panner && !V._panner.pan || r(V, "spatial"),
                void 0 !== V._panner.positionX ? (V._panner.positionX.setValueAtTime(k, Howler.ctx.currentTime),
                V._panner.positionY.setValueAtTime(w, Howler.ctx.currentTime),
                V._panner.positionZ.setValueAtTime(G, Howler.ctx.currentTime)) : V._panner.setPosition(k, w, G));
                D._emit("pos", V._id)
            }
        }
        return D
    }
    ;
    Howl.prototype.orientation = function(k, w, G, n) {
        var D = this;
        if (!D._webAudio)
            return D;
        if ("loaded" !== D._state)
            return D._queue.push({
                event: "orientation",
                action: function() {
                    D.orientation(k, w, G, n)
                }
            }),
            D;
        if (w = "number" != typeof w ? D._orientation[1] : w,
        G = "number" != typeof G ? D._orientation[2] : G,
        void 0 === n) {
            if ("number" != typeof k)
                return D._orientation;
            D._orientation = [k, w, G]
        }
        for (var M = D._getSoundIds(n), aa = 0; aa < M.length; aa++) {
            var V = D._soundById(M[aa]);
            if (V) {
                if ("number" != typeof k)
                    return V._orientation;
                V._orientation = [k, w, G];
                V._node && (V._panner || (V._pos || (V._pos = D._pos || [0, 0, -.5]),
                r(V, "spatial")),
                void 0 !== V._panner.orientationX ? (V._panner.orientationX.setValueAtTime(k, Howler.ctx.currentTime),
                V._panner.orientationY.setValueAtTime(w, Howler.ctx.currentTime),
                V._panner.orientationZ.setValueAtTime(G, Howler.ctx.currentTime)) : V._panner.setOrientation(k, w, G));
                D._emit("orientation", V._id)
            }
        }
        return D
    }
    ;
    Howl.prototype.pannerAttr = function() {
        var k, w, G = arguments;
        if (!this._webAudio)
            return this;
        if (0 === G.length)
            return this._pannerAttr;
        if (1 === G.length) {
            if ("object" != typeof G[0])
                return w = this._soundById(parseInt(G[0], 10)),
                w ? w._pannerAttr : this._pannerAttr;
            var n = G[0];
            void 0 === k && (n.pannerAttr || (n.pannerAttr = {
                coneInnerAngle: n.coneInnerAngle,
                coneOuterAngle: n.coneOuterAngle,
                coneOuterGain: n.coneOuterGain,
                distanceModel: n.distanceModel,
                maxDistance: n.maxDistance,
                refDistance: n.refDistance,
                rolloffFactor: n.rolloffFactor,
                panningModel: n.panningModel
            }),
            this._pannerAttr = {
                coneInnerAngle: void 0 !== n.pannerAttr.coneInnerAngle ? n.pannerAttr.coneInnerAngle : this._coneInnerAngle,
                coneOuterAngle: void 0 !== n.pannerAttr.coneOuterAngle ? n.pannerAttr.coneOuterAngle : this._coneOuterAngle,
                coneOuterGain: void 0 !== n.pannerAttr.coneOuterGain ? n.pannerAttr.coneOuterGain : this._coneOuterGain,
                distanceModel: void 0 !== n.pannerAttr.distanceModel ? n.pannerAttr.distanceModel : this._distanceModel,
                maxDistance: void 0 !== n.pannerAttr.maxDistance ? n.pannerAttr.maxDistance : this._maxDistance,
                refDistance: void 0 !== n.pannerAttr.refDistance ? n.pannerAttr.refDistance : this._refDistance,
                rolloffFactor: void 0 !== n.pannerAttr.rolloffFactor ? n.pannerAttr.rolloffFactor : this._rolloffFactor,
                panningModel: void 0 !== n.pannerAttr.panningModel ? n.pannerAttr.panningModel : this._panningModel
            })
        } else
            2 === G.length && (n = G[0],
            k = parseInt(G[1], 10));
        k = this._getSoundIds(k);
        for (G = 0; G < k.length; G++)
            if (w = this._soundById(k[G])) {
                var D = w._pannerAttr;
                D = {
                    coneInnerAngle: void 0 !== n.coneInnerAngle ? n.coneInnerAngle : D.coneInnerAngle,
                    coneOuterAngle: void 0 !== n.coneOuterAngle ? n.coneOuterAngle : D.coneOuterAngle,
                    coneOuterGain: void 0 !== n.coneOuterGain ? n.coneOuterGain : D.coneOuterGain,
                    distanceModel: void 0 !== n.distanceModel ? n.distanceModel : D.distanceModel,
                    maxDistance: void 0 !== n.maxDistance ? n.maxDistance : D.maxDistance,
                    refDistance: void 0 !== n.refDistance ? n.refDistance : D.refDistance,
                    rolloffFactor: void 0 !== n.rolloffFactor ? n.rolloffFactor : D.rolloffFactor,
                    panningModel: void 0 !== n.panningModel ? n.panningModel : D.panningModel
                };
                var M = w._panner;
                M || (w._pos || (w._pos = this._pos || [0, 0, -.5]),
                r(w, "spatial"),
                M = w._panner);
                M.coneInnerAngle = D.coneInnerAngle;
                M.coneOuterAngle = D.coneOuterAngle;
                M.coneOuterGain = D.coneOuterGain;
                M.distanceModel = D.distanceModel;
                M.maxDistance = D.maxDistance;
                M.refDistance = D.refDistance;
                M.rolloffFactor = D.rolloffFactor;
                M.panningModel = D.panningModel
            }
        return this
    }
    ;
    Sound.prototype.init = function(k) {
        return function() {
            var r = this._parent;
            this._orientation = r._orientation;
            this._stereo = r._stereo;
            this._pos = r._pos;
            this._pannerAttr = r._pannerAttr;
            k.call(this);
            this._stereo ? r.stereo(this._stereo) : this._pos && r.pos(this._pos[0], this._pos[1], this._pos[2], this._id)
        }
    }(Sound.prototype.init);
    Sound.prototype.reset = function(k) {
        return function() {
            var r = this._parent;
            return this._orientation = r._orientation,
            this._stereo = r._stereo,
            this._pos = r._pos,
            this._pannerAttr = r._pannerAttr,
            this._stereo ? r.stereo(this._stereo) : this._pos ? r.pos(this._pos[0], this._pos[1], this._pos[2], this._id) : this._panner && (this._panner.disconnect(0),
            this._panner = void 0,
            r._refreshBuffer(this)),
            k.call(this)
        }
    }(Sound.prototype.reset);
    var r = function(k, r) {
        "spatial" === (r || "spatial") ? (k._panner = Howler.ctx.createPanner(),
        k._panner.coneInnerAngle = k._pannerAttr.coneInnerAngle,
        k._panner.coneOuterAngle = k._pannerAttr.coneOuterAngle,
        k._panner.coneOuterGain = k._pannerAttr.coneOuterGain,
        k._panner.distanceModel = k._pannerAttr.distanceModel,
        k._panner.maxDistance = k._pannerAttr.maxDistance,
        k._panner.refDistance = k._pannerAttr.refDistance,
        k._panner.rolloffFactor = k._pannerAttr.rolloffFactor,
        k._panner.panningModel = k._pannerAttr.panningModel,
        void 0 !== k._panner.positionX ? (k._panner.positionX.setValueAtTime(k._pos[0], Howler.ctx.currentTime),
        k._panner.positionY.setValueAtTime(k._pos[1], Howler.ctx.currentTime),
        k._panner.positionZ.setValueAtTime(k._pos[2], Howler.ctx.currentTime)) : k._panner.setPosition(k._pos[0], k._pos[1], k._pos[2]),
        void 0 !== k._panner.orientationX ? (k._panner.orientationX.setValueAtTime(k._orientation[0], Howler.ctx.currentTime),
        k._panner.orientationY.setValueAtTime(k._orientation[1], Howler.ctx.currentTime),
        k._panner.orientationZ.setValueAtTime(k._orientation[2], Howler.ctx.currentTime)) : k._panner.setOrientation(k._orientation[0], k._orientation[1], k._orientation[2])) : (k._panner = Howler.ctx.createStereoPanner(),
        k._panner.pan.setValueAtTime(k._stereo, Howler.ctx.currentTime));
        k._panner.connect(k._node);
        k._paused || k._parent.pause(k._id, !0).play(k._id, !0)
    }
}());
!function(r) {
    "object" == typeof exports && "undefined" != typeof module ? module.exports = r() : "function" == typeof define && define.amd ? define([], r) : ("undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this).pako = r()
}(function() {
    return function n(k, w, G) {
        function D(V, t) {
            if (!w[V]) {
                if (!k[V]) {
                    var g = "function" == typeof require && require;
                    if (!t && g)
                        return g(V, !0);
                    if (M)
                        return M(V, !0);
                    t = Error("Cannot find module '" + V + "'");
                    throw t.code = "MODULE_NOT_FOUND",
                    t;
                }
                t = w[V] = {
                    exports: {}
                };
                k[V][0].call(t.exports, function(g) {
                    var m = k[V][1][g];
                    return D(m ? m : g)
                }, t, t.exports, n, k, w, G)
            }
            return w[V].exports
        }
        for (var M = "function" == typeof require && require, aa = 0; aa < G.length; aa++)
            D(G[aa]);
        return D
    }({
        1: [function(k, w, G) {
            function n(k) {
                if (!(this instanceof n))
                    return new n(k);
                k = this.options = aa.assign({
                    level: B,
                    method: ma,
                    chunkSize: 16384,
                    windowBits: 15,
                    memLevel: 8,
                    strategy: wa,
                    to: ""
                }, k || {});
                k.raw && 0 < k.windowBits ? k.windowBits = -k.windowBits : k.gzip && 0 < k.windowBits && 16 > k.windowBits && (k.windowBits += 16);
                this.err = 0;
                this.msg = "";
                this.ended = !1;
                this.chunks = [];
                this.strm = new g;
                this.strm.avail_out = 0;
                var w = M.deflateInit2(this.strm, k.level, k.method, k.windowBits, k.memLevel, k.strategy);
                if (w !== z)
                    throw Error(t[w]);
                if (k.header && M.deflateSetHeader(this.strm, k.header),
                k.dictionary) {
                    var D;
                    if (D = "string" == typeof k.dictionary ? V.string2buf(k.dictionary) : "[object ArrayBuffer]" === m.call(k.dictionary) ? new Uint8Array(k.dictionary) : k.dictionary,
                    w = M.deflateSetDictionary(this.strm, D),
                    w !== z)
                        throw Error(t[w]);
                    this._dict_set = !0
                }
            }
            function D(g, k) {
                k = new n(k);
                if (k.push(g, !0),
                k.err)
                    throw k.msg;
                return k.result
            }
            var M = k("./zlib/deflate")
              , aa = k("./utils/common")
              , V = k("./utils/strings")
              , t = k("./zlib/messages")
              , g = k("./zlib/zstream")
              , m = Object.prototype.toString
              , z = 0
              , B = -1
              , wa = 0
              , ma = 8;
            n.prototype.push = function(g, k) {
                var n, u = this.strm, t = this.options.chunkSize;
                if (this.ended)
                    return !1;
                k = k === ~~k ? k : !0 === k ? 4 : 0;
                "string" == typeof g ? u.input = V.string2buf(g) : "[object ArrayBuffer]" === m.call(g) ? u.input = new Uint8Array(g) : u.input = g;
                u.next_in = 0;
                u.avail_in = u.input.length;
                do {
                    if (0 === u.avail_out && (u.output = new aa.Buf8(t),
                    u.next_out = 0,
                    u.avail_out = t),
                    n = M.deflate(u, k),
                    1 !== n && n !== z)
                        return this.onEnd(n),
                        this.ended = !0,
                        !1;
                    0 !== u.avail_out && (0 !== u.avail_in || 4 !== k && 2 !== k) || ("string" === this.options.to ? this.onData(V.buf2binstring(aa.shrinkBuf(u.output, u.next_out))) : this.onData(aa.shrinkBuf(u.output, u.next_out)))
                } while ((0 < u.avail_in || 0 === u.avail_out) && 1 !== n);
                return 4 === k ? (n = M.deflateEnd(this.strm),
                this.onEnd(n),
                this.ended = !0,
                n === z) : 2 !== k || (this.onEnd(z),
                u.avail_out = 0,
                !0)
            }
            ;
            n.prototype.onData = function(g) {
                this.chunks.push(g)
            }
            ;
            n.prototype.onEnd = function(g) {
                g === z && ("string" === this.options.to ? this.result = this.chunks.join("") : this.result = aa.flattenChunks(this.chunks));
                this.chunks = [];
                this.err = g;
                this.msg = this.strm.msg
            }
            ;
            G.Deflate = n;
            G.deflate = D;
            G.deflateRaw = function(g, k) {
                return k = k || {},
                k.raw = !0,
                D(g, k)
            }
            ;
            G.gzip = function(g, k) {
                return k = k || {},
                k.gzip = !0,
                D(g, k)
            }
        }
        , {
            "./utils/common": 3,
            "./utils/strings": 4,
            "./zlib/deflate": 8,
            "./zlib/messages": 13,
            "./zlib/zstream": 15
        }],
        2: [function(k, w, G) {
            function n(k) {
                if (!(this instanceof n))
                    return new n(k);
                var B = this.options = aa.assign({
                    chunkSize: 16384,
                    windowBits: 0,
                    to: ""
                }, k || {});
                B.raw && 0 <= B.windowBits && 16 > B.windowBits && (B.windowBits = -B.windowBits,
                0 === B.windowBits && (B.windowBits = -15));
                !(0 <= B.windowBits && 16 > B.windowBits) || k && k.windowBits || (B.windowBits += 32);
                15 < B.windowBits && 48 > B.windowBits && 0 === (15 & B.windowBits) && (B.windowBits |= 15);
                this.err = 0;
                this.msg = "";
                this.ended = !1;
                this.chunks = [];
                this.strm = new m;
                this.strm.avail_out = 0;
                k = M.inflateInit2(this.strm, B.windowBits);
                if (k !== t.Z_OK)
                    throw Error(g[k]);
                this.header = new z;
                M.inflateGetHeader(this.strm, this.header)
            }
            function D(g, k) {
                k = new n(k);
                if (k.push(g, !0),
                k.err)
                    throw k.msg;
                return k.result
            }
            var M = k("./zlib/inflate")
              , aa = k("./utils/common")
              , V = k("./utils/strings")
              , t = k("./zlib/constants")
              , g = k("./zlib/messages")
              , m = k("./zlib/zstream")
              , z = k("./zlib/gzheader")
              , B = Object.prototype.toString;
            n.prototype.push = function(g, k) {
                var m, n, z, u, w, D = this.strm, G = this.options.chunkSize, ma = this.options.dictionary, J = !1;
                if (this.ended)
                    return !1;
                k = k === ~~k ? k : !0 === k ? t.Z_FINISH : t.Z_NO_FLUSH;
                "string" == typeof g ? D.input = V.binstring2buf(g) : "[object ArrayBuffer]" === B.call(g) ? D.input = new Uint8Array(g) : D.input = g;
                D.next_in = 0;
                D.avail_in = D.input.length;
                do {
                    if (0 === D.avail_out && (D.output = new aa.Buf8(G),
                    D.next_out = 0,
                    D.avail_out = G),
                    m = M.inflate(D, t.Z_NO_FLUSH),
                    m === t.Z_NEED_DICT && ma && (w = "string" == typeof ma ? V.string2buf(ma) : "[object ArrayBuffer]" === B.call(ma) ? new Uint8Array(ma) : ma,
                    m = M.inflateSetDictionary(this.strm, w)),
                    m === t.Z_BUF_ERROR && !0 === J && (m = t.Z_OK,
                    J = !1),
                    m !== t.Z_STREAM_END && m !== t.Z_OK)
                        return this.onEnd(m),
                        this.ended = !0,
                        !1;
                    D.next_out && (0 !== D.avail_out && m !== t.Z_STREAM_END && (0 !== D.avail_in || k !== t.Z_FINISH && k !== t.Z_SYNC_FLUSH) || ("string" === this.options.to ? (n = V.utf8border(D.output, D.next_out),
                    z = D.next_out - n,
                    u = V.buf2string(D.output, n),
                    D.next_out = z,
                    D.avail_out = G - z,
                    z && aa.arraySet(D.output, D.output, n, z, 0),
                    this.onData(u)) : this.onData(aa.shrinkBuf(D.output, D.next_out))));
                    0 === D.avail_in && 0 === D.avail_out && (J = !0)
                } while ((0 < D.avail_in || 0 === D.avail_out) && m !== t.Z_STREAM_END);
                return m === t.Z_STREAM_END && (k = t.Z_FINISH),
                k === t.Z_FINISH ? (m = M.inflateEnd(this.strm),
                this.onEnd(m),
                this.ended = !0,
                m === t.Z_OK) : k !== t.Z_SYNC_FLUSH || (this.onEnd(t.Z_OK),
                D.avail_out = 0,
                !0)
            }
            ;
            n.prototype.onData = function(g) {
                this.chunks.push(g)
            }
            ;
            n.prototype.onEnd = function(g) {
                g === t.Z_OK && ("string" === this.options.to ? this.result = this.chunks.join("") : this.result = aa.flattenChunks(this.chunks));
                this.chunks = [];
                this.err = g;
                this.msg = this.strm.msg
            }
            ;
            G.Inflate = n;
            G.inflate = D;
            G.inflateRaw = function(g, k) {
                return k = k || {},
                k.raw = !0,
                D(g, k)
            }
            ;
            G.ungzip = D
        }
        , {
            "./utils/common": 3,
            "./utils/strings": 4,
            "./zlib/constants": 6,
            "./zlib/gzheader": 9,
            "./zlib/inflate": 11,
            "./zlib/messages": 13,
            "./zlib/zstream": 15
        }],
        3: [function(k, w, G) {
            k = "undefined" != typeof Uint8Array && "undefined" != typeof Uint16Array && "undefined" != typeof Int32Array;
            G.assign = function(k) {
                for (var n = Array.prototype.slice.call(arguments, 1); n.length; ) {
                    var w = n.shift();
                    if (w) {
                        if ("object" != typeof w)
                            throw new TypeError(w + "must be non-object");
                        for (var t in w)
                            w.hasOwnProperty(t) && (k[t] = w[t])
                    }
                }
                return k
            }
            ;
            G.shrinkBuf = function(k, n) {
                return k.length === n ? k : k.subarray ? k.subarray(0, n) : (k.length = n,
                k)
            }
            ;
            var n = {
                arraySet: function(k, n, w, t, g) {
                    if (n.subarray && k.subarray)
                        return void k.set(n.subarray(w, w + t), g);
                    for (var m = 0; m < t; m++)
                        k[g + m] = n[w + m]
                },
                flattenChunks: function(k) {
                    var n, w;
                    var t = w = 0;
                    for (n = k.length; t < n; t++)
                        w += k[t].length;
                    var g = new Uint8Array(w);
                    t = w = 0;
                    for (n = k.length; t < n; t++) {
                        var m = k[t];
                        g.set(m, w);
                        w += m.length
                    }
                    return g
                }
            }
              , D = {
                arraySet: function(k, n, w, t, g) {
                    for (var m = 0; m < t; m++)
                        k[g + m] = n[w + m]
                },
                flattenChunks: function(k) {
                    return [].concat.apply([], k)
                }
            };
            G.setTyped = function(k) {
                k ? (G.Buf8 = Uint8Array,
                G.Buf16 = Uint16Array,
                G.Buf32 = Int32Array,
                G.assign(G, n)) : (G.Buf8 = Array,
                G.Buf16 = Array,
                G.Buf32 = Array,
                G.assign(G, D))
            }
            ;
            G.setTyped(k)
        }
        , {}],
        4: [function(k, w, G) {
            function n(k, g) {
                if (65537 > g && (k.subarray && aa || !k.subarray && M))
                    return String.fromCharCode.apply(null, D.shrinkBuf(k, g));
                for (var m = "", n = 0; n < g; n++)
                    m += String.fromCharCode(k[n]);
                return m
            }
            var D = k("./common")
              , M = !0
              , aa = !0;
            try {
                String.fromCharCode.apply(null, [0])
            } catch (t) {
                M = !1
            }
            try {
                String.fromCharCode.apply(null, new Uint8Array(1))
            } catch (t) {
                aa = !1
            }
            var V = new D.Buf8(256);
            for (k = 0; 256 > k; k++)
                V[k] = 252 <= k ? 6 : 248 <= k ? 5 : 240 <= k ? 4 : 224 <= k ? 3 : 192 <= k ? 2 : 1;
            V[254] = V[254] = 1;
            G.string2buf = function(k) {
                var g, m, n, t = k.length, w = 0;
                for (m = 0; m < t; m++) {
                    var G = k.charCodeAt(m);
                    55296 === (64512 & G) && m + 1 < t && (g = k.charCodeAt(m + 1),
                    56320 === (64512 & g) && (G = 65536 + (G - 55296 << 10) + (g - 56320),
                    m++));
                    w += 128 > G ? 1 : 2048 > G ? 2 : 65536 > G ? 3 : 4
                }
                var M = new D.Buf8(w);
                for (m = n = 0; n < w; m++)
                    G = k.charCodeAt(m),
                    55296 === (64512 & G) && m + 1 < t && (g = k.charCodeAt(m + 1),
                    56320 === (64512 & g) && (G = 65536 + (G - 55296 << 10) + (g - 56320),
                    m++)),
                    128 > G ? M[n++] = G : 2048 > G ? (M[n++] = 192 | G >>> 6,
                    M[n++] = 128 | 63 & G) : 65536 > G ? (M[n++] = 224 | G >>> 12,
                    M[n++] = 128 | G >>> 6 & 63,
                    M[n++] = 128 | 63 & G) : (M[n++] = 240 | G >>> 18,
                    M[n++] = 128 | G >>> 12 & 63,
                    M[n++] = 128 | G >>> 6 & 63,
                    M[n++] = 128 | 63 & G);
                return M
            }
            ;
            G.buf2binstring = function(k) {
                return n(k, k.length)
            }
            ;
            G.binstring2buf = function(k) {
                for (var g = new D.Buf8(k.length), m = 0, n = g.length; m < n; m++)
                    g[m] = k.charCodeAt(m);
                return g
            }
            ;
            G.buf2string = function(k, g) {
                var m, t, B, w = g || k.length, D = Array(2 * w);
                for (g = m = 0; g < w; )
                    if (t = k[g++],
                    128 > t)
                        D[m++] = t;
                    else if (B = V[t],
                    4 < B)
                        D[m++] = 65533,
                        g += B - 1;
                    else {
                        for (t &= 2 === B ? 31 : 3 === B ? 15 : 7; 1 < B && g < w; )
                            t = t << 6 | 63 & k[g++],
                            B--;
                        1 < B ? D[m++] = 65533 : 65536 > t ? D[m++] = t : (t -= 65536,
                        D[m++] = 55296 | t >> 10 & 1023,
                        D[m++] = 56320 | 1023 & t)
                    }
                return n(D, m)
            }
            ;
            G.utf8border = function(k, g) {
                var m;
                g = g || k.length;
                g > k.length && (g = k.length);
                for (m = g - 1; 0 <= m && 128 === (192 & k[m]); )
                    m--;
                return 0 > m ? g : 0 === m ? g : m + V[k[m]] > g ? m : g
            }
        }
        , {
            "./common": 3
        }],
        5: [function(k, w, G) {
            w.exports = function(k, w, G, aa) {
                var n = 65535 & k | 0;
                k = k >>> 16 & 65535 | 0;
                for (var t; 0 !== G; ) {
                    t = 2E3 < G ? 2E3 : G;
                    G -= t;
                    do
                        n = n + w[aa++] | 0,
                        k = k + n | 0;
                    while (--t);
                    n %= 65521;
                    k %= 65521
                }
                return n | k << 16 | 0
            }
        }
        , {}],
        6: [function(k, w, G) {
            w.exports = {
                Z_NO_FLUSH: 0,
                Z_PARTIAL_FLUSH: 1,
                Z_SYNC_FLUSH: 2,
                Z_FULL_FLUSH: 3,
                Z_FINISH: 4,
                Z_BLOCK: 5,
                Z_TREES: 6,
                Z_OK: 0,
                Z_STREAM_END: 1,
                Z_NEED_DICT: 2,
                Z_ERRNO: -1,
                Z_STREAM_ERROR: -2,
                Z_DATA_ERROR: -3,
                Z_BUF_ERROR: -5,
                Z_NO_COMPRESSION: 0,
                Z_BEST_SPEED: 1,
                Z_BEST_COMPRESSION: 9,
                Z_DEFAULT_COMPRESSION: -1,
                Z_FILTERED: 1,
                Z_HUFFMAN_ONLY: 2,
                Z_RLE: 3,
                Z_FIXED: 4,
                Z_DEFAULT_STRATEGY: 0,
                Z_BINARY: 0,
                Z_TEXT: 1,
                Z_UNKNOWN: 2,
                Z_DEFLATED: 8
            }
        }
        , {}],
        7: [function(k, w, G) {
            var n = function() {
                for (var k, n = [], w = 0; 256 > w; w++) {
                    k = w;
                    for (var G = 0; 8 > G; G++)
                        k = 1 & k ? 3988292384 ^ k >>> 1 : k >>> 1;
                    n[w] = k
                }
                return n
            }();
            w.exports = function(k, w, G, V) {
                G = V + G;
                for (k ^= -1; V < G; V++)
                    k = k >>> 8 ^ n[255 & (k ^ w[V])];
                return k ^ -1
            }
        }
        , {}],
        8: [function(k, w, G) {
            function n(d, g) {
                return d.msg = Qa[g],
                g
            }
            function D(d) {
                for (var g = d.length; 0 <= --g; )
                    d[g] = 0
            }
            function M(d) {
                var g = d.state
                  , k = g.pending;
                k > d.avail_out && (k = d.avail_out);
                0 !== k && (u.arraySet(d.output, g.pending_buf, g.pending_out, k, d.next_out),
                d.next_out += k,
                g.pending_out += k,
                d.total_out += k,
                d.avail_out -= k,
                g.pending -= k,
                0 === g.pending && (g.pending_out = 0))
            }
            function aa(d, g) {
                Za._tr_flush_block(d, 0 <= d.block_start ? d.block_start : -1, d.strstart - d.block_start, g);
                d.block_start = d.strstart;
                M(d.strm)
            }
            function V(d, g) {
                d.pending_buf[d.pending++] = g
            }
            function t(d, g) {
                d.pending_buf[d.pending++] = g >>> 8 & 255;
                d.pending_buf[d.pending++] = 255 & g
            }
            function g(d, g) {
                var k, m, L = d.max_chain_length, n = d.strstart, u = d.prev_length, t = d.nice_match, z = d.strstart > d.w_size - Ma ? d.strstart - (d.w_size - Ma) : 0, x = d.window, A = d.w_mask, J = d.prev, C = d.strstart + Y, B = x[n + u - 1], w = x[n + u];
                d.prev_length >= d.good_match && (L >>= 2);
                t > d.lookahead && (t = d.lookahead);
                do
                    if (k = g,
                    x[k + u] === w && x[k + u - 1] === B && x[k] === x[n] && x[++k] === x[n + 1]) {
                        n += 2;
                        for (k++; x[++n] === x[++k] && x[++n] === x[++k] && x[++n] === x[++k] && x[++n] === x[++k] && x[++n] === x[++k] && x[++n] === x[++k] && x[++n] === x[++k] && x[++n] === x[++k] && n < C; )
                            ;
                        if (m = Y - (C - n),
                        n = C - Y,
                        m > u) {
                            if (d.match_start = g,
                            u = m,
                            m >= t)
                                break;
                            B = x[n + u - 1];
                            w = x[n + u]
                        }
                    }
                while ((g = J[g & A]) > z && 0 !== --L);
                return u <= d.lookahead ? u : d.lookahead
            }
            function m(d) {
                var g, k, m = d.w_size;
                do {
                    if (k = d.window_size - d.lookahead - d.strstart,
                    d.strstart >= m + (m - Ma)) {
                        u.arraySet(d.window, d.window, m, m, 0);
                        d.match_start -= m;
                        d.strstart -= m;
                        d.block_start -= m;
                        var L = g = d.hash_size;
                        do {
                            var n = d.head[--L];
                            d.head[L] = n >= m ? n - m : 0
                        } while (--g);
                        L = g = m;
                        do
                            n = d.prev[--L],
                            d.prev[L] = n >= m ? n - m : 0;
                        while (--g);
                        k += m
                    }
                    if (0 === d.strm.avail_in)
                        break;
                    L = d.strm;
                    n = d.window;
                    var t = d.strstart + d.lookahead
                      , x = L.avail_in;
                    if (g = (x > k && (x = k),
                    0 === x ? 0 : (L.avail_in -= x,
                    u.arraySet(n, L.input, L.next_in, x, t),
                    1 === L.state.wrap ? L.adler = pa(L.adler, n, x, t) : 2 === L.state.wrap && (L.adler = sa(L.adler, n, x, t)),
                    L.next_in += x,
                    L.total_in += x,
                    x)),
                    d.lookahead += g,
                    d.lookahead + d.insert >= ba)
                        for (k = d.strstart - d.insert,
                        d.ins_h = d.window[k],
                        d.ins_h = (d.ins_h << d.hash_shift ^ d.window[k + 1]) & d.hash_mask; d.insert && (d.ins_h = (d.ins_h << d.hash_shift ^ d.window[k + ba - 1]) & d.hash_mask,
                        d.prev[k & d.w_mask] = d.head[d.ins_h],
                        d.head[d.ins_h] = k,
                        k++,
                        d.insert--,
                        !(d.lookahead + d.insert < ba)); )
                            ;
                } while (d.lookahead < Ma && 0 !== d.strm.avail_in)
            }
            function z(d, k) {
                for (var n, v; ; ) {
                    if (d.lookahead < Ma) {
                        if (m(d),
                        d.lookahead < Ma && k === J)
                            return H;
                        if (0 === d.lookahead)
                            break
                    }
                    if (n = 0,
                    d.lookahead >= ba && (d.ins_h = (d.ins_h << d.hash_shift ^ d.window[d.strstart + ba - 1]) & d.hash_mask,
                    n = d.prev[d.strstart & d.w_mask] = d.head[d.ins_h],
                    d.head[d.ins_h] = d.strstart),
                    0 !== n && d.strstart - n <= d.w_size - Ma && (d.match_length = g(d, n)),
                    d.match_length >= ba)
                        if (v = Za._tr_tally(d, d.strstart - d.match_start, d.match_length - ba),
                        d.lookahead -= d.match_length,
                        d.match_length <= d.max_lazy_match && d.lookahead >= ba) {
                            d.match_length--;
                            do
                                d.strstart++,
                                d.ins_h = (d.ins_h << d.hash_shift ^ d.window[d.strstart + ba - 1]) & d.hash_mask,
                                n = d.prev[d.strstart & d.w_mask] = d.head[d.ins_h],
                                d.head[d.ins_h] = d.strstart;
                            while (0 !== --d.match_length);
                            d.strstart++
                        } else
                            d.strstart += d.match_length,
                            d.match_length = 0,
                            d.ins_h = d.window[d.strstart],
                            d.ins_h = (d.ins_h << d.hash_shift ^ d.window[d.strstart + 1]) & d.hash_mask;
                    else
                        v = Za._tr_tally(d, 0, d.window[d.strstart]),
                        d.lookahead--,
                        d.strstart++;
                    if (v && (aa(d, !1),
                    0 === d.strm.avail_out))
                        return H
                }
                return d.insert = d.strstart < ba - 1 ? d.strstart : ba - 1,
                k === K ? (aa(d, !0),
                0 === d.strm.avail_out ? pb : ta) : d.last_lit && (aa(d, !1),
                0 === d.strm.avail_out) ? H : Lb
            }
            function B(d, k) {
                for (var n, v, u; ; ) {
                    if (d.lookahead < Ma) {
                        if (m(d),
                        d.lookahead < Ma && k === J)
                            return H;
                        if (0 === d.lookahead)
                            break
                    }
                    if (n = 0,
                    d.lookahead >= ba && (d.ins_h = (d.ins_h << d.hash_shift ^ d.window[d.strstart + ba - 1]) & d.hash_mask,
                    n = d.prev[d.strstart & d.w_mask] = d.head[d.ins_h],
                    d.head[d.ins_h] = d.strstart),
                    d.prev_length = d.match_length,
                    d.prev_match = d.match_start,
                    d.match_length = ba - 1,
                    0 !== n && d.prev_length < d.max_lazy_match && d.strstart - n <= d.w_size - Ma && (d.match_length = g(d, n),
                    5 >= d.match_length && (d.strategy === ib || d.match_length === ba && 4096 < d.strstart - d.match_start) && (d.match_length = ba - 1)),
                    d.prev_length >= ba && d.match_length <= d.prev_length) {
                        u = d.strstart + d.lookahead - ba;
                        v = Za._tr_tally(d, d.strstart - 1 - d.prev_match, d.prev_length - ba);
                        d.lookahead -= d.prev_length - 1;
                        d.prev_length -= 2;
                        do
                            ++d.strstart <= u && (d.ins_h = (d.ins_h << d.hash_shift ^ d.window[d.strstart + ba - 1]) & d.hash_mask,
                            n = d.prev[d.strstart & d.w_mask] = d.head[d.ins_h],
                            d.head[d.ins_h] = d.strstart);
                        while (0 !== --d.prev_length);
                        if (d.match_available = 0,
                        d.match_length = ba - 1,
                        d.strstart++,
                        v && (aa(d, !1),
                        0 === d.strm.avail_out))
                            return H
                    } else if (d.match_available) {
                        if (v = Za._tr_tally(d, 0, d.window[d.strstart - 1]),
                        v && aa(d, !1),
                        d.strstart++,
                        d.lookahead--,
                        0 === d.strm.avail_out)
                            return H
                    } else
                        d.match_available = 1,
                        d.strstart++,
                        d.lookahead--
                }
                return d.match_available && (Za._tr_tally(d, 0, d.window[d.strstart - 1]),
                d.match_available = 0),
                d.insert = d.strstart < ba - 1 ? d.strstart : ba - 1,
                k === K ? (aa(d, !0),
                0 === d.strm.avail_out ? pb : ta) : d.last_lit && (aa(d, !1),
                0 === d.strm.avail_out) ? H : Lb
            }
            function wa(d, g, k, m, n) {
                this.good_length = d;
                this.max_lazy = g;
                this.nice_length = k;
                this.max_chain = m;
                this.func = n
            }
            function ma() {
                this.strm = null;
                this.status = 0;
                this.pending_buf = null;
                this.wrap = this.pending = this.pending_out = this.pending_buf_size = 0;
                this.gzhead = null;
                this.gzindex = 0;
                this.method = W;
                this.last_flush = -1;
                this.w_mask = this.w_bits = this.w_size = 0;
                this.window = null;
                this.window_size = 0;
                this.head = this.prev = null;
                this.nice_match = this.good_match = this.strategy = this.level = this.max_lazy_match = this.max_chain_length = this.prev_length = this.lookahead = this.match_start = this.strstart = this.match_available = this.prev_match = this.match_length = this.block_start = this.hash_shift = this.hash_mask = this.hash_bits = this.hash_size = this.ins_h = 0;
                this.dyn_ltree = new u.Buf16(2 * La);
                this.dyn_dtree = new u.Buf16(2 * (2 * A + 1));
                this.bl_tree = new u.Buf16(2 * (2 * d + 1));
                D(this.dyn_ltree);
                D(this.dyn_dtree);
                D(this.bl_tree);
                this.bl_desc = this.d_desc = this.l_desc = null;
                this.bl_count = new u.Buf16(da + 1);
                this.heap = new u.Buf16(2 * X + 1);
                D(this.heap);
                this.heap_max = this.heap_len = 0;
                this.depth = new u.Buf16(2 * X + 1);
                D(this.depth);
                this.bi_valid = this.bi_buf = this.insert = this.matches = this.static_len = this.opt_len = this.d_buf = this.last_lit = this.lit_bufsize = this.l_buf = 0
            }
            function db(d) {
                var g;
                return d && d.state ? (d.total_in = d.total_out = 0,
                d.data_type = $a,
                g = d.state,
                g.pending = 0,
                g.pending_out = 0,
                0 > g.wrap && (g.wrap = -g.wrap),
                g.status = g.wrap ? fa : S,
                d.adler = 2 === g.wrap ? 0 : 1,
                g.last_flush = J,
                Za._tr_init(g),
                ka) : n(d, Z)
            }
            function oa(d) {
                var g = db(d);
                g === ka && (d = d.state,
                d.window_size = 2 * d.w_size,
                D(d.head),
                d.max_lazy_match = za[d.level].max_lazy,
                d.good_match = za[d.level].good_length,
                d.nice_match = za[d.level].nice_length,
                d.max_chain_length = za[d.level].max_chain,
                d.strstart = 0,
                d.block_start = 0,
                d.lookahead = 0,
                d.insert = 0,
                d.match_length = d.prev_length = ba - 1,
                d.match_available = 0,
                d.ins_h = 0);
                return g
            }
            function cb(d, g, k, m, t, z) {
                if (!d)
                    return Z;
                var v = 1;
                if (g === R && (g = 6),
                0 > m ? (v = 0,
                m = -m) : 15 < m && (v = 2,
                m -= 16),
                1 > t || t > P || k !== W || 8 > m || 15 < m || 0 > g || 9 < g || 0 > z || z > x)
                    return n(d, Z);
                8 === m && (m = 9);
                var O = new ma;
                return d.state = O,
                O.strm = d,
                O.wrap = v,
                O.gzhead = null,
                O.w_bits = m,
                O.w_size = 1 << O.w_bits,
                O.w_mask = O.w_size - 1,
                O.hash_bits = t + 7,
                O.hash_size = 1 << O.hash_bits,
                O.hash_mask = O.hash_size - 1,
                O.hash_shift = ~~((O.hash_bits + ba - 1) / ba),
                O.window = new u.Buf8(2 * O.w_size),
                O.head = new u.Buf16(O.hash_size),
                O.prev = new u.Buf16(O.w_size),
                O.lit_bufsize = 1 << t + 6,
                O.pending_buf_size = 4 * O.lit_bufsize,
                O.pending_buf = new u.Buf8(O.pending_buf_size),
                O.d_buf = 1 * O.lit_bufsize,
                O.l_buf = 3 * O.lit_bufsize,
                O.level = g,
                O.strategy = z,
                O.method = k,
                oa(d)
            }
            var u = k("../utils/common")
              , Za = k("./trees")
              , pa = k("./adler32")
              , sa = k("./crc32")
              , Qa = k("./messages")
              , J = 0
              , K = 4
              , ka = 0
              , Z = -2
              , R = -1
              , ib = 1
              , x = 4
              , $a = 2
              , W = 8
              , P = 9
              , X = 286
              , A = 30
              , d = 19
              , La = 2 * X + 1
              , da = 15
              , ba = 3
              , Y = 258
              , Ma = Y + ba + 1
              , fa = 42
              , S = 113
              , H = 1
              , Lb = 2
              , pb = 3
              , ta = 4;
            var za = [new wa(0,0,0,0,function(d, g) {
                var k = 65535;
                for (k > d.pending_buf_size - 5 && (k = d.pending_buf_size - 5); ; ) {
                    if (1 >= d.lookahead) {
                        if (m(d),
                        0 === d.lookahead && g === J)
                            return H;
                        if (0 === d.lookahead)
                            break
                    }
                    d.strstart += d.lookahead;
                    d.lookahead = 0;
                    var v = d.block_start + k;
                    if ((0 === d.strstart || d.strstart >= v) && (d.lookahead = d.strstart - v,
                    d.strstart = v,
                    aa(d, !1),
                    0 === d.strm.avail_out) || d.strstart - d.block_start >= d.w_size - Ma && (aa(d, !1),
                    0 === d.strm.avail_out))
                        return H
                }
                return d.insert = 0,
                g === K ? (aa(d, !0),
                0 === d.strm.avail_out ? pb : ta) : (d.strstart > d.block_start && aa(d, !1),
                H)
            }
            ), new wa(4,4,8,4,z), new wa(4,5,16,8,z), new wa(4,6,32,32,z), new wa(4,4,16,16,B), new wa(8,16,32,32,B), new wa(8,16,128,128,B), new wa(8,32,128,256,B), new wa(32,128,258,1024,B), new wa(32,258,258,4096,B)];
            G.deflateInit = function(d, g) {
                return cb(d, g, W, 15, 8, 0)
            }
            ;
            G.deflateInit2 = cb;
            G.deflateReset = oa;
            G.deflateResetKeep = db;
            G.deflateSetHeader = function(d, g) {
                return d && d.state ? 2 !== d.state.wrap ? Z : (d.state.gzhead = g,
                ka) : Z
            }
            ;
            G.deflate = function(d, g) {
                var k, v;
                if (!d || !d.state || 5 < g || 0 > g)
                    return d ? n(d, Z) : Z;
                if (v = d.state,
                !d.output || !d.input && 0 !== d.avail_in || 666 === v.status && g !== K)
                    return n(d, 0 === d.avail_out ? -5 : Z);
                if (v.strm = d,
                k = v.last_flush,
                v.last_flush = g,
                v.status === fa)
                    if (2 === v.wrap)
                        d.adler = 0,
                        V(v, 31),
                        V(v, 139),
                        V(v, 8),
                        v.gzhead ? (V(v, (v.gzhead.text ? 1 : 0) + (v.gzhead.hcrc ? 2 : 0) + (v.gzhead.extra ? 4 : 0) + (v.gzhead.name ? 8 : 0) + (v.gzhead.comment ? 16 : 0)),
                        V(v, 255 & v.gzhead.time),
                        V(v, v.gzhead.time >> 8 & 255),
                        V(v, v.gzhead.time >> 16 & 255),
                        V(v, v.gzhead.time >> 24 & 255),
                        V(v, 9 === v.level ? 2 : 2 <= v.strategy || 2 > v.level ? 4 : 0),
                        V(v, 255 & v.gzhead.os),
                        v.gzhead.extra && v.gzhead.extra.length && (V(v, 255 & v.gzhead.extra.length),
                        V(v, v.gzhead.extra.length >> 8 & 255)),
                        v.gzhead.hcrc && (d.adler = sa(d.adler, v.pending_buf, v.pending, 0)),
                        v.gzindex = 0,
                        v.status = 69) : (V(v, 0),
                        V(v, 0),
                        V(v, 0),
                        V(v, 0),
                        V(v, 0),
                        V(v, 9 === v.level ? 2 : 2 <= v.strategy || 2 > v.level ? 4 : 0),
                        V(v, 3),
                        v.status = S);
                    else {
                        var u = W + (v.w_bits - 8 << 4) << 8;
                        u |= (2 <= v.strategy || 2 > v.level ? 0 : 6 > v.level ? 1 : 6 === v.level ? 2 : 3) << 6;
                        0 !== v.strstart && (u |= 32);
                        v.status = S;
                        t(v, u + (31 - u % 31));
                        0 !== v.strstart && (t(v, d.adler >>> 16),
                        t(v, 65535 & d.adler));
                        d.adler = 1
                    }
                if (69 === v.status)
                    if (v.gzhead.extra) {
                        for (u = v.pending; v.gzindex < (65535 & v.gzhead.extra.length) && (v.pending !== v.pending_buf_size || (v.gzhead.hcrc && v.pending > u && (d.adler = sa(d.adler, v.pending_buf, v.pending - u, u)),
                        M(d),
                        u = v.pending,
                        v.pending !== v.pending_buf_size)); )
                            V(v, 255 & v.gzhead.extra[v.gzindex]),
                            v.gzindex++;
                        v.gzhead.hcrc && v.pending > u && (d.adler = sa(d.adler, v.pending_buf, v.pending - u, u));
                        v.gzindex === v.gzhead.extra.length && (v.gzindex = 0,
                        v.status = 73)
                    } else
                        v.status = 73;
                if (73 === v.status)
                    if (v.gzhead.name) {
                        u = v.pending;
                        do {
                            if (v.pending === v.pending_buf_size && (v.gzhead.hcrc && v.pending > u && (d.adler = sa(d.adler, v.pending_buf, v.pending - u, u)),
                            M(d),
                            u = v.pending,
                            v.pending === v.pending_buf_size)) {
                                var x = 1;
                                break
                            }
                            x = v.gzindex < v.gzhead.name.length ? 255 & v.gzhead.name.charCodeAt(v.gzindex++) : 0;
                            V(v, x)
                        } while (0 !== x);
                        v.gzhead.hcrc && v.pending > u && (d.adler = sa(d.adler, v.pending_buf, v.pending - u, u));
                        0 === x && (v.gzindex = 0,
                        v.status = 91)
                    } else
                        v.status = 91;
                if (91 === v.status)
                    if (v.gzhead.comment) {
                        u = v.pending;
                        do {
                            if (v.pending === v.pending_buf_size && (v.gzhead.hcrc && v.pending > u && (d.adler = sa(d.adler, v.pending_buf, v.pending - u, u)),
                            M(d),
                            u = v.pending,
                            v.pending === v.pending_buf_size)) {
                                x = 1;
                                break
                            }
                            x = v.gzindex < v.gzhead.comment.length ? 255 & v.gzhead.comment.charCodeAt(v.gzindex++) : 0;
                            V(v, x)
                        } while (0 !== x);
                        v.gzhead.hcrc && v.pending > u && (d.adler = sa(d.adler, v.pending_buf, v.pending - u, u));
                        0 === x && (v.status = 103)
                    } else
                        v.status = 103;
                if (103 === v.status && (v.gzhead.hcrc ? (v.pending + 2 > v.pending_buf_size && M(d),
                v.pending + 2 <= v.pending_buf_size && (V(v, 255 & d.adler),
                V(v, d.adler >> 8 & 255),
                d.adler = 0,
                v.status = S)) : v.status = S),
                0 !== v.pending) {
                    if (M(d),
                    0 === d.avail_out)
                        return v.last_flush = -1,
                        ka
                } else if (0 === d.avail_in && (g << 1) - (4 < g ? 9 : 0) <= (k << 1) - (4 < k ? 9 : 0) && g !== K)
                    return n(d, -5);
                if (666 === v.status && 0 !== d.avail_in)
                    return n(d, -5);
                if (0 !== d.avail_in || 0 !== v.lookahead || g !== J && 666 !== v.status) {
                    if (2 === v.strategy)
                        a: {
                            for (var z; ; ) {
                                if (0 === v.lookahead && (m(v),
                                0 === v.lookahead)) {
                                    if (g === J) {
                                        var A = H;
                                        break a
                                    }
                                    break
                                }
                                if (v.match_length = 0,
                                z = Za._tr_tally(v, 0, v.window[v.strstart]),
                                v.lookahead--,
                                v.strstart++,
                                z && (aa(v, !1),
                                0 === v.strm.avail_out)) {
                                    A = H;
                                    break a
                                }
                            }
                            A = (v.insert = 0,
                            g === K ? (aa(v, !0),
                            0 === v.strm.avail_out ? pb : ta) : v.last_lit && (aa(v, !1),
                            0 === v.strm.avail_out) ? H : Lb)
                        }
                    else if (3 === v.strategy)
                        a: {
                            var B, w;
                            for (z = v.window; ; ) {
                                if (v.lookahead <= Y) {
                                    if (m(v),
                                    v.lookahead <= Y && g === J) {
                                        A = H;
                                        break a
                                    }
                                    if (0 === v.lookahead)
                                        break
                                }
                                if (v.match_length = 0,
                                v.lookahead >= ba && 0 < v.strstart && (w = v.strstart - 1,
                                B = z[w],
                                B === z[++w] && B === z[++w] && B === z[++w])) {
                                    for (k = v.strstart + Y; B === z[++w] && B === z[++w] && B === z[++w] && B === z[++w] && B === z[++w] && B === z[++w] && B === z[++w] && B === z[++w] && w < k; )
                                        ;
                                    v.match_length = Y - (k - w);
                                    v.match_length > v.lookahead && (v.match_length = v.lookahead)
                                }
                                if (v.match_length >= ba ? (A = Za._tr_tally(v, 1, v.match_length - ba),
                                v.lookahead -= v.match_length,
                                v.strstart += v.match_length,
                                v.match_length = 0) : (A = Za._tr_tally(v, 0, v.window[v.strstart]),
                                v.lookahead--,
                                v.strstart++),
                                A && (aa(v, !1),
                                0 === v.strm.avail_out)) {
                                    A = H;
                                    break a
                                }
                            }
                            A = (v.insert = 0,
                            g === K ? (aa(v, !0),
                            0 === v.strm.avail_out ? pb : ta) : v.last_lit && (aa(v, !1),
                            0 === v.strm.avail_out) ? H : Lb)
                        }
                    else
                        A = za[v.level].func(v, g);
                    if (A !== pb && A !== ta || (v.status = 666),
                    A === H || A === pb)
                        return 0 === d.avail_out && (v.last_flush = -1),
                        ka;
                    if (A === Lb && (1 === g ? Za._tr_align(v) : 5 !== g && (Za._tr_stored_block(v, 0, 0, !1),
                    3 === g && (D(v.head),
                    0 === v.lookahead && (v.strstart = 0,
                    v.block_start = 0,
                    v.insert = 0))),
                    M(d),
                    0 === d.avail_out))
                        return v.last_flush = -1,
                        ka
                }
                return g !== K ? ka : 0 >= v.wrap ? 1 : (2 === v.wrap ? (V(v, 255 & d.adler),
                V(v, d.adler >> 8 & 255),
                V(v, d.adler >> 16 & 255),
                V(v, d.adler >> 24 & 255),
                V(v, 255 & d.total_in),
                V(v, d.total_in >> 8 & 255),
                V(v, d.total_in >> 16 & 255),
                V(v, d.total_in >> 24 & 255)) : (t(v, d.adler >>> 16),
                t(v, 65535 & d.adler)),
                M(d),
                0 < v.wrap && (v.wrap = -v.wrap),
                0 !== v.pending ? ka : 1)
            }
            ;
            G.deflateEnd = function(d) {
                var g;
                return d && d.state ? (g = d.state.status,
                g !== fa && 69 !== g && 73 !== g && 91 !== g && 103 !== g && g !== S && 666 !== g ? n(d, Z) : (d.state = null,
                g === S ? n(d, -3) : ka)) : Z
            }
            ;
            G.deflateSetDictionary = function(d, g) {
                var k, v, n;
                var t = g.length;
                if (!d || !d.state || (k = d.state,
                v = k.wrap,
                2 === v || 1 === v && k.status !== fa || k.lookahead))
                    return Z;
                1 === v && (d.adler = pa(d.adler, g, t, 0));
                k.wrap = 0;
                t >= k.w_size && (0 === v && (D(k.head),
                k.strstart = 0,
                k.block_start = 0,
                k.insert = 0),
                n = new u.Buf8(k.w_size),
                u.arraySet(n, g, t - k.w_size, k.w_size, 0),
                g = n,
                t = k.w_size);
                n = d.avail_in;
                var x = d.next_in;
                var z = d.input;
                d.avail_in = t;
                d.next_in = 0;
                d.input = g;
                for (m(k); k.lookahead >= ba; ) {
                    g = k.strstart;
                    t = k.lookahead - (ba - 1);
                    do
                        k.ins_h = (k.ins_h << k.hash_shift ^ k.window[g + ba - 1]) & k.hash_mask,
                        k.prev[g & k.w_mask] = k.head[k.ins_h],
                        k.head[k.ins_h] = g,
                        g++;
                    while (--t);
                    k.strstart = g;
                    k.lookahead = ba - 1;
                    m(k)
                }
                return k.strstart += k.lookahead,
                k.block_start = k.strstart,
                k.insert = k.lookahead,
                k.lookahead = 0,
                k.match_length = k.prev_length = ba - 1,
                k.match_available = 0,
                d.next_in = x,
                d.input = z,
                d.avail_in = n,
                k.wrap = v,
                ka
            }
            ;
            G.deflateInfo = "pako deflate (from Nodeca project)"
        }
        , {
            "../utils/common": 3,
            "./adler32": 5,
            "./crc32": 7,
            "./messages": 13,
            "./trees": 14
        }],
        9: [function(k, w, G) {
            w.exports = function() {
                this.os = this.xflags = this.time = this.text = 0;
                this.extra = null;
                this.extra_len = 0;
                this.comment = this.name = "";
                this.hcrc = 0;
                this.done = !1
            }
        }
        , {}],
        10: [function(k, w, G) {
            w.exports = function(k, w) {
                var n, G, D;
                var t = k.state;
                var g = k.next_in;
                var m = k.input;
                var z = g + (k.avail_in - 5);
                var B = k.next_out;
                var wa = k.output;
                w = B - (w - k.avail_out);
                var ma = B + (k.avail_out - 257);
                var db = t.dmax;
                var oa = t.wsize;
                var cb = t.whave;
                var u = t.wnext;
                var Za = t.window;
                var pa = t.hold;
                var sa = t.bits;
                var Qa = t.lencode;
                var J = t.distcode;
                var K = (1 << t.lenbits) - 1;
                var ka = (1 << t.distbits) - 1;
                a: do {
                    15 > sa && (pa += m[g++] << sa,
                    sa += 8,
                    pa += m[g++] << sa,
                    sa += 8);
                    var Z = Qa[pa & K];
                    b: for (; ; ) {
                        if (n = Z >>> 24,
                        pa >>>= n,
                        sa -= n,
                        n = Z >>> 16 & 255,
                        0 === n)
                            wa[B++] = 65535 & Z;
                        else {
                            if (!(16 & n)) {
                                if (0 === (64 & n)) {
                                    Z = Qa[(65535 & Z) + (pa & (1 << n) - 1)];
                                    continue b
                                }
                                if (32 & n) {
                                    t.mode = 12;
                                    break a
                                }
                                k.msg = "invalid literal/length code";
                                t.mode = 30;
                                break a
                            }
                            var R = 65535 & Z;
                            (n &= 15) && (sa < n && (pa += m[g++] << sa,
                            sa += 8),
                            R += pa & (1 << n) - 1,
                            pa >>>= n,
                            sa -= n);
                            15 > sa && (pa += m[g++] << sa,
                            sa += 8,
                            pa += m[g++] << sa,
                            sa += 8);
                            Z = J[pa & ka];
                            c: for (; ; ) {
                                if (n = Z >>> 24,
                                pa >>>= n,
                                sa -= n,
                                n = Z >>> 16 & 255,
                                !(16 & n)) {
                                    if (0 === (64 & n)) {
                                        Z = J[(65535 & Z) + (pa & (1 << n) - 1)];
                                        continue c
                                    }
                                    k.msg = "invalid distance code";
                                    t.mode = 30;
                                    break a
                                }
                                if (G = 65535 & Z,
                                n &= 15,
                                sa < n && (pa += m[g++] << sa,
                                sa += 8,
                                sa < n && (pa += m[g++] << sa,
                                sa += 8)),
                                G += pa & (1 << n) - 1,
                                G > db) {
                                    k.msg = "invalid distance too far back";
                                    t.mode = 30;
                                    break a
                                }
                                if (pa >>>= n,
                                sa -= n,
                                n = B - w,
                                G > n) {
                                    if (n = G - n,
                                    n > cb && t.sane) {
                                        k.msg = "invalid distance too far back";
                                        t.mode = 30;
                                        break a
                                    }
                                    if (Z = 0,
                                    D = Za,
                                    0 === u) {
                                        if (Z += oa - n,
                                        n < R) {
                                            R -= n;
                                            do
                                                wa[B++] = Za[Z++];
                                            while (--n);
                                            Z = B - G;
                                            D = wa
                                        }
                                    } else if (u < n) {
                                        if (Z += oa + u - n,
                                        n -= u,
                                        n < R) {
                                            R -= n;
                                            do
                                                wa[B++] = Za[Z++];
                                            while (--n);
                                            if (Z = 0,
                                            u < R) {
                                                n = u;
                                                R -= n;
                                                do
                                                    wa[B++] = Za[Z++];
                                                while (--n);
                                                Z = B - G;
                                                D = wa
                                            }
                                        }
                                    } else if (Z += u - n,
                                    n < R) {
                                        R -= n;
                                        do
                                            wa[B++] = Za[Z++];
                                        while (--n);
                                        Z = B - G;
                                        D = wa
                                    }
                                    for (; 2 < R; )
                                        wa[B++] = D[Z++],
                                        wa[B++] = D[Z++],
                                        wa[B++] = D[Z++],
                                        R -= 3;
                                    R && (wa[B++] = D[Z++],
                                    1 < R && (wa[B++] = D[Z++]))
                                } else {
                                    Z = B - G;
                                    do
                                        wa[B++] = wa[Z++],
                                        wa[B++] = wa[Z++],
                                        wa[B++] = wa[Z++],
                                        R -= 3;
                                    while (2 < R);
                                    R && (wa[B++] = wa[Z++],
                                    1 < R && (wa[B++] = wa[Z++]))
                                }
                                break
                            }
                        }
                        break
                    }
                } while (g < z && B < ma);
                R = sa >> 3;
                g -= R;
                sa -= R << 3;
                k.next_in = g;
                k.next_out = B;
                k.avail_in = g < z ? 5 + (z - g) : 5 - (g - z);
                k.avail_out = B < ma ? 257 + (ma - B) : 257 - (B - ma);
                t.hold = pa & (1 << sa) - 1;
                t.bits = sa
            }
        }
        , {}],
        11: [function(k, w, G) {
            function n(g) {
                return (g >>> 24 & 255) + (g >>> 8 & 65280) + ((65280 & g) << 8) + ((255 & g) << 24)
            }
            function D() {
                this.mode = 0;
                this.last = !1;
                this.wrap = 0;
                this.havedict = !1;
                this.total = this.check = this.dmax = this.flags = 0;
                this.head = null;
                this.wnext = this.whave = this.wsize = this.wbits = 0;
                this.window = null;
                this.extra = this.offset = this.length = this.bits = this.hold = 0;
                this.distcode = this.lencode = null;
                this.have = this.ndist = this.nlen = this.ncode = this.distbits = this.lenbits = 0;
                this.next = null;
                this.lens = new B.Buf16(320);
                this.work = new B.Buf16(288);
                this.distdyn = this.lendyn = null;
                this.was = this.back = this.sane = 0
            }
            function M(g) {
                var k;
                return g && g.state ? (k = g.state,
                g.total_in = g.total_out = k.total = 0,
                g.msg = "",
                k.wrap && (g.adler = 1 & k.wrap),
                k.mode = Za,
                k.last = 0,
                k.havedict = 0,
                k.dmax = 32768,
                k.head = null,
                k.hold = 0,
                k.bits = 0,
                k.lencode = k.lendyn = new B.Buf32(pa),
                k.distcode = k.distdyn = new B.Buf32(sa),
                k.sane = 1,
                k.back = -1,
                cb) : u
            }
            function aa(g) {
                var k;
                return g && g.state ? (k = g.state,
                k.wsize = 0,
                k.whave = 0,
                k.wnext = 0,
                M(g)) : u
            }
            function V(g, k) {
                var m, n;
                return g && g.state ? (n = g.state,
                0 > k ? (m = 0,
                k = -k) : (m = (k >> 4) + 1,
                48 > k && (k &= 15)),
                k && (8 > k || 15 < k) ? u : (null !== n.window && n.wbits !== k && (n.window = null),
                n.wrap = m,
                n.wbits = k,
                aa(g))) : u
            }
            function t(g, k) {
                var m, n;
                return g ? (n = new D,
                g.state = n,
                n.window = null,
                m = V(g, k),
                m !== cb && (g.state = null),
                m) : u
            }
            function g(g, k, m, n) {
                var u;
                g = g.state;
                return null === g.window && (g.wsize = 1 << g.wbits,
                g.wnext = 0,
                g.whave = 0,
                g.window = new B.Buf8(g.wsize)),
                n >= g.wsize ? (B.arraySet(g.window, k, m - g.wsize, g.wsize, 0),
                g.wnext = 0,
                g.whave = g.wsize) : (u = g.wsize - g.wnext,
                u > n && (u = n),
                B.arraySet(g.window, k, m - n, u, g.wnext),
                n -= u,
                n ? (B.arraySet(g.window, k, m - n, n, 0),
                g.wnext = n,
                g.whave = g.wsize) : (g.wnext += u,
                g.wnext === g.wsize && (g.wnext = 0),
                g.whave < g.wsize && (g.whave += u))),
                0
            }
            var m, z, B = k("../utils/common"), wa = k("./adler32"), ma = k("./crc32"), db = k("./inffast"), oa = k("./inftrees"), cb = 0, u = -2, Za = 1, pa = 852, sa = 592, Qa = !0;
            G.inflateReset = aa;
            G.inflateReset2 = V;
            G.inflateResetKeep = M;
            G.inflateInit = function(g) {
                return t(g, 15)
            }
            ;
            G.inflateInit2 = t;
            G.inflate = function(k, t) {
                var w, G, D, J, x, K, M, P = 0, X = new B.Buf8(4), A = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];
                if (!k || !k.state || !k.output || !k.input && 0 !== k.avail_in)
                    return u;
                var d = k.state;
                12 === d.mode && (d.mode = 13);
                var V = k.next_out;
                var da = k.output;
                var ba = k.avail_out;
                var Y = k.next_in;
                var aa = k.input;
                var fa = k.avail_in;
                var S = d.hold;
                var H = d.bits;
                var sa = fa;
                var pa = ba;
                var ta = cb;
                a: for (; ; )
                    switch (d.mode) {
                    case Za:
                        if (0 === d.wrap) {
                            d.mode = 13;
                            break
                        }
                        for (; 16 > H; ) {
                            if (0 === fa)
                                break a;
                            fa--;
                            S += aa[Y++] << H;
                            H += 8
                        }
                        if (2 & d.wrap && 35615 === S) {
                            d.check = 0;
                            X[0] = 255 & S;
                            X[1] = S >>> 8 & 255;
                            d.check = ma(d.check, X, 2, 0);
                            H = S = 0;
                            d.mode = 2;
                            break
                        }
                        if (d.flags = 0,
                        d.head && (d.head.done = !1),
                        !(1 & d.wrap) || (((255 & S) << 8) + (S >> 8)) % 31) {
                            k.msg = "incorrect header check";
                            d.mode = 30;
                            break
                        }
                        if (8 !== (15 & S)) {
                            k.msg = "unknown compression method";
                            d.mode = 30;
                            break
                        }
                        if (S >>>= 4,
                        H -= 4,
                        K = (15 & S) + 8,
                        0 === d.wbits)
                            d.wbits = K;
                        else if (K > d.wbits) {
                            k.msg = "invalid window size";
                            d.mode = 30;
                            break
                        }
                        d.dmax = 1 << K;
                        k.adler = d.check = 1;
                        d.mode = 512 & S ? 10 : 12;
                        H = S = 0;
                        break;
                    case 2:
                        for (; 16 > H; ) {
                            if (0 === fa)
                                break a;
                            fa--;
                            S += aa[Y++] << H;
                            H += 8
                        }
                        if (d.flags = S,
                        8 !== (255 & d.flags)) {
                            k.msg = "unknown compression method";
                            d.mode = 30;
                            break
                        }
                        if (57344 & d.flags) {
                            k.msg = "unknown header flags set";
                            d.mode = 30;
                            break
                        }
                        d.head && (d.head.text = S >> 8 & 1);
                        512 & d.flags && (X[0] = 255 & S,
                        X[1] = S >>> 8 & 255,
                        d.check = ma(d.check, X, 2, 0));
                        H = S = 0;
                        d.mode = 3;
                    case 3:
                        for (; 32 > H; ) {
                            if (0 === fa)
                                break a;
                            fa--;
                            S += aa[Y++] << H;
                            H += 8
                        }
                        d.head && (d.head.time = S);
                        512 & d.flags && (X[0] = 255 & S,
                        X[1] = S >>> 8 & 255,
                        X[2] = S >>> 16 & 255,
                        X[3] = S >>> 24 & 255,
                        d.check = ma(d.check, X, 4, 0));
                        H = S = 0;
                        d.mode = 4;
                    case 4:
                        for (; 16 > H; ) {
                            if (0 === fa)
                                break a;
                            fa--;
                            S += aa[Y++] << H;
                            H += 8
                        }
                        d.head && (d.head.xflags = 255 & S,
                        d.head.os = S >> 8);
                        512 & d.flags && (X[0] = 255 & S,
                        X[1] = S >>> 8 & 255,
                        d.check = ma(d.check, X, 2, 0));
                        H = S = 0;
                        d.mode = 5;
                    case 5:
                        if (1024 & d.flags) {
                            for (; 16 > H; ) {
                                if (0 === fa)
                                    break a;
                                fa--;
                                S += aa[Y++] << H;
                                H += 8
                            }
                            d.length = S;
                            d.head && (d.head.extra_len = S);
                            512 & d.flags && (X[0] = 255 & S,
                            X[1] = S >>> 8 & 255,
                            d.check = ma(d.check, X, 2, 0));
                            H = S = 0
                        } else
                            d.head && (d.head.extra = null);
                        d.mode = 6;
                    case 6:
                        if (1024 & d.flags && (w = d.length,
                        w > fa && (w = fa),
                        w && (d.head && (K = d.head.extra_len - d.length,
                        d.head.extra || (d.head.extra = Array(d.head.extra_len)),
                        B.arraySet(d.head.extra, aa, Y, w, K)),
                        512 & d.flags && (d.check = ma(d.check, aa, w, Y)),
                        fa -= w,
                        Y += w,
                        d.length -= w),
                        d.length))
                            break a;
                        d.length = 0;
                        d.mode = 7;
                    case 7:
                        if (2048 & d.flags) {
                            if (0 === fa)
                                break a;
                            w = 0;
                            do
                                K = aa[Y + w++],
                                d.head && K && 65536 > d.length && (d.head.name += String.fromCharCode(K));
                            while (K && w < fa);
                            if (512 & d.flags && (d.check = ma(d.check, aa, w, Y)),
                            fa -= w,
                            Y += w,
                            K)
                                break a
                        } else
                            d.head && (d.head.name = null);
                        d.length = 0;
                        d.mode = 8;
                    case 8:
                        if (4096 & d.flags) {
                            if (0 === fa)
                                break a;
                            w = 0;
                            do
                                K = aa[Y + w++],
                                d.head && K && 65536 > d.length && (d.head.comment += String.fromCharCode(K));
                            while (K && w < fa);
                            if (512 & d.flags && (d.check = ma(d.check, aa, w, Y)),
                            fa -= w,
                            Y += w,
                            K)
                                break a
                        } else
                            d.head && (d.head.comment = null);
                        d.mode = 9;
                    case 9:
                        if (512 & d.flags) {
                            for (; 16 > H; ) {
                                if (0 === fa)
                                    break a;
                                fa--;
                                S += aa[Y++] << H;
                                H += 8
                            }
                            if (S !== (65535 & d.check)) {
                                k.msg = "header crc mismatch";
                                d.mode = 30;
                                break
                            }
                            H = S = 0
                        }
                        d.head && (d.head.hcrc = d.flags >> 9 & 1,
                        d.head.done = !0);
                        k.adler = d.check = 0;
                        d.mode = 12;
                        break;
                    case 10:
                        for (; 32 > H; ) {
                            if (0 === fa)
                                break a;
                            fa--;
                            S += aa[Y++] << H;
                            H += 8
                        }
                        k.adler = d.check = n(S);
                        H = S = 0;
                        d.mode = 11;
                    case 11:
                        if (0 === d.havedict)
                            return k.next_out = V,
                            k.avail_out = ba,
                            k.next_in = Y,
                            k.avail_in = fa,
                            d.hold = S,
                            d.bits = H,
                            2;
                        k.adler = d.check = 1;
                        d.mode = 12;
                    case 12:
                        if (5 === t || 6 === t)
                            break a;
                    case 13:
                        if (d.last) {
                            S >>>= 7 & H;
                            H -= 7 & H;
                            d.mode = 27;
                            break
                        }
                        for (; 3 > H; ) {
                            if (0 === fa)
                                break a;
                            fa--;
                            S += aa[Y++] << H;
                            H += 8
                        }
                        switch (d.last = 1 & S,
                        S >>>= 1,
                        --H,
                        3 & S) {
                        case 0:
                            d.mode = 14;
                            break;
                        case 1:
                            var za = d;
                            if (Qa) {
                                m = new B.Buf32(512);
                                z = new B.Buf32(32);
                                for (D = 0; 144 > D; )
                                    za.lens[D++] = 8;
                                for (; 256 > D; )
                                    za.lens[D++] = 9;
                                for (; 280 > D; )
                                    za.lens[D++] = 7;
                                for (; 288 > D; )
                                    za.lens[D++] = 8;
                                oa(1, za.lens, 0, 288, m, 0, za.work, {
                                    bits: 9
                                });
                                for (D = 0; 32 > D; )
                                    za.lens[D++] = 5;
                                oa(2, za.lens, 0, 32, z, 0, za.work, {
                                    bits: 5
                                });
                                Qa = !1
                            }
                            za.lencode = m;
                            za.lenbits = 9;
                            za.distcode = z;
                            za.distbits = 5;
                            if (d.mode = 20,
                            6 === t) {
                                S >>>= 2;
                                H -= 2;
                                break a
                            }
                            break;
                        case 2:
                            d.mode = 17;
                            break;
                        case 3:
                            k.msg = "invalid block type",
                            d.mode = 30
                        }
                        S >>>= 2;
                        H -= 2;
                        break;
                    case 14:
                        S >>>= 7 & H;
                        for (H -= 7 & H; 32 > H; ) {
                            if (0 === fa)
                                break a;
                            fa--;
                            S += aa[Y++] << H;
                            H += 8
                        }
                        if ((65535 & S) !== (S >>> 16 ^ 65535)) {
                            k.msg = "invalid stored block lengths";
                            d.mode = 30;
                            break
                        }
                        if (d.length = 65535 & S,
                        S = 0,
                        H = 0,
                        d.mode = 15,
                        6 === t)
                            break a;
                    case 15:
                        d.mode = 16;
                    case 16:
                        if (w = d.length) {
                            if (w > fa && (w = fa),
                            w > ba && (w = ba),
                            0 === w)
                                break a;
                            B.arraySet(da, aa, Y, w, V);
                            fa -= w;
                            Y += w;
                            ba -= w;
                            V += w;
                            d.length -= w;
                            break
                        }
                        d.mode = 12;
                        break;
                    case 17:
                        for (; 14 > H; ) {
                            if (0 === fa)
                                break a;
                            fa--;
                            S += aa[Y++] << H;
                            H += 8
                        }
                        if (d.nlen = (31 & S) + 257,
                        S >>>= 5,
                        H -= 5,
                        d.ndist = (31 & S) + 1,
                        S >>>= 5,
                        H -= 5,
                        d.ncode = (15 & S) + 4,
                        S >>>= 4,
                        H -= 4,
                        286 < d.nlen || 30 < d.ndist) {
                            k.msg = "too many length or distance symbols";
                            d.mode = 30;
                            break
                        }
                        d.have = 0;
                        d.mode = 18;
                    case 18:
                        for (; d.have < d.ncode; ) {
                            for (; 3 > H; ) {
                                if (0 === fa)
                                    break a;
                                fa--;
                                S += aa[Y++] << H;
                                H += 8
                            }
                            d.lens[A[d.have++]] = 7 & S;
                            S >>>= 3;
                            H -= 3
                        }
                        for (; 19 > d.have; )
                            d.lens[A[d.have++]] = 0;
                        if (d.lencode = d.lendyn,
                        d.lenbits = 7,
                        M = {
                            bits: d.lenbits
                        },
                        ta = oa(0, d.lens, 0, 19, d.lencode, 0, d.work, M),
                        d.lenbits = M.bits,
                        ta) {
                            k.msg = "invalid code lengths set";
                            d.mode = 30;
                            break
                        }
                        d.have = 0;
                        d.mode = 19;
                    case 19:
                        for (; d.have < d.nlen + d.ndist; ) {
                            for (; P = d.lencode[S & (1 << d.lenbits) - 1],
                            J = P >>> 24,
                            za = 65535 & P,
                            !(J <= H); ) {
                                if (0 === fa)
                                    break a;
                                fa--;
                                S += aa[Y++] << H;
                                H += 8
                            }
                            if (16 > za)
                                S >>>= J,
                                H -= J,
                                d.lens[d.have++] = za;
                            else {
                                if (16 === za) {
                                    for (D = J + 2; H < D; ) {
                                        if (0 === fa)
                                            break a;
                                        fa--;
                                        S += aa[Y++] << H;
                                        H += 8
                                    }
                                    if (S >>>= J,
                                    H -= J,
                                    0 === d.have) {
                                        k.msg = "invalid bit length repeat";
                                        d.mode = 30;
                                        break
                                    }
                                    K = d.lens[d.have - 1];
                                    w = 3 + (3 & S);
                                    S >>>= 2;
                                    H -= 2
                                } else if (17 === za) {
                                    for (D = J + 3; H < D; ) {
                                        if (0 === fa)
                                            break a;
                                        fa--;
                                        S += aa[Y++] << H;
                                        H += 8
                                    }
                                    S >>>= J;
                                    H -= J;
                                    K = 0;
                                    w = 3 + (7 & S);
                                    S >>>= 3;
                                    H -= 3
                                } else {
                                    for (D = J + 7; H < D; ) {
                                        if (0 === fa)
                                            break a;
                                        fa--;
                                        S += aa[Y++] << H;
                                        H += 8
                                    }
                                    S >>>= J;
                                    H -= J;
                                    K = 0;
                                    w = 11 + (127 & S);
                                    S >>>= 7;
                                    H -= 7
                                }
                                if (d.have + w > d.nlen + d.ndist) {
                                    k.msg = "invalid bit length repeat";
                                    d.mode = 30;
                                    break
                                }
                                for (; w--; )
                                    d.lens[d.have++] = K
                            }
                        }
                        if (30 === d.mode)
                            break;
                        if (0 === d.lens[256]) {
                            k.msg = "invalid code -- missing end-of-block";
                            d.mode = 30;
                            break
                        }
                        if (d.lenbits = 9,
                        M = {
                            bits: d.lenbits
                        },
                        ta = oa(1, d.lens, 0, d.nlen, d.lencode, 0, d.work, M),
                        d.lenbits = M.bits,
                        ta) {
                            k.msg = "invalid literal/lengths set";
                            d.mode = 30;
                            break
                        }
                        if (d.distbits = 6,
                        d.distcode = d.distdyn,
                        M = {
                            bits: d.distbits
                        },
                        ta = oa(2, d.lens, d.nlen, d.ndist, d.distcode, 0, d.work, M),
                        d.distbits = M.bits,
                        ta) {
                            k.msg = "invalid distances set";
                            d.mode = 30;
                            break
                        }
                        if (d.mode = 20,
                        6 === t)
                            break a;
                    case 20:
                        d.mode = 21;
                    case 21:
                        if (6 <= fa && 258 <= ba) {
                            k.next_out = V;
                            k.avail_out = ba;
                            k.next_in = Y;
                            k.avail_in = fa;
                            d.hold = S;
                            d.bits = H;
                            db(k, pa);
                            V = k.next_out;
                            da = k.output;
                            ba = k.avail_out;
                            Y = k.next_in;
                            aa = k.input;
                            fa = k.avail_in;
                            S = d.hold;
                            H = d.bits;
                            12 === d.mode && (d.back = -1);
                            break
                        }
                        for (d.back = 0; P = d.lencode[S & (1 << d.lenbits) - 1],
                        J = P >>> 24,
                        D = P >>> 16 & 255,
                        za = 65535 & P,
                        !(J <= H); ) {
                            if (0 === fa)
                                break a;
                            fa--;
                            S += aa[Y++] << H;
                            H += 8
                        }
                        if (D && 0 === (240 & D)) {
                            var L = J;
                            var C = D;
                            for (x = za; P = d.lencode[x + ((S & (1 << L + C) - 1) >> L)],
                            J = P >>> 24,
                            D = P >>> 16 & 255,
                            za = 65535 & P,
                            !(L + J <= H); ) {
                                if (0 === fa)
                                    break a;
                                fa--;
                                S += aa[Y++] << H;
                                H += 8
                            }
                            S >>>= L;
                            H -= L;
                            d.back += L
                        }
                        if (S >>>= J,
                        H -= J,
                        d.back += J,
                        d.length = za,
                        0 === D) {
                            d.mode = 26;
                            break
                        }
                        if (32 & D) {
                            d.back = -1;
                            d.mode = 12;
                            break
                        }
                        if (64 & D) {
                            k.msg = "invalid literal/length code";
                            d.mode = 30;
                            break
                        }
                        d.extra = 15 & D;
                        d.mode = 22;
                    case 22:
                        if (d.extra) {
                            for (D = d.extra; H < D; ) {
                                if (0 === fa)
                                    break a;
                                fa--;
                                S += aa[Y++] << H;
                                H += 8
                            }
                            d.length += S & (1 << d.extra) - 1;
                            S >>>= d.extra;
                            H -= d.extra;
                            d.back += d.extra
                        }
                        d.was = d.length;
                        d.mode = 23;
                    case 23:
                        for (; P = d.distcode[S & (1 << d.distbits) - 1],
                        J = P >>> 24,
                        D = P >>> 16 & 255,
                        za = 65535 & P,
                        !(J <= H); ) {
                            if (0 === fa)
                                break a;
                            fa--;
                            S += aa[Y++] << H;
                            H += 8
                        }
                        if (0 === (240 & D)) {
                            L = J;
                            C = D;
                            for (x = za; P = d.distcode[x + ((S & (1 << L + C) - 1) >> L)],
                            J = P >>> 24,
                            D = P >>> 16 & 255,
                            za = 65535 & P,
                            !(L + J <= H); ) {
                                if (0 === fa)
                                    break a;
                                fa--;
                                S += aa[Y++] << H;
                                H += 8
                            }
                            S >>>= L;
                            H -= L;
                            d.back += L
                        }
                        if (S >>>= J,
                        H -= J,
                        d.back += J,
                        64 & D) {
                            k.msg = "invalid distance code";
                            d.mode = 30;
                            break
                        }
                        d.offset = za;
                        d.extra = 15 & D;
                        d.mode = 24;
                    case 24:
                        if (d.extra) {
                            for (D = d.extra; H < D; ) {
                                if (0 === fa)
                                    break a;
                                fa--;
                                S += aa[Y++] << H;
                                H += 8
                            }
                            d.offset += S & (1 << d.extra) - 1;
                            S >>>= d.extra;
                            H -= d.extra;
                            d.back += d.extra
                        }
                        if (d.offset > d.dmax) {
                            k.msg = "invalid distance too far back";
                            d.mode = 30;
                            break
                        }
                        d.mode = 25;
                    case 25:
                        if (0 === ba)
                            break a;
                        if (w = pa - ba,
                        d.offset > w) {
                            if (w = d.offset - w,
                            w > d.whave && d.sane) {
                                k.msg = "invalid distance too far back";
                                d.mode = 30;
                                break
                            }
                            w > d.wnext ? (w -= d.wnext,
                            G = d.wsize - w) : G = d.wnext - w;
                            w > d.length && (w = d.length);
                            D = d.window
                        } else
                            D = da,
                            G = V - d.offset,
                            w = d.length;
                        w > ba && (w = ba);
                        ba -= w;
                        d.length -= w;
                        do
                            da[V++] = D[G++];
                        while (--w);
                        0 === d.length && (d.mode = 21);
                        break;
                    case 26:
                        if (0 === ba)
                            break a;
                        da[V++] = d.length;
                        ba--;
                        d.mode = 21;
                        break;
                    case 27:
                        if (d.wrap) {
                            for (; 32 > H; ) {
                                if (0 === fa)
                                    break a;
                                fa--;
                                S |= aa[Y++] << H;
                                H += 8
                            }
                            if (pa -= ba,
                            k.total_out += pa,
                            d.total += pa,
                            pa && (k.adler = d.check = d.flags ? ma(d.check, da, pa, V - pa) : wa(d.check, da, pa, V - pa)),
                            pa = ba,
                            (d.flags ? S : n(S)) !== d.check) {
                                k.msg = "incorrect data check";
                                d.mode = 30;
                                break
                            }
                            H = S = 0
                        }
                        d.mode = 28;
                    case 28:
                        if (d.wrap && d.flags) {
                            for (; 32 > H; ) {
                                if (0 === fa)
                                    break a;
                                fa--;
                                S += aa[Y++] << H;
                                H += 8
                            }
                            if (S !== (4294967295 & d.total)) {
                                k.msg = "incorrect length check";
                                d.mode = 30;
                                break
                            }
                            H = S = 0
                        }
                        d.mode = 29;
                    case 29:
                        ta = 1;
                        break a;
                    case 30:
                        ta = -3;
                        break a;
                    case 31:
                        return -4;
                    default:
                        return u
                    }
                return k.next_out = V,
                k.avail_out = ba,
                k.next_in = Y,
                k.avail_in = fa,
                d.hold = S,
                d.bits = H,
                (d.wsize || pa !== k.avail_out && 30 > d.mode && (27 > d.mode || 4 !== t)) && g(k, k.output, k.next_out, pa - k.avail_out) ? (d.mode = 31,
                -4) : (sa -= k.avail_in,
                pa -= k.avail_out,
                k.total_in += sa,
                k.total_out += pa,
                d.total += pa,
                d.wrap && pa && (k.adler = d.check = d.flags ? ma(d.check, da, pa, k.next_out - pa) : wa(d.check, da, pa, k.next_out - pa)),
                k.data_type = d.bits + (d.last ? 64 : 0) + (12 === d.mode ? 128 : 0) + (20 === d.mode || 15 === d.mode ? 256 : 0),
                (0 === sa && 0 === pa || 4 === t) && ta === cb && (ta = -5),
                ta)
            }
            ;
            G.inflateEnd = function(g) {
                if (!g || !g.state)
                    return u;
                var k = g.state;
                return k.window && (k.window = null),
                g.state = null,
                cb
            }
            ;
            G.inflateGetHeader = function(g, k) {
                var m;
                return g && g.state ? (m = g.state,
                0 === (2 & m.wrap) ? u : (m.head = k,
                k.done = !1,
                cb)) : u
            }
            ;
            G.inflateSetDictionary = function(k, m) {
                var n, t, w = m.length;
                return k && k.state ? (n = k.state,
                0 !== n.wrap && 11 !== n.mode ? u : 11 === n.mode && (t = 1,
                t = wa(t, m, w, 0),
                t !== n.check) ? -3 : g(k, m, w, w) ? (n.mode = 31,
                -4) : (n.havedict = 1,
                cb)) : u
            }
            ;
            G.inflateInfo = "pako inflate (from Nodeca project)"
        }
        , {
            "../utils/common": 3,
            "./adler32": 5,
            "./crc32": 7,
            "./inffast": 10,
            "./inftrees": 12
        }],
        12: [function(k, w, G) {
            var n = k("../utils/common")
              , D = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0]
              , M = [16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78]
              , aa = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0]
              , V = [16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 64, 64];
            w.exports = function(k, g, m, w, B, G, ma, db) {
                var t, z, u, wa, pa, sa, Qa = db.bits, J, K, ka, Z, R, ib = 0, x, $a = null, W = 0, P = new n.Buf16(16);
                var X = new n.Buf16(16);
                var A = null
                  , d = 0;
                for (J = 0; 15 >= J; J++)
                    P[J] = 0;
                for (K = 0; K < w; K++)
                    P[g[m + K]]++;
                var La = Qa;
                for (ka = 15; 1 <= ka && 0 === P[ka]; ka--)
                    ;
                if (La > ka && (La = ka),
                0 === ka)
                    return B[G++] = 20971520,
                    B[G++] = 20971520,
                    db.bits = 1,
                    0;
                for (Qa = 1; Qa < ka && 0 === P[Qa]; Qa++)
                    ;
                La < Qa && (La = Qa);
                for (J = t = 1; 15 >= J; J++)
                    if (t <<= 1,
                    t -= P[J],
                    0 > t)
                        return -1;
                if (0 < t && (0 === k || 1 !== ka))
                    return -1;
                X[1] = 0;
                for (J = 1; 15 > J; J++)
                    X[J + 1] = X[J] + P[J];
                for (K = 0; K < w; K++)
                    0 !== g[m + K] && (ma[X[g[m + K]]++] = K);
                if (0 === k ? ($a = A = ma,
                wa = 19) : 1 === k ? ($a = D,
                W -= 257,
                A = M,
                d -= 257,
                wa = 256) : ($a = aa,
                A = V,
                wa = -1),
                x = 0,
                K = 0,
                J = Qa,
                X = G,
                Z = La,
                R = 0,
                u = -1,
                ib = 1 << La,
                w = ib - 1,
                1 === k && 852 < ib || 2 === k && 592 < ib)
                    return 1;
                for (var da = 0; ; ) {
                    da++;
                    var ba = J - R;
                    ma[K] < wa ? (pa = 0,
                    sa = ma[K]) : ma[K] > wa ? (pa = A[d + ma[K]],
                    sa = $a[W + ma[K]]) : (pa = 96,
                    sa = 0);
                    t = 1 << J - R;
                    Qa = z = 1 << Z;
                    do
                        z -= t,
                        B[X + (x >> R) + z] = ba << 24 | pa << 16 | sa | 0;
                    while (0 !== z);
                    for (t = 1 << J - 1; x & t; )
                        t >>= 1;
                    if (0 !== t ? (x &= t - 1,
                    x += t) : x = 0,
                    K++,
                    0 === --P[J]) {
                        if (J === ka)
                            break;
                        J = g[m + ma[K]]
                    }
                    if (J > La && (x & w) !== u) {
                        0 === R && (R = La);
                        X += Qa;
                        Z = J - R;
                        for (t = 1 << Z; Z + R < ka && (t -= P[Z + R],
                        !(0 >= t)); )
                            Z++,
                            t <<= 1;
                        if (ib += 1 << Z,
                        1 === k && 852 < ib || 2 === k && 592 < ib)
                            return 1;
                        u = x & w;
                        B[u] = La << 24 | Z << 16 | X - G | 0
                    }
                }
                return 0 !== x && (B[X + x] = J - R << 24 | 4194304),
                db.bits = La,
                0
            }
        }
        , {
            "../utils/common": 3
        }],
        13: [function(k, w, G) {
            w.exports = {
                2: "need dictionary",
                1: "stream end",
                0: "",
                "-1": "file error",
                "-2": "stream error",
                "-3": "data error",
                "-4": "insufficient memory",
                "-5": "buffer error",
                "-6": "incompatible version"
            }
        }
        , {}],
        14: [function(k, w, G) {
            function n(d) {
                for (var g = d.length; 0 <= --g; )
                    d[g] = 0
            }
            function D(d, g, k, m, n) {
                this.static_tree = d;
                this.extra_bits = g;
                this.extra_base = k;
                this.elems = m;
                this.max_length = n;
                this.has_stree = d && d.length
            }
            function M(d, g) {
                this.dyn_tree = d;
                this.max_code = 0;
                this.stat_desc = g
            }
            function aa(d, g) {
                d.pending_buf[d.pending++] = 255 & g;
                d.pending_buf[d.pending++] = g >>> 8 & 255
            }
            function V(d, g, k) {
                d.bi_valid > W - k ? (d.bi_buf |= g << d.bi_valid & 65535,
                aa(d, d.bi_buf),
                d.bi_buf = g >> W - d.bi_valid,
                d.bi_valid += k - W) : (d.bi_buf |= g << d.bi_valid & 65535,
                d.bi_valid += k)
            }
            function t(d, g, k) {
                V(d, k[2 * g], k[2 * g + 1])
            }
            function g(d, g) {
                var k = 0;
                do
                    k |= 1 & d,
                    d >>>= 1,
                    k <<= 1;
                while (0 < --g);
                return k >>> 1
            }
            function m(d, k, m) {
                var n, v = Array($a + 1), u = 0;
                for (n = 1; n <= $a; n++)
                    v[n] = u = u + m[n - 1] << 1;
                for (m = 0; m <= k; m++)
                    n = d[2 * m + 1],
                    0 !== n && (d[2 * m] = g(v[n]++, n))
            }
            function z(d) {
                var g;
                for (g = 0; g < Z; g++)
                    d.dyn_ltree[2 * g] = 0;
                for (g = 0; g < R; g++)
                    d.dyn_dtree[2 * g] = 0;
                for (g = 0; g < ib; g++)
                    d.bl_tree[2 * g] = 0;
                d.dyn_ltree[2 * P] = 1;
                d.opt_len = d.static_len = 0;
                d.last_lit = d.matches = 0
            }
            function B(d) {
                8 < d.bi_valid ? aa(d, d.bi_buf) : 0 < d.bi_valid && (d.pending_buf[d.pending++] = d.bi_buf);
                d.bi_buf = 0;
                d.bi_valid = 0
            }
            function wa(d, g, k, m) {
                var n = 2 * g
                  , u = 2 * k;
                return d[n] < d[u] || d[n] === d[u] && m[g] <= m[k]
            }
            function ma(d, g, k) {
                for (var m = d.heap[k], n = k << 1; n <= d.heap_len && (n < d.heap_len && wa(g, d.heap[n + 1], d.heap[n], d.depth) && n++,
                !wa(g, m, d.heap[n], d.depth)); )
                    d.heap[k] = d.heap[n],
                    k = n,
                    n <<= 1;
                d.heap[k] = m
            }
            function db(d, g, k) {
                var m, n, u = 0;
                if (0 !== d.last_lit) {
                    do {
                        var v = d.pending_buf[d.d_buf + 2 * u] << 8 | d.pending_buf[d.d_buf + 2 * u + 1];
                        var w = d.pending_buf[d.l_buf + u];
                        u++;
                        0 === v ? t(d, w, g) : (m = H[w],
                        t(d, m + ka + 1, g),
                        n = La[m],
                        0 !== n && (w -= Lb[m],
                        V(d, w, n)),
                        v--,
                        m = 256 > v ? S[v] : S[256 + (v >>> 7)],
                        t(d, m, k),
                        n = da[m],
                        0 !== n && (v -= pb[m],
                        V(d, v, n)))
                    } while (u < d.last_lit)
                }
                t(d, P, g)
            }
            function oa(d, g) {
                var k, n = g.dyn_tree;
                var u = g.stat_desc.static_tree;
                var v = g.stat_desc.has_stree
                  , t = g.stat_desc.elems
                  , w = -1;
                d.heap_len = 0;
                d.heap_max = x;
                for (k = 0; k < t; k++)
                    0 !== n[2 * k] ? (d.heap[++d.heap_len] = w = k,
                    d.depth[k] = 0) : n[2 * k + 1] = 0;
                for (; 2 > d.heap_len; ) {
                    var z = d.heap[++d.heap_len] = 2 > w ? ++w : 0;
                    n[2 * z] = 1;
                    d.depth[z] = 0;
                    d.opt_len--;
                    v && (d.static_len -= u[2 * z + 1])
                }
                g.max_code = w;
                for (k = d.heap_len >> 1; 1 <= k; k--)
                    ma(d, n, k);
                z = t;
                do
                    k = d.heap[1],
                    d.heap[1] = d.heap[d.heap_len--],
                    ma(d, n, 1),
                    u = d.heap[1],
                    d.heap[--d.heap_max] = k,
                    d.heap[--d.heap_max] = u,
                    n[2 * z] = n[2 * k] + n[2 * u],
                    d.depth[z] = (d.depth[k] >= d.depth[u] ? d.depth[k] : d.depth[u]) + 1,
                    n[2 * k + 1] = n[2 * u + 1] = z,
                    d.heap[1] = z++,
                    ma(d, n, 1);
                while (2 <= d.heap_len);
                d.heap[--d.heap_max] = d.heap[1];
                var A, B;
                k = g.dyn_tree;
                z = g.max_code;
                t = g.stat_desc.static_tree;
                var O = g.stat_desc.has_stree
                  , D = g.stat_desc.extra_bits
                  , C = g.stat_desc.extra_base
                  , G = g.stat_desc.max_length
                  , J = 0;
                for (v = 0; v <= $a; v++)
                    d.bl_count[v] = 0;
                k[2 * d.heap[d.heap_max] + 1] = 0;
                for (g = d.heap_max + 1; g < x; g++)
                    u = d.heap[g],
                    v = k[2 * k[2 * u + 1] + 1] + 1,
                    v > G && (v = G,
                    J++),
                    k[2 * u + 1] = v,
                    u > z || (d.bl_count[v]++,
                    A = 0,
                    u >= C && (A = D[u - C]),
                    B = k[2 * u],
                    d.opt_len += B * (v + A),
                    O && (d.static_len += B * (t[2 * u + 1] + A)));
                if (0 !== J) {
                    do {
                        for (v = G - 1; 0 === d.bl_count[v]; )
                            v--;
                        d.bl_count[v]--;
                        d.bl_count[v + 1] += 2;
                        d.bl_count[G]--;
                        J -= 2
                    } while (0 < J);
                    for (v = G; 0 !== v; v--)
                        for (u = d.bl_count[v]; 0 !== u; )
                            A = d.heap[--g],
                            A > z || (k[2 * A + 1] !== v && (d.opt_len += (v - k[2 * A + 1]) * k[2 * A],
                            k[2 * A + 1] = v),
                            u--)
                }
                m(n, w, d.bl_count)
            }
            function cb(g, k, m) {
                var n, u = -1, v = k[1], t = 0, w = 7, x = 4;
                0 === v && (w = 138,
                x = 3);
                k[2 * (m + 1) + 1] = 65535;
                for (n = 0; n <= m; n++) {
                    var z = v;
                    v = k[2 * (n + 1) + 1];
                    ++t < w && z === v || (t < x ? g.bl_tree[2 * z] += t : 0 !== z ? (z !== u && g.bl_tree[2 * z]++,
                    g.bl_tree[2 * X]++) : 10 >= t ? g.bl_tree[2 * A]++ : g.bl_tree[2 * d]++,
                    t = 0,
                    u = z,
                    0 === v ? (w = 138,
                    x = 3) : z === v ? (w = 6,
                    x = 3) : (w = 7,
                    x = 4))
                }
            }
            function u(g, k, m) {
                var n, u, v = -1, w = k[1], x = 0, z = 7, B = 4;
                0 === w && (z = 138,
                B = 3);
                for (n = 0; n <= m; n++)
                    if (u = w,
                    w = k[2 * (n + 1) + 1],
                    !(++x < z && u === w)) {
                        if (x < B) {
                            do
                                t(g, u, g.bl_tree);
                            while (0 !== --x)
                        } else
                            0 !== u ? (u !== v && (t(g, u, g.bl_tree),
                            x--),
                            t(g, X, g.bl_tree),
                            V(g, x - 3, 2)) : 10 >= x ? (t(g, A, g.bl_tree),
                            V(g, x - 3, 3)) : (t(g, d, g.bl_tree),
                            V(g, x - 11, 7));
                        x = 0;
                        v = u;
                        0 === w ? (z = 138,
                        B = 3) : u === w ? (z = 6,
                        B = 3) : (z = 7,
                        B = 4)
                    }
            }
            function Za(d) {
                var g, k = 4093624447;
                for (g = 0; 31 >= g; g++,
                k >>>= 1)
                    if (1 & k && 0 !== d.dyn_ltree[2 * g])
                        return Qa;
                if (0 !== d.dyn_ltree[18] || 0 !== d.dyn_ltree[20] || 0 !== d.dyn_ltree[26])
                    return J;
                for (g = 32; g < ka; g++)
                    if (0 !== d.dyn_ltree[2 * g])
                        return J;
                return Qa
            }
            function pa(d, g, k, m) {
                V(d, (K << 1) + (m ? 1 : 0), 3);
                B(d);
                aa(d, k);
                aa(d, ~k);
                sa.arraySet(d.pending_buf, d.window, g, k, d.pending);
                d.pending += k
            }
            var sa = k("../utils/common")
              , Qa = 0
              , J = 1
              , K = 0
              , ka = 256
              , Z = ka + 1 + 29
              , R = 30
              , ib = 19
              , x = 2 * Z + 1
              , $a = 15
              , W = 16
              , P = 256
              , X = 16
              , A = 17
              , d = 18
              , La = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0]
              , da = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13]
              , ba = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7]
              , Y = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]
              , Ma = Array(2 * (Z + 2));
            n(Ma);
            var fa = Array(2 * R);
            n(fa);
            var S = Array(512);
            n(S);
            var H = Array(256);
            n(H);
            var Lb = Array(29);
            n(Lb);
            var pb = Array(R);
            n(pb);
            var ta, za, L, C = !1;
            G._tr_init = function(d) {
                if (!C) {
                    var k, n, u, t = Array($a + 1);
                    for (u = n = 0; 28 > u; u++)
                        for (Lb[u] = n,
                        k = 0; k < 1 << La[u]; k++)
                            H[n++] = u;
                    H[n - 1] = u;
                    for (u = n = 0; 16 > u; u++)
                        for (pb[u] = n,
                        k = 0; k < 1 << da[u]; k++)
                            S[n++] = u;
                    for (n >>= 7; u < R; u++)
                        for (pb[u] = n << 7,
                        k = 0; k < 1 << da[u] - 7; k++)
                            S[256 + n++] = u;
                    for (k = 0; k <= $a; k++)
                        t[k] = 0;
                    for (k = 0; 143 >= k; )
                        Ma[2 * k + 1] = 8,
                        k++,
                        t[8]++;
                    for (; 255 >= k; )
                        Ma[2 * k + 1] = 9,
                        k++,
                        t[9]++;
                    for (; 279 >= k; )
                        Ma[2 * k + 1] = 7,
                        k++,
                        t[7]++;
                    for (; 287 >= k; )
                        Ma[2 * k + 1] = 8,
                        k++,
                        t[8]++;
                    m(Ma, Z + 1, t);
                    for (k = 0; k < R; k++)
                        fa[2 * k + 1] = 5,
                        fa[2 * k] = g(k, 5);
                    ta = new D(Ma,La,ka + 1,Z,$a);
                    za = new D(fa,da,0,R,$a);
                    L = new D([],ba,0,ib,7);
                    C = !0
                }
                d.l_desc = new M(d.dyn_ltree,ta);
                d.d_desc = new M(d.dyn_dtree,za);
                d.bl_desc = new M(d.bl_tree,L);
                d.bi_buf = 0;
                d.bi_valid = 0;
                z(d)
            }
            ;
            G._tr_stored_block = pa;
            G._tr_flush_block = function(d, g, k, m) {
                var n = 0;
                if (0 < d.level) {
                    2 === d.strm.data_type && (d.strm.data_type = Za(d));
                    oa(d, d.l_desc);
                    oa(d, d.d_desc);
                    cb(d, d.dyn_ltree, d.l_desc.max_code);
                    cb(d, d.dyn_dtree, d.d_desc.max_code);
                    oa(d, d.bl_desc);
                    for (n = ib - 1; 3 <= n && 0 === d.bl_tree[2 * Y[n] + 1]; n--)
                        ;
                    n = (d.opt_len += 3 * (n + 1) + 14,
                    n);
                    var v = d.opt_len + 3 + 7 >>> 3;
                    var t = d.static_len + 3 + 7 >>> 3;
                    t <= v && (v = t)
                } else
                    v = t = k + 5;
                if (k + 4 <= v && -1 !== g)
                    pa(d, g, k, m);
                else if (4 === d.strategy || t === v)
                    V(d, 2 + (m ? 1 : 0), 3),
                    db(d, Ma, fa);
                else {
                    V(d, 4 + (m ? 1 : 0), 3);
                    g = d.l_desc.max_code + 1;
                    k = d.d_desc.max_code + 1;
                    n += 1;
                    V(d, g - 257, 5);
                    V(d, k - 1, 5);
                    V(d, n - 4, 4);
                    for (v = 0; v < n; v++)
                        V(d, d.bl_tree[2 * Y[v] + 1], 3);
                    u(d, d.dyn_ltree, g - 1);
                    u(d, d.dyn_dtree, k - 1);
                    db(d, d.dyn_ltree, d.dyn_dtree)
                }
                z(d);
                m && B(d)
            }
            ;
            G._tr_tally = function(d, g, k) {
                return d.pending_buf[d.d_buf + 2 * d.last_lit] = g >>> 8 & 255,
                d.pending_buf[d.d_buf + 2 * d.last_lit + 1] = 255 & g,
                d.pending_buf[d.l_buf + d.last_lit] = 255 & k,
                d.last_lit++,
                0 === g ? d.dyn_ltree[2 * k]++ : (d.matches++,
                g--,
                d.dyn_ltree[2 * (H[k] + ka + 1)]++,
                d.dyn_dtree[2 * (256 > g ? S[g] : S[256 + (g >>> 7)])]++),
                d.last_lit === d.lit_bufsize - 1
            }
            ;
            G._tr_align = function(d) {
                V(d, 2, 3);
                t(d, P, Ma);
                16 === d.bi_valid ? (aa(d, d.bi_buf),
                d.bi_buf = 0,
                d.bi_valid = 0) : 8 <= d.bi_valid && (d.pending_buf[d.pending++] = 255 & d.bi_buf,
                d.bi_buf >>= 8,
                d.bi_valid -= 8)
            }
        }
        , {
            "../utils/common": 3
        }],
        15: [function(k, w, G) {
            w.exports = function() {
                this.input = null;
                this.total_in = this.avail_in = this.next_in = 0;
                this.output = null;
                this.total_out = this.avail_out = this.next_out = 0;
                this.msg = "";
                this.state = null;
                this.data_type = 2;
                this.adler = 0
            }
        }
        , {}],
        "/": [function(k, w, G) {
            G = k("./lib/utils/common").assign;
            var n = k("./lib/deflate")
              , D = k("./lib/inflate");
            k = k("./lib/zlib/constants");
            var M = {};
            G(M, n, D, k);
            w.exports = M
        }
        , {
            "./lib/deflate": 1,
            "./lib/inflate": 2,
            "./lib/utils/common": 3,
            "./lib/zlib/constants": 6
        }]
    }, {}, [])("/")
});
if ("undefined" === typeof self || !self.constructor.name.includes("Worker")) {
    var e = function() {
        function r(d) {
            var g = [];
            return g[d - 1] = void 0,
            g
        }
        function k(d, g) {
            return n(d[0] + g[0], d[1] + g[1])
        }
        function w(d, g) {
            var l = M(d) & M(g), k, y;
            return k = (~~Math.max(Math.min(d[1] / kb, 2147483647), -2147483648) & ~~Math.max(Math.min(g[1] / kb, 2147483647), -2147483648)) * kb,
            y = l,
            0 > l && (y += kb),
            [y, k]
        }
        function G(d, g) {
            var l, k;
            return d[0] == g[0] && d[1] == g[1] ? 0 : (l = 0 > d[1],
            k = 0 > g[1],
            l && !k ? -1 : !l && k ? 1 : 0 > n(d[0] - g[0], d[1] - g[1])[1] ? -1 : 1)
        }
        function n(d, g) {
            g %= 1.8446744073709552E19;
            d %= 1.8446744073709552E19;
            var l = g % kb;
            var k = Math.floor(d / kb) * kb;
            g = g - l + k;
            for (d = d - k + l; 0 > d; )
                d += kb,
                g -= kb;
            for (; 4294967295 < d; )
                d -= kb,
                g += kb;
            for (g %= 1.8446744073709552E19; 0x7fffffff00000000 < g; )
                g -= 1.8446744073709552E19;
            for (; -9223372036854775808 > g; )
                g += 1.8446744073709552E19;
            return [d, g]
        }
        function D(d) {
            return 0 <= d ? [d, 0] : [d + kb, -kb]
        }
        function M(d) {
            return 2147483648 <= d[0] ? ~~Math.max(Math.min(d[0] - kb, 2147483647), -2147483648) : ~~Math.max(Math.min(d[0], 2147483647), -2147483648)
        }
        function aa(d) {
            return 30 >= d ? 1 << d : aa(30) * aa(d - 30)
        }
        function V(d, g) {
            var l, k, y, m;
            if (g &= 63,
            d[0] == Gb[0] && d[1] == Gb[1])
                return g ? Eb : d;
            if (0 > d[1])
                throw Error("Neg");
            return m = aa(g),
            k = d[1] * m % 1.8446744073709552E19,
            y = d[0] * m,
            l = y - y % kb,
            k += l,
            y -= l,
            0x7fffffffffffffff <= k && (k -= 1.8446744073709552E19),
            [y, k]
        }
        function t(d, g) {
            var l;
            return g &= 63,
            l = aa(g),
            n(Math.floor(d[0] / l), d[1] / l)
        }
        function g(d, g) {
            return d.Mc = g,
            d.Lc = 0,
            d.Yb = g.length,
            d
        }
        function m(d) {
            return d.Lc >= d.Yb ? -1 : 255 & d.Mc[d.Lc++]
        }
        function z(d) {
            return d.Mc = r(32),
            d.Yb = 0,
            d
        }
        function B(d) {
            var g = d.Mc;
            return g.length = d.Yb,
            g
        }
        function wa(d, g, k, m, n) {
            for (var l = 0; n > l; ++l)
                k[m + l] = d[g + l]
        }
        function ma(l, k, p) {
            l.Nb = z({});
            var m = g({}, k)
              , y = l.Nb
              , n = D(k.length);
            if (0 > G(n, Aa))
                throw Error("invalid length " + n);
            l.Tb = n;
            k = {};
            var u;
            k.v = r(4);
            k.a = [];
            k.d = {};
            k.C = r(192);
            k.bb = r(12);
            k.hb = r(12);
            k.Ub = r(12);
            k.vc = r(12);
            k._ = r(192);
            k.K = [];
            k.Sb = r(114);
            k.S = Q({}, 4);
            k.$ = ta({});
            k.i = ta({});
            k.A = {};
            k.m = [];
            k.P = [];
            k.lb = [];
            k.nc = r(16);
            k.x = r(4);
            k.Q = r(4);
            k.Xb = [Eb];
            k.uc = [Eb];
            k.Kc = [0];
            k.fc = r(5);
            k.yc = r(128);
            k.vb = 0;
            k.X = 1;
            k.D = 0;
            k.Hb = -1;
            for (u = k.mb = 0; 4096 > u; ++u)
                k.a[u] = {};
            for (u = 0; 4 > u; ++u)
                k.K[u] = Q({}, 6);
            u = 1 << p.s;
            k.ab = u;
            for (var v = 0; u > 1 << v; ++v)
                ;
            k.$b = 2 * v;
            k.n = p.f;
            u = k.X;
            k.X = p.m;
            k.b && u != k.X && (k.wb = -1,
            k.b = null);
            k.eb = 0;
            k.fb = 3;
            k.Y = 2;
            k.y = 3;
            k.Gc = void 0 === e.disableEndMark;
            k.fc[0] = 9 * (5 * k.Y + k.eb) + k.fb << 24 >> 24;
            for (p = 0; 4 > p; ++p)
                k.fc[1 + p] = k.ab >> 8 * p << 24 >> 24;
            wa(k.fc, 0, y.Mc, y.Yb, 5);
            y.Yb += 5;
            for (p = 0; 64 > p; p += 8)
                u = 255 & M(t(n, p)),
                y.Mc[y.Yb++] = u << 24 >> 24;
            k.W = 0;
            k.oc = m;
            k.pc = 0;
            k.b || (m = {},
            n = 4,
            k.X || (n = 2),
            m.qb = 2 < n,
            m.qb ? (m.w = 0,
            m.xb = 4,
            m.R = 66560) : (m.w = 2,
            m.xb = 3,
            m.R = 0),
            k.b = m);
            m = k.A;
            n = k.eb;
            p = k.fb;
            if (null == m.V || m.u != p || m.I != n)
                for (m.I = n,
                m.qc = (1 << n) - 1,
                m.u = p,
                p = 1 << m.u + m.I,
                m.V = r(p),
                n = 0; p > n; ++n) {
                    u = m.V;
                    v = n;
                    var w = {};
                    w = (w.tb = r(768),
                    w);
                    u[v] = w
                }
            if (k.ab != k.wb || k.Hb != k.n)
                m = k.b,
                n = k.ab,
                p = k.n,
                1073741567 > n && (m.Fc = 16 + (p >> 1),
                v = n + 4096,
                u = p + 274,
                m.Bc = v,
                m._b = u,
                v = v + u + (~~((n + 4096 + p + 274) / 2) + 256),
                (null == m.c || m.Kb != v) && (m.c = null,
                m.Kb = v,
                m.c = r(m.Kb)),
                m.H = m.Kb - u,
                m.ob = p,
                p = n + 1,
                m.p != p && (m.L = r(2 * (m.p = p))),
                p = 65536,
                m.qb && (p = n - 1,
                p |= p >> 1,
                p |= p >> 2,
                p |= p >> 4,
                p |= p >> 8,
                p >>= 1,
                p |= 65535,
                16777216 < p && (p >>= 1),
                m.Ec = p,
                ++p,
                p += m.R),
                p != m.rc && (m.ub = r(m.rc = p))),
                k.wb = k.ab,
                k.Hb = k.n;
            k.d.Ab = y;
            k.l = 0;
            for (y = k.J = 0; 4 > y; ++y)
                k.v[y] = 0;
            y = k.d;
            y.mc = Eb;
            y.xc = Eb;
            y.E = -1;
            y.Jb = 1;
            y.Oc = 0;
            E(k.C);
            E(k._);
            E(k.bb);
            E(k.hb);
            E(k.Ub);
            E(k.vc);
            E(k.Sb);
            y = k.A;
            n = 1 << y.u + y.I;
            for (m = 0; n > m; ++m)
                E(y.V[m].tb);
            for (y = 0; 4 > y; ++y)
                E(k.K[y].G);
            H(k.$, 1 << k.Y);
            H(k.i, 1 << k.Y);
            E(k.S.G);
            k.N = 0;
            k.jb = 0;
            k.q = 0;
            k.s = 0;
            d(k);
            A(k);
            k.$.rb = k.n + 1 - 2;
            za(k.$, 1 << k.Y);
            k.i.rb = k.n + 1 - 2;
            za(k.i, 1 << k.Y);
            void (k.g = Eb);
            y = {};
            k = (y.cb = k,
            y.Z = null,
            y.zc = 1,
            y);
            l.yb = k;
            return l
        }
        function db(d, k) {
            d.Nb = z({});
            var l = g({}, k), y = d.Nb, n, u, t, w = "", A = [];
            for (n = 0; 5 > n; ++n) {
                if (u = m(l),
                -1 == u)
                    throw Error("truncated input");
                A[n] = u << 24 >> 24
            }
            k = {
                B: {},
                e: {}
            };
            k.Gb = r(192);
            k.Zb = r(12);
            k.Cb = r(12);
            k.Db = r(12);
            k.Eb = r(12);
            k.pb = r(192);
            k.kb = r(4);
            k.kc = r(114);
            k.Fb = v({}, 4);
            k.Rb = W({});
            k.sb = W({});
            k.gb = {};
            for (n = 0; 4 > n; ++n)
                k.kb[n] = v({}, 6);
            var B;
            if (5 > A.length)
                n = 0;
            else {
                n = 255 & A[0];
                var C = n % 9;
                n = ~~(n / 9);
                var G = n % 5;
                var J = ~~(n / 5);
                for (B = n = 0; 4 > B; ++B)
                    n += (255 & A[1 + B]) << 8 * B;
                if (!(A = 99999999 < n)) {
                    if (8 < C || 4 < G || 4 < J)
                        J = 0;
                    else {
                        A = k.gb;
                        if (null == A.V || A.u != C || A.I != G)
                            for (A.I = G,
                            A.qc = (1 << G) - 1,
                            A.u = C,
                            G = 1 << A.u + A.I,
                            A.V = r(G),
                            C = 0; G > C; ++C) {
                                B = A.V;
                                var H = C;
                                var L = {};
                                L = (L.Ib = r(768),
                                L);
                                B[H] = L
                            }
                        J = 1 << J;
                        J = (x(k.Rb, J),
                        x(k.sb, J),
                        k.Dc = J - 1,
                        1)
                    }
                    A = !J
                }
                A ? n = 0 : 0 > n ? n = 0 : (k.Ob != n && (k.Ob = n,
                k.nb = Math.max(k.Ob, 1),
                n = k.B,
                J = Math.max(k.nb, 4096),
                null != n.Lb && n.M == J || (n.Lb = r(J)),
                n.M = J,
                n.o = 0,
                n.h = 0),
                n = 1)
            }
            if (!n)
                throw Error("corrupted input");
            for (n = 0; 64 > n; n += 8) {
                if (u = m(l),
                -1 == u)
                    throw Error("truncated input");
                u = u.toString(16);
                1 == u.length && (u = "0" + u);
                w = u + "" + w
            }
            /^0+$|^f+$/i.test(w) ? d.Tb = Aa : (t = parseInt(w, 16),
            d.Tb = 4294967295 < t ? Aa : D(t));
            u = d.Tb;
            k.e.Ab = l;
            l = k.B;
            K(l);
            l.cc = null;
            k.B.cc = y;
            k.B.h = 0;
            k.B.o = 0;
            E(k.Gb);
            E(k.pb);
            E(k.Zb);
            E(k.Cb);
            E(k.Db);
            E(k.Eb);
            E(k.kc);
            y = k.gb;
            t = 1 << y.u + y.I;
            for (l = 0; t > l; ++l)
                E(y.V[l].Ib);
            for (y = 0; 4 > y; ++y)
                E(k.kb[y].G);
            P(k.Rb);
            P(k.sb);
            E(k.Fb.G);
            y = k.e;
            y.Bb = 0;
            y.E = -1;
            for (l = 0; 5 > l; ++l)
                y.Bb = y.Bb << 8 | m(y.Ab);
            k.U = 0;
            k.ib = 0;
            k.Jc = 0;
            k.Ic = 0;
            k.Qc = 0;
            k.Nc = u;
            k.g = Eb;
            k.jc = 0;
            y = {};
            k = (y.Z = k,
            y.cb = null,
            y.zc = 1,
            y);
            d.yb = k;
            return d
        }
        function oa(d, g) {
            return d.c[d.f + d.o + g]
        }
        function cb(d, g, k, m) {
            d.T && d.o + g + m > d.h && (m = d.h - (d.o + g));
            ++k;
            var l = d.f + d.o + g;
            for (g = 0; m > g && d.c[l + g] == d.c[l + g - k]; ++g)
                ;
            return g
        }
        function u(d) {
            return d.h - d.o
        }
        function Za(d) {
            var g, l, k;
            if (!d.T)
                for (; k = -d.f + d.Kb - d.h,
                k; ) {
                    var m = d.cc
                      , n = k;
                    if (g = m.Lc >= m.Yb ? -1 : (n = Math.min(n, m.Yb - m.Lc),
                    wa(m.Mc, m.Lc, d.c, d.f + d.h, n),
                    m.Lc += n,
                    n),
                    -1 == g)
                        return d.zb = d.h,
                        l = d.f + d.zb,
                        l > d.H && (d.zb = d.H - d.f),
                        void (d.T = 1);
                    d.h += g;
                    d.h >= d.o + d._b && (d.zb = d.h - d._b)
                }
        }
        function pa(d, g) {
            d.f += g;
            d.zb -= g;
            d.o -= g;
            d.h -= g
        }
        function sa(d) {
            var g;
            ++d.k >= d.p && (d.k = 0);
            ++d.o;
            if (d.o > d.zb) {
                var l = d.f + d.o;
                if (l > d.H) {
                    var k = d.f + d.o - d.Bc;
                    0 < k && --k;
                    var m = d.f + d.h - k;
                    for (l = 0; m > l; ++l)
                        d.c[l] = d.c[k + l];
                    d.f -= k
                }
                Za(d)
            }
            1073741823 == d.o && (g = d.o - d.p,
            Qa(d.L, 2 * d.p, g),
            Qa(d.ub, d.rc, g),
            pa(d, g))
        }
        function Qa(d, g, k) {
            var l;
            for (l = 0; g > l; ++l) {
                var p = d[l] || 0;
                k >= p ? p = 0 : p -= k;
                d[l] = p
            }
        }
        function J(d, g) {
            var l, k, m, y, n, u, r, v, t, w;
            do {
                if (d.h >= d.o + d.ob)
                    var x = d.ob;
                else if (x = d.h - d.o,
                d.xb > x) {
                    sa(d);
                    continue
                }
                var z = d.o > d.p ? d.o - d.p : 0;
                var A = d.f + d.o;
                d.qb ? (w = tb[255 & d.c[A]] ^ 255 & d.c[A + 1],
                y = 1023 & w,
                d.ub[y] = d.o,
                w ^= (255 & d.c[A + 2]) << 8,
                n = 65535 & w,
                d.ub[1024 + n] = d.o,
                u = (w ^ tb[255 & d.c[A + 3]] << 5) & d.Ec) : u = 255 & d.c[A] ^ (255 & d.c[A + 1]) << 8;
                var B = d.ub[d.R + u];
                d.ub[d.R + u] = d.o;
                var D = (d.k << 1) + 1;
                var C = d.k << 1;
                var E = v = d.w;
                for (l = d.Fc; ; ) {
                    if (z >= B || 0 == l--) {
                        d.L[D] = d.L[C] = 0;
                        break
                    }
                    if (m = d.o - B,
                    k = (d.k >= m ? d.k - m : d.k - m + d.p) << 1,
                    t = d.f + B,
                    r = v > E ? E : v,
                    d.c[t + r] == d.c[A + r]) {
                        for (; ++r != x && d.c[t + r] == d.c[A + r]; )
                            ;
                        if (r == x) {
                            d.L[C] = d.L[k];
                            d.L[D] = d.L[k + 1];
                            break
                        }
                    }
                    (255 & d.c[A + r]) > (255 & d.c[t + r]) ? (d.L[C] = B,
                    C = k + 1,
                    B = d.L[C],
                    v = r) : (d.L[D] = B,
                    D = k,
                    B = d.L[D],
                    E = r)
                }
                sa(d)
            } while (0 != --g)
        }
        function K(d) {
            var g = d.o - d.h;
            if (g) {
                var l = d.cc;
                wa(d.Lb, d.h, l.Mc, l.Yb, g);
                l.Yb += g;
                d.o >= d.M && (d.o = 0);
                d.h = d.o
            }
        }
        function ka(d, g) {
            g = d.o - g - 1;
            return 0 > g && (g += d.M),
            d.Lb[g]
        }
        function Z(d) {
            return d -= 2,
            4 > d ? d : 3
        }
        function R(d) {
            return 4 > d ? 0 : 10 > d ? d - 3 : d - 6
        }
        function ib(g) {
            if (!g.zc)
                throw Error("bad state");
            if (g.cb) {
                a: {
                    var l = g.cb, p = g.cb.Xb, r = g.cb.uc, v = g.cb.Kc, t, w;
                    p[0] = Eb;
                    r[0] = Eb;
                    v[0] = 1;
                    if (l.oc) {
                        l.b.cc = l.oc;
                        var x = l.b;
                        x.f = 0;
                        x.o = 0;
                        x.h = 0;
                        x.T = 0;
                        Za(x);
                        x.k = 0;
                        pa(x, -1);
                        l.W = 1;
                        l.oc = null
                    }
                    if (!l.pc) {
                        l.pc = 1;
                        var z = x = l.g;
                        if (z[0] == Eb[0] && z[1] == Eb[1]) {
                            if (!u(l.b)) {
                                La(l, M(l.g));
                                break a
                            }
                            Ma(l);
                            var B = M(l.g) & l.y;
                            Oa(l.d, l.C, (l.l << 4) + B, 0);
                            l.l = R(l.l);
                            z = oa(l.b, -l.s);
                            C(L(l.A, M(l.g), l.J), l.d, z);
                            l.J = z;
                            --l.s;
                            l.g = k(l.g, yc)
                        }
                        if (u(l.b))
                            for (; ; ) {
                                if (t = da(l, M(l.g)),
                                w = l.mb,
                                B = M(l.g) & l.y,
                                z = (l.l << 4) + B,
                                1 == t && -1 == w) {
                                    Oa(l.d, l.C, z, 0);
                                    z = oa(l.b, -l.s);
                                    var E = L(l.A, M(l.g), l.J);
                                    if (7 > l.l)
                                        C(E, l.d, z);
                                    else {
                                        var J = oa(l.b, -l.v[0] - 1 - l.s);
                                        var H = void 0;
                                        var O;
                                        var P = l.d;
                                        var Q = J
                                          , X = z
                                          , W = 1
                                          , V = 1;
                                        for (O = 7; 0 <= O; --O) {
                                            var Y = X >> O & 1;
                                            J = V;
                                            W && (H = Q >> O & 1,
                                            J += 1 + H << 8,
                                            W = H == Y);
                                            Oa(P, E.tb, J, Y);
                                            V = V << 1 | Y
                                        }
                                    }
                                    l.J = z;
                                    l.l = R(l.l)
                                } else {
                                    if (Oa(l.d, l.C, z, 1),
                                    4 > w) {
                                        if (Oa(l.d, l.bb, l.l, 1),
                                        w ? (Oa(l.d, l.hb, l.l, 1),
                                        1 == w ? Oa(l.d, l.Ub, l.l, 0) : (Oa(l.d, l.Ub, l.l, 1),
                                        Oa(l.d, l.vc, l.l, w - 2))) : (Oa(l.d, l.hb, l.l, 0),
                                        1 == t ? Oa(l.d, l._, z, 0) : Oa(l.d, l._, z, 1)),
                                        1 == t ? l.l = 7 > l.l ? 9 : 11 : (pb(l.i, l.d, t - 2, B),
                                        l.l = 7 > l.l ? 8 : 11),
                                        z = l.v[w],
                                        0 != w) {
                                            for (H = w; 1 <= H; --H)
                                                l.v[H] = l.v[H - 1];
                                            l.v[0] = z
                                        }
                                    } else {
                                        Oa(l.d, l.bb, l.l, 0);
                                        l.l = 7 > l.l ? 7 : 10;
                                        pb(l.$, l.d, t - 2, B);
                                        w -= 4;
                                        H = S(w);
                                        z = Z(t);
                                        Rb(l.K[z], l.d, H);
                                        if (4 <= H)
                                            if (P = (H >> 1) - 1,
                                            E = (2 | 1 & H) << P,
                                            J = w - E,
                                            14 > H)
                                                for (z = l.Sb,
                                                H = E - H - 1,
                                                E = l.d,
                                                Y = J,
                                                Q = 1,
                                                J = 0; P > J; ++J)
                                                    O = 1 & Y,
                                                    Oa(E, z, H + Q, O),
                                                    Q = Q << 1 | O,
                                                    Y >>= 1;
                                            else
                                                ea(l.d, J >> 4, P - 4),
                                                Zb(l.S, l.d, 15 & J),
                                                ++l.Qb;
                                        z = w;
                                        for (H = 3; 1 <= H; --H)
                                            l.v[H] = l.v[H - 1];
                                        l.v[0] = z;
                                        ++l.Mb
                                    }
                                    l.J = oa(l.b, t - 1 - l.s)
                                }
                                if (l.s -= t,
                                l.g = k(l.g, D(t)),
                                !l.s) {
                                    128 <= l.Mb && d(l);
                                    16 <= l.Qb && A(l);
                                    p[0] = l.g;
                                    z = l.d;
                                    z = k(k(D(z.Jb), z.mc), [4, 0]);
                                    if (r[0] = z,
                                    !u(l.b)) {
                                        La(l, M(l.g));
                                        break a
                                    }
                                    z = l.g;
                                    z = n(z[0] - x[0], z[1] - x[1]);
                                    if (0 <= G(z, [4096, 0])) {
                                        l.pc = 0;
                                        v[0] = 0;
                                        break a
                                    }
                                }
                            }
                        else
                            La(l, M(l.g))
                    }
                }
                g.Pb = g.cb.Xb[0];
                g.cb.Kc[0] && (t = g.cb,
                fa(t),
                t.d.Ab = null,
                g.zc = 0)
            } else {
                a: {
                    t = g.Z;
                    if (H = M(t.g) & t.Dc,
                    Va(t.e, t.Gb, (t.U << 4) + H)) {
                        if (Va(t.e, t.Zb, t.U))
                            l = 0,
                            Va(t.e, t.Cb, t.U) ? (Va(t.e, t.Db, t.U) ? (Va(t.e, t.Eb, t.U) ? (z = t.Qc,
                            t.Qc = t.Ic) : z = t.Ic,
                            t.Ic = t.Jc) : z = t.Jc,
                            t.Jc = t.ib,
                            t.ib = z) : Va(t.e, t.pb, (t.U << 4) + H) || (t.U = 7 > t.U ? 9 : 11,
                            l = 1),
                            l || (l = $a(t.sb, t.e, H) + 2,
                            t.U = 7 > t.U ? 8 : 11);
                        else if (t.Qc = t.Ic,
                        t.Ic = t.Jc,
                        t.Jc = t.ib,
                        l = 2 + $a(t.Rb, t.e, H),
                        t.U = 7 > t.U ? 7 : 10,
                        x = Na(t.kb[Z(l)], t.e),
                        4 <= x)
                            if (p = (x >> 1) - 1,
                            t.ib = (2 | 1 & x) << p,
                            14 > x) {
                                w = t.ib;
                                B = t.kc;
                                r = t.ib - x - 1;
                                v = t.e;
                                H = 1;
                                for (z = E = 0; p > z; ++z)
                                    x = Va(v, B, r + H),
                                    H <<= 1,
                                    H += x,
                                    E |= x << z;
                                t.ib = w + E
                            } else {
                                w = t.ib;
                                B = t.e;
                                r = 0;
                                for (p -= 4; 0 != p; --p)
                                    B.E >>>= 1,
                                    v = B.Bb - B.E >>> 31,
                                    B.Bb -= B.E & v - 1,
                                    r = r << 1 | 1 - v,
                                    -16777216 & B.E || (B.Bb = B.Bb << 8 | m(B.Ab),
                                    B.E <<= 8);
                                t.ib = w + (r << 4);
                                w = t.ib;
                                B = t.Fb;
                                p = t.e;
                                x = 1;
                                for (v = z = 0; B.F > v; ++v)
                                    r = Va(p, B.G, x),
                                    x <<= 1,
                                    x += r,
                                    z |= r << v;
                                if (t.ib = w + z,
                                0 > t.ib) {
                                    t = -1 == t.ib ? 1 : -1;
                                    break a
                                }
                            }
                        else
                            t.ib = x;
                        if (0 <= G(D(t.ib), t.g) || t.ib >= t.nb) {
                            t = -1;
                            break a
                        }
                        w = t.B;
                        B = l;
                        p = w.o - t.ib - 1;
                        for (0 > p && (p += w.M); 0 != B; --B)
                            p >= w.M && (p = 0),
                            w.Lb[w.o++] = w.Lb[p++],
                            w.o >= w.M && K(w);
                        t.g = k(t.g, D(l));
                        t.jc = ka(t.B, 0)
                    } else {
                        w = t.gb;
                        B = M(t.g);
                        w = w.V[((B & w.qc) << w.u) + ((255 & t.jc) >>> 8 - w.u)];
                        if (7 > t.U) {
                            B = t.e;
                            l = 1;
                            do
                                l = l << 1 | Va(B, w.Ib, l);
                            while (256 > l);
                            w = l << 24 >> 24
                        } else {
                            B = t.e;
                            l = ka(t.B, t.ib);
                            p = 1;
                            do
                                if (v = l >> 7 & 1,
                                l <<= 1,
                                r = Va(B, w.Ib, (1 + v << 8) + p),
                                p = p << 1 | r,
                                v != r) {
                                    for (; 256 > p; )
                                        p = p << 1 | Va(B, w.Ib, p);
                                    break
                                }
                            while (256 > p);
                            w = p << 24 >> 24
                        }
                        t.jc = w;
                        w = t.B;
                        B = t.jc;
                        w.Lb[w.o++] = B;
                        w.o >= w.M && K(w);
                        t.U = R(t.U);
                        t.g = k(t.g, yc)
                    }
                    t = 0
                }
                if (-1 == t)
                    throw Error("corrupted input");
                g.Pb = Aa;
                g.Pc = g.Z.g;
                if (t || 0 <= G(g.Z.Nc, Eb) && 0 <= G(g.Z.g, g.Z.Nc))
                    K(g.Z.B),
                    t = g.Z.B,
                    K(t),
                    t.cc = null,
                    g.Z.e.Ab = null,
                    g.zc = 0
            }
            return g.zc
        }
        function x(d, g) {
            for (; g > d.O; ++d.O)
                d.ec[d.O] = v({}, 3),
                d.hc[d.O] = v({}, 3)
        }
        function $a(d, g, k) {
            return Va(g, d.wc, 0) ? 8 + (Va(g, d.wc, 1) ? 8 + Na(d.tc, g) : Na(d.hc[k], g)) : Na(d.ec[k], g)
        }
        function W(d) {
            return d.wc = r(2),
            d.ec = r(16),
            d.hc = r(16),
            d.tc = v({}, 8),
            d.O = 0,
            d
        }
        function P(d) {
            E(d.wc);
            for (var g = 0; d.O > g; ++g)
                E(d.ec[g].G),
                E(d.hc[g].G);
            E(d.tc.G)
        }
        function X(d, g) {
            d.jb = g;
            var l = d.a[g].r;
            var k = d.a[g].j;
            do {
                if (d.a[g].t) {
                    var m = d.a[l];
                    m.j = -1;
                    m.t = 0;
                    d.a[l].r = l - 1;
                    d.a[g].Ac && (d.a[l - 1].t = 0,
                    d.a[l - 1].r = d.a[g].r2,
                    d.a[l - 1].j = d.a[g].j2)
                }
                var n = l;
                m = k;
                k = d.a[n].j;
                l = d.a[n].r;
                d.a[n].j = m;
                d.a[n].r = g;
                g = n
            } while (0 < g);
            return d.mb = d.a[0].j,
            d.q = d.a[0].r
        }
        function A(d) {
            for (var g = 0; 16 > g; ++g) {
                var l = d.nc, k = g, m, n = d.S, r = g, u = 1, t = 0;
                for (m = n.F; 0 != m; --m) {
                    var v = 1 & r;
                    r >>>= 1;
                    t += jb(n.G[u], v);
                    u = u << 1 | v
                }
                l[k] = t
            }
            d.Qb = 0
        }
        function d(d) {
            var g;
            for (g = 4; 128 > g; ++g) {
                var l = S(g);
                var k = (l >> 1) - 1;
                var m = (2 | 1 & l) << k;
                var n = d.yc;
                for (var r = g, u, t = g - m, v = 1, w = 0; 0 != k; --k)
                    u = 1 & t,
                    t >>>= 1,
                    w += ra[(2047 & (d.Sb[m - l - 1 + v] - u ^ -u)) >>> 2],
                    v = v << 1 | u;
                n[r] = w
            }
            for (m = 0; 4 > m; ++m) {
                g = d.K[m];
                n = m << 6;
                for (l = 0; d.$b > l; ++l)
                    d.P[n + l] = Sa(g, l);
                for (l = 14; d.$b > l; ++l)
                    d.P[n + l] += (l >> 1) - 1 - 4 << 6;
                l = 128 * m;
                for (g = 0; 4 > g; ++g)
                    d.lb[l + g] = d.P[n + g];
                for (; 128 > g; ++g)
                    d.lb[l + g] = d.P[n + S(g)] + d.yc[g]
            }
            d.Mb = 0
        }
        function La(d, g) {
            fa(d);
            g &= d.y;
            d.Gc && (Oa(d.d, d.C, (d.l << 4) + g, 1),
            Oa(d.d, d.bb, d.l, 0),
            d.l = 7 > d.l ? 7 : 10,
            pb(d.$, d.d, 0, g),
            g = Z(2),
            Rb(d.K[g], d.d, 63),
            ea(d.d, 67108863, 26),
            Zb(d.S, d.d, 15));
            for (g = 0; 5 > g; ++g)
                ha(d.d)
        }
        function da(d, g) {
            var k, l, m, n, r, t, y, v, w, z, x, A, B, D, E, C, G, H, K, P, Q, M, S, V, W, Z, aa, ea;
            if (d.jb != d.q)
                return z = d.a[d.q].r - d.q,
                d.mb = d.a[d.q].j,
                d.q = d.a[d.q].r,
                z;
            if (d.q = d.jb = 0,
            d.N ? (w = d.vb,
            d.N = 0) : w = Ma(d),
            z = d.D,
            G = u(d.b) + 1,
            2 > G)
                return d.mb = -1,
                1;
            273 < G && (G = 273);
            for (t = y = 0; 4 > t; ++t)
                d.x[t] = d.v[t],
                d.Q[t] = cb(d.b, -1, d.x[t], 273),
                d.Q[t] > d.Q[y] && (y = t);
            if (d.Q[y] >= d.n)
                return d.mb = y,
                z = d.Q[y],
                g = z - 1,
                0 < g && (J(d.b, g),
                d.s += g),
                z;
            if (w >= d.n)
                return d.mb = d.m[z - 1] + 4,
                g = w - 1,
                0 < g && (J(d.b, g),
                d.s += g),
                w;
            if (r = oa(d.b, -1),
            D = oa(d.b, -d.v[0] - 1 - 1),
            2 > w && r != D && 2 > d.Q[y])
                return d.mb = -1,
                1;
            d.a[0].Hc = d.l;
            var da = g & d.y;
            d.a[1].z = ra[d.C[(d.l << 4) + da] >>> 2] + O(L(d.A, g, d.J), 7 <= d.l, D, r);
            var fa = d.a[1];
            fa.j = -1;
            fa.t = 0;
            fa = ra[2048 - d.C[(d.l << 4) + da] >>> 2];
            var ka = fa + ra[2048 - d.bb[d.l] >>> 2];
            if (D == r) {
                var pa = d.l;
                pa = ka + (ra[d.hb[pa] >>> 2] + ra[d._[(pa << 4) + da] >>> 2]);
                d.a[1].z > pa && (d.a[1].z = pa,
                t = d.a[1],
                t.j = 0,
                t.t = 0)
            }
            if (v = w >= d.Q[y] ? w : d.Q[y],
            2 > v)
                return d.mb = d.a[1].j,
                1;
            d.a[1].r = 0;
            d.a[0].bc = d.x[0];
            d.a[0].ac = d.x[1];
            d.a[0].dc = d.x[2];
            d.a[0].lc = d.x[3];
            y = v;
            do
                d.a[y--].z = 268435455;
            while (2 <= y);
            for (t = 0; 4 > t; ++t)
                if (B = d.Q[t],
                !(2 > B)) {
                    var ma = ka + Y(d, t, d.l, da);
                    do {
                        var ha = ma + d.i.Cc[272 * da + (B - 2)];
                        var ia = d.a[B];
                        ia.z > ha && (ia.z = ha,
                        ia.r = 0,
                        ia.j = t,
                        ia.t = 0)
                    } while (2 <= --B)
                }
            if (B = fa + ra[d.bb[d.l] >>> 2],
            y = 2 <= d.Q[0] ? d.Q[0] + 1 : 2,
            w >= y) {
                for (w = 0; y > d.m[w]; )
                    w += 2;
                for (; k = d.m[w + 1],
                ha = B + ba(d, k, y, da),
                ia = d.a[y],
                ia.z > ha && (ia.z = ha,
                ia.r = 0,
                ia.j = k + 4,
                ia.t = 0),
                y != d.m[w] || (w += 2,
                w != z); ++y)
                    ;
            }
            for (k = 0; ; ) {
                if (++k,
                k == v)
                    return X(d, k);
                if (E = Ma(d),
                z = d.D,
                E >= d.n)
                    return d.vb = E,
                    d.N = 1,
                    X(d, k);
                if (++g,
                Q = d.a[k].r,
                d.a[k].t ? (--Q,
                d.a[k].Ac ? (M = d.a[d.a[k].r2].Hc,
                M = 4 > d.a[k].j2 ? 7 > M ? 8 : 11 : 7 > M ? 7 : 10) : M = d.a[Q].Hc,
                M = R(M)) : M = d.a[Q].Hc,
                Q == k - 1 ? M = d.a[k].j ? R(M) : 7 > M ? 9 : 11 : (d.a[k].t && d.a[k].Ac ? (Q = d.a[k].r2,
                P = d.a[k].j2,
                M = 7 > M ? 8 : 11) : (P = d.a[k].j,
                M = 4 > P ? 7 > M ? 8 : 11 : 7 > M ? 7 : 10),
                K = d.a[Q],
                4 > P ? P ? 1 == P ? (d.x[0] = K.ac,
                d.x[1] = K.bc,
                d.x[2] = K.dc,
                d.x[3] = K.lc) : 2 == P ? (d.x[0] = K.dc,
                d.x[1] = K.bc,
                d.x[2] = K.ac,
                d.x[3] = K.lc) : (d.x[0] = K.lc,
                d.x[1] = K.bc,
                d.x[2] = K.ac,
                d.x[3] = K.dc) : (d.x[0] = K.bc,
                d.x[1] = K.ac,
                d.x[2] = K.dc,
                d.x[3] = K.lc) : (d.x[0] = P - 4,
                d.x[1] = K.bc,
                d.x[2] = K.ac,
                d.x[3] = K.dc)),
                d.a[k].Hc = M,
                d.a[k].bc = d.x[0],
                d.a[k].ac = d.x[1],
                d.a[k].dc = d.x[2],
                d.a[k].lc = d.x[3],
                n = d.a[k].z,
                r = oa(d.b, -1),
                D = oa(d.b, -d.x[0] - 1 - 1),
                da = g & d.y,
                l = n + ra[d.C[(M << 4) + da] >>> 2] + O(L(d.A, g, oa(d.b, -2)), 7 <= M, D, r),
                C = d.a[k + 1],
                w = 0,
                C.z > l && (C.z = l,
                C.r = k,
                C.j = -1,
                C.t = 0,
                w = 1),
                fa = n + ra[2048 - d.C[(M << 4) + da] >>> 2],
                ka = fa + ra[2048 - d.bb[M] >>> 2],
                D != r || k > C.r && !C.j || (pa = ka + (ra[d.hb[M] >>> 2] + ra[d._[(M << 4) + da] >>> 2]),
                C.z >= pa && (C.z = pa,
                C.r = k,
                C.j = 0,
                C.t = 0,
                w = 1)),
                H = u(d.b) + 1,
                H = H > 4095 - k ? 4095 - k : H,
                G = H,
                !(2 > G)) {
                    if (G > d.n && (G = d.n),
                    !w && D != r && (S = Math.min(H - 1, d.n),
                    A = cb(d.b, 0, d.x[0], S),
                    2 <= A)) {
                        t = R(M);
                        ia = g + 1 & d.y;
                        ha = l + ra[2048 - d.C[(t << 4) + ia] >>> 2] + ra[2048 - d.bb[t] >>> 2];
                        for (ma = k + 1 + A; ma > v; )
                            d.a[++v].z = 268435455;
                        ha += (V = d.i.Cc[272 * ia + (A - 2)],
                        V + Y(d, 0, t, ia));
                        ia = d.a[ma];
                        ia.z > ha && (ia.z = ha,
                        ia.r = k + 1,
                        ia.j = 0,
                        ia.t = 1,
                        ia.Ac = 0)
                    }
                    y = 2;
                    for (w = 0; 4 > w; ++w)
                        if (x = cb(d.b, -1, d.x[w], G),
                        !(2 > x)) {
                            B = x;
                            do {
                                for (; k + x > v; )
                                    d.a[++v].z = 268435455;
                                ha = ka + (W = d.i.Cc[272 * da + (x - 2)],
                                W + Y(d, w, M, da));
                                ia = d.a[k + x];
                                ia.z > ha && (ia.z = ha,
                                ia.r = k,
                                ia.j = w,
                                ia.t = 0)
                            } while (2 <= --x);
                            if (x = B,
                            w || (y = x + 1),
                            H > x && (S = Math.min(H - 1 - x, d.n),
                            A = cb(d.b, x, d.x[w], S),
                            2 <= A)) {
                                t = 7 > M ? 8 : 11;
                                ia = g + x & d.y;
                                ha = ka + (Z = d.i.Cc[272 * da + (x - 2)],
                                Z + Y(d, w, M, da)) + ra[d.C[(t << 4) + ia] >>> 2] + O(L(d.A, g + x, oa(d.b, x - 1 - 1)), 1, oa(d.b, x - 1 - (d.x[w] + 1)), oa(d.b, x - 1));
                                t = R(t);
                                ia = g + x + 1 & d.y;
                                ha += ra[2048 - d.C[(t << 4) + ia] >>> 2];
                                ha += ra[2048 - d.bb[t] >>> 2];
                                for (ma = x + 1 + A; k + ma > v; )
                                    d.a[++v].z = 268435455;
                                ha += (aa = d.i.Cc[272 * ia + (A - 2)],
                                aa + Y(d, 0, t, ia));
                                ia = d.a[k + ma];
                                ia.z > ha && (ia.z = ha,
                                ia.r = k + x + 1,
                                ia.j = 0,
                                ia.t = 1,
                                ia.Ac = 1,
                                ia.r2 = k,
                                ia.j2 = w)
                            }
                        }
                    if (E > G) {
                        E = G;
                        for (z = 0; E > d.m[z]; z += 2)
                            ;
                        d.m[z] = E;
                        z += 2
                    }
                    if (E >= y) {
                        for (B = fa + ra[d.bb[M] >>> 2]; k + E > v; )
                            d.a[++v].z = 268435455;
                        for (w = 0; y > d.m[w]; )
                            w += 2;
                        for (x = y; ; ++x)
                            if (m = d.m[w + 1],
                            ha = B + ba(d, m, x, da),
                            ia = d.a[k + x],
                            ia.z > ha && (ia.z = ha,
                            ia.r = k,
                            ia.j = m + 4,
                            ia.t = 0),
                            x == d.m[w]) {
                                if (H > x && (S = Math.min(H - 1 - x, d.n),
                                A = cb(d.b, x, m, S),
                                2 <= A)) {
                                    t = 7 > M ? 7 : 10;
                                    ia = g + x & d.y;
                                    ha = ha + ra[d.C[(t << 4) + ia] >>> 2] + O(L(d.A, g + x, oa(d.b, x - 1 - 1)), 1, oa(d.b, x - (m + 1) - 1), oa(d.b, x - 1));
                                    t = R(t);
                                    ia = g + x + 1 & d.y;
                                    ha += ra[2048 - d.C[(t << 4) + ia] >>> 2];
                                    ha += ra[2048 - d.bb[t] >>> 2];
                                    for (ma = x + 1 + A; k + ma > v; )
                                        d.a[++v].z = 268435455;
                                    ha += (ea = d.i.Cc[272 * ia + (A - 2)],
                                    ea + Y(d, 0, t, ia));
                                    ia = d.a[k + ma];
                                    ia.z > ha && (ia.z = ha,
                                    ia.r = k + x + 1,
                                    ia.j = 0,
                                    ia.t = 1,
                                    ia.Ac = 1,
                                    ia.r2 = k,
                                    ia.j2 = m + 4)
                                }
                                if (w += 2,
                                w == z)
                                    break
                            }
                    }
                }
            }
        }
        function ba(d, g, k, m) {
            var l, p = Z(k);
            return l = 128 > g ? d.lb[128 * p + g] : d.P[(p << 6) + (131072 > g ? Kb[g >> 6] + 12 : 134217728 > g ? Kb[g >> 16] + 32 : Kb[g >> 26] + 52)] + d.nc[15 & g],
            l + d.$.Cc[272 * m + (k - 2)]
        }
        function Y(d, g, k, m) {
            var l;
            return g ? (l = ra[2048 - d.hb[k] >>> 2],
            1 == g ? l += ra[d.Ub[k] >>> 2] : (l += ra[2048 - d.Ub[k] >>> 2],
            l += jb(d.vc[k], g - 2))) : (l = ra[d.hb[k] >>> 2],
            l += ra[2048 - d._[(k << 4) + m] >>> 2]),
            l
        }
        function Ma(d) {
            var g = 0;
            a: {
                var k = d.b;
                var l = d.m, m, n, r, t, u, v, w, x;
                if (k.h >= k.o + k.ob)
                    var z = k.ob;
                else if (z = k.h - k.o,
                k.xb > z) {
                    k = (sa(k),
                    0);
                    break a
                }
                var A = 0;
                var B = k.o > k.p ? k.o - k.p : 0;
                var C = k.f + k.o;
                var E = 1;
                var D = u = 0;
                k.qb ? (n = tb[255 & k.c[C]] ^ 255 & k.c[C + 1],
                u = 1023 & n,
                n ^= (255 & k.c[C + 2]) << 8,
                D = 65535 & n,
                v = (n ^ tb[255 & k.c[C + 3]] << 5) & k.Ec) : v = 255 & k.c[C] ^ (255 & k.c[C + 1]) << 8;
                n = k.ub[k.R + v] || 0;
                k.qb && (m = k.ub[u] || 0,
                r = k.ub[1024 + D] || 0,
                k.ub[u] = k.o,
                k.ub[1024 + D] = k.o,
                m > B && k.c[k.f + m] == k.c[C] && (l[A++] = E = 2,
                l[A++] = k.o - m - 1),
                r > B && k.c[k.f + r] == k.c[C] && (r == m && (A -= 2),
                l[A++] = E = 3,
                l[A++] = k.o - r - 1,
                m = r),
                0 != A && m == n && (A -= 2,
                E = 1));
                k.ub[k.R + v] = k.o;
                v = (k.k << 1) + 1;
                var G = k.k << 1;
                u = D = k.w;
                0 != k.w && n > B && k.c[k.f + n + k.w] != k.c[C + k.w] && (l[A++] = E = k.w,
                l[A++] = k.o - n - 1);
                for (m = k.Fc; ; ) {
                    if (B >= n || 0 == m--) {
                        k.L[v] = k.L[G] = 0;
                        break
                    }
                    if (t = k.o - n,
                    r = (k.k >= t ? k.k - t : k.k - t + k.p) << 1,
                    x = k.f + n,
                    w = D > u ? u : D,
                    k.c[x + w] == k.c[C + w]) {
                        for (; ++w != z && k.c[x + w] == k.c[C + w]; )
                            ;
                        if (w > E && (l[A++] = E = w,
                        l[A++] = t - 1,
                        w == z)) {
                            k.L[G] = k.L[r];
                            k.L[v] = k.L[r + 1];
                            break
                        }
                    }
                    (255 & k.c[C + w]) > (255 & k.c[x + w]) ? (k.L[G] = n,
                    G = r + 1,
                    n = k.L[G],
                    D = w) : (k.L[v] = n,
                    v = r,
                    n = k.L[v],
                    u = w)
                }
                k = (sa(k),
                A)
            }
            return d.D = k,
            0 < d.D && (g = d.m[d.D - 2],
            g == d.n && (g += cb(d.b, g - 1, d.m[d.D - 1], 273 - g))),
            ++d.s,
            g
        }
        function fa(d) {
            d.b && d.W && (d.b.cc = null,
            d.W = 0)
        }
        function S(d) {
            return 2048 > d ? Kb[d] : 2097152 > d ? Kb[d >> 10] + 20 : Kb[d >> 20] + 40
        }
        function H(d, g) {
            E(d.db);
            for (var k = 0; g > k; ++k)
                E(d.Vb[k].G),
                E(d.Wb[k].G);
            E(d.ic.G)
        }
        function Lb(d, g, k, m, n) {
            var l;
            var p = ra[d.db[0] >>> 2];
            var r = ra[2048 - d.db[0] >>> 2];
            var t = r + ra[d.db[1] >>> 2];
            r += ra[2048 - d.db[1] >>> 2];
            for (l = 0; 8 > l; ++l) {
                if (l >= k)
                    return;
                m[n + l] = p + Sa(d.Vb[g], l)
            }
            for (; 16 > l; ++l) {
                if (l >= k)
                    return;
                m[n + l] = t + Sa(d.Wb[g], l - 8)
            }
            for (; k > l; ++l)
                m[n + l] = r + Sa(d.ic, l - 8 - 8)
        }
        function pb(d, g, k, m) {
            8 > k ? (Oa(g, d.db, 0, 0),
            Rb(d.Vb[m], g, k)) : (k -= 8,
            Oa(g, d.db, 0, 1),
            8 > k ? (Oa(g, d.db, 1, 0),
            Rb(d.Wb[m], g, k)) : (Oa(g, d.db, 1, 1),
            Rb(d.ic, g, k - 8)));
            0 == --d.sc[m] && (Lb(d, m, d.rb, d.Cc, 272 * m),
            d.sc[m] = d.rb)
        }
        function ta(d) {
            d.db = r(2);
            d.Vb = r(16);
            d.Wb = r(16);
            d.ic = Q({}, 8);
            for (var g = 0; 16 > g; ++g)
                d.Vb[g] = Q({}, 3),
                d.Wb[g] = Q({}, 3);
            return d.Cc = [],
            d.sc = [],
            d
        }
        function za(d, g) {
            for (var k = 0; g > k; ++k)
                Lb(d, k, d.rb, d.Cc, 272 * k),
                d.sc[k] = d.rb
        }
        function L(d, g, k) {
            return d.V[((g & d.qc) << d.u) + ((255 & k) >>> 8 - d.u)]
        }
        function C(d, g, k) {
            var l, m = 1;
            for (l = 7; 0 <= l; --l) {
                var p = k >> l & 1;
                Oa(g, d.tb, m, p);
                m = m << 1 | p
            }
        }
        function O(d, g, k, m) {
            var l, p, n = 1, r = 7, t = 0;
            if (g)
                for (; 0 <= r; --r)
                    if (p = k >> r & 1,
                    l = m >> r & 1,
                    t += jb(d.tb[(1 + p << 8) + n], l),
                    n = n << 1 | l,
                    p != l) {
                        --r;
                        break
                    }
            for (; 0 <= r; --r)
                l = m >> r & 1,
                t += jb(d.tb[n], l),
                n = n << 1 | l;
            return t
        }
        function v(d, g) {
            return d.F = g,
            d.G = r(1 << g),
            d
        }
        function Na(d, g) {
            var k, l = 1;
            for (k = d.F; 0 != k; --k)
                l = (l << 1) + Va(g, d.G, l);
            return l - (1 << d.F)
        }
        function Q(d, g) {
            return d.F = g,
            d.G = r(1 << g),
            d
        }
        function Rb(d, g, k) {
            var l, m = 1;
            for (l = d.F; 0 != l; ) {
                --l;
                var p = k >>> l & 1;
                Oa(g, d.G, m, p);
                m = m << 1 | p
            }
        }
        function Sa(d, g) {
            var k, l = 1, m = 0;
            for (k = d.F; 0 != k; ) {
                --k;
                var n = g >>> k & 1;
                m += jb(d.G[l], n);
                l = (l << 1) + n
            }
            return m
        }
        function Zb(d, g, k) {
            var l, m = 1;
            for (l = 0; d.F > l; ++l) {
                var p = 1 & k;
                Oa(g, d.G, m, p);
                m = m << 1 | p;
                k >>= 1
            }
        }
        function Va(d, g, k) {
            var l, p = g[k];
            return l = (d.E >>> 11) * p,
            (-2147483648 ^ l) > (-2147483648 ^ d.Bb) ? (d.E = l,
            g[k] = p + (2048 - p >>> 5) << 16 >> 16,
            -16777216 & d.E || (d.Bb = d.Bb << 8 | m(d.Ab),
            d.E <<= 8),
            0) : (d.E -= l,
            d.Bb -= l,
            g[k] = p - (p >>> 5) << 16 >> 16,
            -16777216 & d.E || (d.Bb = d.Bb << 8 | m(d.Ab),
            d.E <<= 8),
            1)
        }
        function E(d) {
            for (var g = d.length - 1; 0 <= g; --g)
                d[g] = 1024
        }
        function Oa(d, g, m, n) {
            var l = g[m];
            var p = (d.E >>> 11) * l;
            n ? (d.xc = k(d.xc, w(D(p), [4294967295, 0])),
            d.E -= p,
            g[m] = l - (l >>> 5) << 16 >> 16) : (d.E = p,
            g[m] = l + (2048 - l >>> 5) << 16 >> 16);
            -16777216 & d.E || (d.E <<= 8,
            ha(d))
        }
        function ea(d, g, m) {
            for (--m; 0 <= m; --m)
                d.E >>>= 1,
                1 == (g >>> m & 1) && (d.xc = k(d.xc, D(d.E))),
                -16777216 & d.E || (d.E <<= 8,
                ha(d))
        }
        function ha(d) {
            var g = d.xc;
            var l = 32, m;
            g = (l &= 63,
            m = t(g, l),
            0 > g[1] && (m = k(m, V([2, 0], 63 - l))),
            m);
            l = M(g);
            if (0 != l || 0 > G(d.xc, [4278190080, 0])) {
                d.mc = k(d.mc, D(d.Jb));
                g = d.Oc;
                do
                    m = d.Ab,
                    g += l,
                    m.Mc[m.Yb++] = g << 24 >> 24,
                    g = 255;
                while (0 != --d.Jb);
                d.Oc = M(d.xc) >>> 24
            }
            ++d.Jb;
            d.xc = V(w(d.xc, [16777215, 0]), 8)
        }
        function jb(d, g) {
            return ra[(2047 & (d - g ^ -g)) >>> 2]
        }
        function bc(d) {
            for (var g, k, l, m = 0, n = 0, r = d.length, t = [], u = []; r > m; ++m,
            ++n) {
                if (g = 255 & d[m],
                128 & g)
                    if (192 == (224 & g)) {
                        if (m + 1 >= r || (k = 255 & d[++m],
                        128 != (192 & k)))
                            return d;
                        u[n] = (31 & g) << 6 | 63 & k
                    } else {
                        if (224 != (240 & g) || m + 2 >= r || (k = 255 & d[++m],
                        128 != (192 & k)) || (l = 255 & d[++m],
                        128 != (192 & l)))
                            return d;
                        u[n] = (15 & g) << 12 | (63 & k) << 6 | 63 & l
                    }
                else {
                    if (!g)
                        return d;
                    u[n] = g
                }
                16383 == n && (t.push(String.fromCharCode.apply(String, u)),
                n = -1)
            }
            return 0 < n && (u.length = n,
            t.push(String.fromCharCode.apply(String, u))),
            t.join("")
        }
        function Ec(d) {
            var g, k, l = [], m = 0, n = d.length;
            if ("object" == typeof d)
                return d;
            for (k = g = 0; n > k; ++k)
                l[g++] = d.charCodeAt(k);
            for (k = 0; n > k; ++k)
                d = l[k],
                1 <= d && 127 >= d ? ++m : m += !d || 128 <= d && 2047 >= d ? 2 : 3;
            g = [];
            for (k = m = 0; n > k; ++k)
                d = l[k],
                1 <= d && 127 >= d ? g[m++] = d << 24 >> 24 : !d || 128 <= d && 2047 >= d ? (g[m++] = (192 | d >> 6 & 31) << 24 >> 24,
                g[m++] = (128 | 63 & d) << 24 >> 24) : (g[m++] = (224 | d >> 12 & 15) << 24 >> 24,
                g[m++] = (128 | d >> 6 & 63) << 24 >> 24,
                g[m++] = (128 | 63 & d) << 24 >> 24);
            return g
        }
        function fb(d) {
            return d[1] + d[0]
        }
        var Vb = "function" == typeof setImmediate ? setImmediate : setTimeout
          , kb = 4294967296
          , Aa = [4294967295, -kb]
          , Gb = [0, -9223372036854775808]
          , Eb = [0, 0]
          , yc = [1, 0]
          , tb = function() {
            var d, g, k = [];
            for (d = 0; 256 > d; ++d) {
                var m = d;
                for (g = 0; 8 > g; ++g)
                    0 != (1 & m) ? m = m >>> 1 ^ -306674912 : m >>>= 1;
                k[d] = m
            }
            return k
        }()
          , Kb = function() {
            var d, g, k = 2, m = [0, 1];
            for (g = 2; 22 > g; ++g) {
                var n = 1 << (g >> 1) - 1;
                for (d = 0; n > d; ++d,
                ++k)
                    m[k] = g << 24 >> 24
            }
            return m
        }()
          , ra = function() {
            var d, g, k = [];
            for (g = 8; 0 <= g; --g) {
                var m = 1 << 9 - g - 1;
                for (d = 1 << 9 - g; d > m; ++m)
                    k[m] = (g << 6) + (d - m << 6 >>> 9 - g - 1)
            }
            return k
        }()
          , Mb = function() {
            var d = [{
                s: 16,
                f: 64,
                m: 0
            }, {
                s: 20,
                f: 64,
                m: 0
            }, {
                s: 19,
                f: 64,
                m: 1
            }, {
                s: 20,
                f: 64,
                m: 1
            }, {
                s: 21,
                f: 128,
                m: 1
            }, {
                s: 22,
                f: 128,
                m: 1
            }, {
                s: 23,
                f: 128,
                m: 1
            }, {
                s: 24,
                f: 255,
                m: 1
            }, {
                s: 25,
                f: 255,
                m: 1
            }];
            return function(g) {
                return d[g - 1] || d[6]
            }
        }();
        return "undefined" == typeof onmessage || "undefined" != typeof window && void 0 !== window.document || !function() {
            onmessage = function(d) {
                d && d.gc && (2 == d.gc.action ? e.decompress(d.gc.gc, d.gc.cbn) : 1 == d.gc.action && e.compress(d.gc.gc, d.gc.Rc, d.gc.cbn))
            }
        }(),
        {
            compress: function(d, g, k, m) {
                function l() {
                    try {
                        for (var d, g = (new Date).getTime(); ib(r.c.yb); )
                            if (n = fb(r.c.yb.Pb) / fb(r.c.Tb),
                            200 < (new Date).getTime() - g)
                                return m(n),
                                Vb(l, 0),
                                0;
                        m(1);
                        d = B(r.c.Nb);
                        Vb(k.bind(null, d), 0)
                    } catch ($b) {
                        k(null, $b)
                    }
                }
                var n, p, r = {}, t = void 0 === k && void 0 === m;
                if ("function" != typeof k && (p = k,
                k = m = 0),
                m = m || function(d) {
                    void 0 !== p && postMessage({
                        action: 3,
                        cbn: p,
                        result: d
                    })
                }
                ,
                k = k || function(d, g) {
                    return void 0 !== p ? postMessage({
                        action: 1,
                        cbn: p,
                        result: d,
                        error: g
                    }) : void 0
                }
                ,
                t) {
                    for (r.c = ma({}, Ec(d), Mb(g)); ib(r.c.yb); )
                        ;
                    return B(r.c.Nb)
                }
                try {
                    r.c = ma({}, Ec(d), Mb(g)),
                    m(0)
                } catch (Ob) {
                    return k(null, Ob)
                }
                Vb(l, 0)
            },
            decompress: function(d, g, k) {
                function l() {
                    try {
                        for (var d, n = 0, r = (new Date).getTime(); ib(p.d.yb); )
                            if (0 == ++n % 1E3 && 200 < (new Date).getTime() - r)
                                return u && (m = fb(p.d.yb.Z.g) / t,
                                k(m)),
                                Vb(l, 0),
                                0;
                        k(1);
                        d = bc(B(p.d.Nb));
                        Vb(g.bind(null, d), 0)
                    } catch (Nb) {
                        g(null, Nb)
                    }
                }
                var m, n, p = {}, r = void 0 === g && void 0 === k;
                if ("function" != typeof g && (n = g,
                g = k = 0),
                k = k || function(d) {
                    void 0 !== n && postMessage({
                        action: 3,
                        cbn: n,
                        result: u ? d : -1
                    })
                }
                ,
                g = g || function(d, g) {
                    return void 0 !== n ? postMessage({
                        action: 2,
                        cbn: n,
                        result: d,
                        error: g
                    }) : void 0
                }
                ,
                r) {
                    for (p.d = db({}, d); ib(p.d.yb); )
                        ;
                    return bc(B(p.d.Nb))
                }
                try {
                    p.d = db({}, d);
                    var t = fb(p.d.Tb);
                    var u = -1 < t;
                    k(0)
                } catch (mc) {
                    return g(null, mc)
                }
                Vb(l, 0)
            }
        }
    }();
    this.LZMA = this.LZMA_WORKER = e
}
if ("undefined" === typeof self || !self.constructor.name.includes("Worker")) {
    var saveAs = saveAs || function(r) {
        if (!("undefined" === typeof r || "undefined" !== typeof navigator && /MSIE [1-9]\./.test(navigator.userAgent))) {
            var k = r.document.createElementNS("http://www.w3.org/1999/xhtml", "a")
              , w = "download"in k
              , G = /constructor/i.test(r.HTMLElement) || r.safari
              , n = /CriOS\/[\d]+/.test(navigator.userAgent)
              , D = function(g) {
                (r.setImmediate || r.setTimeout)(function() {
                    throw g;
                }, 0)
            }
              , M = function(g) {
                setTimeout(function() {
                    "string" === typeof g ? (r.URL || r.webkitURL || r).revokeObjectURL(g) : g.remove()
                }, 4E4)
            }
              , aa = function(g) {
                return /^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(g.type) ? new Blob([String.fromCharCode(65279), g],{
                    type: g.type
                }) : g
            }
              , V = function(g, m, t) {
                t || (g = aa(g));
                var z = this
                  , V = "application/octet-stream" === g.type
                  , ma = function() {
                    var g = ["writestart", "progress", "write", "writeend"];
                    g = [].concat(g);
                    for (var k = g.length; k--; ) {
                        var m = z["on" + g[k]];
                        if ("function" === typeof m)
                            try {
                                m.call(z, z)
                            } catch (Za) {
                                D(Za)
                            }
                    }
                };
                z.readyState = z.INIT;
                if (w) {
                    var db = (r.URL || r.webkitURL || r).createObjectURL(g);
                    setTimeout(function() {
                        k.href = db;
                        k.download = m;
                        var g = new MouseEvent("click");
                        k.dispatchEvent(g);
                        ma();
                        M(db);
                        z.readyState = z.DONE
                    })
                } else
                    (function() {
                        if ((n || V && G) && r.FileReader) {
                            var k = new FileReader;
                            k.onloadend = function() {
                                var g = n ? k.result : k.result.replace(/^data:[^;]*;/, "data:attachment/file;");
                                r.open(g, "_blank") || (r.location.href = g);
                                z.readyState = z.DONE;
                                ma()
                            }
                            ;
                            k.readAsDataURL(g);
                            z.readyState = z.INIT
                        } else
                            db || (db = (r.URL || r.webkitURL || r).createObjectURL(g)),
                            V ? r.location.href = db : r.open(db, "_blank") || (r.location.href = db),
                            z.readyState = z.DONE,
                            ma(),
                            M(db)
                    }
                    )()
            }
              , t = V.prototype;
            if ("undefined" !== typeof navigator && navigator.msSaveOrOpenBlob)
                return function(g, k, n) {
                    k = k || g.name || "download";
                    n || (g = aa(g));
                    return navigator.msSaveOrOpenBlob(g, k)
                }
                ;
            t.abort = function() {}
            ;
            t.readyState = t.INIT = 0;
            t.WRITING = 1;
            t.DONE = 2;
            t.error = t.onwritestart = t.onprogress = t.onwrite = t.onabort = t.onerror = t.onwriteend = null;
            return function(g, k, n) {
                return new V(g,k || g.name || "download",n)
            }
        }
    }("undefined" !== typeof self && self || "undefined" !== typeof window && window || this.content);
    "undefined" !== typeof module && module.exports ? module.exports.saveAs = saveAs : "undefined" !== typeof define && null !== define && null !== define.amd && define("FileSaver.js", function() {
        return saveAs
    })
}
"function" === typeof define && define.__amd && (define.amd = define.__amd,
delete define.__amd);
